
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	если элементы.СписокСписок.Пометка тогда
		элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	иначе
		элементы.кнГруппы.Пометка = истина;
	конецесли;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(Список,флаг)");
КонецПроцедуры

&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма,"Список");	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа,"Список");	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа,"Список");	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаСервере
Процедура 	СохранитьПараметрыПодбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора("Справочник.Номенклатура",ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы,"Список");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗагрузитьНастройкиПодбора();
КонецПроцедуры


&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки,"Список");
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора("Справочник.Номенклатура",ЭтаФорма.ИмяФормы);	
конецфункции


&НаКлиенте
Процедура НайтиТоварВСпискеПоШтрихкоду(Команда)
	
	ШК = "";
	Если Не ВвестиЗначение(ШК, НСтр("ru = 'Введите штрихкод'")) Тогда
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ШК) Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВСпискеНоменклатуры(ШК, Список);
	
КонецПроцедуры

#Область ПодборНоменклатурыПоРазнымКритериям

&НаСервереБезКонтекста
Функция ПолучитьПротоколПоставщика(Поставщик)
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураКонтрагента.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ГДЕ
	|	НоменклатураКонтрагента.Контрагент = &Поставщик
	|	И (НоменклатураКонтрагента.ДатаПрекращенияПоставок = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ НоменклатураКонтрагента.ДатаПрекращенияПоставок > НАЧАЛОПЕРИОДА(&ТекущаяДата,ДЕНЬ))");
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	Запрос.УстановитьПараметр("Поставщик",Поставщик);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Массив;	
	КонецЕсли;
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Номенклатура");
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьНоменклатуруИзДокумента(ДокументСсылка)
	мдДокумент = ДокументСсылка.Метаданные();
	мдТЧСостав = мдДокумент.ТабличныеЧасти.Найти("Состав");
	Если мдТЧСостав = Неопределено Тогда
		ВызватьИсключение "У документа не найдена табличная часть 'Состав'";
	КонецЕсли;
	ТипОтбора = Тип("СправочникСсылка.Номенклатура");
	мдРеквизит = Неопределено;
	Для Каждого РеквизитТЧ из мдТЧСостав.Реквизиты Цикл
		Если РеквизитТЧ.Тип.СодержитТип(ТипОтбора) Тогда
			мдРеквизит = РеквизитТЧ;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если РеквизитТЧ = Неопределено Тогда
		ВызватьИсключение "У документа не найден реквизит с типом 'Номенклатура' в табличной части 'Состав'";
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсточникДанных."+мдРеквизит.Имя+" КАК Номенклатура
	|ИЗ
	|	Документ."+мдДокумент.Имя+"."+мдТЧСостав.Имя+" КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый Массив;	
	КонецЕсли;
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Номенклатура");
КонецФункции

&НаКлиенте
Функция ПолучитьНоменклатуруИзФайла(ПолноеИмяФайла)
	МассивНоменклатуры = Новый Массив;
	Попытка     
		scr = Новый COMОбъект("MSScriptControl.ScriptControl");
		scr.language="javascript";
		scr.eval("massiv=new Array()");
		Массив = scr.eval("massiv");
		ServiceManager= Новый COMОбъект("com.sun.star.ServiceManager");
		scr.AddObject("ServiceManager",ServiceManager);
		scr.eval("massiv[0]=ServiceManager.Bridge_GetStruct('com.sun.star.beans.PropertyValue')");
		scr.eval("massiv[0].Name='Hidden'");
		scr.eval("massiv[0].Value=true");
		Desktop = ServiceManager.CreateInstance("com.sun.star.frame.Desktop");
		докXLS = Desktop.LoadComponentFromURL("file:///"+СтрЗаменить(ПолноеИмяФайла,"\","/"), "_blank", 0, Массив );
		докXLS.lockControllers();
		докXLS.addActionLock();
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат МассивНоменклатуры;
	КонецПопытки;
	листXLS = докXLS.getSheets().getByIndex(0);
	СтрНенайденныхКодовТоваров = "";
	oCell = листXLS.GetCellbyPosition(0, 0);
 	oCursor = листXLS.createCursorByRange(oCell);
 	oCursor.GotoEndOfUsedArea(Истина);
	aAddress = oCursor.RangeAddress;
 	ВсегоКолонок = aAddress.EndColumn;
 	ВсегоСтрок = aAddress.EndRow;	
	Для ъ=1 по ВсегоСтрок Цикл
		стрКод = листXLS.getCellByPosition(0,ъ).getString();
		стрКод = СтрЗаменить(стрКод," ","");
		Номенклатура = ОбменДаннымиRIBСервер.ПолучитьНоменклатуруПоКоду(стрКод,,СтрНенайденныхКодовТоваров);
		Если Номенклатура = Неопределено Тогда Продолжить; КонецЕсли;
		МассивНоменклатуры.Добавить(Номенклатура);
	КонецЦикла;
	Если НЕ ПустаяСтрока(СтрНенайденныхКодовТоваров) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найдена номенклатура с кодами "+СтрНенайденныхКодовТоваров);
	КонецЕсли;
	докXLS.unLockControllers();
	докXLS.removeActionLock();
	докXLS.close(-1);
	докXLS = Неопределено;
	Возврат МассивНоменклатуры;
КонецФункции

&НаКлиенте
Процедура ОтборНоменклатуры(Команда)
	МассивНоменклатуры = новый Массив;
	Если Команда.Имя = "ОтборПоПротоколу" Тогда
		ВыбранноеЗначение = Неопределено;
		Если ВвестиЗначение(ВыбранноеЗначение,"Укажите протокол поставщика",Тип("СправочникСсылка.Контрагенты")) Тогда
			МассивНоменклатуры = ПолучитьПротоколПоставщика(ВыбранноеЗначение); 
		КонецЕсли;
	ИначеЕсли Команда.Имя = "ОтборПоДокументу" Тогда
		ВыбранноеЗначение = Неопределено;
		МассивТиповДокументов = Новый Массив();
		МассивТиповДокументов.Добавить(Тип("ДокументСсылка.ПриходнаяНакладная"));
		МассивТиповДокументов.Добавить(Тип("ДокументСсылка.КоррекцияЗапасов"));
		МассивТиповДокументов.Добавить(Тип("ДокументСсылка.РасходнаяНакладная"));
		Если ВвестиЗначение(ВыбранноеЗначение,"Укажите документ",Новый ОписаниеТипов(МассивТиповДокументов)) Тогда
			МассивНоменклатуры = ПолучитьНоменклатуруИзДокумента(ВыбранноеЗначение); 
		КонецЕсли;
	ИначеЕсли Команда.Имя = "ОтборИзФайла" Тогда
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Диалог.Фильтр = "Табличный документ(*.xls)|*.xls";
		Если Диалог.Выбрать() Тогда
			ПолноеИмяФайла = Диалог.ПолноеИмяФайла;
			МассивНоменклатуры = ПолучитьНоменклатуруИзФайла(ПолноеИмяФайла);  
		КонецЕсли;
	КонецЕсли;
	ОповеститьОВыборе(МассивНоменклатуры);
КонецПроцедуры
#КонецОбласти
