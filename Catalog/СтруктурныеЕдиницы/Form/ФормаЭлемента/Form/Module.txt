
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дерево = Izh_УправлениеСвойствамиОбъектов.ЗаполнитьДеревоРеквизитов(Объект.Ссылка,"ДополнительныеРеквизитыСтруктурныхЕдиниц");
	ЗначениеВДанныеФормы(Дерево,ДеревоДополнительныхСвойств);

	
	//Дерево = УправлениеСвойствамиСервер.ЗаполнитьДеревоРеквизитов(Объект.Ссылка,"СтруктурныеЕдиницы","ДополнительныеРеквизитыСтруктурныхЕдиниц");
	//ЗначениеВДанныеФормы(Дерево,ДеревоСвойств);
	
	Дерево = УправлениеПараметрамиСЕСервер.ЗаполнитьДеревоПараметров(Объект.Ссылка);
	ЗначениеВДанныеФормы(Дерево,ДеревоПараметров);
	ВебСервисSMS = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВебСервисSMS;
	ФлагВебСервисSMSСтрока = ТипЗнч(Дерево.Строки.Найти(ВебСервисSMS,,Истина).Значение) = Тип("Строка");
	
	табКонтактнаяИнформация = УправлениеКонтактнойИнформациейСервер.ПриСозданииНаСервереКИ(Объект, Элементы.ТаблицаКонтактнойИнформацииВид, Объект.Ссылка);
	ЗначениеВРеквизитФормы(табКонтактнаяИнформация, "ТаблицаКонтактнойИнформации");
	Элементы.СтраницаНастройка.Видимость = ПараметрыСеанса.ЭтоЦентр И (УправлениеДоступом.ЕстьРоль("ПолныеПрава") ИЛИ УправлениеДоступом.ЕстьРоль("АдминистрированиеСети"));
	НазваниеСклада();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Объект.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Производство ИЛИ Объект.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Центр Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СтруктурныеЕдиницы.Ссылка
			|ИЗ
			|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
			|ГДЕ
			|	СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = &ТипСтруктурнойЕдиницы
			|	И СтруктурныеЕдиницы.Ссылка <> &Ссылка";

		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("ТипСтруктурнойЕдиницы", Объект.ТипСтруктурнойЕдиницы);

		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() Тогда
			Отказ = Истина;
			Текст = "Структурная единица с типом "+Объект.ТипСтруктурнойЕдиницы+" может быть только одна!";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	// Перенесем значения из таблицы значений свойств в табличную часть объекта
	УправлениеСвойствамиСервер.ПеренестиЗначенияСвойств(ТекущийОбъект.ДополнительныеРеквизиты, РеквизитФормыВЗначение("ДеревоСвойств"));
	
	// Перенесем значения из таблицы контактной информации в табличную часть объекта
	УправлениеКонтактнойИнформациейСервер.ПередЗаписьюНаСервереКИ(ТаблицаКонтактнойИнформации, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтактнойИнформацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтактнойИнформацииПередУдалением(Элемент, Отказ)
	
	УправлениеКонтактнойИнформациейКлиент.КонтактнаяИнформацияПередУдалением(Модифицированность, Отказ, Элемент.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтактнойИнформацииПредставлениеПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(Модифицированность, Элементы.ТаблицаКонтактнойИнформации.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтактнойИнформацииПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(Модифицированность, Элементы.ТаблицаКонтактнойИнформации.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСвойствПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	УправлениеСвойствамиКлиент.ДеревоСвойствПриНачалеРедактирования(Элемент,Объект);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСвойствПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСвойствПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущиеДанные.Картинка = 1 Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДеревоПараметровПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ДеревоПараметровПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элемент.ПодчиненныеЭлементы.ДеревоПараметровПредставление.ОграничениеТипа = Элемент.ТекущиеДанные.ТипЗначенияСвойства;
КонецПроцедуры


&НаКлиенте
Процедура ДеревоПараметровПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущиеДанные.Картинка = 1 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если Найти(Элемент.ТекущиеДанные.Свойство,"Расписание")<>0 Тогда
		Отказ = Истина;
		Расписание = ?(ПустаяСтрока(Элемент.ТекущиеДанные.Значение),Новый РасписаниеРегламентногоЗадания,РегламентныеЗаданияСервер.ПолучитьЗначениеИзСтроки(Элемент.ТекущиеДанные.Значение));
		Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
		Если Диалог.ОткрытьМодально() Тогда
			Расписание = Диалог.Расписание;
			Элемент.ТекущиеДанные.Значение = РегламентныеЗаданияСервер.ЗаписатьЗначениеВСтроку(Расписание);
			Элемент.ТекущиеДанные.Представление = Строка(Диалог.Расписание);
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.Свойство = ПредопределенноеЗначение("ПланВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.УчетнаяЗаписьЭлектроннойПочты") Тогда
		Отказ = Истина;
		УсловияОтбора  = Новый Структура("Владелец", Объект.Ссылка);
		ПараметрыФормы = Новый Структура("Отбор",    УсловияОтбора);
		//ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаВыбора",ПараметрыФормы, Элемент);
		ЗначениеВыбора = ОткрытьФормуМодально("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаВыбора", ПараметрыФормы);
		Элемент.ТекущиеДанные.Значение = ЗначениеВыбора;	
		Элемент.ТекущиеДанные.Представление = ЗначениеВыбора;	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоПараметровПредставлениеПриИзменении(Элемент)
	Если Найти(Элементы.ДеревоПараметров.ТекущиеДанные.Свойство,"Расписание") = 0 Тогда
		Элементы.ДеревоПараметров.ТекущиеДанные.Значение = Элементы.ДеревоПараметров.ТекущиеДанные.Представление;
	КонецЕсли;
	Если Найти(Элементы.ДеревоПараметров.ТекущиеДанные.Свойство,"Пароль")<>0 Тогда
		Если ЗначениеЗаполнено(Элементы.ДеревоПараметров.ТекущиеДанные.Значение) Тогда
			Элементы.ДеревоПараметров.ТекущиеДанные.Представление = "**********";
		КонецЕсли	
	КонецЕсли;	
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	УправлениеПараметрамиСЕСервер.ПеренестиЗначенияСвойств(ТекущийОбъект.Ссылка, РеквизитФормыВЗначение("ДеревоПараметров"));
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Элементы.ДеревоПараметров.ТекущиеДанные.Значение = "";
	Элементы.ДеревоПараметров.ТекущиеДанные.Представление = "";
КонецПроцедуры

&НаКлиенте
Процедура ТипСтруктурнойЕдиницыПриИзменении(Элемент)
	НазваниеСклада();
КонецПроцедуры

&НаСервере
Процедура НазваниеСклада()
	Элементы.СкладТорговогоЗала.Заголовок = ?(Объект.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад,"Основной склад","Склад торгового зала");
	Элементы.ОптоваяЛокация.АвтоОтметкаНезаполненного = Объект.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад;
КонецПроцедуры


&НаКлиенте
Процедура ДеревоПараметровПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Элементы.ДеревоПараметров.ТекущиеДанные.Свойство = ВебСервисSMS Тогда
		ФлагВебСервисSMSСтрока = ПолучитьФлагВебСервисSMSСтрока();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьФлагВебСервисSMSСтрока()
	Возврат ТипЗнч(ДанныеФормыВЗначение(ДеревоПараметров,Тип("ДеревоЗначений")).Строки.Найти(ВебСервисSMS,,Истина).Значение) = Тип("Строка");
КонецФункции

