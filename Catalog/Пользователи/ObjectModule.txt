Перем ЭтоНовый; // Показывает, что был записан новый объект.
Перем ПараметрыОбработкиПользователяИБ; // Параметры, заполняемые при обработке пользователя ИБ.
                                        // Используются в обработчике события ПриЗаписи.

Процедура ПередЗаписью(Отказ)
	Если Пользователи.ПользовательПоИдентификаторуСуществует(Наименование, Ссылка) И ОбменДанными.Загрузка = Ложь Тогда
	
		ВызватьИсключение(НСтр("ru = 'Один пользователь информационной базы
		                             |может быть связан только с одним пользователем! 
									 |Пользователь с таким наименованием уже существует'"));    //dps+ 15,10,13 Добавлено для большего понимания пользователям.
	КонецЕсли;
	ЭтоНовый = ЭтоНовый();
	ПользователиСлужебный.НачатьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ДополнительныеСвойства.Свойство("ГруппаНовогоПользователя")
		И ЗначениеЗаполнено(ДополнительныеСвойства.ГруппаНовогоПользователя) Тогда
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ГруппыПользователей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ОбъектГруппы = ДополнительныеСвойства.ГруппаНовогоПользователя.ПолучитьОбъект();
		ОбъектГруппы.Состав.Добавить().Пользователь = Ссылка;
		ОбъектГруппы.ДополнительныеСвойства.Вставить("НаборЗаписейСоставГруппПользователей",ОбъектГруппы.Состав);
		ОбъектГруппы.Записать();
	КонецЕсли;
	
	// Обновление состава автоматической группы "Все пользователи".
	УчастникиИзменений = Новый Соответствие;
	ИзмененныеГруппы   = Новый Соответствие;
	
	ПользователиСлужебный.ОбновитьСоставыГруппПользователей(
		Справочники.ГруппыПользователей.ВсеПользователи, Ссылка, УчастникиИзменений, ИзмененныеГруппы);
	
	ПользователиСлужебный.ОбновитьИспользуемостьСоставовГруппПользователей(
		Ссылка, УчастникиИзменений, ИзмененныеГруппы);
	
	ПользователиСлужебный.ЗавершитьОбработкуПользователяИБ(
		ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
	
	ПользователиСлужебный.ПослеОбновленияСоставовГруппПользователей(
		УчастникиИзменений, ИзмененныеГруппы);
	
	ПользователиСлужебный.ПослеДобавленияИзмененияПользователяИлиГруппы(Ссылка, ЭтоНовый);
	
	
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	ИдентификаторПользователяИБ = Пользователи.ПолучитьУникальныйИдентификаторПользователяИБ(Ссылка);
	Если Пользователи.ПользовательИБСуществует(ИдентификаторПользователяИБ) Тогда
		ОписаниеОшибки = "";
		Если НЕ Пользователи.УдалитьПользователяИБ(ИдентификаторПользователяИБ, ОписаниеОшибки) Тогда
			ВызватьИсключение(ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
