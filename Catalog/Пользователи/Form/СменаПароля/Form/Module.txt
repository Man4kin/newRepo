
&НаКлиенте
Процедура Сохранить(Команда)
	Если ВыполнитьПроверку() Тогда
		Если ЗаписатьПароль() Тогда
			Закрыть();
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ЗаписатьПароль()
	УстановитьПривилегированныйРежим(Истина);
	ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	Попытка
		ПользовательИБ.Пароль = СокрЛП(НовыйПароль);
		ПользовательИБ.Записать();
		
		текПользователь       = ПараметрыСеанса.ТекущийПользователь;
		
		НаборЗаписей = РегистрыСведений.ПользователиСтруктурныхЕдиниц.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(текПользователь);
		НаборЗаписей.Прочитать();
		Для каждого ЗаписьНабора из НаборЗаписей Цикл
			ЗаписьНабора.Пароль =  СокрЛП(НовыйПароль);
		КонецЦикла;
		НаборЗаписей.Записать();
		//popn-
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ВыполнитьПроверку()
	Если НовыйПароль <> Подтверждение Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Пароль и подтверждение пароля не совпадают.'"), ,
		"Пароль", ,);
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	Если ТекущийПользователь.ЗапрещеноИзменятьПароль Тогда 
		ТекстСообщения = НСтр("ru='Данному пользователю запрещено менять пароль.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
КонецПроцедуры

