
// Содержит временную таблицу старых пользователей,
// которая формируется ПередЗаписью, и требуется ПриЗаписи.
Перем МенеджерВременныхТаблиц;

// Обработчик события ПередЗаписью формирует временную таблицу старых пользователей
// для обработчика ПриЗаписи.
//
Процедура ПередЗаписью(Отказ)
	
	// Следующие строки необходимо, чтобы предовратить возможность администратору пользователей
	// повысить себя до администратора программным путем, т.к. запись групп доступа администратору
	// пользователей разрешена.
	// Для обмена данными эти строки критичны, если выполняется попытка записать загруженный профиль
	// со ссылкой на предопределенный профиль Администратор.
	// Такие данные загружать недопустимо.
	Если Ссылка = Справочники.ГруппыДоступа.Администраторы Тогда
		Если Профиль <> Справочники.ПрофилиГруппДоступа.Администратор Тогда
			ВызватьИсключение(НСтр("ru = 'У предопределенной группы доступа Администраторы может быть только
			                             |предопределенный профиль Администратор!'"));
		КонецЕсли;
		Если НЕ УправлениеДоступом.ЕстьРоль("ПолныеПрава") Тогда
			ВызватьИсключение(НСтр("ru = 'Предопределенную группу доступа Администраторы могут
			                             |изменять только Администраторы!'"));
		КонецЕсли;
	ИначеЕсли Профиль = Справочники.ПрофилиГруппДоступа.Администратор Тогда
		ВызватьИсключение(НСтр("ru = 'Предопределенный профиль Администратор может быть только
		                             |у предопределенной группы доступа Администраторы!'"));
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
	
		// Запоминание старых пользователей группы.
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПользователиИГруппыПользователей.ЗначениеДоступа КАК Пользователь
		|ПОМЕСТИТЬ СтарыеПользователиГруппы
		|ИЗ
		|	РегистрСведений.ПользователиГруппыДоступа КАК ПользователиГруппыДоступа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
		|		ПО (ПользователиИГруппыПользователей.ВидДоступа В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)))
		|			И (ПользователиИГруппыПользователей.ТолькоВидДоступа = ЛОЖЬ)
		|			И ПользователиГруппыДоступа.Пользователь = ПользователиИГруппыПользователей.ГруппаДоступа
		|			И (ПользователиГруппыДоступа.ГруппаДоступа = &ГруппаДоступа)
		|			И (ТИПЗНАЧЕНИЯ(ПользователиИГруппыПользователей.ЗначениеДоступа) = ТИП(Справочник.Пользователи))");
		Запрос.УстановитьПараметр("ГруппаДоступа", Ссылка);
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события ПриЗаписи обновляет
// - роли добавленных, оставшихся и удаленных пользователей;
// - РегистрСведений.ТаблицыГруппДоступа;
// - РегистрСведений.ЗначенияГруппДоступа.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		
		Если ДополнительныеСвойства.Свойство("ПользователиНаборЗаписей") Тогда
			НаборЗаписей = ДополнительныеСвойства.ПользователиНаборЗаписей;
			Массив = Новый Массив;
			Для I = 0 По НаборЗаписей.Количество()-1 Цикл
				Массив.Вставить(I,Ссылка);
			КонецЦикла;	
			НаборЗаписей.ЗагрузитьКолонку(Массив,"ГруппаДоступа");
			НаборЗаписей.Отбор.ГруппаДоступа.Установить(Ссылка);
			НаборЗаписей.Записать();
		КонецЕсли;
	
		Если НЕ ДополнительныеСвойства.Свойство("НеОбновлятьРолиПользователей") Тогда
		
			// Обновление ролей для добавленных, оставшихся и удаленных пользователей.
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	СтарыеПользователиГруппы.Пользователь
			|ИЗ
			|	СтарыеПользователиГруппы КАК СтарыеПользователиГруппы
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ПользователиИГруппыПользователей.ЗначениеДоступа
			|ИЗ
			|	РегистрСведений.ПользователиГруппыДоступа КАК ПользователиГруппыДоступа
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ПользователиИГруппыПользователей
			|		ПО (ПользователиИГруппыПользователей.ВидДоступа В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДоступа.Пользователи)))
			|			И (ПользователиИГруппыПользователей.ТолькоВидДоступа = ЛОЖЬ)
			|			И ПользователиГруппыДоступа.Пользователь = ПользователиИГруппыПользователей.ГруппаДоступа
			|			И (ПользователиГруппыДоступа.ГруппаДоступа = &ГруппаДоступа)
			|			И (ТИПЗНАЧЕНИЯ(ПользователиИГруппыПользователей.ЗначениеДоступа) = ТИП(Справочник.Пользователи))");
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("ГруппаДоступа", Ссылка);
			ИзмененныеПользователи = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");
			
			ЕстьОшибки = Ложь;
			УправлениеДоступом.ОбновитьРолиПользователей(ИзмененныеПользователи, ЕстьОшибки);
			
			Для Каждого Пользователь Из ИзмененныеПользователи Цикл
				ПользовательОбъект = Пользователь.ПолучитьОбъект();
				ПользовательОбъект.Записать();
			КонецЦикла;

			Если ЕстьОшибки И НЕ ДополнительныеСвойства.Свойство("ЕстьОшибки") Тогда
				ДополнительныеСвойства.Вставить("ЕстьОшибки");
			КонецЕсли;
		КонецЕсли;
		
		УправлениеДоступом.ОбновитьТаблицыГруппДоступа(Ссылка);
		
		УправлениеДоступом.ЗаписатьЗначенияГруппДоступа(Ссылка);
	
	КонецЕсли;
	
КонецПроцедуры

