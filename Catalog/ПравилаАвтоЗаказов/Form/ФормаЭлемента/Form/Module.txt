
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененоРасписаниеПравилАвтоЗаказа" И Источник = Объект.Ссылка Тогда
		Объект.ПредставлениеРасписания = Строка(Параметр);
		РасписаниеНаФорме = Параметр;
		ЭтаФорма.Модифицированность = Истина;
		ЭтаФорма.ОбновитьОтображениеДанных();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если РасписаниеНаФорме <> Неопределено Тогда
		ТекущийОбъект.Расписание = Новый ХранилищеЗначения(РасписаниеНаФорме, Новый СжатиеДанных());	
		ТекущийОбъект.ПредставлениеРасписания = Строка(РасписаниеНаФорме);
	КонецЕсли;	
КонецПроцедуры

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,,Истина);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	Установитьпараметры();
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Записать();
	Закрыть();
КонецПроцедуры


&НаСервере
процедура Установитьпараметры()
	Если ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("контрагент", Объект.Владелец);
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("датадокумента", ТекущаяДата());
	КонецЕсли;
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", СписокНомеклатуры);
	//{БредовЮГ 2014-11-23 Наряд №000134613
	////{КотлячковаЕВ 2014-07-11 12:55:48 Исправление ошибки релиза
	//ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СтруктурнаяЕдиница", ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
	////КотлячковаЕВ 2014-07-11 12:55:48 }
	//БредовЮГ 2014-11-23 Наряд №000134613}
	
конецпроцедуры

&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

//Конец Процедуры и функции для организации подбора

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ЗначениеКопирования") Тогда
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			РасписаниеНаФорме = Параметры.ЗначениеКопирования.Расписание.Получить();
		КонецЕсли;
	КонецЕсли;
	ВладелецПриИзмененииНаСервере();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокАвтоЗаказаПоСтруктурнымЕдиницам,"Правило",Объект.Ссылка,ВидСравненияКомпоновкиДанных.Равно,,Истина,,);	
	
	//{БредовЮГ 2014-11-23 Наряд №000134614
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Izh_АвтоЗаказНастройкаПризнакаМатрицы.Свойство,
	|	Izh_АвтоЗаказНастройкаПризнакаМатрицы.Цвет
	|ИЗ
	|	РегистрСведений.Izh_АвтоЗаказНастройкаПризнакаМатрицы КАК Izh_АвтоЗаказНастройкаПризнакаМатрицы");
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	НомерНастройки = 1;
	Пока Выборка.Следующий() Цикл
		НовыйЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		НовыйЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Настройка №"+НомерНастройки;
		НовыйЭлементУсловногоОформления.Представление = "СозданоПрограммно";
		НовыйЭлементУсловногоОформления.Использование = Истина;
		
		ЭлементОтбора = НовыйЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование = Истина;
		
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Состав.ВидМатрицы");
		ЭлементОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Выборка.Свойство;
		
		
		НовоеПоле = НовыйЭлементУсловногоОформления.Поля.Элементы.Добавить();
		НовоеПоле.Использование = Истина;
		НовоеПоле.Поле = Новый ПолеКомпоновкиДанных("СоставНоменклатура");
		
		Цвет = Выборка.Цвет.Получить();
		//++Минин 2015-10-13 0000141418
		//НовыйЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Цвет);	
		НовыйЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Цвет);	
		//--Минин 2015-10-13 0000141418
		НомерНастройки = НомерНастройки + 1;
	КонецЦикла;
	//БредовЮГ 2014-11-23 Наряд №000134614}
	Элементы.Группа_СтраницаСостав.Доступность = НЕ Объект.ПоПротоколу;
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписания(Команда)
	Если РасписаниеНаФорме = Неопределено Тогда
		Расписание = ПолучитьРасписание();
		Если Расписание = Неопределено Тогда
			Расписание = Новый РасписаниеРегламентногоЗадания;
		КонецЕсли;	
	Иначе
		Расписание = РасписаниеНаФорме;
	КонецЕсли;	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Если Диалог.ОткрытьМодально() Тогда
		Расписание = Диалог.Расписание;
		Оповестить("ИзмененоРасписаниеПравилАвтоЗаказа",Диалог.Расписание,Объект.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьРасписание()
	Значение = ДанныеФормыВЗначение(Объект,Тип("СправочникОбъект.ПравилаАвтоЗаказов"));
	Расписание = Значение.Расписание.Получить();
	Возврат Расписание;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость_ПриИзменениВариантыРасчета();
	УстановитьВидимостьПодменюЗаполнение();
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.Состав.Количество() = 0 И НЕ Объект.ПоПротоколу Тогда
		Сообщить("Не заполнена табличная часть!",СтатусСообщения.Внимание);
		Отказ = Истина;
	КонецЕсли;
	Отказ = ПроверкаДублей();
КонецПроцедуры

&НаСервере
Функция ПроверкаДублей()
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	Состав.НомерСтроки КАК Номер,
	|	Состав.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	&Состав КАК Состав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав1.Номер КАК Номер,
	|	Состав1.Номенклатура КАК Номенклатура
	|ИЗ
	|	Состав КАК Состав1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Состав КАК Состав2
	|		ПО Состав1.Номенклатура = Состав2.Номенклатура
	|			И Состав1.Номер <> Состав2.Номер";
	тз = Объект.Состав.Выгрузить(,"НомерСтроки, Номенклатура");			   
	Запрос.УстановитьПараметр("Состав",тз);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество()> 0 Тогда 
		Сообщить("Повторяющаяся номенклатура в строке №"+Результат[0].Номер);
		Элементы.Состав.ТекущаяСтрока = Результат[0].Номер-1;
		Возврат Истина;
	КонецЕсли;	
	Возврат ЛОЖЬ;
КонецФункции 

&НаКлиенте
Процедура УстановитьВидимостьПодменюЗаполнение()
	Элементы.СоставЗаполнитьПоПризнакуМатрицы.Видимость = ЗначениеЗаполнено(Объект.Владелец) И ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.Контрагенты") И ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Владелец,"ПротоколРЦ");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКодаПоставщика()
	Элементы.КодПоставщика.Видимость = ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.Контрагенты");
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ВладелецПриИзмененииНаСервере();
	УстановитьВидимостьПодменюЗаполнение();
	УстановитьВидимостьКодаПоставщика();
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	//{БредовЮГ 2015-03-20 Наряд 000145565 от 20.03.2015 13:04:45
	ЭтоСтруктурнаяЕдиница = ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	ЭтоКонтрагент = ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты");
	Элементы.ПоПротоколу.Видимость = НЕ ЭтоСтруктурнаяЕдиница;
	//БредовЮГ 2015-03-20 Наряд 000145565 от 20.03.2015 13:04:45}
	Если ЭтоСтруктурнаяЕдиница Тогда
		//{БредовЮГ 2015-03-20 Наряд 000145565 от 20.03.2015 13:04:45
		Объект.ПоПротоколу = Ложь;
		//БредовЮГ 2015-03-20 Наряд 000145565 от 20.03.2015 13:04:45}
		Если Объект.Владелец <> Справочники.СтруктурныеЕдиницы.Центр Тогда
			Элементы.СкладПроизводства.Видимость = Истина;
			ПодборНоменклатуры.ПроизвольныйЗапрос = Истина;
			ПодборНоменклатуры.ТекстЗапроса = "ВЫБРАТЬ
			|	СписокНоменклатуры.Код,
			|	СписокНоменклатуры.Наименование,
			|	СписокНоменклатуры.Группа,
			|	ВЫБОР
			|		КОГДА СписокНоменклатуры.ПометкаУдаления
			|			ТОГДА ВЫБОР
			|					КОГДА СписокНоменклатуры.Группа = 0
			|						ТОГДА 2
			|					ИНАЧЕ 3
			|				КОНЕЦ
			|		ИНАЧЕ ВЫБОР
			|				КОГДА СписокНоменклатуры.Группа = 0
			|					ТОГДА 0
			|				ИНАЧЕ 1
			|			КОНЕЦ
			|	КОНЕЦ КАК Картинка,
			|	СписокНоменклатуры.Ссылка КАК Номенклатура
			|ИЗ
			|	Справочник.Номенклатура КАК СписокНоменклатуры
			|ГДЕ
			|	ВЫБОР
			|			КОГДА СписокНоменклатуры.Группа = 0
			|				ТОГДА 
			//											  |					СписокНоменклатуры.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция) И
			|						ВЫБОР
			|							КОГДА &СписокТоваров = ЗНАЧЕНИЕ(Справочник.СпискиНоменклатуры.ПустаяСсылка)
			|								ТОГДА ИСТИНА
			|							ИНАЧЕ СписокНоменклатуры.Ссылка В
			|									(ВЫБРАТЬ
			|										СпискиНоменклатурыСостав.Номенклатура
			|									ИЗ
			|										Справочник.СпискиНоменклатуры.Состав КАК СпискиНоменклатурыСостав
			|									ГДЕ
			|										СпискиНоменклатурыСостав.Ссылка = &СписокТоваров)
			|						КОНЕЦ
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ";
			
			ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", СписокНомеклатуры);
		КонецЕсли;
	КонецЕсли;
	//{БредовЮГ 2015-05-08 Наряд 000149975 от 08.05.2015 9:14:21
	Элементы.Izh_ВариантРасчета.Видимость = ЭтоКонтрагент;
	//БредовЮГ  2015-05-08 Наряд 000149975 от 08.05.2015 9:14:21 } 	
КонецПроцедуры	

&НаКлиенте
Процедура СписокНомеклатурыПриИзменении(Элемент)
	УстановитьПараметры();
КонецПроцедуры


&НаКлиенте
Процедура ВладелецНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.Контрагенты"));
	Массив.Добавить(Тип("СправочникСсылка.СтруктурныеЕдиницы"));
	Элемент.ОграничениеТипа = Новый ОписаниеТипов(Массив);
КонецПроцедуры

//{БредовЮГ 2014-11-23 Наряд №000134614
&НаСервере
Процедура ЗаполнитьПоПротоколуНаСервере(ВходящийПризнак=Неопределено)
	Контрагент = Объект.Владелец;
	Запрос = Новый ЗАпрос("ВЫБРАТЬ
	                      |	НоменклатураКонтрагента.Номенклатура,
	                      |	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, ЗНАЧЕНИЕ(Справочник.ЗначенияСвойствОбъектов.ПустаяСсылка)) КАК ВидМатрицы
	                      |ИЗ
	                      |	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	                      |		ПО НоменклатураКонтрагента.Номенклатура = НоменклатураДополнительныеРеквизиты.Ссылка
	                      |			И (&СвойствоПризнакМатрицы = НоменклатураДополнительныеРеквизиты.Свойство)
	                      |ГДЕ
	                      |	НоменклатураКонтрагента.Контрагент = &Контрагент
	                      |	И ВЫБОР
	                      |			КОГДА ВЫРАЗИТЬ(&Контрагент КАК Справочник.Контрагенты).ПротоколРЦ
	                      |				ТОГДА ИСТИНА
	                      |			ИНАЧЕ НоменклатураКонтрагента.ОсновнойПоставщик
	                      |		КОНЕЦ
	                      |	И ВЫБОР
	                      |			КОГДА НоменклатураКонтрагента.ДатаПрекращенияПоставок = &ПустаяДата
	                      |				ТОГДА ИСТИНА
	                      |			КОГДА НоменклатураКонтрагента.ДатаПрекращенияПоставок > &ТекущаяДата
	                      |				ТОГДА ИСТИНА
	                      |			ИНАЧЕ ЛОЖЬ
	                      |		КОНЕЦ "+?(ЗначениеЗаполнено(ВходящийПризнак),"И НоменклатураДополнительныеРеквизиты.Значение = &Значение",""));
	Запрос.УстановитьПараметр("ПустаяДата",Дата('00010101'));
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
    Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("Значение",ВходящийПризнак);
	КодПВХ = ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаПризнакМатрицы);
	Запрос.УстановитьПараметр("СвойствоПризнакМатрицы",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(КодПВХ));
	РезультатЗапроса = Запрос.Выполнить();
	Объект.Состав.Загрузить(РезультатЗапроса.Выгрузить());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокПризнаковМатриц()
	сзПризнакМатрицы = Новый СписокЗначений;
	КодПВХ = ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаПризнакМатрицы);
	СвойствоПризнакМатрицы = ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(КодПВХ);
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец = &Владелец");
	Запрос.УстановитьПараметр("Владелец",СвойствоПризнакМатрицы);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		сзПризнакМатрицы.Добавить(Выборка.Ссылка);
	КонецЦикла;
	Возврат	сзПризнакМатрицы;
КонецФункции

&НаСервере
Процедура ЗаполнитьПоПризнакуМатрицы(ВходящийПризнак)
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПротоколу(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите владельца",Объект,"Объект.Владелец");
		Возврат;
	КонецЕсли;
	Если ТипЗнч(Объект.Владелец)<>Тип("СправочникСсылка.Контрагенты") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заполнение по протоколу реализовано только для контрагентов",Объект,"Объект.Владелец");
		Возврат;
	КонецЕсли;
	Если Вопрос("Текущие данные в табличной части будут очищены, продолжить ?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
		Если Команда.имя = "ЗаполнитьПоПротоколу" Тогда
			ЗаполнитьПоПротоколуНаСервере();	
		ИначеЕсли Команда.имя = "ЗаполнитьПоПротоколуПризнакуМатрицы" Тогда
			СписокПризнаковМатрицы = ПолучитьСписокПризнаковМатриц();	
            ВыбранноеЗначение = ВыбратьИзСписка(СписокПризнаковМатрицы,Элементы.ПериодРасчета,);
			Если ВыбранноеЗначение=Неопределено Тогда Возврат; КонецЕсли;
			ЗаполнитьПоПротоколуНаСервере(ВыбранноеЗначение.Значение);
		КонецЕсли;
	КонецЕсли;			
КонецПроцедуры
//БредовЮГ 2014-11-23 Наряд №000134614}

&НаКлиенте
Процедура ПоПротоколуПриИзменении()
	Объект.Состав.Очистить();
	Элементы.Группа_СтраницаСостав.Доступность = НЕ Объект.ПоПротоколу;
КонецПроцедуры


//{БредовЮГ 2015-05-08 Наряд 000149975 от 08.05.2015 9:14:21
&НаКлиенте
Процедура УстановитьВидимость_ПриИзменениВариантыРасчета()
	Если Объект.Izh_ВариантРасчета = 0 Тогда  // по темпу продаж
		Элементы.ПоПротоколу.Видимость = Истина;
		Элементы.Izh_Менеджер.Видимость = Ложь;
		Элементы.Группа_СтраницаСостав.Доступность = НЕ Объект.ПоПротоколу;
		Элементы.КоэффициентЗаказа.Видимость = Истина;
		Элементы.ПроцентОкругления.Видимость = Истина;
	ИначеЕсли Объект.Izh_ВариантРасчета = 1 Тогда // по данным продаж магазинов (BI) 
		Элементы.ПоПротоколу.Видимость = Ложь;
		Элементы.Izh_Менеджер.Видимость = Истина;
		Элементы.Группа_СтраницаСостав.Доступность = Ложь;
		Элементы.КоэффициентЗаказа.Видимость = Ложь;
		Элементы.ПроцентОкругления.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Izh_ВариантРасчетаПриИзменении(Элемент)
	УстановитьВидимость_ПриИзменениВариантыРасчета();	
КонецПроцедуры
//БредовЮГ  2015-05-08 Наряд 000149975 от 08.05.2015 9:14:21 } 	


#Область РаботаСоСпискомСтруктурныхЕдиниц

&НаКлиенте
Процедура СписокАвтоЗаказаПоСтруктурнымЕдиницамПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	Если ЭтаФорма.Модифицированность ИЛИ НЕ ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перед изменением необходимо записать правило");
		Возврат ;
	КонецЕсли;	
	ПодборСЕОткрыть(Неопределено);
КонецПроцедуры


&НаКлиенте
Процедура ПодборСЕОткрыть(Команда)
	Элементы.СписокСтруктурныхЕдиниц.Видимость = НЕ Элементы.СписокСтруктурныхЕдиниц.Видимость;
	Ссылка = Параметры.Ключ;
КонецПроцедуры

&НаКлиенте
Процедура ПодборСЕЗакрыть(Команда)
	Элементы.СписокСтруктурныхЕдиниц.Видимость  = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СписокСтруктурныхЕдиницВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЭтаФорма.Модифицированность ИЛИ НЕ ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перед изменением, необходимо записать правило");
		Возврат ;
	КонецЕсли;	
	ЗаписатьВРегистрПравило(Элементы.СписокСтруктурныхЕдиниц.ТекущаяСтрока);
	Элементы.СписокАвтоЗаказаПоСтруктурнымЕдиницам.Обновить();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВРегистрПравило(СтруктурнаяЕдиница)
	Если СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.Центр Тогда
		Возврат;
	КонецЕсли;	
	Запись = РегистрыСведений.АвтоЗаказПоСтруктурнымЕдиницам.СоздатьМенеджерЗаписи();
	Запись.Правило = Параметры.Ключ;
	Запись.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
	Запись.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокАвтоЗаказаПоСтруктурнымЕдиницам,,"");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокАвтоЗаказаПоСтруктурнымЕдиницам,"Правило",Параметры.Ключ,ВидСравненияКомпоновкиДанных.Равно,,Истина,,);	
	                                
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокСтруктурныхЕдиниц,,"");
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		Если ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(Объект.Владелец,"ПротоколРЦ")  ИЛИ Объект.Izh_ВариантРасчета = 1 Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокСтруктурныхЕдиниц,"ТипСтруктурнойЕдиницы",ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Склад"),ВидСравненияКомпоновкиДанных.Равно,,Истина,,);
		КонецЕсли;
	КонецЕсли;
	ЭтаФорма.ОбновитьОтображениеДанных();	
КонецПроцедуры

#КонецОбласти 


