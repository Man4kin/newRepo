Перем ЛинияТонкая;
Перем ЛинияТолстая;
Перем НетЛинии;
Перем АдресКартинки;

&НаКлиенте
Процедура ВертикальВыполнить()
	промВертикаль = Объект.Вертикаль;
	Если НЕ ВвестиЧисло(промВертикаль,"Количество по вертикали",2,0) Тогда
		Возврат;
	КонецЕсли;
	Если промВертикаль <= 0 Тогда
		Предупреждение("Количество по вертикали должно быть больше нуля!",20);	
		Возврат;
	КонецЕсли;
	Объект.Вертикаль = промВертикаль;
	Вывести();
КонецПроцедуры

&НаКлиенте
Процедура ГоризонтальВыполнить()
	промГоризонталь = Объект.Горизонталь;
	Если НЕ ВвестиЧисло(промГоризонталь,"Количество по горизонтали",1,0) Тогда
		Возврат;
	КонецЕсли;	
	Если промГоризонталь <= 0 Тогда
		Предупреждение("Количество по горизонтали должно быть больше нуля!",20);	
		Возврат;
	КонецЕсли;
	ОБъект.Горизонталь = промГоризонталь;
	Вывести();
КонецПроцедуры

&НаКлиенте
Процедура ОриентацияВыполнить()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//СхемаКомпоновкиДанных = Обработки.ПечатьЦенниковИЭтикеток.ПолучитьМакет("ДоступныеПоля");
	СхемаКомпоновкиДанных = Обработки.ПечатьЦенниковИЭтикеток.ПолучитьМакет("ДоступныеПоляШаблоновЦенниковИЭтикеток");
	АдресВХранилище = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресВХранилище));
	Если Параметры.ЗначениеКопирования.Пустая() Тогда
		тдРедактор = Объект.Ссылка.Шаблон.Получить();
	Иначе
		тдРедактор = Параметры.ЗначениеКопирования.Шаблон.Получить();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
// Процедура занимается отрисовкой шаблона
Процедура Вывести()
	Если Объект.Горизонталь = 0 тогда
		Объект.Горизонталь = 1;
	Конецесли;
	Если Объект.Вертикаль = 0 тогда
		Объект.Вертикаль = 1;
	Конецесли;
	для номерСтроки=1 по ТДРедактор.ВысотаТаблицы цикл
		для номерКолонки=1 по ТДРедактор.ШиринаТаблицы цикл
			Область = ТдРедактор.Область("R"+НомерСтроки+"C"+НомерКолонки+":R"+НомерСтроки+"C"+НомерКолонки);
			Если Не Объект.Области.НайтиСтроки(Новый Структура("ИмяОбласти",Область.Имя)).Количество() >0 тогда
				Область.Очистить(Ложь,Ложь,Истина);
			конецесли;
		конеццикла;
	конеццикла;
	Область = тдРедактор.Область();
	Область.ВысотаСтроки =6;
	Область.ШиринаКолонки =1;
	ОбщаяШиринаОбласти = 102;
	ОбщаяВысотаОбласти = 48;	
	Если Объект.Ориентация Тогда //портрет
		ПромШирина = 210/Объект.Горизонталь;		
		ПромВысота = 270/Объект.Вертикаль;		
	Иначе
		ПромШирина = 290/Объект.Горизонталь;		
		ПромВысота = 180/Объект.Вертикаль;		
	КонецЕсли;
	ШиринаОбласти = ОбщаяШиринаОбласти;	
	ВысотаОбласти = Окр(ПромВысота*ШиринаОбласти/ПромШирина);
	ПерваяСтрока = 1+Окр((ОбщаяВысотаОбласти - ВысотаОбласти)/2);
	ПоследняяСтрока = Окр(ПерваяСтрока + ВысотаОбласти-1);
	ОбластьШаблона = тдРедактор.Область(ПерваяСтрока,2,ПоследняяСтрока,102);
	Если ВысотаОбласти+1>ОбщаяВысотаОбласти Тогда
		ВысотаОбласти = ОбщаяВысотаОбласти;
		ШиринаОбласти = Окр(ПромШирина*ВысотаОбласти/ПромВысота);
		ПервыйСтолбец = 1+Окр((ОбщаяШиринаОбласти - ШиринаОбласти)/2);
		ПоследнийСтолбец = Окр(ПервыйСтолбец + ШиринаОбласти-1);
		ОбластьШаблона = тдРедактор.Область(2,ПервыйСтолбец,47,ПоследнийСтолбец);
	КонецЕсли;	
	ОбластьШаблона.Узор = ТипУзораТабличногоДокумента.Сплошной;
	лЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Точечная, 1);
	ОбластьШаблона.Обвести(лЛиния,лЛиния,лЛиния,лЛиния);
	Объект.АдресШаблона = ОбластьШаблона.Имя;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Вывести();
	Если Объект.Ориентация тогда
		Элементы.Ориентация.Картинка = БиблиотекаКартинок.Портрет;
	Иначе
		Элементы.Ориентация.Картинка = БиблиотекаКартинок.Ландшафт;
	Конецесли;
КонецПроцедуры

&НаСервере
Функция ПолучитьМакет(ИмяМакета)
	Макет =  Обработки.ПечатьЦенниковИЭтикеток.ПолучитьМакет(ИмяМакета);
	Возврат Макет;	
КонецФункции


// Функция получает строку с именем параметра штрихкода для передачи в СКД.
//
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИмяПараметраШтрихкод()
	
	Возврат "ШтрихКод";
	
КонецФункции // ПолучитьИмяПараметраШтрихкод()

&НаСервере
ФУнкция ВставитьРисунокШтрихкода(ИмяТекущейОбласти)
	МакетШК =   ПолучитьМакет("КартинкаШтрихкода");
	Картинка= Новый Картинка(МакетШК);
	РисунокШтрихкода = тдРедактор.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	Индекс = тдРедактор.Рисунки.Индекс(РисунокШтрихкода);
	тдРедактор.Рисунки[Индекс].Картинка = Картинка;
	ОбластьИмя = ПолучитьИмяПараметраКартинка()+СтрЗаменить(Новый УникальныйИдентификатор,"-","_");
	тдРедактор.Рисунки[Индекс].Имя = ОбластьИмя;
	тдРедактор.Рисунки[Индекс].Расположить(тдРедактор.Область(ИмяТекущейОбласти));
	тдРедактор.Рисунки[Индекс].Линия=ЛинияТолстая;	
	Возврат ОбластьИмя;
	
КонецФункции // ВставитьРисунокШтрихкода()

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИмяПараметраТекст()
	
	Возврат "Текст";
	
КонецФункции 

&НаСервере
ФУнкция ВставитьТекст(ИмяТекущейОбласти,Текст)
	РисунокТекст = тдРедактор.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Текст);
	Индекс = тдРедактор.Рисунки.Индекс(РисунокТекст);
	ОбластьИМя =  ПолучитьИмяПараметраТекст()+СтрЗаменить(Новый УникальныйИдентификатор,"-","_");
	тдРедактор.Рисунки[Индекс].Имя =ОбластьИмя;
	тдРедактор.Рисунки[Индекс].Текст = Текст;
	тдРедактор.Рисунки[Индекс].Расположить(ТДРедактор.Область(ИмяТекущейОбласти));
	тдРедактор.Рисунки[Индекс].ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
	тдРедактор.Рисунки[Индекс].ВертикальноеПоложение=ВертикальноеПоложение.Центр;
	тдРедактор.Рисунки[Индекс].Линия=ЛинияТолстая;
	Возврат ОбластьИмя;
	
КонецФункции // ВставитьРисунокШтрихкода()
&НаСервере
ФУнкция ВернутьЗначениеПеречисления(Имя)
	Возврат Перечисления.ТипыОбластейЭтикеток[Имя]
Конецфункции
&НаКлиенте

// Процедура
//
Процедура ДоступныеПоляВыборВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ТипЗнч(тдРедактор.ТекущаяОбласть) <> Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		Предупреждение("Для переноса поля шаблона нужно выделить ячейку или область ячеек!");
		Возврат;
	Иначе
		ТекущаяОбласть = тдРедактор.ТекущаяОбласть;
	КонецЕсли;
	Картинка = неопределено;
	//{БредовЮГ 2014-12-29 Добавление вычисляемого поля
	Формула = "";
	//БредовЮГ 2014-12-29 Добавление вычисляемого поля}
	ИмяПоляВШаблоне = КомпоновщикНастроек.Настройки.ДоступныеПоляПорядка.ПолучитьОбъектПоИдентификатору(ВыбраннаяСтрока);
	ТипОбласти = "Текст";
	ПолеВШаблонеСТр = СокрЛП(Строка(ИмяПоляВШаблоне.Поле));
	Если ПолеВШаблонеСтр = ПолучитьИмяПараметраШтрихкод() Тогда
		Область = ВставитьРисунокШтрихкода(ТекущаяОбласть.Имя);
		ТипОбласти = "ШтрихКод";
	ИначеЕсли ПолеВШаблонеСтр = ПолучитьИмяПараметраКартинка() тогда
		ФАйлСКартинкой = ВыбратьФАйлСКартинкой();
		Если ФайлСКартинкой <> Неопределено тогда
			Область=	ВставитьРисунок(ФайлСКартинкой, ТекущаяОбласть.Имя);
		Конецесли;
		ТипОбласти = "Картинка";
	ИначеЕсли ПолеВШаблонеСтр = ПолучитьИмяПараметраТекст() тогда
		Текст = "";
		Подсказка = "Введите текст";
		Если ВвестиСтроку(Текст, Подсказка, 0, Истина) Тогда
			Область =	ВставитьТекст(ТекущаяОбласть.Имя,Текст);
		Конецесли;	
		ТипОбласти = "Текст";
	//{БредовЮГ 2014-12-29 Добавление вычисляемого поля	
	ИначеЕсли ПолеВШаблонеСтр = "ВычисляемоеПоле" тогда	
		Формула = ОткрытьФормуМодально("ОбщаяФорма.ФормаВычисленияТекста",,ЭтаФорма);
		Если Формула = Неопределено Тогда Возврат; КонецЕсли;
		Область = ВставитьТекст(ТекущаяОбласть.Имя,ИмяПоляВШаблоне.Заголовок);
		ТипОбласти = "ВычисляемоеПоле";
	//БредовЮГ 2014-12-29 Добавление вычисляемого поля	}
	Иначе
		Область = ВставитьТекст(ТекущаяОбласть.Имя,ИмяПоляВШаблоне.Заголовок);
		ТипОбласти = "ЗначениеБД";
	КонецЕсли;
	//ТекущаяОбласть.Объединить();
	ДобавитьСтрокуВТЧОбласти(СокрЛП(Строка(ИмяПоляВШаблоне.Поле)),Область,ТипОбласти,Формула);
КонецПроцедуры 

&НаСервере
Процедура ДобавитьСтрокуВТЧОбласти(ИмяПОля,ИмяОбласти,ТипОбласти,Формула)
	Область = Объект.Области.Добавить();
	Область.ИмяПоля = ИмяПоля;
	Область.ИмяОбласти = ИмяОбласти;
	Область.Тип = Перечисления.типыОбластейЭтикеток[ТипОбласти]; 
	//{БредовЮГ 2014-12-29 Добавление вычисляемого поля
	Область.Izh_Вычисление = Формула; 
	//БредовЮГ 2014-12-29 Добавление вычисляемого поля}
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИмяПараметраКартинка()
	
	Возврат "Картинка";
	
КонецФункции // ПолучитьИмяПараметраШтрихкод()

&НаКлиенте
ФУнкция ВставитьРисунок(ФАйлСКартинкой,ИмяТекущейОбласти) 
	Картинка= Новый Картинка(ФАйлСКартинкой);
	РисунокШтрихкода = тдРедактор.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	Индекс = тдРедактор.Рисунки.Индекс(РисунокШтрихкода);
	тдРедактор.Рисунки[Индекс].Картинка = Картинка;
	ОбластьИмя = ПолучитьИмяПараметраКартинка()+СтрЗаменить(Новый УникальныйИдентификатор,"-","_");
	тдРедактор.Рисунки[Индекс].Имя = ОбластьИмя;
	тдРедактор.Рисунки[Индекс].Расположить(тдРедактор.Область(ИмяТекущейОбласти));
	тдРедактор.Рисунки[Индекс].Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.Сплошная, 2);
	Возврат ОбластьИмя;
КонецФункции // ВставитьРисунокШтрихкода()

&НаКлиенте
Функция ВыбратьФАйлСКартинкой()
	ФайлСКартинкой = неопределено;
	Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
		
		УстановитьРасширениеРаботыСФайлами();
		
	КонецЕсли;
	
	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		дФайл = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		дФайл.Заголовок = "Выберите файл картинки ...";
		//дФайл.Фильтр = "Картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|Все файлы (*.*)|*.*|";
		дФайл.Фильтр = "Картинки (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|";
		дФайл.ПредварительныйПросмотр = Истина;
		дФайл.ПроверятьСуществованиеФайла = Истина;
		дФайл.МножественныйВыбор = Ложь;
		Если дФайл.Выбрать() Тогда
			ФайлСкартинкой =дфайл.ВыбранныеФайлы[0];
		КонецЕсли;
	Конецесли;
	Возврат ФайлСкартинкой;
конецфункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Шаблон = Новый ХранилищеЗначения(тдРедактор);
	
КонецПроцедуры // ПередЗаписьюНаСервере()

&НаКлиенте
Процедура Удалить(Команда)
	текОбласть = Элементы.тдРедактор.ТекущаяОбласть;
	Если текОбласть = неопределено тогда
		возврат;
	Конецесли;
	МассивСтрок = Объект.Области.НайтиСтроки(Новый Структура("ИмяОбласти",ТекОбласть.Имя));
	Если МассивСтрок.количество() = 0 тогда
		Возврат;
	конецесли;
	СтрокаТЧОбласти = МассивСтрок[0];
	Объект.Области.Удалить(Объект.Области.Индекс(СтрокаТчОбласти));
	тдРедактор.Рисунки.удалить(ТекОбласть);
КонецПроцедуры

&НаКлиенте
Процедура Ориентация(Команда)
	Объект.Ориентация = Не Объект.Ориентация;
	Если Объект.Ориентация тогда
		Элементы.Ориентация.Картинка = БиблиотекаКартинок.Портрет;
	Иначе
		Элементы.Ориентация.Картинка = БиблиотекаКартинок.Ландшафт;
	Конецесли;
	Вывести();
КонецПроцедуры
&НаКлиенте
Процедура тдРедакторВыбор(Элемент, Область, СтандартнаяОбработка)
	//{БредовЮГ 2014-12-29 Добавление вычисляемого поля
	МассивСтрок = Объект.Области.НайтиСтроки(Новый Структура("ИмяОбласти",Область.Имя));
	Если МассивСтрок.Количество()>0 И МассивСтрок[0].Тип = ПредопределенноеЗначение("Перечисление.ТипыОбластейЭтикеток.ВычисляемоеПоле") Тогда
		СтандартнаяОбработка = Ложь;
		СтрокаМассива = МассивСтрок[0];
		Формула = ОткрытьФормуМодально("ОбщаяФорма.ФормаВычисленияТекста",Новый Структура("ВычисляемыйТекст",СтрокаМассива.Izh_Вычисление),);
		Если Формула=Неопределено тогда Возврат; КонецЕсли;
		СтрокаМассива.Izh_Вычисление = Формула;
		ЭтаФорма.Модифицированность = Истина;
	ИначеЕсли НЕ МассивСтрок.Количество()>0 тогда
		СтандартнаяОбработка = Ложь;
	Конецесли;
	//БредовЮГ 2014-12-29 Добавление вычисляемого поля}
КонецПроцедуры

&НаКлиенте
Процедура тдРедакторПриИзмененииСодержимогоОбласти(Элемент, Область)
	Если НЕ Объект.Области.НайтиСтроки(Новый Структура("ИмяОбласти",Область.Имя)).Количество()>0 тогда
		Область.Очистить(Истина,Ложь,Ложь);
	Конецесли;
	Вывести();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ТекущийОбъект.ПоУмолчанию тогда
		выбШаблоны = Справочники.ШаблоныЦенников.Выбрать();
		Пока выбШаблоны.Следующий() Цикл
			Если выбШаблоны.Ссылка = ТекущийОбъект.Ссылка Тогда
				Продолжить;
			КонецЕсли;
			Если выбШаблоны.ПоУмолчанию Тогда
				обШаблон = выбШаблоны.ПолучитьОбъект();
				обШаблон.ПоУмолчанию = Ложь;
				обШаблон.Записать();
			КонецЕсли;
		КонецЦикла; // выбШаблоны.Следующий()
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ОбластиКоличество = Объект.Области.Количество();
	Для I = 1 По ОбластиКоличество Цикл
		Рисунок = Объект.Области[ОбластиКоличество-I];
		Попытка
			Рис = тдРедактор.Рисунки[Рисунок.ИмяОбласти];
		Исключение
			Объект.Области.Удалить(Рисунок);
		КонецПопытки;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическиОпределятьТипШКПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры


ЛинияТолстая = Новый Линия(ТипЛинииРисункаТабличногоДокумента.Сплошная, 2);

