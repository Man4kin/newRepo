
// Процедура - обработчик команды "УстановитьИнтервал".
//
&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	
	Диалог.Период.ДатаНачала    = Отчет.ДатаНачала;
	Диалог.Период.ДатаОкончания = Отчет.ДатаОкончания;
	
	Если Диалог.Редактировать() Тогда
		
		Отчет.ДатаНачала    = Диалог.Период.ДатаНачала;
		Отчет.ДатаОкончания = Диалог.Период.ДатаОкончания;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьИнтервал()

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.НачалоПериода) И НЕ ЗначениеЗаполнено(Отчет.КонецПериода) Тогда
		
		Отчет.НачалоПериода    = НачалоГода(ТекущаяДата());
		Отчет.КонецПериода = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Процедура заполняет поля отчета значениями по умолчанию если они не заполнены.
//
&НаСервере
Процедура ЗаполнитьЗначениямиПоУмолчанию(Настройки)
	
	
КонецПроцедуры // ЗаполнитьЗначениямиПоУмолчанию()

// Процедура - обработчик события "ПриЗагрузкеДанныхИзНастроекНаСервере" формы.
//
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьЗначениямиПоУмолчанию(Настройки);
	
КонецПроцедуры // ПриЗагрузкеДанныхИзНастроекНаСервере()

&НаКлиенте
Процедура Сформировать(Команда)
	ТабДок = ПечатьОП10();
	ДокументРезультат = ТабДОк;
КонецПроцедуры

Функция ПечатьОП10() экспорт
	ТабДокумент = новый ТабличныйДокумент;
	// Проверка на пустые значения
	Если Не(ЗначениеЗаполнено(Отчет.НачалоПериода) и ЗначениеЗаполнено(Отчет.КонецПериода)) тогда
		ОБщегоНазначенияКлиентСервер.СообщитьПользователю("Начало периода и окончание периода формирования отчета должны быть заполнены");
		Возврат ТабДокумент;
	Конецесли;
	Если НачалоГода(Отчет.НачалоПериода)<>НачалоГода(Отчет.КонецПериода) тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Начало периода и окончание периода формирования отчета должны быть в пределах одного года");
		Возврат ТабДокумент;
	Конецесли;
	Если Отчет.НачалоПериода > Отчет.КонецПериода И Отчет.КонецПериода <> '00010101000000' Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата начала периода не может быть больше даты конца периода");
		Возврат ТабДокумент;
	КонецЕсли;
	
	ТабДокумент.Очистить();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОРеализации_ОП10";
	
	Макет  = Отчеты.АктОРеализации.ПолучитьМакет("ОП10");
	
	// Выводим общие реквизиты шапки
	СведенияОФирме = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Отчет.Фирма, Отчет.КонецПериода);
	НачалоГода = НачалоГода(Отчет.НачалоПериода);
	ДатаОтчета = ТекущаяДата();
	Если Отчет.НачалоПериода <> НачалоГода Тогда
		Номера=РегистрыСведений.НомераОтчетов.СрезПоследних(Отчет.НачалоПериода-86400,Новый Структура("Фирма,ИмяОтчета",Отчет.Фирма,"АктОРеализации_ОП10"));
		Если Номера.Количество()>0 Тогда
			Если Номера[0].Период >= НачалоГода Тогда
				ОтчетовЗаГод = Номера[0].НомерОтчета;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если  ОтчетовЗаГод = Неопределено Тогда
		НомерОтчета = 1;	
	Иначе	
		НомерОтчета = ОтчетовЗаГод+1;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.НомерОтчета = НомерОтчета;
	ОбластьМакета.Параметры.ДатаОтчета  = ДатаОтчета;
	
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП = "";
	ОбластьМакета.Параметры.ОрганизацияПоОКПО = СведенияОФирме.КодПоОКПО;
	ОбластьМакета.Параметры.ПредставлениеОрганизации  = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОФирме);
	ОбластьМакета.Параметры.ПредставлениеПодразделения  = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Формирование текста Запроса++++
	Запрос = Новый Запрос();
	Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
		ТекстФильтра = " (Фирма = &парФирма) ";
		Запрос.УстановитьПараметр("парФирма", Отчет.Фирма);
	КонецЕсли; 
	Запрос.УстановитьПараметр("ДатаНач", Отчет.НачалоПериода); 
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.КонецПериода)); 
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВложенныйЗапрос.КодОперации = &КодОперации1
	               |				ТОГДА ВложенныйЗапрос.КоличествоОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоРозница,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВложенныйЗапрос.КодОперации = &КодОперации1
	               |				ТОГДА ВложенныйЗапрос.СуммаПродажиОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаРозница,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВложенныйЗапрос.КодОперации = &КодОперации2
	               |				ТОГДА ВложенныйЗапрос.КоличествоОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоОпт,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВложенныйЗапрос.КодОперации = &КодОперации2
	               |				ТОГДА ВложенныйЗапрос.СуммаПродажиОборот
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаОпт,
	               |	СУММА(ВложенныйЗапрос.СуммаОборот) КАК Себестоимость,
	               |	СУММА(ВложенныйЗапрос.СуммаПродажиОборот) КАК Сумма,
	               |	СУММА(ВложенныйЗапрос.КоличествоОборот) КАК Количество,
	               |	МАКСИМУМ(ВложенныйЗапрос.ТехнологическаяКарта.Номер) КАК ТехнологическаяКарта,
	               |	ВложенныйЗапрос.Номенклатура.Код КАК НоменклатураКод
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ДвиженияТМЦОбороты.Номенклатура КАК Номенклатура,
	               |		ДвиженияТМЦОбороты.КоличествоОборот КАК КоличествоОборот,
	               |		ДвиженияТМЦОбороты.СуммаОборот КАК СуммаОборот,
	               |		ДвиженияТМЦОбороты.СуммаПродажиОборот КАК СуммаПродажиОборот,
	               |		ВложенныйЗапрос.ТехнологическаяКарта.Ссылка КАК Ссылка,
	               |		ДвиженияТМЦОбороты.КодОперации КАК КодОперации,
	               |		ВложенныйЗапрос.ТехнологическаяКарта КАК ТехнологическаяКарта
	               |	ИЗ
	               |		РегистрНакопления.ДвиженияТМЦ.Обороты(&ДатаНач, &ДатаКон, , "+ТекстФильтра+") КАК ДвиженияТМЦОбороты
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				Внутр.Продукция КАК Продукция,
	               |				МАКСИМУМ(ТехнологическаяКарта.Ссылка) КАК ТехнологическаяКарта
	               |			ИЗ
	               |				(ВЫБРАТЬ
	               |					ТехнологическаяКарта.Продукция КАК Продукция,
	               |					МАКСИМУМ(ТехнологическаяКарта.Дата) КАК Дата
	               |				ИЗ
	               |					Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	               |				
	               |				СГРУППИРОВАТЬ ПО
	               |					ТехнологическаяКарта.Продукция) КАК Внутр
	               |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	               |					ПО Внутр.Продукция = ТехнологическаяКарта.Продукция
	               |						И Внутр.Дата = ТехнологическаяКарта.Дата
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				Внутр.Продукция) КАК ВложенныйЗапрос
	               |			ПО ДвиженияТМЦОбороты.Номенклатура = ВложенныйЗапрос.Продукция
	               |	ГДЕ
	               |		ДвиженияТМЦОбороты.КодОперации В(&КодыОперации)) КАК ВложенныйЗапрос
	               |ГДЕ
	               |	НЕ ВложенныйЗапрос.Ссылка ЕСТЬ NULL 
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ВложенныйЗапрос.Номенклатура.Код";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("КодОперации1",Перечисления.КодыОпераций.ПродажаРозница);
	Запрос.УстановитьПараметр("КодОперации2",Перечисления.КодыОпераций.ПеремещениеРасход);
	СписокКодов = Новый СписокЗначений;
	СписокКодов.Добавить(Перечисления.КодыОпераций.ПродажаРозница);
	СписокКодов.Добавить(Перечисления.КодыОпераций.ПродажаОпт);
	СписокКодов.Добавить(Перечисления.КодыОпераций.ПеремещениеРасход);
	
	Запрос.УстановитьПараметр("КодыОперации",СписокКодов);
	Результат = Запрос.Выполнить();
	// Формирование текста Запроса-----
	
	// выясним, какую вертикальную секцию будем использовать
	СтрокНаСтранице = 61;
	СтрокШапки      = 8;
	СтрокМалойШапки = 1;
	СтрокПодвала    = 28;
	НомерСтраницы   = 1;
	
	
	
	
	//ПЕЧАТЬ ТАБЛ.ЧАСТИ
	ИтКолЗаНаличРасчет = 0; ИтСуммаЗаНалРасчет=0; ИтКолБуфетам=0; ИтСуммаБуфетам = 0;
	ИтКолРаботникам=0; ИтСуммаРаботникам = 0; ИтКоличество=0; ИтСумма = 0;
	ИтКолВсего=0; ИтСуммаВсего = 0; ИтСуммаПоУчЦенам = 0;
	//всего
	ВсегоКолЗаНаличРасчет = 0; ВсегоСуммаЗаНалРасчет=0; ВсегоКолБуфетам=0; ВсегоСуммаБуфетам = 0;
	ВсегоКолРаботникам=0; ВсегоСуммаРаботникам = 0; ВсегоКоличество=0; ВсегоСумма = 0;
	ВсегоКолВсего=0; ВсегоСуммаВсего = 0; ВсегоСуммаПоУчЦенам = 0;
	
	
	
	// Выводим заголовок таблицы
	//НомерСтраницыТаблицы = Макет.ПолучитьОбласть("НомерСтраницы");
	//НомерСтраницыТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	//ТабДокумент.Вывести(НомерСтраницыТаблицы);
	//ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	//ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	
	КоличествоСтрок = Результат.Выбрать(ОбходРезультатаЗапроса.Прямой).Количество();
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала = Цел((СтрокМалойШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	Ном = 0;
	// Выводим многострочную часть докмента
	ОбластьНомераКолонок = Макет.ПолучитьОбласть("НомераКолонок");
	ОбластьСтрокиМакета = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтого = Макет.ПолучитьОбласть("СтрокаИтого");
	
	/////////////////////
	НомерСтроки = 0;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерСтроки = НомерСтроки + 1;
		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			НомерСтраницы = НомерСтраницы + 1;
			ОбластьМакетаИтого.Параметры.ИтКолЗаНаличРасчет = ИтКолЗаНаличРасчет;
			ОбластьМакетаИтого.Параметры.ИтСуммаЗаНалРасчет = ИтСуммаЗаНалРасчет;
			ОбластьМакетаИтого.Параметры.ИтКолБуфетам = ИтКолБуфетам;
			ОбластьМакетаИтого.Параметры.ИтСуммаБуфетам = ИтСуммаБуфетам;
			ОбластьМакетаИтого.Параметры.ИтКолРаботникам = ИтКолРаботникам;
			ОбластьМакетаИтого.Параметры.ИтСуммаРаботникам = ИтСуммаРаботникам;
			ОбластьМакетаИтого.Параметры.ИтКоличество = ИтКоличество;
			ОбластьМакетаИтого.Параметры.ИтСумма = ИтСумма;
			ОбластьМакетаИтого.Параметры.ИтКолВсего = ИтКолВсего;
			ОбластьМакетаИтого.Параметры.ИтСуммаВсего = ИтСуммаВсего;
			ОбластьМакетаИтого.Параметры.ИтСуммаВсего = ИтСуммаВсего;
			ОбластьМакетаИтого.Параметры.ИтСуммаПоУчЦенам = ИтСуммаПоУчЦенам;
			ТабДокумент.Вывести(ОбластьМакетаИтого);
			
			//всего
			ВсегоКолЗаНаличРасчет = ВсегоКолЗаНаличРасчет+ИтКолЗаНаличРасчет;
			ВсегоСуммаЗаНалРасчет=ВсегоСуммаЗаНалРасчет+ИтСуммаЗаНалРасчет;
			ВсегоКолБуфетам=ВсегоКолБуфетам+ИтКолБуфетам;
			ВсегоСуммаБуфетам = ВсегоСуммаБуфетам+ИтСуммаБуфетам;
			ВсегоКолРаботникам=ВсегоКолРаботникам+ИтКолРаботникам;
			ВсегоСуммаРаботникам = ВсегоСуммаРаботникам+ИтСуммаРаботникам;
			ВсегоКоличество=ВсегоКоличество+ИтКоличество;
			ВсегоСумма = ВсегоСумма+ИтСумма;
			ВсегоКолВсего=ВсегоКолВсего+ИтКолВсего;
			ВсегоСуммаВсего = ВсегоСуммаВсего+ИтСуммаВсего;
			ВсегоСуммаПоУчЦенам = ВсегоСуммаПоУчЦенам+ИтСуммаПоУчЦенам;
			
			ИтКолЗаНаличРасчет = 0; ИтСуммаЗаНалРасчет=0; ИтКолБуфетам=0; ИтСуммаБуфетам = 0;
			ИтКолРаботникам=0; ИтСуммаРаботникам = 0; ИтКоличество=0; ИтСумма = 0;
			ИтКолВсего=0; ИтСуммаВсего = 0; ИтСуммаПоУчЦенам = 0;
			
			//сл.страница
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			ОбластьМакетаОборотнаяСторона = Макет.ПолучитьОбласть("ОборотнаяСторона");
			ТабДокумент.Вывести(ОбластьМакетаОборотнаяСторона);
			
			//шапка
			ТабДокумент.Вывести(ОбластьНомераКолонок);
			
			//ТекВысотаТаблицы = ОбластьНомераКолонок.ВысотаТаблицы + ОбластьМакетаОборотнаяСторона.ВысотаТаблицы + 2;
			//НомерСтрокиНаСтранице = 0;
		КонецЕсли;
		
		ОбластьСтрокиМакета.Параметры.НомерКК = Выборка.ТехнологическаяКарта;
		ОбластьСтрокиМакета.Параметры.НаименованиеНоменклатуры  = Выборка.Номенклатура;
		ОбластьСтрокиМакета.Параметры.КодНоменклатуры  = Выборка.НоменклатураКод;
		ОбластьСтрокиМакета.Параметры.ЦенаПродажи  = ?(Выборка.Количество = 0,Выборка.Сумма,Выборка.Сумма/Выборка.Количество);
		ОбластьСтрокиМакета.Параметры.КолЗаНаличРасчет  = Выборка.КоличествоРозница;
		ОбластьСтрокиМакета.Параметры.СуммаЗаНалРасчет  = Выборка.СуммаРозница;
		ОбластьСтрокиМакета.Параметры.КолБуфетам  = Выборка.КоличествоОпт;
		ОбластьСтрокиМакета.Параметры.СуммаБуфетам  = Выборка.СуммаОпт;
		ОбластьСтрокиМакета.Параметры.КолРаботникам  = 0;
		ОбластьСтрокиМакета.Параметры.СуммаРаботникам  = 0;
		КоличествоПрочее = Выборка.Количество -Выборка.КоличествоРозница -Выборка.КоличествоОпт;
		СуммаПрочее = Выборка.Сумма -Выборка.СуммаРозница -Выборка.СуммаОпт;
		ОбластьСтрокиМакета.Параметры.Количество  = КоличествоПрочее;
		ОбластьСтрокиМакета.Параметры.Сумма  = СуммаПрочее;
		ОбластьСтрокиМакета.Параметры.КолВсего  = Выборка.Количество;
		ОбластьСтрокиМакета.Параметры.СуммаВсего  = Выборка.Сумма;
		ОбластьСтрокиМакета.Параметры.ЦенаПоУчЦенам  = ?(Выборка.Количество = 0,Выборка.Себестоимость,Выборка.Себестоимость/Выборка.Количество);
		ОбластьСтрокиМакета.Параметры.СуммаПоУчЦенам  = Выборка.Себестоимость;
		
		ТабДокумент.Вывести(ОбластьСтрокиМакета);
		
		ИтКолЗаНаличРасчет = ИтКолЗаНаличРасчет+Выборка.КоличествоРозница;
		ИтСуммаЗаНалРасчет=ИтСуммаЗаНалРасчет+Выборка.СуммаРозница;
		ИтКолБуфетам=ИтКолБуфетам+Выборка.КоличествоОпт;
		ИтСуммаБуфетам = ИтСуммаБуфетам+Выборка.СуммаОпт;
		//ИтКолРаботникам=ИтКолРаботникам+Выборка.КоличествоРаботникам;
		//ИтСуммаРаботникам = ИтСуммаРаботникам+Выборка.СуммаРаботникам;
		ИтКоличество=КоличествоПрочее;
		ИтСумма = ИтСумма+СуммаПрочее;
		ИтКолВсего=ИтКолВсего+Выборка.Количество;
		ИтСуммаВсего = ИтСуммаВсего+Выборка.Сумма;
		ИтСуммаПоУчЦенам = ИтСуммаПоУчЦенам+Выборка.Себестоимость;
	КонецЦикла; 
	//печать итоговой строки
	//Печать строки Итого
	Если ИтСуммаВсего <> 0 ИЛИ ИтСуммаВсего <> 0 Тогда
		ОбластьМакетаИтого.Параметры.ИтКолЗаНаличРасчет = ИтКолЗаНаличРасчет;
		ОбластьМакетаИтого.Параметры.ИтСуммаЗаНалРасчет = ИтСуммаЗаНалРасчет;
		ОбластьМакетаИтого.Параметры.ИтКолБуфетам = ИтКолБуфетам;
		ОбластьМакетаИтого.Параметры.ИтСуммаБуфетам = ИтСуммаБуфетам;
		ОбластьМакетаИтого.Параметры.ИтКолРаботникам = ИтКолРаботникам;
		ОбластьМакетаИтого.Параметры.ИтСуммаРаботникам = ИтСуммаРаботникам;
		ОбластьМакетаИтого.Параметры.ИтКоличество = ИтКоличество;
		ОбластьМакетаИтого.Параметры.ИтСумма = ИтСумма;
		ОбластьМакетаИтого.Параметры.ИтКолВсего = ИтКолВсего;
		ОбластьМакетаИтого.Параметры.ИтСуммаВсего = ИтСуммаВсего;
		ОбластьМакетаИтого.Параметры.ИтСуммаВсего = ИтСуммаВсего;
		
		ТабДокумент.Вывести(ОбластьМакетаИтого);
	КонецЕсли;

	//всего
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаВсего");
	ОбластьМакета.Параметры.ВсегоКолЗаНаличРасчет = ВсегоКолЗаНаличРасчет+ИтКолЗаНаличРасчет;
	ОбластьМакета.Параметры.ВсегоСуммаЗаНалРасчет=ВсегоСуммаЗаНалРасчет+ИтСуммаЗаНалРасчет;
	ОбластьМакета.Параметры.ВсегоКолБуфетам=ВсегоКолБуфетам+ИтКолБуфетам;
	ОбластьМакета.Параметры.ВсегоСуммаБуфетам = ВсегоСуммаБуфетам+ИтСуммаБуфетам;
	ОбластьМакета.Параметры.ВсегоКолРаботникам=ВсегоКолРаботникам+ИтКолРаботникам;
	ОбластьМакета.Параметры.ВсегоСуммаРаботникам = ВсегоСуммаРаботникам+ИтСуммаРаботникам;
	ОбластьМакета.Параметры.ВсегоКоличество=ВсегоКоличество+ИтКоличество;
	ОбластьМакета.Параметры.ВсегоСумма = ВсегоСумма+ИтСумма;
	ОбластьМакета.Параметры.ВсегоКолВсего=ВсегоКолВсего+ИтКолВсего;
	ОбластьМакета.Параметры.ВсегоСуммаВсего = ВсегоСуммаВсего+ИтСуммаВсего;
	ОбластьМакета.Параметры.ВсегоСуммаПоУчЦенам = ВсегоСуммаПоУчЦенам+ИтСуммаПоУчЦенам;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	///
	// Выводим подвал документа
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	ФормСтрока = "Л = ru_RU; ДП = Ложь";
	ПарПредмета="рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2";
	ОбластьМакета.Параметры.ВсегоСуммаРеализацииПрописью = ЧислоПрописью(ВсегоСуммаВсего+ИтСуммаВсего,ФормСтрока,ПарПредмета);

	ТабДокумент.Вывести(ОбластьМакета);

	
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1,1,ТабДокумент.ВысотаТаблицы,ТабДокумент.ШиринаТаблицы);
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТекНомера=РегистрыСведений.НомераОтчетов.СрезПоследних(ДатаОтчета,Новый Структура("Фирма,ИмяОтчета",Отчет.Фирма,"АктОРеализации_ОП10"));
	
	Если ТекНомера.Количество()=0 ИЛИ ТекНомера[0].НомерОтчета <> НомерОтчета  Тогда
		Номера=РегистрыСведений.НомераОтчетов.СоздатьНаборЗаписей();
		НоваяЗапись=Номера.Добавить();
		НоваяЗапись.Фирма=Отчет.Фирма;
		НоваяЗапись.ИмяОтчета = "АктОРеализации_ОП10";
		НоваяЗапись.Период=ДатаОтчета;
		НоваяЗапись.НомерОтчета=НомерОтчета;
		Номера.Записать();
	КонецЕсли;
	Возврат ТабДокумент;
КОнецФункции

