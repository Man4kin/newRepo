

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаОтчета) Тогда
		
		Отчет.ДатаОтчета = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура Сформировать(Команда)
	ТабДок = ПечатьОП16();
	ДокументРезультат = ТабДОк;
КонецПроцедуры

Функция ПечатьОП16() экспорт
	ТабДокумент = новый ТабличныйДокумент;
	// Проверка на пустые значения
	
	ТабДокумент.Очистить();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОстаткиВПроизводстве_ОП16";
	
	Макет  = Отчеты.ОстаткиВПроизводстве.ПолучитьМакет("ОП16");
	
	
	// Выводим общие реквизиты шапки
	Если ЗначениеЗаполнено(Отчет.СтруктурнаяЕдиница) тогда
		СведенияОФирме = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Отчет.Фирма, Отчет.ДатаОтчета,Отчет.СтруктурнаяЕдиница);
	ИначеЕсли Значениезаполнено(Отчет.Склад) тогда
		СведенияОФирме = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Отчет.Фирма, Отчет.ДатаОтчета,Отчет.Склад.Владелец);
	Иначе
		СведенияОФирме = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Отчет.Фирма, Отчет.ДатаОтчета);
	КонецЕсли;
	НачалоГода = НачалоГода(Отчет.ДатаОтчета);
	ДатаОтчета = ТекущаяДата();
	Если Отчет.ДатаОтчета <> НачалоГода Тогда
		Номера=РегистрыСведений.НомераОтчетов.СрезПоследних(Отчет.ДатаОтчета-86400,Новый Структура("Фирма,ИмяОтчета",Отчет.Фирма,"ОстаткиВПроизводстве_ОП16"));
		Если Номера.Количество()>0 Тогда
			Если Номера[0].Период >= НачалоГода Тогда
				ОтчетовЗаГод = Номера[0].НомерОтчета;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если  ОтчетовЗаГод = Неопределено Тогда
		НомерОтчета = 1;	
	Иначе	
		НомерОтчета = ОтчетовЗаГод+1;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерОтчета = НомерОтчета;
	ОбластьМакета.Параметры.ДатаОтчета  = ДатаОтчета;
	
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП = "";
	ОбластьМакета.Параметры.ОрганизацияПоОКПО = СведенияОФирме.КодПоОКПО;
	ОбластьМакета.Параметры.ПредставлениеОрганизации  = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОФирме);
	ОбластьМакета.Параметры.ПредставлениеПодразделения  = ""+Отчет.Склад.Владелец + " / " +Отчет.Склад;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Формирование текста Запроса++++
	Запрос = Новый Запрос();
	ТекстФильтра = " (МестоХранения ССЫЛКА Справочник.Склады)";
	ТекстФильтраУП = "";
	Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
		ТекстФильтра = ТекстФильтра+ " И (Фирма = &парФирма) ";
		ТекстФильтраУП = "Организация = &парФИрма ";
		Запрос.УстановитьПараметр("парФирма", Отчет.Фирма);
	КонецЕсли; 
	Если ЗначениеЗаполнено(Отчет.Склад) Тогда
		ТекстФильтра = ТекстФильтра+ " И (МестоХранения = &парМестоХранения) ";
		Запрос.УстановитьПараметр("парМестоХранения", Отчет.Склад);
	КонецЕсли; 
	//Если ЗНачениеЗаполнено(Отчет.СтруктурнаяЕдиница) тогда
	//	ТекстФильтра = ТекстФильтра+ " И (МестоХранения.Владелец = &парСтруктурнаяЕдиница) ";
	//	Запрос.УстановитьПараметр("парСтруктурнаяЕдиница", Отчет.СтруктурнаяЕдиница);
	//Конецесли;
	Граница = Новый Граница(КонецДня(Отчет.ДатаОтчета),ВидГраницы.Включая);
	Запрос.установитьПараметр("Граница",Граница);
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ОстаткиНоменклатурыОстатки.Номенклатура,
	               |	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК Количество,
	               |	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК Всего,
	               |	ОстаткиНоменклатурыОстатки.Номенклатура.Код КАК НоменклатураКод,
	               |	ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения КАК Единица,
	               |	ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК ЕдиницаКод
	               |ИЗ
				   |	РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Граница,"+ТекстФильтра+") КАК ОстаткиНоменклатурыОстатки"; 
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	// Формирование текста Запроса-----
	
	// выясним, какую вертикальную секцию будем использовать
	СтрокНаСтранице = 65;
	СтрокШапки      = 19;
	СтрокМалойШапки = 1;
	СтрокПодвала    = 5;
	НомерСтраницы   = 1;
	
	
	// Выводим заголовок таблицы
	НомерСтраницыТаблицы = Макет.ПолучитьОбласть("НомерСтраницы");
	НомерСтраницыТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(НомерСтраницыТаблицы);
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	
	КоличествоСтрок = Результат.Выбрать(ОбходРезультатаЗапроса.Прямой).Количество();
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала = Цел((СтрокМалойШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	Ном = 0;
	
	// Выводим многострочную часть докмента
	ОбластьНомераКолонок = Макет.ПолучитьОбласть("НомераКолонок");
	ОбластьСтрокиМакета = Макет.ПолучитьОбласть("Строка");
	
	/////////////////////
	НомерСтроки = 0;
	ИтогКоличество = 0;
	ИтогВсего = 0;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерСтроки = НомерСтроки + 1;
		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.вывестиГоризонтальныйРазделительСтраниц();
			НомерСтраницыТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабДокумент.Вывести(НомерСтраницыТаблицы);
			ТабДокумент.Вывести(ОбластьНомераКолонок);
		КонецЕсли;
		
		ОбластьСтрокиМакета.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрокиМакета.Параметры.Номенклатура = Выборка.Номенклатура;
		ОбластьСтрокиМакета.Параметры.НоменклатураКод = Выборка.НоменклатураКод;
		ОбластьСтрокиМакета.Параметры.Единица = Выборка.Единица;
		ОбластьСтрокиМакета.Параметры.ЕдиницаКод = Выборка.ЕдиницаКод;
		Если  ЗначениеЗаполнено(Выборка.Количество) тогда
			Цена =  Выборка.Всего/Выборка.Количество;
		Иначе
			Цена = 0;
		КонецЕсли;
		ОбластьСтрокиМакета.Параметры.Цена =Цена;
		ОбластьСтрокиМакета.Параметры.Количество = Выборка.Количество;
		ОбластьСтрокиМакета.Параметры.Всего = Выборка.Всего;
		ТабДокумент.Вывести(ОбластьСтрокиМакета);
		ИтогКоличество = ИтогКоличество + Выборка.Количество;
		ИтогВсего = ИтогВсего + Выборка.Всего;
	КонецЦикла; 
	/////
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.ИтогКоличество = ИтогКоличество;
	ОбластьМакета.Параметры.ИтогВсего = ИтогВсего;
	ТабДокумент.Вывести(ОбластьМакета);

	
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1,1,ТабДокумент.ВысотаТаблицы,ТабДокумент.ШиринаТаблицы);
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТекНомера=РегистрыСведений.НомераОтчетов.СрезПоследних(Отчет.ДатаОтчета,Новый Структура("Фирма,ИмяОтчета",Отчет.Фирма,"ОстаткиВПроизводстве_ОП16"));
	
	Если ТекНомера.Количество()=0 ИЛИ ТекНомера[0].НомерОтчета <> НомерОтчета  Тогда
		Номера=РегистрыСведений.НомераОтчетов.СоздатьНаборЗаписей();
		НоваяЗапись=Номера.Добавить();
		НоваяЗапись.Фирма=Отчет.Фирма;
		НоваяЗапись.ИмяОтчета = "ОстаткиВПроизводстве_ОП16";
		НоваяЗапись.Период=Отчет.ДатаОтчета;
		НоваяЗапись.НомерОтчета=НомерОтчета;
		Номера.Записать();
	КонецЕсли;
	Возврат ТабДокумент;
КОнецФункции

Процедура ОбнулитьМассив(пМассив)
	Для Сч = 0 По пМассив.Количество()-1 Цикл
		пМассив[Сч] = 0;
	КонецЦикла;
КонецПроцедуры


