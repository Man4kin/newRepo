Функция ПолучитьтзСреднийЗапас(НачалоПериода,КонецПериода,номенклатура,Склад)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ	
	|	НоменклатураКонтрагента.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(НоменклатураКонтрагента.Контрагент) КАК Контрагент
	|ПОМЕСТИТЬ ВТНоменклатураКонтрагента 
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ГДЕ
	|	НоменклатураКонтрагента.ОсновнойПоставщик  
	|СГРУППИРОВАТЬ ПО 
	|	НоменклатураКонтрагента.Номенклатура;
	|///////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстаткиИОбороты.ПериодСекунда,
	|	ОстаткиНоменклатурыОстаткиИОбороты.ПериодДень КАК ПериодДень,
	|	ОстаткиНоменклатурыОстаткиИОбороты.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатурыОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|	ОстаткиНоменклатурыОстаткиИОбороты.СуммаУпрКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	ВТНоменклатураКонтрагента.Контрагент КАК Контрагент
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, ДвиженияИГраницыПериода,"+?(Номенклатура = Неопределено,""," Номенклатура в (&Номенклатура)")+" "+?(Номенклатура <>Неопределено и Склад <>Неопределено, " И ","  ")+?(Склад = неопределено,"", "Местохранения в (&МестоХранения)")+" ) КАК ОстаткиНоменклатурыОстаткиИОбороты
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТНоменклатураКонтрагента
	|	ПО ОстаткиНоменклатурыОстаткиИОбороты.Номенклатура = ВТНоменклатураКонтрагента.Номенклатура
	|ИТОГИ
	|	СУММА(КоличествоКонечныйОстаток),
	|	СУММА(СуммаКонечныйОстаток)
	|ПО
	|	Номенклатура,
	|	ПериодДень ПЕРИОДАМИ(ДЕНЬ, , )";
	
	Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Если Не Номенклатура = Неопределено тогда
		Запрос.УстановитьПараметр("Номенклатура",Номенклатура.ВЫгрузитьКолонку("Номенклатура"));
	КонецЕсли;
	Если Не Склад = Неопределено тогда
		Запрос.УстановитьПараметр("МестоХранения",Склад.ВЫгрузитьКолонку("МестоХранения"));
	КонецЕсли;
	
	
	Рез = Запрос.Выполнить();
	ВыборкаНоменклатура = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура");
	ТЗ.Колонки.Добавить("СреднийЗапас");
	ТЗ.Колонки.Добавить("СреднийЗапасСумма");
	ТЗ.Колонки.добавить("КоличествоДней");
	ТЗ.Колонки.добавить("ОсновнойПоставщик");
	КоличествоДнейВПериоде = ПолучитьКоличествоДнейВПериоде(НачалоПериода,КонецПериода);
	Если КоличествоДнейВПериоде = 0 тогда
	Возврат ТЗ;
	Конецесли;
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ВыборкаДень = ВыборкаНоменклатура.Выбрать(обходРезультатаЗапроса.ПоГруппировкам,"ПериодДень","ВСЕ");
		СреднийЗапас = 0;
		среднийЗапасСумма = 0;
		сч = 0;
		Пока вЫборкаДень.Следующий() Цикл
			Если сч = 0 или сч = КоличествоДнейВПериоде-1 тогда
				СреднийЗапас = СреднийЗапас + ВыборкаДень.КоличествоКонечныйОстаток/2;
				СреднийЗапасСУмма = СреднийЗапасСумма + ВыборкаДень.СуммаКонечныйОстаток/2;
			Иначе
				СреднийЗапас = СреднийЗапас + ВыборкаДень.КоличествоКонечныйОстаток;
				СреднийЗапасСУмма = СреднийЗапасСумма + ВыборкаДень.СуммаКонечныйОстаток;
			КонецЕсли;
			сч = сч + 1;
			// { ВетровИА 30.04.2015 Наряд №000149300 
			ВыборкаКонтрагент = ВыборкаДень.Выбрать();
			Пока ВыборкаКонтрагент.Следующий() Цикл
				ОсновнойПоставщик = ВыборкаКонтрагент.Контрагент; 	
			КонецЦикла
			//  ВетровИА 30.04.2015 Наряд №000149300} 
		Конеццикла;
		
		Если (КоличествоДнейВПериоде -1)<>0 тогда
		СреднийЗапас       = СреднийЗапас/(КоличествоДнейВПериоде-1);
		СреднийЗапасСумма = СреднийЗапасСумма/(КоличествоДнейВПериоде - 1);
		КонецЕсли;
		НоваяСтрока =  ТЗ.Добавить();
		НоваяСтрока.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		НоваяСтрока.СреднийЗапас = СреднийЗапас;
		НоваяСтрока.СреднийЗапасСумма = СреднийЗапасСумма;
		НоваяСтрока.КоличествоДней = КоличествоДнейВПериоде;
		НоваяСтрока.ОсновнойПоставщик = ОсновнойПоставщик;  
	Конеццикла;
	Возврат ТЗ;
Конецфункции

Функция ПолучитьКоличествоДнейВПериоде(НачалоПериода,КонецПериода) экспорт          
	Возврат Окр((КонецДня(КонецПериода)-НачалоДня(НачалоПериода))/(24*60*60));	
конецфункции


Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачалоПериода = ПолучимДату("НачалоПериода");
	КонецПериода = ПолучимДату("КонецПериода");
НачДата = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
Если НачДата<>Неопределено тогда
НачДата.Использование = Истина;
НачДата.Значение = НачалоПериода;
КонецЕсли;
КонДата = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
Если КонДата<>Неопределено тогда
КонДата.Использование = Истина;
КонДата.Значение = КонецПериода;
КонецЕсли;
Склад = ПолучитьСклад();
	Номенклатура = ПолучитьНоменклатуру();
	ТЗСреднийЗапас = ПолучитьтзСреднийЗапас(НачалоПериода,КОнецПериода,Номенклатура,Склад);
	Если ТЗСреднийЗапас.Количество()>0 тогда
		ВнешниеНаборыДанных = Новый Структура("ТЗСреднийЗапас",ТЗСРеднийЗапас);
		КомпоновщикМакета =Новый КомпоновщикМакетаКомпоновкиДанных;
		КомпНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
		КомпНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.Настройки);
		КомпНастроек.Восстановить();
		для каждого элемент из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы цикл
			Если ТипЗнч(Элемент) = Тип("ОтборКомпоновкиДанных")  тогда
				для каждого элементОтбора из Элемент.Элементы Цикл
					НовОтбор =КомпНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
					НовОтбор.ЛевоеЗначение = ЭлементОтбора.Левоезначение;
					НовОтбор.ВидСравнения = ЭлементОтбора.видСравнения;
					НовОтбор.Использование = ЭлементОтбора.Использование;
					НовОтбор.ПравоеЗначение = ЭлементОтбора.ПравоеЗначение;
				КонецЦикла;
			КонецЕсли;
		Конеццикла;
		
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,КомпНастроек.Настройки,ДанныеРасшифровки);
		ПроцессорКомпоновкиДанных = новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		тз = Новый ТаблицаЗначений;
		ПроцессорВЫвода = Новый ПроцессорВЫводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	конецесли;	
КонецПроцедуры

Функция ПолучитьНоменклатуру()
	Номенклатура = Неопределено;
	для каждого элемент из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы цикл
		Если ТипЗнч(Элемент) = Тип("ОтборКомпоновкиДанных")  тогда
			для каждого элементОтбора из Элемент.Элементы Цикл
				Если ЭлементОтбора.ЛевоеЗначение = Новый полеКомпоновкиДанных("Номенклатура") и ЭлементОтбора.Использование тогда
					Макет = ПолучитьМакет("Макет");
					КомпНастроек = Новый КомпоновщикНастроекКомпоновкиДАнных;
					КомпНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Макет));
					КомпНастроек.ЗагрузитьНастройки(Макет.НастройкиПоУмолчанию);
					КомпНастроек.Восстановить();
					НовОтбор =КомпНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
					НовОтбор.ЛевоеЗначение = Новый полеКомпоновкиДанных("Номенклатура");
					НовОтбор.ВидСравнения = ЭлементОтбора.видСравнения;
					НовОтбор.Использование = Истина;
					НовОтбор.ПравоеЗначение = ЭлементОтбора.ПравоеЗначение;
					КомпоновщикМакета =Новый КомпоновщикМакетаКомпоновкиДанных;
					МакетКомпоновки = КомпоновщикМакета.Выполнить(Макет,КомпНастроек.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
					ПроцессорКомпоновкиДанных = новый ПроцессорКомпоновкиДанных;
					ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
					тз = Новый ТаблицаЗначений;
					ПроцессорВЫвода = Новый ПроцессорВЫводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
					ПроцессорВывода.УстановитьОбъект(Тз);
					ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
					Возврат Тз;
				КонецЕсли;
			КонецЦикла;
		Конецесли;
	Конеццикла;
	Возврат Номенклатура;	
КонецФункции

Функция ПолучитьСклад()
	Склад = Неопределено;
	для каждого элемент из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы цикл
		Если ТипЗнч(Элемент) = Тип("ОтборКомпоновкиДанных")  тогда
			для каждого элементОтбора из Элемент.Элементы Цикл
				Если ЭлементОтбора.ЛевоеЗначение = Новый полеКомпоновкиДанных("МестоХранения") и ЭлементОтбора.Использование тогда
					Макет = ПолучитьМакет("МакетСклад");
					КомпНастроек = Новый КомпоновщикНастроекКомпоновкиДАнных;
					КомпНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Макет));
					КомпНастроек.ЗагрузитьНастройки(Макет.НастройкиПоУмолчанию);
					КомпНастроек.Восстановить();
					НовОтбор =КомпНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
					НовОтбор.ЛевоеЗначение = Новый полеКомпоновкиДанных("МестоХранения");
					НовОтбор.ВидСравнения = ЭлементОтбора.видСравнения;
					НовОтбор.Использование = Истина;
					НовОтбор.ПравоеЗначение = ЭлементОтбора.ПравоеЗначение;
					КомпоновщикМакета =Новый КомпоновщикМакетаКомпоновкиДанных;
					МакетКомпоновки = КомпоновщикМакета.Выполнить(Макет,КомпНастроек.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
					ПроцессорКомпоновкиДанных = новый ПроцессорКомпоновкиДанных;
					ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
					тз = Новый ТаблицаЗначений;
					ПроцессорВЫвода = Новый ПроцессорВЫводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
					ПроцессорВывода.УстановитьОбъект(Тз);
					ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
					Возврат Тз;
				КонецЕсли;
			КонецЦикла;
		Конецесли;
	Конеццикла;
	Возврат Склад;	
КонецФункции


Функция ПолучимДату(ИмяДаты)
	для каждого элемент из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") и Элемент.Параметр = Новый ПараметрКОмпоновкиДанных(ИмяДаты) и Элемент.Использование тогда
			Если ТипЗнч(Элемент.Значение) = Тип("СтандартнаяДатаНачала") тогда
				Если ИмяДаты = "КонецПериода" тогда
				Элемент.Значение.Дата = КонецДня(Элемент.Значение.Дата);
				КонецЕсли;
				Возврат Элемент.Значение.Дата;
			Иначе
				Если ИмяДаты = "КонецПериода" тогда
				Элемент.Значение = КонецДня(Элемент.Значение);
				КонеЦЕсли;
				Возврат Элемент.Значение;
			Конецесли;КонецЕсли;
		Конеццикла;
		Возврат Дата(1,1,1);
	КонецФункции
	
