
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтчетОбъект = Отчеты.СверкаСRMS.Создать();
	Для Каждого Макет Из ОтчетОбъект.Метаданные().Макеты Цикл
		Элементы.ВидОтчета.СписокВыбора.Добавить(Макет.Имя,Макет.Синоним);
	КонецЦикла;
	//	ВидОтчета = ОтчетОбъект.Метаданные().ОсновнаяСхемаКомпоновкиДанных.Имя;
	ВидОтчета = "Items";
	Отчет.ИмяМакета = ВидОтчета;
КонецПроцедуры

&НаКлиенте
Процедура ВидОтчетаПриИзменении(Элемент)
	Отчет.СписокКодов.Очистить();
	Отчет.ИмяМакета = ВидОтчета;
	ПриИзмененииВидаОтчета();
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаОтчета()
	//очищаем результат
	Результат.Очистить();
	//будем использовать новый макет скд
	СхемаКомпоновкиДанных = Отчеты.СверкаСRMS.ПолучитьМакет(ВидОтчета);
	//необходимо и достаточно только инициализации настроек
	Отчет.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор)));
КонецПроцедуры


&НаКлиенте
Процедура Синхронизировать(Команда)
	Если Отчет.СписокКодов.Количество() = 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(НСтр("ru = 'Данные синхронизированы! Выполнить полную синхронизацию?'"), Режим, 0,КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СписокКодов = "ALL";
		Иначе	
			Возврат;
		КонецЕсли;	
	Иначе	
		СписокКодов = "";
		Для Каждого Строка из Отчет.СписокКодов Цикл
			СписокКодов = СписокКодов+СтрЗаменить(Строка.Значение,Символы.НПП,"")+";";
		КонецЦикла;	
		СписокКодов = Сред(СписокКодов,0,СтрДлина(СписокКодов)-1);
	КонецЕсли;
	
	
	СинхронизироватьНаСервере(СписокКодов);
КонецПроцедуры

&НаСервере
Процедура СинхронизироватьНаСервере(СписокКодов)
	Попытка
		ВебСервис = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВебСервисRMS);
		URL = СтрЗаменить(ВебСервис.URL,"WsUploader","WsResender");
		Определение = Новый WSОпределения(URL);
		URIПространстваИмен = Определение.Сервисы.Получить(0).URIПространстваИмен;
		ИмяСервиса = Определение.Сервисы.Получить(0).Имя;
		ИмяТочки = Определение.Сервисы.Получить(0).ТочкиПодключения.Получить(0).Имя;
		Прокси = Новый WSПрокси(Определение,URIПространстваИмен,ИмяСервиса,ИмяТочки);
		//Прокси.Пользователь = ВебСервис.Имя;
		//Прокси.Пароль = ВебСервис.Пароль;
	Исключение
		Сообщить("Не установлен сервис синхронизации!");
		Возврат;
	КонецПопытки;
	Ответ = "Для выбранного варианта синхронизация не реализована!";
	Если ВидОтчета = "Items" Тогда
		Ответ = Прокси.Resend("items","itemcre",СписокКодов);	//itemhdrmod
	ИначеЕсли ВидОтчета = "ItemLoc" Тогда
		Ответ = Прокси.Resend("itemloc","itemlocmod",СписокКодов);	
	ИначеЕсли ВидОтчета = "Stores" Тогда
		Ответ = Прокси.Resend("stores","storemod",СписокКодов);	
	ИначеЕсли ВидОтчета = "Vendors" Тогда
		Ответ = Прокси.Resend("vendor","VendorHdrMod",СписокКодов);	
	ИначеЕсли ВидОтчета = "Codes" Тогда
		Если СписокКодов = "ALL" Тогда
			СписокКодов = "UPCT;HSEN;HTMP;RTLT;CASN;INRN;PALN"; 
		КонецЕсли;	
		Ответ = Прокси.Resend("codes","CodeDtlMod",СписокКодов);	
	ИначеЕсли ВидОтчета = "VAT" Тогда
		Ответ = Прокси.Resend("VAT","ItemVATUpdate",СписокКодов);	
	ИначеЕсли ВидОтчета = "MerchHier" Тогда
		Ответ = Прокси.Resend("merchhier","divisionmod","ALL");	
		Ответ = Ответ +" "+Прокси.Resend("merchhier","groupmod","ALL");	
		Ответ = Ответ +" "+Прокси.Resend("merchhier","deptmod","ALL");	
		Ответ = Ответ +" "+Прокси.Resend("merchhier","classmod","ALL");	
		Ответ = Ответ +" "+Прокси.Resend("merchhier","subclassmod","ALL");	
	ИначеЕсли ВидОтчета = "UDA_FF" Тогда
		Ответ = Прокси.Resend("Items","ItemUDAFFMod",СписокКодов);	
	ИначеЕсли ВидОтчета = "UDA_LOV" Тогда
		Ответ = Прокси.Resend("Items","ItemUDALOVMod",СписокКодов);	
	ИначеЕсли ВидОтчета = "UDA_DATE" Тогда
		Ответ = Прокси.Resend("Items","ItemUDADateMod",СписокКодов);	
	КонецЕсли;
	Сообщить(Ответ);
КонецПроцедуры
