
// Процедура - обработчик команды "УстановитьИнтервал".
//
&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	
	Диалог.Период.ДатаНачала    = Отчет.НачалоПериода;
	Диалог.Период.ДатаОкончания = Отчет.КонецПериода;
	
	Если Диалог.Редактировать() Тогда
		
		Отчет.НачалоПериода    = Диалог.Период.ДатаНачала;
		Отчет.КонецПериода = Диалог.Период.ДатаОкончания;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьИнтервал()

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.НачалоПериода) И НЕ ЗначениеЗаполнено(Отчет.КонецПериода) Тогда
		
		Отчет.НачалоПериода    = НачалоГода(ТекущаяДата());
		Отчет.КонецПериода = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Процедура заполняет поля отчета значениями по умолчанию если они не заполнены.
//
&НаСервере
Процедура ЗаполнитьЗначениямиПоУмолчанию(Настройки)
	
	
КонецПроцедуры // ЗаполнитьЗначениямиПоУмолчанию()

// Процедура - обработчик события "ПриЗагрузкеДанныхИзНастроекНаСервере" формы.
//
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьЗначениямиПоУмолчанию(Настройки);
	
КонецПроцедуры // ПриЗагрузкеДанныхИзНастроекНаСервере()

&НаКлиенте
Процедура Сформировать(Команда)
	ТабДок = ПечатьКассоваяКнига();
	ДокументРезультат = ТабДОк;
КонецПроцедуры

&НаСервере
Процедура ДобавитьОбороты(РабочаяТаблица, Приход, Расход)
	СтрокаТаблицы = РабочаяТаблица.Получить(0);
	Если СтрокаТаблицы = Неопределено Тогда
		НоваяСтрока = РабочаяТаблица.Добавить();
		НоваяСтрока.Остаток    = 0;
		НоваяСтрока.Приход     = Приход;
		НоваяСтрока.Расход     = Расход;
	Иначе
		СтрокаТаблицы.Приход    = СтрокаТаблицы.Приход    + Приход;
		СтрокаТаблицы.Расход    = СтрокаТаблицы.Расход    + Расход;
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция ПреобразоватьЧисло(чЧисло)
	Если чЧисло = Неопределено ИЛИ чЧисло = NULL Тогда
		Возврат 0;
	Иначе
		Возврат чЧисло;
	КонецЕсли;	
КонецФункции

&НаСервере
Функция ПреобразоватьНомер(Номер)
	НовыйНомер = Номер;
	//Для I=1 По СтрДлина(НовыйНомер)+1 Цикл
	//	Код = КодСимвола(Номер,I);
	//	Если Код > 57 ИЛИ Код < 48 Тогда
	//		НовыйНомер = СтрЗаменить(НовыйНомер,Символ(Код),"");
	//	КонецЕсли;	
	//КонецЦикла;	
	Возврат НовыйНомер;
КонецФункции	


&НаСервере
Функция ФамилияИнициалы(ФИО = Неопределено) Экспорт
	Если ТипЗнч(ФИО)= Тип("Строка") Тогда
		ПолноеФИО=СокрЛП(ФИО);
		ПозицияПробела=Найти(ПолноеФИО," ");
		Если ПозицияПробела=0 Тогда
			Возврат ПолноеФИО;	
		КонецЕсли;
		Фамилия=Лев(ПолноеФИО,ПозицияПробела);
		ИмяОтчество=СокрЛ(Сред(ПолноеФИО,ПозицияПробела+1));
		ПозицияПробела=Найти(ИмяОтчество," ");
		Если ПозицияПробела=0 Тогда
			Возврат Фамилия+Лев(ИмяОтчество,1)+".";	
		КонецЕсли;
		Имя=Лев(ИмяОтчество,ПозицияПробела);
		Отчество=СокрЛ(Сред(ИмяОтчество,ПозицияПробела+1));
		Возврат Фамилия+ВРег(Лев(Имя,1))+"."+ВРег(Лев(Отчество,1))+".";
	Иначе		
		Возврат "";	
	КонецЕсли; 
КонецФункции

&НаСервере
Функция ПечатьКассоваяКнига() экспорт
	ТабДокумент = новый ТабличныйДокумент;
	// Проверка на пустые значения
	Если Не(ЗначениеЗаполнено(Отчет.НачалоПериода) и ЗначениеЗаполнено(Отчет.КонецПериода)) тогда
		ОБщегоНазначенияКлиентСервер.СообщитьПользователю("Начало периода и окончание периода формирования отчета должны быть заполнены");
		Возврат ТабДокумент;
	Конецесли;
	Если НачалоГода(Отчет.НачалоПериода)<>НачалоГода(Отчет.КонецПериода) тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Начало периода и окончание периода формирования отчета должны быть в пределах одного года");
		Возврат ТабДокумент;
	Конецесли;
	Если Отчет.НачалоПериода > Отчет.КонецПериода И Отчет.КонецПериода <> '00010101000000' Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата начала периода не может быть больше даты конца периода");
		Возврат ТабДокумент;
	КонецЕсли;
	// Проверка на пустые значения
	Если Не ЗначениеЗаполнено(Отчет.Фирма) тогда
		ОБщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана фирма!");
		Возврат ТабДокумент;
	Конецесли;
	
	ТабДокумент.Очистить();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КассоваяКнига";
	
	ЭтаОбработка=РеквизитФормыВЗначение("Отчет");
	
	ЛистовЗаГод   = 0;
	ЛистовЗаМесяц = 0;

	
	Макет = ЭтаОбработка.ПолучитьМакет("КассоваяКнига");
	
	//////////////////////////////////////////////////////////////////////////////////////////
	ОбластьПодвалОтчет 					= Макет.ПолучитьОбласть("Подвал|Отчет");
	ОбластьВТомЧислеОтчет 				= Макет.ПолучитьОбласть("ВТомЧисле|Отчет");
	ОбластьОстатокОтчет 				= Макет.ПолучитьОбласть("Остаток|Отчет");
	ОбластьЛистовЗаМесяцОтчет 			= Макет.ПолучитьОбласть("ЛистовЗаМесяц|Отчет");
	ОбластьЛистовЗаГодОтчет 			= Макет.ПолучитьОбласть("ЛистовЗаГод|Отчет");
	ОбластьВкладнойЛистОтчет 			= Макет.ПолучитьОбласть("ВкладнойЛист|Отчет");
	ОбластьОтчетКассираОтчет 			= Макет.ПолучитьОбласть("ОтчетКассира|Отчет");
	ОбластьШапкаОтчет 					= Макет.ПолучитьОбласть("Шапка|Отчет");
	ОбластьОстатокНаНДОтчет 			= Макет.ПолучитьОбласть("ОстатокНаНД|Отчет");
	ОбластьПереносОтчет 				= Макет.ПолучитьОбласть("Перенос|Отчет");
	ОбластьСтрокаШирокаяОтчет 			= Макет.ПолучитьОбласть("СтрокаШирокая|Отчет");
	ОбластьСтрокаОтчет 					= Макет.ПолучитьОбласть("Строка|Отчет");
	ОбластьОборотОтчет 					= Макет.ПолучитьОбласть("Оборот|Отчет");
	ОбластьОборотРубОтчет 				= Макет.ПолучитьОбласть("ОборотРуб|Отчет");
	ОбластьКонечныйОстатокОтчет 		= Макет.ПолучитьОбласть("КонечныйОстаток|Отчет");
	
	
	ЗапросЛистов=Новый Запрос;
	ЗапросЛистов.Текст=
	"ВЫБРАТЬ
	|	данныеОколичествеДней.КоличествоДней,
	|	данныеОколичествеДней.Порядок КАК Порядок
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДенежныеСредстваОстаткиИОбороты.Период) КАК КоличествоДней,
	|		1 КАК Порядок
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(
	|				НАЧАЛОПЕРИОДА(&ДатаНач, ГОД),
	|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаНач, ДЕНЬ, -1), ДЕНЬ),
	|				ДЕНЬ,
	|				Движения,
	|				ИСТИНА
	|					И Фирма = &Фирма
	|					И ДенежнаяЯчейка ССЫЛКА Справочник.КассыФирмы
	|					И ДенежнаяЯчейка = &ДенежнаяЯчейка) КАК ДенежныеСредстваОстаткиИОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДенежныеСредстваОстаткиИОбороты.Период),
	|		2
	|	ИЗ
	|		РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(
	|				НАЧАЛОПЕРИОДА(&ДатаНач, МЕСЯЦ),
	|				КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаНач, ДЕНЬ, -1), ДЕНЬ),
	|				ДЕНЬ,
	|				Движения,
	|				ИСТИНА
	|					И Фирма = &Фирма
	|					И ДенежнаяЯчейка ССЫЛКА Справочник.КассыФирмы
	|					И ДенежнаяЯчейка = &ДенежнаяЯчейка) КАК ДенежныеСредстваОстаткиИОбороты) КАК данныеОколичествеДней
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	ЗапросЛистов.УстановитьПараметр("ДатаНач", Отчет.НачалоПериода);
	Если НачалоГода(Отчет.НачалоПериода) = НачалоДня(Отчет.НачалоПериода) ТОгда
		ЗапросЛистов.Текст = СтрЗаменить(ЗапросЛистов.Текст,"КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаНач, ДЕНЬ, -1), ДЕНЬ)", "НАЧАЛОПЕРИОДА(&ДатаНач, ГОД)");	
	КонецЕсли;	
	Если НачалоМесяца(Отчет.НачалоПериода) = НачалоДня(Отчет.НачалоПериода) ТОгда
		ЗапросЛистов.Текст = СтрЗаменить(ЗапросЛистов.Текст,"КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаНач, ДЕНЬ, -1), ДЕНЬ)", "НАЧАЛОПЕРИОДА(&ДатаНач, МЕСЯЦ)");	
	КонецЕсли;	
	Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
		ЗапросЛистов.УстановитьПараметр("Фирма", Отчет.Фирма);
	Иначе
		ЗапросЛистов.Текст = СтрЗаменить(ЗапросЛистов.Текст,"И Фирма = &Фирма", "");	
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Отчет.ДенежнаяЯчейка) Тогда
		ЗапросЛистов.УстановитьПараметр("ДенежнаяЯчейка", Отчет.ДенежнаяЯчейка);
	Иначе
		ЗапросЛистов.Текст = СтрЗаменить(ЗапросЛистов.Текст,"И ДенежнаяЯчейка = &ДенежнаяЯчейка", "");	
	КонецЕсли; 
	ВыборкаЛистов=ЗапросЛистов.Выполнить().Выбрать();
	
	Если ВыборкаЛистов.Следующий() Тогда
		ЛистовЗаГод = ВыборкаЛистов.КоличествоДней;
		Если ВыборкаЛистов.Следующий() Тогда
			ЛистовЗаМесяц = ВыборкаЛистов.КоличествоДней;	
		КонецЕсли;	 
	КонецЕсли;	 
	
	ЗапросИтог=Новый Запрос;
	ЗапросИтог.Текст=
	"ВЫБРАТЬ
	|	ДенежныеСредстваОстаткиИОбороты.Период КАК Период,
	|	СУММА(ДенежныеСредстваОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	СУММА(ДенежныеСредстваОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
	|	СУММА(ДенежныеСредстваОстаткиИОбороты.СуммаПриход) КАК СуммаПриход,
	|	СУММА(ДенежныеСредстваОстаткиИОбороты.СуммаРасход) КАК СуммаРасход
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.ОстаткиИОбороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			ДЕНЬ,
	|			Движения,
	|			ИСТИНА
	|				И Фирма = &Фирма
	|				И ДенежнаяЯчейка ССЫЛКА Справочник.КассыФирмы
	|				И ДенежнаяЯчейка = &ДенежнаяЯчейка) КАК ДенежныеСредстваОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваОстаткиИОбороты.Период
	|ИТОГИ
	|	СУММА(СуммаНачальныйОстаток),
	|	СУММА(СуммаКонечныйОстаток),
	|	СУММА(СуммаПриход),
	|	СУММА(СуммаРасход)
	|ПО
	|	ОБЩИЕ,
	|	Период ПЕРИОДАМИ(ДЕНЬ, , )";
	
	ЗапросИтог.УстановитьПараметр("ДатаНач", Отчет.НачалоПериода); 
	ЗапросИтог.УстановитьПараметр("ДатаКон", КонецДня(Отчет.КонецПериода)); 
	
	Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
		ЗапросИтог.УстановитьПараметр("Фирма", Отчет.Фирма);
	Иначе
		ЗапросИтог.Текст = СтрЗаменить(ЗапросИтог.Текст,"И Фирма = &Фирма", "");	
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Отчет.ДенежнаяЯчейка) Тогда
		ЗапросИтог.УстановитьПараметр("ДенежнаяЯчейка", Отчет.ДенежнаяЯчейка);
	Иначе
		ЗапросИтог.Текст = СтрЗаменить(ЗапросИтог.Текст,"И ДенежнаяЯчейка = &ДенежнаяЯчейка", "");	
	КонецЕсли; 
	ВыборкаПоИтогам=ЗапросИтог.Выполнить();

	Запрос=Новый Запрос;
	стрТекст=
	"ВЫБРАТЬ
	|	КассовыеДокументы.Документ КАК Документ,
	|	КассовыеДокументы.День КАК День,
	|	КассовыеДокументы.ДатаДок КАК ДатаДок,
	|	КассовыеДокументы.НомерДок КАК НомерДок,
	|	КассовыеДокументы.Валюта КАК Валюта,
	|	КассовыеДокументы.Основание КАК Основание,
	|	КассовыеДокументы.ТекстДок КАК ТекстДок,
	|	КассовыеДокументы.Приход КАК Приход,
	|	КассовыеДокументы.Расход КАК Расход,
	|	КассовыеДокументы.Счет КАК Счет,
	|	КассовыеДокументы.ПараметрСортировки КАК ПараметрСортировки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПриходныйКассовыйОрдер.Ссылка КАК Документ,
	|		НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК День,
	|		ПриходныйКассовыйОрдер.Дата КАК ДатаДок,
	|		ПриходныйКассовыйОрдер.Номер КАК НомерДок,
	|		ПриходныйКассовыйОрдер.Валюта КАК Валюта,
	|		ПриходныйКассовыйОрдер.Основание КАК Основание,
	|		ПриходныйКассовыйОрдер.ПринятоОт КАК ТекстДок,
	|		ПриходныйКассовыйОрдер.Сумма КАК Приход,
	|		0 КАК Расход,
	|		ВЫБОР
	|			КОГДА НЕ ПриходныйКассовыйОрдер.СтатьяДвиженияДенежныхСредств.СчетУчета = """"
	|				ТОГДА ПриходныйКассовыйОрдер.СтатьяДвиженияДенежныхСредств.СчетУчета
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.РасчетыСПоставщиками)
	|				ТОГДА ""60.01""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.РасчетыСПодотчетниками)
	|				ТОГДА ""71.01""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.РасчетыСПокупателями)
	|				ТОГДА ""62.01""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ВыплатаЗарплаты)
	|				ТОГДА ""70""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПеремещениеКассаКасса)
	|				ТОГДА ""50.01""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПеремещениеБанкКасса)
	|				ТОГДА ""51.01""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ОперацииСККМ)
	|				ТОГДА ""50.02""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПродажиККМНаличные)
	|				ТОГДА ""62.Р""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПродажиККМПоКартам)
	|				ТОГДА ""57.03""
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПрочиеВыплатыИПоступления)
	|				ТОГДА ПриходныйКассовыйОрдер.СтатьяДвиженияДенежныхСредств.СчетУчета
	|			КОГДА ПриходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ВыплатаДепонированнойЗарплаты)
	|				ТОГДА ""70""
	|			ИНАЧЕ "". .""
	|		КОНЕЦ КАК Счет,
	|		ВЫБОР
	|			КОГДА &СортировкаПоВидуДокумента
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПараметрСортировки
	|	ИЗ
	|		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|	ГДЕ
	|		НЕ ПриходныйКассовыйОрдер.ПометкаУдаления
	|		И ПриходныйКассовыйОрдер.Проведен
	|		И ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|		И ПриходныйКассовыйОрдер.Фирма = &Фирма
	|		И ПриходныйКассовыйОрдер.Касса = &ДенежнаяЯчейка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасходныйКассовыйОрдер.Ссылка,
	|		НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ),
	|		РасходныйКассовыйОрдер.Дата,
	|		РасходныйКассовыйОрдер.Номер,
	|		РасходныйКассовыйОрдер.Валюта,
	|		РасходныйКассовыйОрдер.Основание,
	|		РасходныйКассовыйОрдер.Выдать,
	|		0,
	|		РасходныйКассовыйОрдер.Сумма,
	|		ВЫБОР
	|			КОГДА НЕ РасходныйКассовыйОрдер.СтатьяДвиженияДенежныхСредств.СчетУчета = """"
	|				ТОГДА РасходныйКассовыйОрдер.СтатьяДвиженияДенежныхСредств.СчетУчета
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.РасчетыСПоставщиками)
	|				ТОГДА ""60.01""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.РасчетыСПодотчетниками)
	|				ТОГДА ""71.01""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.РасчетыСПокупателями)
	|				ТОГДА ""62.01""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ВыплатаЗарплаты)
	|				ТОГДА ""70""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПеремещениеКассаКасса)
	|				ТОГДА ""50.01""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПеремещениеБанкКасса)
	|				ТОГДА ""51.01""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ОперацииСККМ)
	|				ТОГДА ""50.02""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПродажиККМНаличные)
	|				ТОГДА ""62.Р""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПродажиККМПоКартам)
	|				ТОГДА ""57.03""
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПрочиеВыплатыИПоступления)
	|				ТОГДА РасходныйКассовыйОрдер.СтатьяДвиженияДенежныхСредств.СчетУчета
	|			КОГДА РасходныйКассовыйОрдер.КлассификаторДДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ВыплатаДепонированнойЗарплаты)
	|				ТОГДА ""70""
	|			ИНАЧЕ "". .""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &СортировкаПоВидуДокумента
	|				ТОГДА 2
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|	ГДЕ
	|		НЕ РасходныйКассовыйОрдер.ПометкаУдаления
	|		И РасходныйКассовыйОрдер.Проведен
	|		И РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|		И РасходныйКассовыйОрдер.Фирма = &Фирма
	|		И РасходныйКассовыйОрдер.Фирма = &Фирма
	|		И РасходныйКассовыйОрдер.Касса = &ДенежнаяЯчейка) КАК КассовыеДокументы
	|
	|УПОРЯДОЧИТЬ ПО
	|	День,
	|	ПараметрСортировки,
	|	ДатаДок
	|ИТОГИ
	|	СУММА(Приход),
	|	СУММА(Расход)
	|ПО
	|	День"+?(Отчет.Сортировка,", ПараметрСортировки "," ");
	
	Запрос.УстановитьПараметр("ДатаНач", Отчет.НачалоПериода); 
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.КонецПериода));
	Запрос.УстановитьПараметр("СортировкаПоВидуДокумента", Отчет.Сортировка);
	
	
	Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
		Запрос.УстановитьПараметр("Фирма", Отчет.Фирма);
	Иначе
		стрТекст = СтрЗаменить(стрТекст,"И ПриходныйКассовыйОрдер.Фирма = &Фирма", "");
		стрТекст = СтрЗаменить(стрТекст,"И РасходныйКассовыйОрдер.Фирма = &Фирма", "");
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Отчет.ДенежнаяЯчейка) Тогда
		Запрос.УстановитьПараметр("ДенежнаяЯчейка", Отчет.ДенежнаяЯчейка);
	Иначе
		стрТекст = СтрЗаменить(стрТекст,"И ПриходныйКассовыйОрдер.Касса = &ДенежнаяЯчейка", "");
		стрТекст = СтрЗаменить(стрТекст,"И РасходныйКассовыйОрдер.Касса = &ДенежнаяЯчейка", "");
	КонецЕсли; 
	Запрос.Текст = стрТекст;
	
	Результат=Запрос.Выполнить();
	
	ТаблицаДокументы=Результат.Выгрузить();
	ТаблицаДокументы.Очистить();
	ТаблицаДокументы.Колонки.Добавить("СтрокаСчет");
	ТаблицаДокументы.Колонки.Добавить("Валютный");
	ТаблицаДокументы.Колонки.Добавить("ВидДокумента");
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Число"));
	ТипЧисло=Новый ОписаниеТипов(Массив, Новый КвалификаторыЧисла(15,2));
	
	РабочаяТаблица = Новый ТаблицаЗначений;
	РабочаяТаблица.Колонки.Добавить("Остаток",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Приход",ТипЧисло);
	РабочаяТаблица.Колонки.Добавить("Расход",ТипЧисло);
	
	ВалютаРегламентированногоУчета = Справочники.Валюты.НайтиПоКоду("643");
	
	ИтогВалюта=ВыборкаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Общие");
	Строка=РабочаяТаблица.Добавить();
	
	Если ИтогВалюта.Следующий() Тогда		
		Строка.Остаток = ИтогВалюта["СуммаНачальныйОстаток"]-РабочаяТаблица.Итог("Остаток");
	Иначе
		Строка.Остаток=0;
	КонецЕсли;

	Итог=ВыборкаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
	Запрос=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"День");
	
	ПоПроводкам=Итог.Следующий();
	ПоДокументам=Запрос.Следующий();
	
	БылиОшибки = Ложь;
	ВывестиПодвал = Ложь;
	
	СведенияОбОрганизации = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Отчет.Фирма, Отчет.КонецПериода);
	
	ТипПКО=Тип("ДокументСсылка.ПриходныйКассовыйОрдер");
	ТипРКО=Тип("ДокументСсылка.РасходныйКассовыйОрдер");
		
	Пока ПоПроводкам Или ПоДокументам  Цикл
		Если НЕ ПоПроводкам  Тогда
			ДатаЛиста = Запрос.День;
		ИначеЕсли НЕ ПоДокументам Тогда
			ДатаЛиста = Итог.Период;
		Иначе                 
			ДатаЛиста = Мин(Запрос.День, Итог.Период);
		КонецЕсли;    
		НомерЛиста = ЛистовЗаГод + 1;
		ЛистовЗаГод = ЛистовЗаГод + 1;
		Если ДатаЛиста >= НачалоМесяца(Отчет.КонецПериода) Тогда
			ЛистовЗаМесяц = ЛистовЗаМесяц + 1;
		КонецЕсли;
		
		КоличествоПриходныхДокументов = 0;
		КоличествоРасходныхДокументов = 0;
		
		Остаток = РабочаяТаблица.Итог("Остаток");
		Если ДатаЛиста >= Отчет.НачалоПериода Тогда
			ОбластьВкладнойЛистОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьВкладнойЛистОтчет);
			
			ОбластьОтчетКассираОтчет.Параметры.ЗаголовокЛиста="КАССА за "+Формат(ДатаЛиста, "ДФ=dd.MM.yyyy");
			ТабДокумент.Присоединить(ОбластьОтчетКассираОтчет);
			
			ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста="Лист "+НомерЛиста;
			ТабДокумент.Вывести(ОбластьШапкаОтчет);
			ТабДокумент.Присоединить(ОбластьШапкаОтчет);
			
			ОбластьОстатокНаНДОтчет.Параметры.ОстатокНачало=Остаток;
			ТабДокумент.Вывести(ОбластьОстатокНаНДОтчет);
			ТабДокумент.Присоединить(ОбластьОстатокНаНДОтчет);
		КонецЕсли;
	
		
//		Высота каждой строки = 13 пунктов
//      На стандартную страницу помещается 59 строк

//		Высоты секций в строках:
//      Шапка = 5 стр
//		ВкладнойЛист = 3 стр
//		ОтчетКассира = 3 стр
//		ОстатокНаНачало = 1 стр
//		ВТомЧисле = 1 стр
//		Остаток = 1 стр
//		Строка = 2 стр
//		СтрокаШирокая = 4 стр
//		Перенос = 1 стр
//		Оборот = 1 стр
//		ОборотРуб = 1 стр
//		КонечныйОстаток = 1 стр
//		Подвал = 11 стр
//		ЛистовЗаМесяц = 1 стр
//		ЛистовЗаГод = 1 стр
		
		ВысотаСтроки = ?(Отчет.ВыводитьОснования = 1, 4, 2); // высота секции документа
		СтрокШапки = 9;
		СтрокПодвала = 13;
		
		ТаблицаДокументы.Очистить();
		Валюты=Новый СписокЗначений;
				
		Если (ПоДокументам) И (Запрос.День = ДатаЛиста) Тогда
			
			Если Отчет.Сортировка Тогда
				ВыборкаПараметрСортировки=Запрос.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ПараметрСортировки");
				Пока ВыборкаПараметрСортировки.Следующий() Цикл
				
					ВыборкаДокумент=ВыборкаПараметрСортировки.Выбрать();
					Пока ВыборкаДокумент.Следующий() Цикл
						
						НоваяСтрока=ТаблицаДокументы.Добавить();
						НоваяСтрока.ВидДокумента=?(ТипЗнч(ВыборкаДокумент.Документ)=ТипПКО,"ПриходныйОрдер","РасходныйОрдер");
						НоваяСтрока.Документ=ВыборкаДокумент.Документ;
						НоваяСтрока.ДатаДок=ВыборкаДокумент.ДатаДок;
						НоваяСтрока.День=ВыборкаДокумент.День;
						НоваяСтрока.НомерДок=ПреобразоватьНомер(ВыборкаДокумент.НомерДок);
						НоваяСтрока.Валюта=ВыборкаДокумент.Валюта;
						НоваяСтрока.Приход=ВыборкаДокумент.Приход;
						НоваяСтрока.Расход=ВыборкаДокумент.Расход;
						НоваяСтрока.Основание=ВыборкаДокумент.Основание;
						НоваяСтрока.ТекстДок=ВыборкаДокумент.ТекстДок;
						НоваяСтрока.Валютный=Ложь;
						НоваяСтрока.СтрокаСчет=ВыборкаДокумент.Счет;
					КонецЦикла;
				КонецЦикла;
			Иначе
				ВыборкаДокумент=Запрос.Выбрать();
				Пока ВыборкаДокумент.Следующий() Цикл
						
					НоваяСтрока=ТаблицаДокументы.Добавить();
					НоваяСтрока.ВидДокумента=?(ТипЗнч(ВыборкаДокумент.Документ)=ТипПКО,"ПриходныйОрдер","РасходныйОрдер");
					НоваяСтрока.Документ=ВыборкаДокумент.Документ;
					НоваяСтрока.ДатаДок=ВыборкаДокумент.ДатаДок;
					НоваяСтрока.День=ВыборкаДокумент.День;
					НоваяСтрока.НомерДок=ПреобразоватьНомер(ВыборкаДокумент.НомерДок);
					НоваяСтрока.Валюта=ВыборкаДокумент.Валюта;
					НоваяСтрока.Приход=ВыборкаДокумент.Приход;
					НоваяСтрока.Расход=ВыборкаДокумент.Расход;
					НоваяСтрока.Основание=ВыборкаДокумент.Основание;
					НоваяСтрока.ТекстДок=ВыборкаДокумент.ТекстДок;
					НоваяСтрока.Валютный=Ложь;
					НоваяСтрока.СтрокаСчет=ВыборкаДокумент.Счет;
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;
		
		//Удалить
		СумПриход = 0;
		СумРасход = 0;
		ПерваяСтрока = 1;
		          
		// Для простоты настройки печатной формы примем следующие соглашения:
		//	-	высота строк в таблице печатной формы задана жестко,
		//		тогда известно, сколько строк помещается на странице;
		СтрокНаСтранице = 55;
		//	-	высота шапки и подвала задана жестко и кратна высоте строк таблицы,
		//		тогда можно указать, сколько строк занимают шапка и подвал
		//		в пересчете на строки таблицы;
		//  -   Количество строк шапки определено при выводе валюты в шапку;
		//  -   Количество строк подвала определим позже по количеству валют;
		//	-	для нормальной работы алгоритма необходимо, чтобы шапка и подвал
		//		могли поместиться на одной странице + хотя бы одна строка таблицы:
		//		СтрокНаСтранице >= СтрокШапки + СтрокПодвала + 1
		//	-	если подвал не помещается на странице, он переносится на другую
		//		страницу с последней строкой; исключение составляет случай,
		//		когда в таблице всего одна строка.
		
		// Резервирование строк для вывода сведений о валюте в подвале.
		// Найдем количество валют, по которым будет остаток в конце дня.
		КоличествоВалютВПодвале = 0; // без рублей
		// По каждой валюте добавляется:
		//  2 строки для оборота;
		//  2 строки для остатка;
		//  1 строка под курсовую разницу.
		// Для рублей добавляется:
		//  1 строка для оборота;
		//  1 строка для остатка.
		// Добавляет строка для секции "КурсоваяРазница" и "ВТомЧисле".
		СтрокПодвала = СтрокПодвала + ?(КоличествоВалютВПодвале > 0, КоличествоВалютВПодвале * 5 + 4, 0);
		
		// Резервирование строк подвала для секции "ЛистовЗаМесяц" и "ЛистовЗаГод".
		СтрокПодвала = СтрокПодвала + ?(Отчет.ПоследнийЛист > 0, Отчет.ПоследнийЛист, 0);
		
		// Если ПереноситьПоследнююСтроку = 1 - переносить,
		// если ПереноситьПоследнююСтроку = 0 - не надо переносить:
		Если (ТаблицаДокументы.Количество()*ВысотаСтроки) <= (СтрокНаСтранице - СтрокШапки - СтрокПодвала) Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом = Цел(((СтрокШапки-5)+ТаблицаДокументы.Количество()*ВысотаСтроки+СтрокПодвала-1)/(СтрокНаСтранице-5));
			ЦелыхСтраницБезПодвала = Цел(((СтрокШапки-5)+ТаблицаДокументы.Количество()*ВысотаСтроки-1)/(СтрокНаСтранице-5));
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		КоличествоСтраниц = 1;
		Индекс=1;
		Для Каждого Документ Из ТаблицаДокументы Цикл
			Если Документ.ВидДокумента="РасходныйОрдер" Тогда
				Клиент = "Выдано " + СокрЛП(Документ.ТекстДок) + ?(Отчет.ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
				КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
				Расход = Документ.Расход;
				Приход = 0;
			Иначе
				Клиент = "Принято от " + СокрЛП(Документ.ТекстДок) + ?(Отчет.ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
				КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
				Приход = Документ.Приход;
				Расход = 0;
			КонецЕсли;   
			
			//СтруктураНомерДок=Новый Структура;
			//СтруктураНомерДок.Вставить("Фирма",Фирма);
			//СтруктураНомерДок.Вставить("Номер",Документ.НомерДок);		
			
			НомерДокПечатнойФормы = Документ.НомерДок;
			КоррСчет = Документ.СтрокаСчет;
			
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = Цел(((СтрокШапки-5)+(КоличествоСтраниц - 1)+(Индекс*ВысотаСтроки)-1)/(СтрокНаСтранице-5));
			Если (ЦелаяСтраница = КоличествоСтраниц) или 
				 ((ПереноситьПоследнююСтроку = 1) и (Индекс = ТаблицаДокументы.Количество())) Тогда
				ПриходЗаДень = РабочаяТаблица.Итог("Приход");
				РасходЗаДень = РабочаяТаблица.Итог("Расход");
				Если ДатаЛиста >= Отчет.НачалоПериода Тогда
					ОбластьПереносОтчет.Параметры.ПриходЗаДень=ПриходЗаДень;
					ОбластьПереносОтчет.Параметры.РасходЗаДень=РасходЗаДень;
					
					ТабДокумент.Вывести(ОбластьПереносОтчет);
					ТабДокумент.Присоединить(ОбластьПереносОтчет);
				КонецЕсли;
				НомерЛиста = НомерЛиста + 1;
				КоличествоСтраниц = КоличествоСтраниц + 1;
				ЛистовЗаГод = ЛистовЗаГод + 1;
				Если ДатаЛиста >= НачалоМесяца(Отчет.КонецПериода) Тогда
					ЛистовЗаМесяц = ЛистовЗаМесяц + 1;        
				КонецЕсли;
				Если ДатаЛиста >= Отчет.НачалоПериода Тогда
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьШапкаОтчет.Параметры.ТекстНомерЛиста="Лист "+НомерЛиста;
					ТабДокумент.Вывести(ОбластьШапкаОтчет);
					ТабДокумент.Присоединить(ОбластьШапкаОтчет);
				КонецЕсли;
			КонецЕсли;
			
			Если ДатаЛиста >= Отчет.НачалоПериода Тогда
				Если Отчет.ВыводитьОснования Тогда
					ОбластьСтрокаШирокаяОтчет.Параметры.НомерДокПечатнойФормы=НомерДокПечатнойФормы;
					ОбластьСтрокаШирокаяОтчет.Параметры.Контрагент=Клиент;
					ОбластьСтрокаШирокаяОтчет.Параметры.КоррСчет=КоррСчет;
					ОбластьСтрокаШирокаяОтчет.Параметры.Приход=Приход;
					ОбластьСтрокаШирокаяОтчет.Параметры.Расход=Расход;
					ОбластьСтрокаШирокаяОтчет.Параметры.Документ=Документ.Документ;
					
					ТабДокумент.Вывести(ОбластьСтрокаШирокаяОтчет);
					ТабДокумент.Присоединить(ОбластьСтрокаШирокаяОтчет);
				Иначе
					ОбластьСтрокаОтчет.Параметры.НомерДокПечатнойФормы=НомерДокПечатнойФормы;
					ОбластьСтрокаОтчет.Параметры.Контрагент=Клиент;
					ОбластьСтрокаОтчет.Параметры.КоррСчет=КоррСчет;
					ОбластьСтрокаОтчет.Параметры.Приход=Приход;
					ОбластьСтрокаОтчет.Параметры.Расход=Расход;
					ОбластьСтрокаОтчет.Параметры.Документ=Документ.Документ;
					
					ТабДокумент.Вывести(ОбластьСтрокаОтчет);
					ТабДокумент.Присоединить(ОбластьСтрокаОтчет);
				КонецЕсли;
			КонецЕсли;
		             
			ДобавитьОбороты(РабочаяТаблица, Приход, Расход);
			Индекс=Индекс+1;
		КонецЦикла;
		
		ПриходЗаДень = РабочаяТаблица.Итог("Приход");
		РасходЗаДень = РабочаяТаблица.Итог("Расход");
		Если ДатаЛиста >= Отчет.НачалоПериода Тогда
			
			ОбластьОборотОтчет.Параметры.ПриходЗаДень=ПриходЗаДень;
			ОбластьОборотОтчет.Параметры.РасходЗаДень=РасходЗаДень;
			
			ТабДокумент.Вывести(ОбластьОборотОтчет);
			ТабДокумент.Присоединить(ОбластьОборотОтчет);
		КонецЕсли;
		
		ПерваяСтрока = Истина;
		Остаток = Остаток+ПриходЗаДень-РасходЗаДень;
		
		Если ДатаЛиста >= Отчет.НачалоПериода Тогда
			ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец=Остаток;
			
			ТабДокумент.Вывести(ОбластьКонечныйОстатокОтчет);
			ТабДокумент.Присоединить(ОбластьКонечныйОстатокОтчет);
		
			ОбластьПодвалОтчет.Параметры.НадписьКолПриходныхРасходных=?(КоличествоПриходныхДокументов>0, ЧислоПрописью(КоличествоПриходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+ "приходных и "+
			?(КоличествоРасходныхДокументов>0,ЧислоПрописью(КоличествоРасходныхДокументов,"НД=Ложь",",,,,,,,,0")," - ")+"расходных получил.";
			
			Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Отчет.Фирма, КонецДня(ДатаЛиста));
						
			ОбластьПодвалОтчет.Параметры.ГлБухгалтер = ФамилияИнициалы(Руководители.ФИОГлавногоБухгалтера);
			ОбластьПодвалОтчет.Параметры.Кассир = ФамилияИнициалы(Руководители.ФИОКассира);	
				
			ТабДокумент.Вывести(ОбластьПодвалОтчет);
			ТабДокумент.Присоединить(ОбластьПодвалОтчет);
		КонецЕсли;
			             
		Ошибка = Ложь;
		Строка=РабочаяТаблица.Получить(0);
		
		Если Строка=Неопределено Тогда
			Строка=РабочаяТаблица.Добавить();
		Иначе
			Строка.Остаток = 0;
		КонецЕсли;
		
		Если (ДатаЛиста = Итог.Период) Тогда
			Строка.Остаток = ПреобразоватьЧисло(Итог.СуммаКонечныйОстаток)-РабочаяТаблица.Итог("Остаток");
			Если Остаток <> ПреобразоватьЧисло(Итог.СуммаКонечныйОстаток) Тогда
				Ошибка = Истина;
			КонецЕсли;
		Иначе
			Строка.Остаток = ПреобразоватьЧисло(Итог.СуммаНачальныйОстаток)-РабочаяТаблица.Итог("Остаток");
			Если Остаток <> ПреобразоватьЧисло(Итог.СуммаНачальныйОстаток) Тогда
				Ошибка = Истина;
			КонецЕсли;    
		КонецЕсли;
		
		Если Ошибка  Тогда
			Сообщить("Обороты по документам и проводкам за "+ДатаЛиста+" не совпадают!");
		КонецЕсли;
		
		РабочаяТаблица.ЗаполнитьЗначения(0,"Приход,  Расход");
		
		Если (ПоПроводкам) И (ДатаЛиста = Итог.Период) Тогда
			ПоПроводкам = Итог.Следующий();
		КонецЕсли;
		Если (ПоДокументам) И (ДатаЛиста = Запрос.День) Тогда
			ПоДокументам = Запрос.Следующий();
		КонецЕсли;
		Если (ПоПроводкам) или (ПоДокументам) Тогда
		    ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ВывестиПодвал=Истина;
	КонецЦикла;

	Если ВывестиПодвал Тогда
		Д = Отчет.КонецПериода;
		Если (НачалоДня(КонецМесяца(ДатаЛиста)) = ДатаЛиста) Или
			 (НачалоМесяца(ДатаЛиста) <> НачалоМесяца(Отчет.КонецПериода)) Или
			 (Отчет.ПоследнийЛист <> 0) Тогда
			 
			ОбластьЛистовЗаМесяцОтчет.Параметры.НадписьЛистовЗаМесяц="Количество листов кассовой книги за месяц: " +ЛистовЗаМесяц; 
			ТабДокумент.Вывести(ОбластьЛистовЗаМесяцОтчет);
			ТабДокумент.Присоединить(ОбластьЛистовЗаМесяцОтчет);
		КонецЕсли;
		Если (НачалоДня(КонецГода(ДатаЛиста)) = ДатаЛиста) Или 
			 (НачалоГода(ДатаЛиста) <> НачалоГода(Отчет.КонецПериода)) Или 
			 (Отчет.ПоследнийЛист = 2)	Тогда
			 
			ОбластьЛистовЗаГодОтчет.Параметры.НадписьЛистовЗаГод="Количество листов кассовой книги за год: " +ЛистовЗаГод; 
			ТабДокумент.Вывести(ОбластьЛистовЗаГодОтчет);
			ТабДокумент.Присоединить(ОбластьЛистовЗаГодОтчет); 
	    	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			// Печать обложки и титульного листа
			Макет1 = ЭтаОбработка.ПолучитьМакет("Обложка");
			ОбластьОбложка=Макет1.ПолучитьОбласть("Обложка");
			ОбластьОбложка.Параметры.НазваниеОрганизации=?(Отчет.Фирма.ПолноеНаименование="",Отчет.Фирма.Наименование,Отчет.Фирма.ПолноеНаименование);
			
			ОбластьОбложка.Параметры.НадписьОбложка=" на "+Год(ДатаЛиста)+" г.";
			ОбластьОбложка.Параметры.КодОКПО=СведенияОбОрганизации.КодПоОКПО;	
			ТабДокумент.Вывести(ОбластьОбложка);
	    	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	    	ТабДокумент.Вывести(ОбластьОбложка);
            // Последний лист кассовой книги
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ОбластьПослДеньГода=Макет1.ПолучитьОбласть("ПослДеньГода");
			
			Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Отчет.Фирма, КонецДня(ДатаЛиста));
						
			ОбластьПослДеньГода.Параметры.ГлБухгалтер = ФамилияИнициалы(Руководители.ФИОГлавногоБухгалтера);
			ОбластьПослДеньГода.Параметры.Руководитель = ФамилияИнициалы(Руководители.ФИОРуководителя);
			ОбластьПослДеньГода.Параметры.РуководительДолжность = Руководители.РуководительДолжность;
			ОбластьПослДеньГода.Параметры.ЛистовЗаГод = ЛистовЗаГод;
			ТабДокумент.Вывести(ОбластьПослДеньГода);
		КонецЕсли;
	КонецЕсли;         
	
	
	// Зададим параметры макета
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1,1,ТабДокумент.ВысотаТаблицы,ТабДокумент.ШиринаТаблицы);
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
КОнецФункции

