
// Процедура - обработчик команды "УстановитьИнтервал".
//
&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	
	Диалог.Период.ДатаНачала    = Отчет.НачалоПериода;
	Диалог.Период.ДатаОкончания = Отчет.КонецПериода;
	
	Если Диалог.Редактировать() Тогда
		
		Отчет.НачалоПериода    = Диалог.Период.ДатаНачала;
		Отчет.КонецПериода = Диалог.Период.ДатаОкончания;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьИнтервал()

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.НачалоПериода) И НЕ ЗначениеЗаполнено(Отчет.КонецПериода) Тогда
		
		Отчет.НачалоПериода    = НачалоГода(ТекущаяДата());
		Отчет.КонецПериода = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Процедура заполняет поля отчета значениями по умолчанию если они не заполнены.
//
&НаСервере
Процедура ЗаполнитьЗначениямиПоУмолчанию(Настройки)
	
	
КонецПроцедуры // ЗаполнитьЗначениямиПоУмолчанию()

// Процедура - обработчик события "ПриЗагрузкеДанныхИзНастроекНаСервере" формы.
//
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьЗначениямиПоУмолчанию(Настройки);
	
КонецПроцедуры // ПриЗагрузкеДанныхИзНастроекНаСервере()

&НаКлиенте
Процедура Сформировать(Команда)
	ТабДок = ПечатьОП14();
	ДокументРезультат = ТабДОк;
КонецПроцедуры

Функция ПечатьОП14() экспорт
	ТабДокумент = новый ТабличныйДокумент;
	// Проверка на пустые значения
	Если Не(ЗначениеЗаполнено(Отчет.НачалоПериода) и ЗначениеЗаполнено(Отчет.КонецПериода)) тогда
		ОБщегоНазначенияКлиентСервер.СообщитьПользователю("Начало периода и окончание периода формирования отчета должны быть заполнены");
		Возврат ТабДокумент;
	Конецесли;
	Если НачалоГода(Отчет.НачалоПериода)<>НачалоГода(Отчет.КонецПериода) тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Начало периода и окончание периода формирования отчета должны быть в пределах одного года");
		Возврат ТабДокумент;
	Конецесли;
	Если Отчет.НачалоПериода > Отчет.КонецПериода И Отчет.КонецПериода <> '00010101000000' Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата начала периода не может быть больше даты конца периода");
		Возврат ТабДокумент;
	КонецЕсли;
	
	ТабДокумент.Очистить();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТоварныйОтчет_ОП14";
	
	Макет  = Отчеты.ТоварныйОтчетВПроизводстве.ПолучитьМакет("ОП14");
	
	// Выводим общие реквизиты шапки
	Если ЗначениеЗаполнено(Отчет.Склад) тогда
	СведенияОФирме = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Отчет.Фирма, Отчет.КонецПериода,Отчет.Склад.Владелец);
		ИНаче
	СведенияОФирме = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Отчет.Фирма, Отчет.КонецПериода);
	КонецЕсли;
	НачалоГода = НачалоГода(Отчет.НачалоПериода);
	ДатаОтчета = ТекущаяДата();
	Если Отчет.НачалоПериода <> НачалоГода Тогда
		Номера=РегистрыСведений.НомераОтчетов.СрезПоследних(Отчет.НачалоПериода-86400,Новый Структура("Фирма,ИмяОтчета",Отчет.Фирма,"ТоварныйОтчет_ОП14"));
		Если Номера.Количество()>0 Тогда
			Если Номера[0].Период >= НачалоГода Тогда
				ОтчетовЗаГод = Номера[0].НомерОтчета;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если  ОтчетовЗаГод = Неопределено Тогда
		НомерОтчета = 1;	
	Иначе	
		НомерОтчета = ОтчетовЗаГод+1;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерОтчета = НомерОтчета;
	ОбластьМакета.Параметры.ДатаОтчета  = ДатаОтчета;
	
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП = "";
	ОбластьМакета.Параметры.ОрганизацияПоОКПО = СведенияОФирме.КодПоОКПО;
	ОбластьМакета.Параметры.ПредставлениеОрганизации  = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОФирме);
	ОбластьМакета.Параметры.ПредставлениеПодразделения  = ?(ЗначениеЗаполнено(Отчет.Склад),""+Отчет.Склад.Владелец + " / " +Отчет.Склад,"");
	ОбластьМакета.Параметры.МОЛ  = ?(ЗначениеЗаполнено(Отчет.МОЛ),Отчет.МОЛ.Наименование,"");
	ОбластьМакета.Параметры.ТабельныйНомер = ?(ЗначениеЗаполнено(Отчет.МОЛ),Отчет.МОЛ.Код,"");
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Формирование текста Запроса++++
	Запрос = Новый Запрос();
	ТекстФильтра = " (МестоХранения ССЫЛКА Справочник.Склады) ";
	ТекстФильтраУП = "";
	Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
		ТекстФильтра = ТекстФильтра+ " И (Фирма = &парФирма) ";
		ТекстФильтраУП = "Организация = &парФИрма ";
		Запрос.УстановитьПараметр("парФирма", Отчет.Фирма);
	КонецЕсли; 
	Если ЗначениеЗаполнено(Отчет.Склад) Тогда
		ТекстФильтра = ТекстФильтра+ " И (МестоХранения = &парМестоХранения) ";
		Запрос.УстановитьПараметр("парМестоХранения", Отчет.Склад);
	КонецЕсли; 
	//Если ЗНачениеЗаполнено(Отчет.СтруктурнаяЕдиница) тогда
	//	ТекстФильтра = ТекстФильтра+ " И (МестоХранения.Владелец = &парСтруктурнаяЕдиница) ";
	//	Запрос.УстановитьПараметр("парСтруктурнаяЕдиница", Отчет.СтруктурнаяЕдиница);
	//Конецесли;
	Граница = Новый Граница(КонецДня(Отчет.КонецПериода),ВидГраницы.Включая);
	Запрос.УстановитьПараметр("парПустаяСтрока", "");
	Запрос.УстановитьПараметр("Тара", Перечисления.ВидыТоваров.Тара);
	Запрос.УстановитьПараметр("ДатаНач", Отчет.НачалоПериода); 
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.КонецПериода)); 
	Запрос.установитьПараметр("Граница",Граница);
	Запрос.УстановитьПараметр("ПустаяСТрока","");
	//Запрос.УстановитьПараметр("парМатериал",Перечисления.ВидыТоваров.Материал);
	ТекстЗапроса =   "ВЫБРАТЬ разрешенные
	|	ВЫБОР
	|		КОГДА ОстаткиНачальные.Номенклатура.ВидТовара = &Тара
	|			ТОГДА ОстаткиНачальные.СуммаОстаток  
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДСНачОстТары,
	|	ВЫБОР
	|		КОГДА ОстаткиНачальные.Номенклатура.ВидТовара <> &Тара
	|			ТОГДА ОстаткиНачальные.СуммаОстаток 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДСНачОстТовара,
	|	0 КАК СуммаБезНДСКонОстТары,
	|	0 КАК СуммаБезНДСКонОстТовара,
	|	NULL КАК Док,
	|	&ДатаНач КАК Период,
	|	NULL КАК Клиент,
	|	0 КАК СуммаБезНДСПриходТары,
	|	0 КАК СуммаБезНДСПриходТовара,
	|	0 КАК СуммаБезНДСРасходТары,
	|	0 КАК СуммаБезНДСРасходТовара,
	|	0 КАК СекцияОтчета,
	|	&парПустаяСтрока КАК Номер
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ДатаНач,  "+ТекстФильтра+") КАК ОстаткиНачальные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 как СуммаБезНДСНачОстТовара,
	|	0 как СУммаБезНДСНачОстТары,
	|	ВЫБОР
	|		КОГДА ОстаткиКонечные.Номенклатура.ВидТовара = &Тара
	|			ТОГДА  ОстаткиКонечные.СуммаОстаток 
	|		ИНАЧЕ 0
	|	КОНЕЦ как СуммаБезНДСКонОстТары,
	|	ВЫБОР
	|		КОГДА ОстаткиКонечные.Номенклатура.ВидТовара <> &Тара
	|			ТОГДА ОстаткиКонечные.СуммаОстаток 
	|		ИНАЧЕ 0
	|	КОНЕЦ как СуммаБезНДСКонОстТовара,
	|	NULL как Док,
	|	&ДатаКон как Период,
	|	NULL как Клиент,
	|	0 как СуммаБезНДСПриходТары,
	|	0 как СУммаБезНДСПриходТовара,
	|	0 как СуммаБезНДСРасходТары,
	|	0 как СУммаБезНДСРасходТовара,
	|	3 как НомерСекции,
	|	&парПустаяСтрока  как Номер
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&Граница,"+ТекстФильтра+") КАК ОстаткиКонечные
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|0 как СуммаБезНДНАчОстТары,
	|0 как СуммаБезНДСНачОстТовара,
	|0 как СуммаБезНДСКонОстТары,
	|0 как СуммаБезНДСКонОстТовара,
	|	ОборотыБезИнвентаризации.Док как Док,
	|	ОборотыБезИнвентаризации.Период как Период,
	|	ОборотыБезИнвентаризации.Клиент как Клиент,
	|	СУММА(ОборотыБезИнвентаризации.СуммаБезНДСПриходТары) как СуммаБезНДСПриходТары,
	|	СУММА(ОборотыБезИнвентаризации.СуммаБезНДСПриходТовара) как СуммаБезНДСПриходТовара,
	|	СУММА(ОборотыБезИнвентаризации.СуммаБезНДСРасходТары) как СуммаБезНДСРасходТары,
	|	СУММА(ОборотыБезИнвентаризации.СуммаБезНДСРасходТовара) как СуммаБезНДСРасходТовара,
	|	ОборотыБезИнвентаризации.СекцияОтчета как СекцияОтчета,
	|	ОборотыБезИнвентаризации.Номер как Номер
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|				ТОГДА NULL
	|			ИНАЧЕ УчетПартийОбороты.Регистратор
	|		КОНЕЦ КАК Док,
	|		ВЫБОР
	|			КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|				ТОГДА NULL
	|			ИНАЧЕ УчетПартийОбороты.Период
	|		КОНЕЦ КАК Период,
	|		ВЫБОР
	|			КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Инвентаризация
	|				ТОГДА ""Инвентаризация""
	|			КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.ВводОстатков
	|				ТОГДА ""Ввод остатков""
	|			КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Перемещение
	|				ТОГДА ""Перемещение""
	|			КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.КоррекцияЗапасов и УчетПартийОбороты.Регистратор.Оприходование = Ложь
	|				ТОГДА ""Списание""
	|			КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|				ТОГДА ""Розничная продажа""
	|			ИНАЧЕ УчетПартийОбороты.Регистратор
	|		КОНЕЦ КАК Клиент,
	|		ВЫБОР
	|			КОГДА УчетПартийОбороты.Номенклатура.ВидТовара = &Тара
	|				ТОГДА   УчетПартийОбороты.СуммаПриход
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДСПриходТары,
	|		ВЫБОР
	|			КОГДА УчетПартийОбороты.Номенклатура.ВидТовара <> &Тара
	|				ТОГДА УчетПартийОбороты.СуммаПриход 
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДСПриходТовара,
	|		ВЫБОР
	|			КОГДА УчетПартийОбороты.Номенклатура.ВидТовара = &Тара
	|				ТОГДА   УчетПартийОбороты.СуммаРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДСРасходТары,
	|		ВЫБОР
	|			КОГДА УчетПартийОбороты.Номенклатура.ВидТовара <> &Тара
	|				ТОГДА  УчетПартийОбороты.СуммаРасход
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДСРасходТовара,
	|		ВЫБОР
	|			КОГДА УчетПартийОбороты.КоличествоПриход <> 0
	|				ТОГДА 1
	|			ИНАЧЕ 2
	|		КОНЕЦ КАК СекцияОтчета,
	|	ВЫБОР
	|	КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|	ТОГДА NULL
	|	Когда УчетПартийОбороты.Регистратор ссылка Документ.ПриходнаяНакладная тогда
	|   Выбор когда УчетПартийОбороты.Регистратор.НомерДокумента = &ПустаяСтрока тогда УчетПартийОбороты.Регистратор.Номер иначе 
	|	Регистратор.НомерДокумента Конец
	|   ИНАЧЕ УчетПартийОбороты.Регистратор.Номер
	|	КОНЕЦ  как Номер
	|	ИЗ
	|		РегистрНакопления.ОстаткиНоменклатуры.Обороты(
	|				&ДатаНач,
	|				&ДатаКон,
	|				Запись, "+ТекстФИльтра+") КАК УчетПартийОбороты
	|	ГДЕ
	|		(ЕСТЬNULL(УчетПартийОбороты.СуммаПриход, 0) <> 0
	|				ИЛИ ЕСТЬNULL(УчетПартийОбороты.СуммаРасход, 0) <> 0)
	|		И (НЕ УчетПартийОбороты.Регистратор ССЫЛКА Документ.Инвентаризация)) КАК ОборотыБезИнвентаризации
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыБезИнвентаризации.Док,
	|	ОборотыБезИнвентаризации.Период,
	|	ОборотыБезИнвентаризации.Клиент,
	|	ОборотыБезИнвентаризации.СекцияОтчета,
	|	ОборотыБезИнвентаризации.Номер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|0 как СуммаБезНДНАчОстТары,
	|0 как СуммаБезНДСНачОстТовара,
	|0 как СуммаБезНДСКонОстТары,
	|0 как СуммаБезНДСКонОстТовара,
	|	ОборотыТолькоИнвентаризация.Док КАК Док,
	|	ОборотыТолькоИнвентаризация.Период КАК Период,
	|	ОборотыТолькоИнвентаризация.Клиент КАК Клиент,
	|	ОборотыТолькоИнвентаризация.СуммаБезНДСПриходТары как СуммаБезНДСПРиходТары,
	|	ОборотыТолькоИнвентаризация.СуммаБезНДСПриходТовара как СуммаБезНДСПРиходТовара,
	|	ОборотыТолькоИнвентаризация.СуммаБезНДСРасходТары как СУммаБезНДСРасходТары,
	|	ОборотыТолькоИнвентаризация.СуммаБезНДСРасходТовара как СУммаБезНДСРасходТовара,
	|	ОборотыТолькоИнвентаризация.СекцияОтчета  как СекцияОтчета ,
	|	ОборотыТолькоИнвентаризация.Номер КАК Номер
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапросПоОборотамИнвентаризации.Док КАК Док,
	|		ВложенныйЗапросПоОборотамИнвентаризации.Период КАК Период,
	|		ВложенныйЗапросПоОборотамИнвентаризации.Клиент КАК Клиент,
	|		ВложенныйЗапросПоОборотамИнвентаризации.Номер КАК Номер,
	|		СУММА(ВложенныйЗапросПоОборотамИнвентаризации.СуммаБезНДСПриходТары) КАК СуммаБезНДСПриходТары,
	|		СУММА(ВложенныйЗапросПоОборотамИнвентаризации.СуммаБезНДСПриходТовара) КАК СуммаБезНДСПриходТовара,
	|		СУММА(ВложенныйЗапросПоОборотамИнвентаризации.СуммаБезНДСРасходТары) КАК СуммаБезНДСРасходТары,
	|		СУММА(ВложенныйЗапросПоОборотамИнвентаризации.СуммаБезНДСРасходТовара) КАК СуммаБезНДСРасходТовара,
	|		ВложенныйЗапросПоОборотамИнвентаризации.СекцияОтчета КАК СекцияОтчета
	|	ИЗ
	|		(ВЫБРАТЬ
	|			УчетПартийОборотыТара.Клиент КАК Клиент,
	|			УчетПартийОборотыТара.Период КАК Период,
	|			УчетПартийОборотыТара.Док КАК Док,
	|			ВЫБОР
	|				КОГДА УчетПартийОборотыТара.СуммаБезНДСПриходТары - УчетПартийОборотыТара.СуммаБезНДСРасходТары > 0
	|					ТОГДА УчетПартийОборотыТара.СуммабезНДСПриходТары - УчетПартийОборотыТара.СуммаБезНДСРасходТары
	|			КОНЕЦ КАК СуммаБезНДСПриходТары,
	|			УчетПартийОборотыТара.СуммаБезНДСПриходТовара КАК СуммаБезНДСПриходТовара,
	|			ВЫБОР
	|				КОГДА УчетПартийОборотыТара.СуммаБезНДСРасходТары - УчетПартийОборотыТара.СуммаБезНДСПриходТары > 0
	|					ТОГДА УчетПартийОборотыТара.СуммаБезНДСРасходТары - УчетПартийОборотыТара.СуммаБезНДСПриходТары
	|			КОНЕЦ КАК СуммаБезНДСРасходТары,
	|			УчетПартийОборотыТара.СуммаБезНДСРасходТовара КАК СуммаБезНДСРасходТовара,
	|			УчетПартийОборотыТара.Номер КАК Номер,
	|			ВЫБОР
	|				КОГДА УчетПартийОборотыТара.СуммаБезНДСПриходТары - УчетПартийОборотыТара.СуммаБезНДСРасходТары > 0
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ КАК СекцияОтчета
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Регистратор
	|				КОНЕЦ КАК Док,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Период
	|				КОНЕЦ КАК Период,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Инвентаризация
	|						ТОГДА ""Инвентаризация""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.ВводОстатков
	|						ТОГДА ""Ввод остатков""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Перемещение
	|						ТОГДА ""Перемещение""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.КоррекцияЗапасов и УчетПартийОбороты.Регистратор.Оприходование = Ложь
	|						ТОГДА ""Списание""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА ""Розничная продажа""
	|					ИНАЧЕ УчетПартийОбороты.Регистратор
	|				КОНЕЦ КАК Клиент,
	|				СУММА(ВЫБОР
	|						КОГДА УчетПартийОбороты.Номенклатура.ВидТовара = &Тара
	|							ТОГДА УчетПартийОбороты.СуммаНДСПриход 
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК СуммаБезНДСПриходТары,
	|				СУММА(0) КАК СуммаБезНДСПриходТовара,
	|				СУММА(ВЫБОР
	|						КОГДА УчетПартийОбороты.Номенклатура.ВидТовара = &Тара
	|							ТОГДА учетПартийОбороты.СуммаРасход 
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК СуммаБезНДСРасходТары,
	|				СУММА(0) КАК СуммаБезНДСРасходТовара,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Регистратор.Номер
	|				КОНЕЦ КАК Номер
	|			ИЗ
	|				РегистрНакопления.ОстаткиНоменклатуры.Обороты(
	|						&ДатаНач,
	|						&ДатаКон,
	|						Запись,"+ТекстФильтра+"
	|							И Номенклатура.ВидТовара = &Тара) КАК УчетПартийОбороты
	|			ГДЕ
	|				(ЕСТЬNULL(УчетПартийОбороты.СуммаПриход, 0) <> 0
	|						ИЛИ ЕСТЬNULL(УчетПартийОбороты.СуммаРасход, 0) <> 0)
	|				И УчетПартийОбороты.Регистратор ССЫЛКА Документ.Инвентаризация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Регистратор
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Период
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Инвентаризация
	|						ТОГДА ""Инвентаризация""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.ВводОстатков
	|						ТОГДА ""Ввод остатков""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Перемещение
	|						ТОГДА ""Перемещение""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.КоррекцияЗапасов и УчетПартийОбороты.Регистратор.Оприходование = Ложь
	|						ТОГДА ""Списание""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА ""Розничная продажа""
	|					ИНАЧЕ УчетПартийОбороты.Регистратор
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Регистратор.Номер
	|				КОНЕЦ) КАК УчетПартийОборотыТара
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			УчетПартийОборотыТовар.Клиент как Клиент,
	|			УчетПартийОборотыТовар.Период как Период,
	|			УчетПартийОборотыТовар.Док как Док,
	|			УчетПартийОборотыТовар.СуммаБезНДСПриходТары как СуммаБезНДСПРиходТары,
	|			ВЫБОР
	|				КОГДА УчетПартийОборотыТовар.СуммаБезНДСПриходТовара - УчетПартийОборотыТовар.СуммаБезНДСРасходТовара > 0
	|					ТОГДА УчетПартийОборотыТовар.СуммаБезНДСПриходТовара - УчетПартийОборотыТовар.СуммаБезНДСРасходТовара
	|			КОНЕЦ как СуммаБезНДСПриходТовара,
	|			УчетПартийОборотыТовар.суммаБезНДСРасходТары как СуммаБезНДСРасходТары,
	|			ВЫБОР
	|				КОГДА УчетПартийОборотыТовар.суммаБезНДСРасходТовара - УчетПартийОборотыТовар.суммаБезНДСПриходТовара > 0
	|					ТОГДА УчетПартийОборотыТовар.суммаБезНДСРасходТовара - УчетПартийОборотыТовар.суммаБезНДСПриходТовара
	|			КОНЕЦ как СуммаБезНДСРасходТовара,
	|			УчетПартийОборотыТовар.Номер как Номер,
	|			ВЫБОР
	|				КОГДА УчетПартийОборотыТовар.суммаБезНДСПриходТовара - УчетПартийОборотыТовар.суммаБезНДСРасходТовара > 0
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ  как СекцияОтчета
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Регистратор
	|				КОНЕЦ КАК Док,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Период
	|				КОНЕЦ КАК Период,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Инвентаризация
	|						ТОГДА ""Инвентаризация""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.ВводОстатков
	|						ТОГДА ""Ввод остатков""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Перемещение
	|						ТОГДА ""Перемещение""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.КоррекцияЗапасов и УчетПартийОбороты.Регистратор.Оприходование = Ложь
	|						ТОГДА ""Списание""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА ""Розничная продажа""
	|					ИНАЧЕ УчетПартийОбороты.Регистратор
	|				КОНЕЦ КАК Клиент,
	|				СУММА(0) КАК СуммаБезНДСПриходТары,
	|				СУММА(ВЫБОР
	|						КОГДА УчетПартийОбороты.Номенклатура.ВидТовара <> &Тара
	|							ТОГДА  УчетПартийОбороты.суммаПриход 
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК суммаБезНДСПриходТовара,
	|				СУММА(0) КАК СуммаБезНДСРасходТары,
	|				СУММА(ВЫБОР
	|						КОГДА УчетПартийОбороты.Номенклатура.ВидТовара <> &Тара
	|							ТОГДА  УчетПартийОбороты.суммаРасход 
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК СуммаБезНДСРасходТовара,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Регистратор.Номер
	|				КОНЕЦ КАК Номер
	|			ИЗ
	|				РегистрНакопления.ОстаткиНоменклатуры.Обороты(
	|						&ДатаНач,
	|						&ДатаКон,
	|						Запись,"+ТекстФильтра+"
	|							И Номенклатура.ВидТовара <> &Тара) КАК УчетПартийОбороты
	|			ГДЕ
	|				(ЕСТЬNULL(УчетПартийОбороты.суммаПриход, 0) <> 0
	|						ИЛИ ЕСТЬNULL(УчетПартийОбороты.суммаРасход, 0) <> 0)
	|				И УчетПартийОбороты.Регистратор ССЫЛКА Документ.Инвентаризация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Регистратор
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Период
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Инвентаризация
	|						ТОГДА ""Инвентаризация""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.ВводОстатков
	|						ТОГДА ""Ввод остатков""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Перемещение
	|						ТОГДА ""Перемещение""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.КоррекцияЗапасов и УчетПартийОбороты.Регистратор.Оприходование = Ложь
	|						ТОГДА ""Списание""
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА ""Розничная продажа""
	|					ИНАЧЕ УчетПартийОбороты.Регистратор
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА УчетПартийОбороты.Регистратор ССЫЛКА Документ.Zотчет
	|						ТОГДА NULL
	|					ИНАЧЕ УчетПартийОбороты.Регистратор.Номер
	|				КОНЕЦ) КАК УчетПартийОборотыТовар) КАК ВложенныйЗапросПоОборотамИнвентаризации
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапросПоОборотамИнвентаризации.Клиент,
	|		ВложенныйЗапросПоОборотамИнвентаризации.Период,
	|		ВложенныйЗапросПоОборотамИнвентаризации.Док,
	|		ВложенныйЗапросПоОборотамИнвентаризации.Номер,
	|		ВложенныйЗапросПоОборотамИнвентаризации.СекцияОтчета) КАК ОборотыТолькоИнвентаризация
	|
	|УПОРЯДОЧИТЬ ПО
	|	СекцияОтчета,
	|	Период
	|ИТОГИ
	|	СУММА(СуммаБезНДСНачОстТары),
	|	СУММА(СуммаБезНДСНачОстТовара),
	|	СУММА(СуммаБезНДСКонОстТары),
	|	СУММА(СуммаБезНДСКонОстТовара),
	|	СУММА(СуммаБезНДСПриходТары),
	|	СУММА(СуммаБезНДСПриходТовара),
	|	СУММА(СуммаБезНДСРасходТары),
	|	СУММА(СуммаБезНДСРасходТовара)
	|ПО
	|	СекцияОтчета"  ;
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	// Формирование текста Запроса-----
	
	// выясним, какую вертикальную секцию будем использовать
	СтрокНаСтранице = 50;
	СтрокШапки      = 19;
	СтрокМалойШапки = 1;
	СтрокПодвала    = 20;
	НомерСтраницы   = 1;
	
	
	// Выводим заголовок таблицы
	НомерСтраницыТаблицы = Макет.ПолучитьОбласть("НомерСтраницы");
	НомерСтраницыТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(НомерСтраницыТаблицы);
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	
	КоличествоСтрок = Результат.Выбрать(ОбходРезультатаЗапроса.Прямой).Количество();
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала = Цел((СтрокМалойШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	Ном = 0;
	
	// Выводим многострочную часть докмента
	ОбластьНачОстатковМакета = Макет.ПолучитьОбласть("ОстатокНачало");
	ОбластьКонОстатковМакета = Макет.ПолучитьОбласть("ОстатокКонец");
	
	ОбластьШапкиПриходаМакета = Макет.ПолучитьОбласть("ШапкаПриход");
	ОбластьШапкиРасходаМакета = Макет.ПолучитьОбласть("ШапкаРасход");
	
	ОбластьСтрокиМакета = Макет.ПолучитьОбласть("Строка");
	ОбластьСтрокиРозницыМакета = Макет.ПолучитьОбласть("СтрокаРозница");
	
	ОбластьИтогоПриходМакета = Макет.ПолучитьОбласть("ИтогоПриход");
	ОбластьИтогоРасходМакета = Макет.ПолучитьОбласть("ИтогоРасход");
	//МалыйЗаголовокТаблицы = Макет.ПолучитьОбласть("НомераКолонок");
	
	/////////////////////
	ВЫборкаСекцийОтчета = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВЫборкаСекцийОтчета.Следующий() Цикл
		Если ВЫборкаСекцийОтчета.СекцияОтчета = 0 Тогда // Это начальные Остатки
			//Ном = Ном + 1;
			//ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			//
			//Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			//	или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			//	НомерСтраницы = НомерСтраницы + 1;
			//	ТабДокумент.вывестиГоризонтальныйРазделительСтраниц();
			//	НомерСтраницыТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			//	ТабДокумент.Вывести(НомерСтраницыТаблицы);
			//	ТабДокумент.Вывести(МалыйЗаголовокТаблицы);
			//КонецЕсли;
			ОбластьНачОстатковМакета.Параметры.ОстатокТоваровНаНачало = ВЫборкаСекцийОтчета.СуммаБезНДСНачОстТовара;
			ОбластьНачОстатковМакета.Параметры.ОстатокТарыНаНачало = ВЫборкаСекцийОтчета.СуммаБезНДСНачОстТары;
			ТабДокумент.Вывести(ОбластьНачОстатковМакета);
		иначеЕсли ВЫборкаСекцийОтчета.СекцияОтчета = 3 Тогда // Это Конечные Остатки
			//Ном = Ном + 1;
			//ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			//
			//Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			//	или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			//	НомерСтраницы = НомерСтраницы + 1;
			//	ТабДокумент.вывестиГоризонтальныйРазделительСтраниц();
			//	НомерСтраницыТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			//	ТабДокумент.Вывести(НомерСтраницыТаблицы);
			//	ТабДокумент.Вывести(МалыйЗаголовокТаблицы);
			//КонецЕсли;
			ОбластьКонОстатковМакета.Параметры.ОстатокТоваровНаКонец = ВЫборкаСекцийОтчета.СуммаБезНДСКонОстТовара;
			ОбластьКонОстатковМакета.Параметры.ОстатокТарыНаКонец = ВЫборкаСекцийОтчета.СуммаБезНДСКонОстТары;
			ТабДокумент.Вывести(ОбластьКонОстатковМакета);
		иначеЕсли ВЫборкаСекцийОтчета.СекцияОтчета = 1 Тогда // Это Приход
			ТабДокумент.Вывести(ОбластьШапкиПриходаМакета);
			ОбластьИтогоПриходМакета.Параметры.ИтогоПриходПоТовару = ВЫборкаСекцийОтчета.СуммаБезНДСПриходТовара;
			ОбластьИтогоПриходМакета.Параметры.ИтогоПриходПоТаре = ВЫборкаСекцийОтчета.СуммаБезНДСПриходТары;			
			ВыборкаДокументов = ВЫборкаСекцийОтчета.Выбрать();
			Пока ВыборкаДокументов.Следующий() Цикл
				//	Ном = Ном + 1;
				//	ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
				//
				//	Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				//		или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
				//		НомерСтраницы = НомерСтраницы + 1;
				//		ТабДокумент.вывестиГоризонтальныйРазделительСтраниц();
				//		НомерСтраницыТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				//		ТабДокумент.Вывести(НомерСтраницыТаблицы);
				//		ТабДокумент.Вывести(МалыйЗаголовокТаблицы);
				//	КонецЕсли;
				Наименование = ВыборкаДокументов.Клиент;
				Если ТипЗнч(Наименование) = Тип("Строка") Тогда
					ПечНаименование = Наименование;
				Иначе
					Док = Наименование.Метаданные();
					ПечНаименование = Док.Синоним;
					Если Док.Реквизиты.Найти("Контрагент") <> Неопределено Тогда
						Контрагент = Наименование.Контрагент;
						Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") тогда
							Контрагент = ""+Контрагент+","+?(ЗначениеЗаполнено(Контрагент.Организация.ПолноеНаименование),Контрагент.Организация.ПолноеНаименование,Контрагент.Организация.Наименование);
						КонецЕсли;
						ПечНаименование = ПечНаименование + " " +Контрагент;
					КонецЕсли;
				КонецЕсли;
				ОбластьСтрокиМакета.Параметры.Клиент = ПечНаименование;
				ОбластьСтрокиМакета.Параметры.РасшифровкаДок = ВыборкаДокументов.Клиент;
				ОбластьСтрокиМакета.Параметры.ДатаДокумента = ВыборкаДокументов.Период;
				ОбластьСтрокиМакета.Параметры.НомерДокумента = ВыборкаДокументов.Номер;
				ОбластьСтрокиМакета.Параметры.СуммаПоТовару = ВыборкаДокументов.СуммаБезНДСПриходТовара;
				ОбластьСтрокиМакета.Параметры.СуммаПоТаре = ВыборкаДокументов.СуммаБезНДСПриходТары;
				ТабДокумент.Вывести(ОбластьСтрокиМакета);
			КонецЦикла; 				
			ТабДокумент.Вывести(ОбластьИтогоПриходМакета);
		иначеЕсли ВЫборкаСекцийОтчета.СекцияОтчета = 2 Тогда // Это Расход	
			ТабДокумент.Вывести(ОбластьШапкиРасходаМакета);
			ОбластьИтогоРасходМакета.Параметры.ИтогоРасходПоТовару = ВЫборкаСекцийОтчета.СуммаБезНДСРасходТовара;
			ОбластьИтогоРасходМакета.Параметры.ИтогоРасходПоТаре = ВЫборкаСекцийОтчета.СуммаБезНДСРасходТары;			
			ВыборкаДокументов = ВЫборкаСекцийОтчета.Выбрать();
			Пока ВыборкаДокументов.Следующий() Цикл
				//Ном = Ном + 1;
				//ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
				//Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				//	или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
				//	НомерСтраницы = НомерСтраницы + 1;
				//	ТабДокумент.вывестиГоризонтальныйРазделительСтраниц();
				//	НомерСтраницыТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				//	ТабДокумент.Вывести(НомерСтраницыТаблицы);
				//	ТабДокумент.Вывести(МалыйЗаголовокТаблицы);
				//КонецЕсли;
				Клиент = ВыборкаДокументов.Клиент;
				Если Клиент = "Розничная продажа" Тогда // Это строка розницы
					ОбластьСтрокиРозницыМакета.Параметры.РозницаТовар = ВыборкаДокументов.СуммаБезНДСРасходТовара;
					ОбластьСтрокиРозницыМакета.Параметры.РозницаТара = ВыборкаДокументов.СуммаБезНДСРасходТары;
					ТабДокумент.Вывести(ОбластьСтрокиРозницыМакета);
				Иначе
					Наименование = ВыборкаДокументов.Клиент;
					Если ТипЗнч(Наименование) = Тип("Строка") Тогда
						ПечНаименование = Наименование;
					Иначе
						Док = Наименование.Метаданные();
						ПечНаименование = Док.Синоним;
						Если Док.Реквизиты.Найти("Контрагент") <> Неопределено Тогда
							Контрагент = Наименование.Контрагент;
							Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") тогда
								Контрагент = ""+Контрагент+","+?(ЗначениеЗаполнено(Контрагент.Организация.ПолноеНаименование),Контрагент.Организация.ПолноеНаименование,Контрагент.Организация.Наименование);
							КонецЕсли;
							ПечНаименование = ПечНаименование + " " +Контрагент;
						КонецЕсли;
						
					КонецЕсли;
					ОбластьСтрокиМакета.Параметры.Клиент = ПечНаименование;
					ОбластьСтрокиМакета.Параметры.РасшифровкаДок = ВыборкаДокументов.Клиент;
					ОбластьСтрокиМакета.Параметры.ДатаДокумента = ВыборкаДокументов.Период;
					ОбластьСтрокиМакета.Параметры.НомерДокумента = ВыборкаДокументов.Номер;
					ОбластьСтрокиМакета.Параметры.СуммаПоТовару = ВыборкаДокументов.СуммаБезНДСРасходТовара;
					ОбластьСтрокиМакета.Параметры.СуммаПоТаре = ВыборкаДокументов.СуммаБезНДСРасходТары;
					ТабДокумент.Вывести(ОбластьСтрокиМакета);
				КонецЕсли; 
			КонецЦикла; 				
			ТабДокумент.Вывести(ОбластьИтогоРасходМакета);
		КонецЕсли; 
	КонецЦикла; 
	/////
	
	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1,1,ТабДокумент.ВысотаТаблицы,ТабДокумент.ШиринаТаблицы);
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТекНомера=РегистрыСведений.НомераОтчетов.СрезПоследних(ДатаОтчета,Новый Структура("Фирма,ИмяОтчета",Отчет.Фирма,"ТоварныйОтчет_ОП14"));
	
	Если ТекНомера.Количество()=0 ИЛИ ТекНомера[0].НомерОтчета <> НомерОтчета  Тогда
		Номера=РегистрыСведений.НомераОтчетов.СоздатьНаборЗаписей();
		НоваяЗапись=Номера.Добавить();
		НоваяЗапись.Фирма=Отчет.Фирма;
		НоваяЗапись.ИмяОтчета = "ТоварныйОтчет_ОП14";
		НоваяЗапись.Период=ДатаОтчета;
		НоваяЗапись.НомерОтчета=НомерОтчета;
		Номера.Записать();
	КонецЕсли;
	Возврат ТабДокумент;
КОнецФункции

