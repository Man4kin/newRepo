

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Отчет.ДатаОтчета) Тогда
		
		Отчет.ДатаОтчета = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура Сформировать(Команда)
	ТабДок = ПечатьОП6();
	ДокументРезультат = ТабДОк;
КонецПроцедуры

Функция ПечатьОП6() экспорт
	ТабДокумент = новый ТабличныйДокумент;
	// Проверка на пустые значения
	
	ТабДокумент.Очистить();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаборныйЛист_ОП6";
	
	Макет  = Отчеты.ЗаборныйЛист.ПолучитьМакет("ОП6");
	
	// Выводим общие реквизиты шапки
	НачалоГода = НачалоГода(Отчет.ДатаОтчета);
	//Отчет.ДатаОтчета = ТекущаяДата();
	Если Отчет.ДатаОтчета <> НачалоГода Тогда
		Номера=РегистрыСведений.НомераОтчетов.СрезПоследних(Отчет.ДатаОтчета-86400,Новый Структура("Фирма,ИмяОтчета",Отчет.Фирма,"ЗаборныйЛист_ОП6"));
		Если Номера.Количество()>0 Тогда
			Если Номера[0].Период >= НачалоГода Тогда
				ОтчетовЗаГод = Номера[0].НомерОтчета;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если  ОтчетовЗаГод = Неопределено Тогда
		НомерОтчета = 1;	
	Иначе	
		НомерОтчета = ОтчетовЗаГод+1;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерОтчета = НомерОтчета;
	ОбластьМакета.Параметры.ДатаОтчета  = Отчет.ДатаОтчета;
	
	//ОбластьМакета.Параметры.ВидДеятельностиПоОКДП = "";
	Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
		СведенияОФирме = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Отчет.Фирма, Отчет.ДатаОтчета,Отчет.Склад.Владелец);
		//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		//ОтветственныеЛица = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Отчет.Фирма, Отчет.ДатаОтчета, );
		ОтветственныеЛица = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Отчет.Фирма, Отчет.ДатаОтчета, ?(ЗначениеЗаполнено(Отчет.Склад),Отчет.Склад.Владелец, Неопределено));
		///Зернятко А.В.@ - конец блока
		ОбластьМакета.Параметры.ОрганизацияПоОКПО = СведенияОФирме.КодПоОКПО;
		ОбластьМакета.Параметры.Должность = ОтветственныеЛица.РуководительДолжность;
		ОбластьМакета.Параметры.Руководитель = ОтветственныеЛица.ФИОРуководителя;
		ОбластьМакета.Параметры.Бухгалтер = ОтветственныеЛица.ФИОГлавногоБухгалтера;
		ОбластьМакета.Параметры.ПредставлениеОрганизации  = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОФирме);
	Иначе
		ОбластьМакета.Параметры.ПредставлениеОрганизации = "<по всем организациям>";
	КонецЕсли;
	
	
	ОбластьМакета.Параметры.Склад  = ""+Отчет.Склад.Владелец + " / " +Отчет.Склад;
	ОбластьМакета.Параметры.СкладПолучатель  = ""+Отчет.СкладПолучатель.Владелец + " / " +Отчет.СкладПолучатель;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Формирование текста Запроса++++
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.ДатаОтчета)); 
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.ДатаОтчета)); 
	Запрос.УстановитьПараметр("Фирма", Отчет.Фирма);
	Запрос.УстановитьПараметр("Склад", Отчет.Склад);
	Запрос.УстановитьПараметр("СкладПолучатель", Отчет.СкладПолучатель.Владелец);
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.ПериодМинуты КАК ПериодМинуты,
	               |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	               |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	               |	СУММА(ВложенныйЗапрос.СуммаРозн) КАК СуммаРозн,
	               |	ВложенныйЗапрос.Возврат КАК Возврат,
	               |	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЧАС(РасходнаяНакладнаяСостав.Ссылка.Дата) * 60 КАК ПериодМинуты,
	               |		РасходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
	               |		РасходнаяНакладнаяСостав.Количество КАК Количество,
	               |		РасходнаяНакладнаяСостав.Сумма КАК СуммаРозн,
	               |		0 КАК Возврат,
	               |		ОстаткиНоменклатуры.Сумма КАК Сумма,
	               |		ТехнологическаяКарта.Ссылка КАК ТехКарта
	               |	ИЗ
	               |		Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	               |			ПО РасходнаяНакладнаяСостав.Ссылка = ОстаткиНоменклатуры.Регистратор
	               |				И РасходнаяНакладнаяСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	               |			ПО РасходнаяНакладнаяСостав.Номенклатура = ТехнологическаяКарта.Продукция
	               |	ГДЕ
	               |		РасходнаяНакладнаяСостав.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |		И РасходнаяНакладнаяСостав.Ссылка.Контрагент ССЫЛКА Справочник.СтруктурныеЕдиницы";
				   Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
						ТекстЗапроса = ТекстЗапроса + "					   
	               |		И РасходнаяНакладнаяСостав.Ссылка.Фирма = &Фирма";
				   КонецЕсли;
				   Если ЗначениеЗаполнено(Отчет.Склад) Тогда
						ТекстЗапроса = ТекстЗапроса + "					   
	               |		И РасходнаяНакладнаяСостав.Ссылка.Склад = &Склад";
				   КонецЕсли;
				   Если ЗначениеЗаполнено(Отчет.СкладПолучатель) Тогда
						ТекстЗапроса = ТекстЗапроса + "					   
	               |		И РасходнаяНакладнаяСостав.Ссылка.Контрагент = &СкладПолучатель";
				   КонецЕсли;
					ТекстЗапроса = ТекстЗапроса + "					   
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЧАС(ПриходнаяНакладнаяСостав.Ссылка.Дата) * 60,
	               |		ПриходнаяНакладнаяСостав.Номенклатура,
	               |		ПриходнаяНакладнаяСостав.Количество,
	               |		ПриходнаяНакладнаяСостав.Сумма,
	               |		1,
	               |		ОстаткиНоменклатуры.Сумма,
	               |		ТехнологическаяКарта.Ссылка
	               |	ИЗ
	               |		Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	               |			ПО ПриходнаяНакладнаяСостав.Ссылка = ОстаткиНоменклатуры.Регистратор
	               |				И ПриходнаяНакладнаяСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	               |			ПО ПриходнаяНакладнаяСостав.Номенклатура = ТехнологическаяКарта.Продукция
	               |	ГДЕ
	               |		ПриходнаяНакладнаяСостав.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |		И ПриходнаяНакладнаяСостав.Ссылка.Контрагент ССЫЛКА Справочник.СтруктурныеЕдиницы";
				   Если ЗначениеЗаполнено(Отчет.Фирма) Тогда
						ТекстЗапроса = ТекстЗапроса + "					   
	               |		И ПриходнаяНакладнаяСостав.Ссылка.Фирма = &Фирма";
				   КонецЕсли;
				   Если ЗначениеЗаполнено(Отчет.Склад) Тогда
						ТекстЗапроса = ТекстЗапроса + "					   
	               |		И ПриходнаяНакладнаяСостав.Ссылка.Склад = &Склад";
				   КонецЕсли;
				   Если ЗначениеЗаполнено(Отчет.СкладПолучатель) Тогда
						ТекстЗапроса = ТекстЗапроса + "					   
	               |		И ПриходнаяНакладнаяСостав.Ссылка.Контрагент = &СкладПолучатель";
				   КонецЕсли;
					ТекстЗапроса = ТекстЗапроса + "					   
				   |) КАК ВложенныйЗапрос
	               |ГДЕ
	               |	НЕ ВложенныйЗапрос.ТехКарта ЕСТЬ NULL 
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ВложенныйЗапрос.ПериодМинуты,
	               |	ВложенныйЗапрос.Возврат
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(СуммаРозн),
	               |	СУММА(Сумма)
	               |ПО
	               |	Номенклатура,
	               |	ПериодМинуты,
	               |	Возврат";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	// Формирование текста Запроса-----
	
	
	
	ОбластьШапки = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьОборот = Макет.ПолучитьОбласть("Оборот");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	
	
	
	
	ТаблицаПеремещений = Новый ТаблицаЗначений();
	МассивТипов=Новый Массив(1);
	МассивТипов[0]=Тип("СправочникСсылка.Номенклатура"); 
	ТаблицаПеремещений.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов(МассивТипов));
	МассивТипов[0]=Тип("Число"); 
	ТаблицаПеремещений.Колонки.Добавить("Время",Новый ОписаниеТипов(МассивТипов));
	ТаблицаПеремещений.Колонки.Добавить("ИндексСтраницы",Новый ОписаниеТипов(МассивТипов));
	ТаблицаПеремещений.Колонки.Добавить("ИндексКолонки",Новый ОписаниеТипов(МассивТипов));
	ТаблицаПеремещений.Колонки.Добавить("Количество",Новый ОписаниеТипов(МассивТипов));
	ТаблицаПеремещений.Колонки.Добавить("Цена",Новый ОписаниеТипов(МассивТипов));
	ТаблицаПеремещений.Колонки.Добавить("Сумма",Новый ОписаниеТипов(МассивТипов));
	ТаблицаПеремещений.Колонки.Добавить("ЦенаРозн",Новый ОписаниеТипов(МассивТипов));
	ТаблицаПеремещений.Колонки.Добавить("СуммаРозн",Новый ОписаниеТипов(МассивТипов));
	МассивТипов[0]=Тип("Булево"); 
	ТаблицаПеремещений.Колонки.Добавить("Возврат",Новый ОписаниеТипов(МассивТипов));
	ТаблицаВозвратов = ТаблицаПеремещений.Скопировать();
	
	ВыборкаТовары = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");
	Пока ВыборкаТовары.Следующий() Цикл
		СчВремени = 0;
		ИндексСтраницы = 1;
		
		ВыборкаВремя = ВыборкаТовары.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ПериодМинуты","Все");
		Пока ВыборкаВремя.Следующий() Цикл
			Если СчВремени = 6 Тогда
				ИндексСтраницы = ИндексСтраницы + 1;
				СчВремени = 0;
			КонецЕсли;
			СчВремени = СчВремени + 1;
			
			СтрокаПеремещений = ТаблицаПеремещений.Добавить();
			СтрокаПеремещений.Номенклатура = ВыборкаВремя.Номенклатура;
			СтрокаПеремещений.Время = ВыборкаВремя.ПериодМинуты;
			СтрокаПеремещений.Возврат = (ВыборкаВремя.Возврат = 1);
			Количество = ?(ВыборкаВремя.Количество = NULL, 0, ВыборкаВремя.Количество);
			СтрокаПеремещений.Количество = Количество;
			СтрокаПеремещений.Сумма = ВыборкаВремя.Сумма;
			СтрокаПеремещений.СуммаРозн = ВыборкаВремя.СуммаРозн;
			СтрокаПеремещений.ИндексСтраницы = ИндексСтраницы;
			СтрокаПеремещений.ИндексКолонки = СчВремени;
			
			ВыборкаВозврат = ВыборкаВремя.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Возврат");
			Пока ВыборкаВозврат.Следующий() Цикл
				Если ВыборкаВозврат.Возврат = 1 Тогда
					СтрокаВозврат = ТаблицаВозвратов.Добавить();
					СтрокаВозврат.Номенклатура = ВыборкаВозврат.Номенклатура;
					СтрокаВозврат.Время = ВыборкаВремя.ПериодМинуты;
					СтрокаВозврат.Возврат = Истина;
					Количество = ?(ВыборкаВозврат.Количество = NULL, 0, ВыборкаВозврат.Количество);
					СтрокаВозврат.Количество = -Количество; // меняем знак, т.к. в запросе оно отрицательное
					СтрокаВозврат.Сумма = -ВыборкаВозврат.Сумма;
					СтрокаВозврат.СуммаРозн = -ВыборкаВозврат.СуммаРозн;
					СтрокаВозврат.ИндексСтраницы = ИндексСтраницы;
					СтрокаВозврат.ИндексКолонки = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Для Сч = СчВремени+1 По 6 Цикл
			СтрокаПеремещений = ТаблицаПеремещений.Добавить();
			СтрокаПеремещений.Номенклатура = ВыборкаТовары.Номенклатура;
			//1440 = 60*24, такого времени быть не может, поэтому при сортировки, будет в конце
			СтрокаПеремещений.Время = 60*24;
			СтрокаПеремещений.Возврат = Ложь;
			СтрокаПеремещений.Количество = 0;
			СтрокаПеремещений.Сумма = 0;
			СтрокаПеремещений.СуммаРозн = 0;
			СтрокаПеремещений.ИндексСтраницы = ИндексСтраницы;
			СтрокаПеремещений.ИндексКолонки = Сч;
		КонецЦикла;
	КонецЦикла;
	
	
	ТаблицаПеремещений.Сортировать("ИндексСтраницы,Номенклатура,ИндексКолонки,Время");
	ТаблицаВремени = ТаблицаПеремещений.Скопировать();
	ТаблицаВремени.Свернуть("ИндексСтраницы,ИндексКолонки,Время");
	ТаблицаВремени.Сортировать("ИндексСтраницы,ИндексКолонки,Время");
	ТаблицаСтраниц = ТаблицаВремени.Скопировать();
	ТаблицаСтраниц.Свернуть("ИндексСтраницы");
	ТаблицаСтраниц.Сортировать("ИндексСтраницы");
	ТаблицаНоменклатуры = ТаблицаПеремещений.Скопировать();
	ТаблицаНоменклатуры.Свернуть("ИндексСтраницы,Номенклатура");
	ТаблицаНоменклатуры.Сортировать("ИндексСтраницы,Номенклатура");
	
	ТаблицаВозвратов.Свернуть("ИндексСтраницы,Номенклатура","Количество,Сумма,СуммаРозн");
	
	МассивОбщихИтогов = Новый Массив(6);
	МассивИтогов = Новый Массив(6);
	ОбнулитьМассив(МассивОбщихИтогов);
	ИтогоСумма = 0;
	ИтогоСуммаРозн = 0;
	ИтогоВозвращено = 0;
	ИтогоОтпущено = 0;
	Для Каждого Страница Из ТаблицаСтраниц Цикл
		СтрокиВремя = ТаблицаВремени.НайтиСтроки(Новый Структура("ИндексСтраницы",Страница.ИндексСтраницы));
		Если Страница.ИндексСтраницы <> 1 Тогда
			ТабДокумент.Вывести(ОбластьОборот);
		КонецЕсли;
		Для Сч = 0 По СтрокиВремя.Количество() - 1 Цикл
			чВремя = СтрокиВремя[Сч].Время;
			Если чВремя = 1440 Тогда
				Время = "-";
			Иначе
				Время = Формат(Цел(чВремя/60),"ЧЦ=2; ЧН=; ЧВН=") + ":" + Формат(чВремя - Цел(чВремя/60)*60,"ЧЦ=2; ЧН=; ЧВН=");
			КонецЕсли;
			ОбластьШапки.Параметры["Время"+(Сч+1)] = Время;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьШапки);
		СтрокиСтраница = ТаблицаПеремещений.НайтиСтроки(Новый Структура("ИндексСтраницы",Страница.ИндексСтраницы));
		СтрокиНоменклатура = ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("ИндексСтраницы",Страница.ИндексСтраницы));
		ОбнулитьМассив(МассивИтогов);
		ИтогоСуммаПоСтранице = 0;
		ИтогоСуммаРознПоСтранице = 0;
		ИтогоВозвращеноПоСтранице = 0;
		ИтогоОтпущеноПоСтранице = 0;
		Для НомерНоменклатуры = 0 По СтрокиНоменклатура.Количество()-1 Цикл
			Номенклатура = СтрокиСтраница[НомерНоменклатуры*6].Номенклатура;
			ОбластьСтрока.Параметры.Номенклатура = Номенклатура;
			ОбластьСтрока.Параметры.Код = СокрЛП(Номенклатура.Код);
			ОбластьСтрока.Параметры.Единица = Номенклатура.БазоваяЕдиницаИзмерения;
			ОбластьСтрока.Параметры.КодЕдиницы = СокрЛП(Номенклатура.БазоваяЕдиницаИзмерения.Код);
			ИтогоСуммаПоСтроке = 0;
			ИтогоСуммаРознПоСтроке = 0;
			ИтогоОтпущеноПоСтроке = 0;
			Для Сч = 0 По СтрокиВремя.Количество() - 1 Цикл
				Отпущено = СтрокиСтраница[НомерНоменклатуры*6+Сч].Количество;
				ОбластьСтрока.Параметры["Отпущено"+(Сч+1)] = Отпущено;
				МассивИтогов[Сч] = МассивИтогов[Сч] + Отпущено;
				МассивОбщихИтогов[Сч] = МассивОбщихИтогов[Сч] + Отпущено;
				ИтогоОтпущеноПоСтроке = ИтогоОтпущеноПоСтроке + Отпущено;
				ИтогоСуммаПоСтроке = ИтогоСуммаПоСтроке + СтрокиСтраница[НомерНоменклатуры*6+Сч].Сумма;
				ИтогоСуммаРознПоСтроке = ИтогоСуммаРознПоСтроке + СтрокиСтраница[НомерНоменклатуры*6+Сч].СуммаРозн;
			КонецЦикла;
			Если ИтогоОтпущеноПоСтроке = 0 Тогда
				Продолжить;
			КонецЕсли;
			СтрокиВозвратов = ТаблицаВозвратов.НайтиСтроки(Новый Структура("ИндексСтраницы,Номенклатура",Страница.ИндексСтраницы,Номенклатура));
			Если СтрокиВозвратов.Количество() = 0 Тогда
				Возвращено = 0;
			Иначе
				Возвращено = СтрокиВозвратов[0].Количество;
				ИтогоВозвращеноПоСтранице = ИтогоВозвращеноПоСтранице + Возвращено;
				ИтогоВозвращено = ИтогоВозвращено + Возвращено;
			КонецЕсли;
			ОбластьСтрока.Параметры.Возвращено = Возвращено;
			ИтогоСуммаПоСтранице = ИтогоСуммаПоСтранице + ИтогоСуммаПоСтроке;
			ИтогоСуммаРознПоСтранице = ИтогоСуммаРознПоСтранице + ИтогоСуммаРознПоСтроке;
			ИтогоСумма = ИтогоСумма + ИтогоСуммаПоСтроке;
			ИтогоСуммаРозн = ИтогоСуммаРозн + ИтогоСуммаРознПоСтроке;
			ИтогоОтпущеноПоСтранице = ИтогоОтпущеноПоСтранице + ИтогоОтпущеноПоСтроке;
			ИтогоОтпущено = ИтогоОтпущено + ИтогоОтпущеноПоСтроке;
			ОбластьСтрока.Параметры.ИтогоОтпущено = ИтогоОтпущеноПоСтроке;
			ОбластьСтрока.Параметры.СуммаУчетная = ИтогоСуммаПоСтроке;
			ОбластьСтрока.Параметры.СуммаПродажи = ИтогоСуммаРознПоСтроке;
			ОбластьСтрока.Параметры.ЦенаУчетная = ?(ИтогоСуммаПоСтроке = 0, 0, ИтогоСуммаПоСтроке/ИтогоОтпущеноПоСтроке);
			ОбластьСтрока.Параметры.ЦенаПродажи = ?(ИтогоСуммаРознПоСтроке = 0, 0, ИтогоСуммаРознПоСтроке/ИтогоОтпущеноПоСтроке);
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		Для Сч = 0 По СтрокиВремя.Количество() - 1 Цикл
			Отпущено = МассивИтогов[Сч];
			ОбластьИтог.Параметры["Отпущено"+(Сч+1)] = Отпущено;
		КонецЦикла;
		ОбластьИтог.Параметры.Возвращено = ИтогоВозвращеноПоСтранице;
		ОбластьИтог.Параметры.СуммаУчетная = ИтогоСуммаПоСтранице;
		ОбластьИтог.Параметры.СуммаПродажи = ИтогоСуммаРознПоСтранице;
		ОбластьИтог.Параметры.ИтогоОтпущено = ИтогоОтпущеноПоСтранице;
		ТабДокумент.Вывести(ОбластьИтог);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
	Для Сч = 0 По 5 Цикл
		Отпущено = МассивОбщихИтогов[Сч];
		ОбластьПодвал.Параметры["Отпущено"+(Сч+1)] = Отпущено;
	КонецЦикла;
	ОбластьПодвал.Параметры.Возвращено = ИтогоВозвращено;
	ОбластьПодвал.Параметры.СуммаУчетная = ИтогоСумма;
	ОбластьПодвал.Параметры.СуммаПродажи = ИтогоСуммаРозн;
	ОбластьПодвал.Параметры.СуммаУчетнаяПрописью = ЧислоПрописью(ИтогоСумма,,Справочники.Валюты.НайтиПоКоду("643").ПараметрыПрописиНаРусском);
	ОбластьПодвал.Параметры.ИтогоОтпущено = ИтогоОтпущено;
	ОбластьПодвал.Параметры.ВсегоОтпущеноПоДок = ЧислоПрописью(ИтогоОтпущено);
	ТабДокумент.Вывести(ОбластьПодвал);
	
	ТабДокумент.ОбластьПечати = ТабДокумент.Область(1,1,ТабДокумент.ВысотаТаблицы,ТабДокумент.ШиринаТаблицы);
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТекНомера=РегистрыСведений.НомераОтчетов.СрезПоследних(Отчет.ДатаОтчета,Новый Структура("Фирма,ИмяОтчета",Отчет.Фирма,"ЗаборныйЛист_ОП6"));
	
	Если ТекНомера.Количество()=0 ИЛИ ТекНомера[0].НомерОтчета <> НомерОтчета  Тогда
		Номера=РегистрыСведений.НомераОтчетов.СоздатьНаборЗаписей();
		НоваяЗапись=Номера.Добавить();
		НоваяЗапись.Фирма=Отчет.Фирма;
		НоваяЗапись.ИмяОтчета = "ЗаборныйЛист_ОП6";
		НоваяЗапись.Период=Отчет.ДатаОтчета;
		НоваяЗапись.НомерОтчета=НомерОтчета;
		Номера.Записать();
	КонецЕсли;
	Возврат ТабДокумент;
КОнецФункции

Процедура ОбнулитьМассив(пМассив)
	Для Сч = 0 По пМассив.Количество()-1 Цикл
		пМассив[Сч] = 0;
	КонецЦикла;
КонецПроцедуры


