
// у СтруктураПараметров должны быть обязательные ключи
// 1. ТекстЗапроса - тип Строка
// 2. Параметры  - тип структура
// 3. АдресВременногоХранилища - тип Строка
&НаСервере
Функция ОбработатьПараметры()
	Если ТипЗнч(Параметры.СтруктураПараметров) <> Тип("Структура") Тогда
		Возврат "Неверный входящий тип параметров";
	КонецЕсли;
	ВходящаяСтруктура = Параметры.СтруктураПараметров;
	
	Если ВходящаяСтруктура.Свойство("ТекстЗапроса")= Неопределено Тогда 
		Возврат "Нет обязательного ключа 'ТекстЗапроса' у входящего параметра";
	КонецЕсли;
	
	Если ВходящаяСтруктура.Свойство("Параметры")= Неопределено Тогда 
		Возврат "Нет обязательного ключа 'Параметры' у входящего параметра";
	КонецЕсли;
	
	АдресХранилища = ВходящаяСтруктура.АдресВременногоХранилища;
	ПодборНоменклатуры.ПроизвольныйЗапрос = Истина;
	ПодборНоменклатуры.ТекстЗапроса = ВходящаяСтруктура.ТекстЗапроса;
	ПодборНоменклатуры.ОсновнаяТаблица = "Справочник.Номенклатура";
	
	Для Каждого ПараметраЗапроса из ВходящаяСтруктура.Параметры Цикл
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра(ПараметраЗапроса.Ключ, ПараметраЗапроса.Значение);	
	КонецЦикла;
		
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработатьПараметры();
КонецПроцедуры

&НаСервере 
Процедура ПоместитьВоВременноеХранилищеНаСервере();
	ПоместитьВоВременноеХранилище(ВыбраннаяНоменклатура.Выгрузить(),АдресХранилища);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	ПоместитьВоВременноеХранилищеНаСервере();
	ЭтаФорма.Закрыть("ОК");
КонецПроцедуры

&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

//++Минин
&НаКлиенте
Процедура ПоискПоШтрихКоду(Команда)Экспорт 
	ШтрихКод = "";
	Если ВвестиСтроку(ШтрихКод,"Введите штрихкод",20,Ложь) Тогда //ОткрытьФормуМодально("ОбщаяФорма.ФормаПоискПоШтрихКоду");
		ПоискНоменклатуры(ШтрихКод);
		//++Минин 2015-07-10 0000132392 перенес позиционирование строки на клиент. На сервере некорректно выполнялось.
		//Добавил реквизит НоменклатураПоШК для хранения найденной номенклатуры
		Если НЕ НоменклатураПоШК.Пустая() Тогда
			Элементы.ПодборНоменклатуры.ТекущаяСтрока = НоменклатураПоШК;
		КонецЕсли;
		//++Минин 2015-07-10 0000132392 перенес позиционирование строки на клиент. На сервере некорректно выполнялось.
		//Добавил реквизит НоменклатураПоШК для хранения найденной номенклатуры
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоискНоменклатуры(ШтрихКод) 
	//++Минин 2015-07-10 0000132392 перенес позиционирование строки на клиент. На сервере некорректно выполнялось.
	//Добавил реквизит НоменклатураПоШК для хранения найденной номенклатуры
	НоменклатураПоШК = Справочники.Номенклатура.НайтиПоКоду(ШтрихКод);
	Если НЕ НоменклатураПоШК.Пустая() и НЕ НоменклатураПоШК.Транзакционный Тогда
		//Элементы.ПодборНоменклатуры.ТекущаяСтрока = Номенклатура.Родитель;
		НоменклатураПоШК = НоменклатураПоШК.Родитель;
	иначе
		НоменклатураПоШК = Справочники.Номенклатура.ПустаяСсылка();		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Товар с кодом "+Штрихкод+" не найден");
	КонецЕсли;
КонецПроцедуры
//--Минин

&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	РеквизитыОбъекта = ОбщегоНазначенияСервер.ПолучитьЗначенияРеквизитовОбъекта(ВыбраннаяСтрока,Новый Структура("Группа"));
	Если РеквизитыОбъекта.Группа <> 0 Тогда Возврат; КонецЕсли; 
	ТекДанные = Элементы.ПодборНоменклатуры.ТекущиеДанные;
	Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(Истина);
	Если Количество = 0 Тогда Возврат; КонецЕсли;
	СтруктураПоиска = Новый Структура("Номенклатура",ВыбраннаяСтрока);
	МассивСтрок = ВыбраннаяНоменклатура.НайтиСтроки(СтруктураПоиска);
	Если МассивСтрок.Количество()>0 Тогда
		МассивСтрок[0].Количество = МассивСтрок[0].Количество + Количество;
	Иначе
		НоваяСтрока = ВыбраннаяНоменклатура.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекДанные);
		НоваяСтрока.Количество = Количество;
	КонецЕсли;
	ЭтаФорма.ТекущийЭлемент = Элементы.ПодборНоменклатуры;
КонецПроцедуры

