
//#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Параметры.Свойство("ДрайверОборудования", ДрайверОборудования);
	
	Заголовок = НСтр("ru='Оборудование:'") + Символы.НПП  + Строка(Идентификатор);
	
	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;
	
	СпМодель = Элементы.Модель.СписокВыбора;
	СпМодель.Добавить(0,  "CAS_LP_1_5");
	СпМодель.Добавить(1,  "CAS_LP_1_6");
	СпМодель.Добавить(2,  "CAS_CL5000J_Static_memory");
	СпМодель.Добавить(3,  "CAS_CL5000J_Dynamic_memory");
	СпМодель.Добавить(4,  "CAS_CL5000");
	СпМодель.Добавить(5,  "CAS_CWM_4000");

	СпИнтерфейс = Элементы.Интерфейс.СписокВыбора;
	СпИнтерфейс.Добавить(0,  "RS-232");
	СпИнтерфейс.Добавить(1,  "Ethernet");
	                                             
	СпПорт = Элементы.Порт.СписокВыбора;
	Для Номер = 1 По 64 Цикл
		СпПорт.Добавить(Номер, "COM" + Формат(Номер, "ЧЦ=2; ЧДЦ=0; ЧН=0; ЧГ=0"));
	КонецЦикла;
	
	СпСкорость = Элементы.Скорость.СписокВыбора;
	СпСкорость.Добавить(1200	, "1200");
	СпСкорость.Добавить(2400	, "2400");
	СпСкорость.Добавить(4800	, "4800");
	СпСкорость.Добавить(9600	, "9600");
	СпСкорость.Добавить(14400	, "14400");
	СпСкорость.Добавить(19200	, "19200");  
	
	времМодель		 = Неопределено;
	времНаименование = Неопределено;
	времИнтерфейс	 = Неопределено;
	времПорт         = Неопределено;
	времСкорость     = Неопределено;
	времIPАдрес      = Неопределено;
	времIPПорт       = Неопределено;
	
	Параметры.Свойство("Модель"    	, времМодель);
	Параметры.Свойство("Интерфейс"    , времИнтерфейс);
	Параметры.Свойство("Порт"         , времПорт);
	Параметры.Свойство("Скорость"     , времСкорость);
	Параметры.Свойство("IPАдрес"      , времIPАдрес);
	Параметры.Свойство("IPПорт"       , времIPПорт);
	Параметры.Свойство("Наименование" , времНаименование);
	
	Модель	     = ?(времИнтерфейс    = Неопределено, 0				, времМодель);
	Интерфейс    = ?(времИнтерфейс    = Неопределено, 0				, времИнтерфейс);
	Порт         = ?(времПорт         = Неопределено, 1				, времПорт);
	Скорость     = ?(времСкорость     = Неопределено, 9600			, времСкорость);
	IPАдрес		 = ?(времIPАдрес	  = Неопределено, "192.168.1.2"	, времIPАдрес);
	IPПорт		 = ?(времIPПорт       = Неопределено, 20304			, времIPПорт);
	Наименование = ?(времНаименование = Неопределено, "CAS CL5000J"	, времНаименование);

	Элементы.ТестУстройства.Видимость    = истина;
	Элементы.УстановитьДрайвер.Видимость     = истина;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

//#КонецОбласти

//#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИнтерфейсПриИзменении(Элемент)
	
	ПроверкаДоступности();

КонецПроцедуры

//#КонецОбласти

//#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	Параметры.ПараметрыНастройки.Добавить(Модель           , "Модель");
	Параметры.ПараметрыНастройки.Добавить(Интерфейс       , "Интерфейс");
	Параметры.ПараметрыНастройки.Добавить(Порт         , "Порт");
	Параметры.ПараметрыНастройки.Добавить(Скорость       , "Скорость");
	Параметры.ПараметрыНастройки.Добавить(IPАдрес     , "IPАдрес");
	Параметры.ПараметрыНастройки.Добавить(IPПорт       , "IPПорт");
	Параметры.ПараметрыНастройки.Добавить(Наименование, "Наименование");
	
	
	
	//НовыеЗначениеПараметров = Новый Структура;
	//НовыеЗначениеПараметров.Вставить("Модель"       , Модель);
	//НовыеЗначениеПараметров.Вставить("Интерфейс"    , Интерфейс);
	//НовыеЗначениеПараметров.Вставить("Порт"         , Порт);
	//НовыеЗначениеПараметров.Вставить("Скорость"     , Скорость);
	//НовыеЗначениеПараметров.Вставить("IPАдрес"      , IPАдрес);
	//НовыеЗначениеПараметров.Вставить("IPПорт"       , IPПорт);
	//НовыеЗначениеПараметров.Вставить("Наименование" , Наименование);
	
	//Результат = Новый Структура;
	//НовыеЗначениеПараметров.Вставить("Идентификатор", Идентификатор);
	//Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
	
ОчиститьСообщения();
	Закрыть(КодВозвратаДиалога.ОК);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайверИзАрхиваПриЗавершении(Результат) Экспорт 
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Установка драйвера завершена.'")); 
	ОбновитьИнформациюОДрайвере();
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьДрайверИзДистрибутиваПриЗавершении(Результат, Параметры) Экспорт 
	
	Если Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Установка драйвера завершена.'")); 
		ОбновитьИнформациюОДрайвере();
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='При установке драйвера из дистрибутива произошла ошибка.'")); 
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	//ОчиститьСообщения();
	//ОповещенияДрайверИзДистрибутиваПриЗавершении = Новый ОписаниеОповещения("УстановитьДрайверИзДистрибутиваПриЗавершении", ЭтотОбъект);
	//ОповещенияДрайверИзАрхиваПриЗавершении = Новый ОписаниеОповещения("УстановитьДрайверИзАрхиваПриЗавершении", ЭтотОбъект);
	//МенеджерОборудованияКлиент.УстановитьДрайвер(ДрайверОборудования, ОповещенияДрайверИзДистрибутиваПриЗавершении, ОповещенияДрайверИзАрхиваПриЗавершении);
	МенеджерОборудованияКлиент.УстановитьДрайвер(Идентификатор);

	ОбновитьИнформациюОДрайвере();
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

	ОчиститьСообщения();

	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено; 

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Модель"   	, Модель);
	времПараметрыУстройства.Вставить("Интерфейс"   	, Интерфейс);
    времПараметрыУстройства.Вставить("Порт"      	, Порт);
	времПараметрыУстройства.Вставить("Скорость"   	, Скорость);
	времПараметрыУстройства.Вставить("IPАдрес"		, IPАдрес);
	времПараметрыУстройства.Вставить("IPПорт"      	, IPПорт);
	времПараметрыУстройства.Вставить("Наименование"	, Наименование);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
		                           И ВыходныеПараметры.Количество() >= 2,
		                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
		                           "");


		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("Модель"   	, Модель);
	времПараметрыУстройства.Вставить("Интерфейс"   	, Интерфейс);
    времПараметрыУстройства.Вставить("Порт"      	, Порт);
	времПараметрыУстройства.Вставить("Скорость"   	, Скорость);
	времПараметрыУстройства.Вставить("IPАдрес"		, IPАдрес);
	времПараметрыУстройства.Вставить("IPПорт"      	, IPПорт);
	времПараметрыУстройства.Вставить("Наименование"	, Наименование);
		

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

	Элементы.УстановитьДрайвер.Доступность = истина;// Не (Драйвер = НСтр("ru='Установлен'"));
    ПроверкаДоступности();

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаДоступности()

	Элементы.Порт.Доступность          = (Интерфейс = 0);
	Элементы.Скорость.Доступность      = (Интерфейс = 0);
	Элементы.IPАдрес.Доступность       = Не (Интерфейс = 0);
	Элементы.IPПорт.Доступность        = Не (Интерфейс = 0);

КонецПроцедуры

//#КонецОбласти