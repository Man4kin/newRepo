&НаСервере
Функция ПоместитьВовременноеХранилищеНаСервере()
	тзШаблон = Новый ТаблицаЗначений;
	тзШаблон.Колонки.Добавить("Номенклатура");
	тзШаблон.Колонки.Добавить("Количество");
	Возврат ПоместитьВоВременноеХранилище(тзШаблон,ЭтаФорма.УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ОбработатьРезультатТСДНаСервере(АдресХранилища)
	тзРезультат = ПолучитьИзВременногоХранилища(АдресХранилища);		
	Если тзРезультат.Количество()=0 Тогда Возврат; КонецЕсли;
	ТекстТерминала = "Терминал №"+Формат(счетчик,"ЧЦ=3; ЧДЦ=0; ЧГ=0");
	НоваяСтрока = тзТерминалов.Добавить();
	НоваяСтрока.Терминал = ТекстТерминала;
	Для Каждого ТекСтрокаТЗ из тзРезультат Цикл
		НоваяСтрока = тзДанныеТерминалов.Добавить();
		НоваяСтрока.Номенклатура = ТекСтрокаТЗ.Номенклатура;
		НоваяСтрока.Количество = ТекСтрокаТЗ.Количество;
		НоваяСтрока.Терминал = ТекстТерминала;
	КонецЦикла;
	счетчик = счетчик + 1;
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	АдресХранилища = ПоместитьВоВременноеХранилищеНаСервере();
	//	BIT_Izhevsk ALProzorov 17/07/2015 -->>	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбщегоНазначенияСервер.ПолучитьТекущуюСтруктурнуюЕдиницу(),"ТипСтруктурнойЕдиницы") = ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Склад") Тогда
		ФормаОбработки = ПолучитьФорму("Обработка.Izh_ТСД.Форма.ФормаОбработки",Новый Структура("АдресХранилища,ВидДействия,ВнешнийВызов,СтруктураПараметров",АдресХранилища,"Инвентаризация",Истина,Новый Структура("ТипДействия","ВыгрузкаИзТСД")),ЭтаФорма.УникальныйИдентификатор);
	Иначе	
		ФормаОбработки = ПолучитьФорму("Обработка.Izh_ТСД_Магазин.Форма.ФормаОбработки",Новый Структура("АдресХранилища,ВидДействия,ВнешнийВызов,СтруктураПараметров",АдресХранилища,"Инвентаризация",Истина,Новый Структура("ТипДействия","ВыгрузкаИзТСД")),ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;
	//	BIT_Izhevsk ALProzorov 17/07/2015 <<--
	ФормаОбработки.ОткрытьМодально();
	ОбработатьРезультатТСДНаСервере(АдресХранилища);
КонецПроцедуры

&НаКлиенте
Процедура тзТерминаловПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.тзТерминалов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	Элементы.тзДанныеТерминалов.ОтборСтрок= Новый ФиксированнаяСтруктура("Терминал",ТекДанные.Терминал);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	счетчик = 1;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВХранилищеНаСервере()
	тзРезультат = тзДанныеТерминалов.Выгрузить(,"Номенклатура,Количество");
	тзРезультат.Свернуть("Номенклатура","Количество");
	ПоместитьВоВременноеХранилище(тзРезультат,Параметры.АдресХранилища);
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	ЗаписатьВХранилищеНаСервере();
	ЭтаФорма.Закрыть(Истина);
КонецПроцедуры

//serg++
&НаКлиенте
Процедура Печать(Команда)
	Терминал = Элементы.тзТерминалов.ТекущиеДанные; 
	Если Терминал = Неопределено Тогда
		Терминал = тзТерминалов[0];		
	КонецЕсли;	
	Таблица  =  ПечатьТСД(Терминал.Терминал);
	
	Таблица.показать();
КонецПроцедуры


//создаем печатную форму выбраного тсд
&НаСервере 
Функция ПечатьТСД(Терминал)
	
	ТабДок = Новый ТабличныйДокумент;
	//шапка
	Секция = ТабДок.ПолучитьОбласть("R1");
	Секция.Область("R1C1").Текст = "Номенклатура";
	Секция.Область("R1C3").Текст = "Код";
	Секция.Область("R1C2").Текст = "Количество";
	//Секция.Область("R1C3").Текст = "Код";
	ТабДок.Вывести(Секция,1,"Группа",Истина);
	
	//СвернутьДанныетерминалов = Новый ТаблицаЗначений;	
	//ТекДанные = Элементы.тзТерминалов.ТекущиеДанные;
	//СвернутьДанныетерминалов.Скопировать(тзДанныеТерминалов);
	Строки = тзДанныеТерминалов.НайтиСтроки(Новый Структура("Терминал",Терминал));
	
	//строка
	Если Строки.Количество()>0 Тогда;
		//	Для  каждого СтрокаПоиска из строки Цикл
		//КонецЕсли;	
		Для  каждого СтрокаТСД из строки Цикл
			
			СекцияСтрока = ТабДок.ПолучитьОбласть("R2"); 
			//СекцияСтрока.Область("R2C1").Шрифт.Размер = 14;
			//СекцияСтрока.Область("R2C1").Шрифт.Жирный = Истина;
			//СекцияСтрока.Область("R2C1").АвтоВысотаСтроки = Истина;
			//СекцияСтрока.Область("R2C1").ШиринаКолонки    = 50;
			СекцияСтрока.Область("R2C1").Текст = Строка(СтрокаТСД.Номенклатура);
			//СекцияСтрока.Область("R2C2").Шрифт.Размер = 14;
			//СекцияСтрока.Область("R2C2").Шрифт.Жирный = Истина;
			//СекцияСтрока.Область("R2C2").АвтоВысотаСтроки = Истина;
			СекцияСтрока.Область("R2C2").Текст = Строка(СтрокаТСД.Номенклатура.код);
			//СекцияСтрока.Область("R2C3").Шрифт.Размер = 14;
			//СекцияСтрока.Область("R2C3").Шрифт.Жирный = Истина;
			//СекцияСтрока.Область("R2C3").АвтоВысотаСтроки = Истина;
			СекцияСтрока.Область("R2C3").Текст = Строка(СтрокаТСД.Количество);
			ТабДок.Вывести(СекцияСтрока);
			Табдок.ОтображатьСетку = Ложь;
		КонецЦикла;	
	КонецЕсли;	
	
	//ТабДок.Вывести(СекцияСтроки,1,"Группа",Истина);
	Возврат (Табдок);	
КонецФункции
//serg--


&НаСервере
Процедура ОбработатьТекстНаСервере(ВходящийТекст,ИмяФайла)
	ЭтоСклад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбщегоНазначенияСервер.ПолучитьТекущуюСтруктурнуюЕдиницу(),"ТипСтруктурнойЕдиницы") = Перечисления.ТипыСтруктурныхЕдиниц.Склад;
	НоваяСтрока = тзТерминалов.Добавить();
	НоваяСтрока.Терминал = ИмяФайла;
	Для ъ=1 По СтрЧислоСтрок(ВходящийТекст) Цикл
		СтрокаПарсинга = СтрПолучитьСтроку(ВходящийТекст,ъ);
		МногоСтрочная = СтрЗаменить(СтрокаПарсинга,",",Символы.ПС);
		Если ЭтоСклад Тогда
			Строка3 = СокрЛП(СтрПолучитьСтроку(МногоСтрочная,3)); // Штрихкод
			Строка4 = СокрЛП(СтрПолучитьСтроку(МногоСтрочная,4)); // Количество
		Иначе
			Строка3 = СокрЛП(СтрПолучитьСтроку(МногоСтрочная,4)); // Штрихкод
			Строка4 = СокрЛП(СтрПолучитьСтроку(МногоСтрочная,5)); // Количество
		КонецЕсли;
		Если ПустаяСтрока(Строка4) Тогда Продолжить; КонецЕсли;
		ТекНоменклатура = Справочники.Номенклатура.НайтиПоКоду(Строка3);
		If ТекНоменклатура.Пустая() Then
			Строка3 = Сред(Строка3,3);
			ТекНоменклатура = Справочники.Номенклатура.НайтиПоКоду(Строка3);
		EndIf;
		////++Минин 2015-05-14 0000126747 пункт 1. Пытаемся найти ШК добавляя "0" в начало строки
		Если ТекНоменклатура.Пустая() Тогда 
			ТекНоменклатура = ПодборШКТовара(Строка3);
		КонецЕсли;
		////--Минин 2015-05-14 0000126747 пункт 1. Пытаемся найти ШК добавляя "0" в начало строки
		Если ТекНоменклатура.Пустая() Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найдена номенклатура с штрихкодов "+Строка3);
			Продолжить; 
		КонецЕсли;	
		МассивСтрок = тзДанныеТерминалов.НайтиСтроки(Новый Структура("Терминал,Номенклатура",ИмяФайла,ТекНоменклатура.Родитель));
		Если МассивСтрок.Количество()=0 Тогда
			НоваяСтрока = тзДанныеТерминалов.Добавить();
			НоваяСтрока.Номенклатура = ТекНоменклатура.Родитель;
			НоваяСтрока.Количество = Число(Строка4);
			НоваяСтрока.Терминал = ИмяФайла;
		Иначе
			МассивСтрок[0].Количество = МассивСтрок[0].Количество + Число(Строка4);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//++Минин 2015-05-14 0000126747 пункт 1. Пытаемся найти ШК добавляя "0" в начало строки
&НаСервере
Функция ПодборШКТовара(СтрокаШК)
	НовыйШК	= "0"+СтрокаШК;
	Номенклатура = Справочники.Номенклатура.НайтиПоКоду(НовыйШК);
	Если Не Номенклатура.Пустая() или СтрДлина(НовыйШК)=13 Тогда 
		Возврат Номенклатура;
	ИначеЕсли Номенклатура.Пустая() и СтрДлина(НовыйШК)<13 Тогда 
		Номенклатура = ПодборШКТовара(НовыйШК);
		Возврат Номенклатура;
	КонецЕсли;
КонецФункции
//--Минин 2015-05-14 0000126747 пункт 1. Пытаемся найти ШК добавляя "0" в начало строки

&НаКлиенте
Процедура ОбработатьКаталогСФайлами(ВходящийКаталог)
	МассивФайлов = НайтиФайлы(ВходящийКаталог,"*.txt");
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	Для каждого СтрокаМассива Из МассивФайлов Цикл
		ТекстовыйФайл.Прочитать(СтрокаМассива.ПолноеИмя);
		ТекстФайла = ТекстовыйФайл.ПолучитьТекст();
		ОбработатьТекстНаСервере(ТекстФайла,СтрокаМассива.ПолноеИмя);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлыИзКаталога(Команда)
	//Предупреждение("Данный функционал в разработке");
	//Возврат;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.Заголовок = "Укажите каталог загрузки данных";
	Если ДиалогВыбораКаталога.Выбрать() тогда
		ОбработатьКаталогСФайлами(ДиалогВыбораКаталога.Каталог);
	КонецЕсли;
КонецПроцедуры
