

&НаСервере
функция ЗаполнитьТЗОСновныеПечФормы()
	ЗаполнитьТЗДоступныеПечФормы();
	Запрос= новый запрос;
	для каждого ВидДокумента из Метаданные.ПланыОбмена.ОбменТД6.Состав цикл
		Если КомандаПечать(ВидДокумента.Метаданные.команды) тогда
			НоваяСтрока = ТЗОсновныеПечФОрмы.Добавить();
			НоваяСтрока.ВидДокумента = ВидДокумента.Метаданные.имя;
			НоваяСтрока.Представление =ВидДокумента.Метаданные.СИноним;
			НоваяСтрока.ИмяПечатнойФормы.ЗагрузитьЗначения(ПолучитьСписокВыбораНаСервере(ВидДокумента.Метаданные.Имя));
		Конецесли;	
	конеццикла;
	
	ТЗОсновныеПечФОрмы.Сортировать("ВидДокумента");
	
	Запрос = Новый Запрос;
	ЗАпрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "Выбрать * поместить ОсновнаяТаблица из &ТЗОсновныеПечФормы как ОсновнаяТаблица";
	Запрос.УстановитьПараметр("ТЗОСновныеПечФОрмы",ТЗОСновныеПечФормы.Выгрузить(,"ВидДокумента,Представление"));
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ
				   |	ОСновнаяТаблица.ВидДокумента,
				   |	ОСновнаяТаблица.Представление КАК Представление,
				   |	ЕСТЬNULL(ОсновныеПечатныеФОрмы.ИмяПечатнойФормы, """") КАК ИмяПечатнойФОрмы
				   |ИЗ
				   |	ОсновнаяТаблица КАК ОСновнаяТаблица
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеПечатныеФормыДокументов КАК ОсновныеПечатныеФОрмы
				   |		ПО ОСновнаяТаблица.ВидДокумента = ОсновныеПечатныеФОрмы.ВидДокумента
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	Представление";
	Рез = Запрос.Выполнить();
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	ДанныеПоРегистру = Рез.Выгрузить();
	
	Для Каждого СтрокаТЗОСновныеПечФормы Из ТЗОСновныеПечФормы Цикл
		Для Каждого СтрокаДанныеПоРегистру Из ДанныеПоРегистру Цикл
			Если СтрокаТЗОСновныеПечФормы.ВидДокумента = СтрокаДанныеПоРегистру.ВидДокумента Тогда
				Для Каждого ЗначениеСписка из СтрокаТЗОСновныеПечФормы.ИмяПечатнойФормы цикл
					Если СтрокаДанныеПоРегистру.ИмяПечатнойФОрмы = ЗначениеСписка.Значение Тогда
						ЗначениеСписка.Пометка = ИСТИНА;
					КонецЕсли;
				Конеццикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецФункции
&НаСервере
Функция КомандаПечать(Команды)
	флаг = Ложь;
	для каждого команда из КОманды цикл
		Если Найти(команда.имя,"Печать")>0 тогда
			флаг = Истина;
			прервать;
		Конецесли;
	конеццикла;
	Возврат флаг;
КонецФункции
&НаСервере
Функция ЕдинственнаяПечатнаяФорма(Команды)
	флаг = Ложь;
	сч = 1;
	для каждого команда из КОманды цикл
		Если Найти(команда.имя,"Печать")>0 тогда
			Если сч= 1 тогда
				флаг = Истина;
			Конецесли;
			сч = сч+1;
		Конецесли;
	конеццикла;
	Возврат флаг;
КонецФункции

&НаСервере
ФУнкция ЗаполнитьТЗДоступныеПечФормы()
	для каждого ВидДок из Метаданные.Документы цикл
		для каждого КомандаДокумента из  ВидДок.Команды цикл
			Если Найти(КомандаДокумента.Имя,"Печать")>0 тогда
				НоваяСТрока = ТЗДоступныеПечФОрмы.Добавить();
				НоваяСТрока.ВидДокумента = ВидДок.Имя;
				НоваяСтрока.ИмяПечатнойФормы = ПолучитьИмяПечатнойФормыДокумента(КомандаДокумента.Имя);
			Конецесли;
		КонецЦикла;
	конеццикла;
КонецФУнкции
&НаСервере
Функция ПолучитьИмяПечатнойФормыДокумента(ИМяКоманды)
	ИмяПечатнойФормы = Сред(ИмяКоманды,7,СтрДлина(ИмяКоманды)-1);
	Возврат ИмяПечатнойФормы;
КонецФункции

&НаКлиенте
Функция ПолучитьСписокВыбора(ВидДокумента)
	СтрукПараметры = Новый Структура("ВидДокумента",ВИдДокумента);
	СписокВыбора = ТЗДоступныеПечФормы.НайтиСтроки(СтрукПараметры);
	СЗнач = Новый СписокЗначений;
	для каждого Значение из СписокВыбора цикл
		СЗнач.Добавить(Значение.ИмяПечатнойФормы);
	Конеццикла;
	СписокВыбора = СЗнач.ВыгрузитьЗначения();
	Возврат СписокВыбора;
КонецФУнкции

&НаСервере
Функция ПолучитьСписокВыбораНаСервере(ВидДокумента)
	СтрукПараметры = Новый Структура("ВидДокумента",ВИдДокумента);
	СписокВыбора = ТЗДоступныеПечФормы.НайтиСтроки(СтрукПараметры);
	СЗнач = Новый СписокЗначений;
	для каждого Значение из СписокВыбора цикл
		СЗнач.Добавить(Значение.ИмяПечатнойФормы,,Истина);
	Конеццикла;
	СписокВыбора = СЗнач.ВыгрузитьЗначения();
	Возврат СписокВыбора;
КонецФУнкции


&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьВРегСв();	
КонецПроцедуры

&НаСервере
Процедура СохранитьВРегСв()
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.колонки.Добавить("ВидДокумента");
	ТЗ.колонки.Добавить("ИмяПечатнойФормы");
	
	Для Каждого СтрокаТЗОСновныеПечФормы Из ТЗОСновныеПечФормы Цикл
		Для Каждого ЗначениеСписка из СтрокаТЗОСновныеПечФормы.ИмяПечатнойФормы цикл
			Если ЗначениеСписка.Пометка Тогда
				НоваяСтрокаТЗ = ТЗ.Добавить();
				НоваяСтрокаТЗ.ВидДокумента = СтрокаТЗОСновныеПечФормы.ВидДокумента;
				НоваяСтрокаТЗ.ИмяПечатнойФормы = ЗначениеСписка.Значение;
			КонецЕсли;
		Конеццикла;
	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.ОсновныеПечатныеФормыДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	НаборЗаписей.Загрузить(ТЗ);
	Наборзаписей.Записать();
КОнецпроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьТЗОсновныеПечФОрмы();	
	Если НЕ Центр() тогда
		Элементы.Таблица.ТолькоПросмотр = ИСТИНА;
		Элементы.ТаблицаИмяПечатнойФормы.ТолькоПросмотр = ИСТИНА;
		Элементы.Сохранить.Видимость = Ложь;
	Конецесли;
КонецПроцедуры

&НаСервере
Функция Центр()
	Возврат ПараметрыСеанса.ЭтоЦентр;
КонецФУнкции

&НаКлиенте
Процедура ТаблицаПередНачаломИзменения(Элемент, Отказ)
	//ТекДанные = Элемент.ТекущиеДанные;
	//Если ТекДанные<>Неопределено тогда
		//ЭЛемент.ПОдчиненныеЭлементы.ТаблицаИмяПечатнойФОрмы.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокВыбора(ТекДанные.ВидДокумента));
	//Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИмяПечатнойФормыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	СтандартнаяОбработка = ЛОЖЬ;
//	Элемент.ОтметитьЭлементы("Выбор печатных форм.");
КонецПроцедуры



