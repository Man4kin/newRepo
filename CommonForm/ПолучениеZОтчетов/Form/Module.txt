
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьСписокККМ();
	Если Параметры.Свойство("ПланОбмена") Тогда
		ПланОбмена = Параметры.ПланОбмена;
	КонецЕсли;
	ПараметрЗапроса = 1;
	СтандартныйПериод = Новый СтандартныйПериод;
	СтандартныйПериод.Вариант = ВариантСтандартногоПериода.Сегодня;
	Период = СтандартныйПериод;
	ОбновитьДоступностьЭлементовФормы();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокККМ()
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ККМ.Ссылка
	                      |ИЗ
	                      |	Справочник.ККМ КАК ККМ
	                      |ГДЕ
	                      |	НЕ ККМ.ПометкаУдаления");
	СписокККМ.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	Для Каждого Строка из ТаблицаСмен Цикл
		Строка.Пометка = 1;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	Для Каждого Строка из ТаблицаСмен Цикл
		Строка.Пометка = 0;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	ВебСервис = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВебСервисSMS);
	
	Если ТипЗнч(ВебСервис) = Тип("Строка") Тогда
		URL = ВебСервис;
		Имя = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ПользовательВебСервисSMS);
		Пароль = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ПарольВебСервисSMS);
	Иначе
		URL = ВебСервис.URL;
		Имя = ВебСервис.Имя;
		Пароль = ВебСервис.Пароль;
	КонецЕсли;	
	
	Определение = Новый WSОпределения(URL,Имя,Пароль);
	URIПространстваИмен = Определение.Сервисы.Получить(0).URIПространстваИмен;
	ИмяСервиса = Определение.Сервисы.Получить(0).Имя;
	ИмяТочки = Определение.Сервисы.Получить(0).ТочкиПодключения.Получить(0).Имя;
	Прокси = Новый WSПрокси(Определение,URIПространстваИмен,ИмяСервиса,ИмяТочки);
	Прокси.Пользователь = Имя;
	Прокси.Пароль = Пароль;
	
	Source = Строка(ПланыОбмена.ОбменSMS.ЭтотУзел().УникальныйИдентификатор());
	
	ТипPacket = ФабрикаXDTO.Тип("http://1c-astor.ru/SMS", "Packet");
	ТипДанных = ТипPacket.Свойства.Получить("Params").Тип;
	ТипККМ = ТипPacket.Свойства.Получить("POS").Тип;
	ПакетPacket = ФабрикаXDTO.Создать(ТипPacket);
	ПакетPacket.Source = Source;
	ПакетPacket.Version = "1.0";
	ПакетPacket.Command = "GetShiftsInfo";   
	ПакетДанных = ФабрикаXDTO.Создать(ТипДанных);
	Если ПараметрЗапроса = 1 Тогда
		ПакетДанных.TypeOfSelect = "New";
	ИначеЕсли ПараметрЗапроса = 2 Тогда    //по номеру
		ПакетДанных.TypeOfSelect = "ShiftNo";
		ПакетДанных.FromNo = НомерС;
		ПакетДанных.ToNo = НомерПо;
	Иначе //по периоду
		ПакетДанных.TypeOfSelect = "Date";
		ПакетДанных.FromDate = Период.ДатаНачала;
		ПакетДанных.ToDate = Период.ДатаОкончания;
	КонецЕсли;	
	ПакетPacket.Params.Добавить(ПакетДанных);
	Для Каждого ККМ из СписокККМ Цикл
		Если ККМ.Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;	
		ПакетККМ = ФабрикаXDTO.Создать(ТипККМ);
		ПакетККМ.UID = Строка(ККМ.Значение.УникальныйИдентификатор());
		ПакетPacket.POS.Добавить(ПакетККМ);	
	КонецЦикла;
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,ПакетPacket,"Packet");
	Данные = ЗаписьXML.Закрыть();
	ТаблицаСмен.Очистить();
	Попытка
		Результат = Прокси.SendPacket(Данные);
		Если Результат = "" Тогда
			Возврат;
		КонецЕсли;	
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(Результат);
		ЧтениеXML.ПервоеОбъявление();
		ЧтениеXML.Прочитать();
		XDTOСпискаСмен = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,ФабрикаXDTO.Тип("http://1c-astor.ru/SMS", "Shifts"));
		
		Для каждого Строка Из XDTOСпискаСмен.Shift Цикл
			СтрокаСмены = ТаблицаСмен.Добавить();
			СтрокаСмены.UID = Строка.UID;	
			СтрокаСмены.ККМ = Справочники.ККМ.ПолучитьСсылку(Новый УникальныйИдентификатор(Строка.PosUID));	
			СтрокаСмены.НомерСмены = Строка.ShiftNo;	
			СтрокаСмены.ДатаНачалаСмены = Строка.OpenDate;	
			СтрокаСмены.ДатаОкончанияСмены = Строка.CloseDate;	
			СтрокаСмены.Пометка = Истина;	
		КонецЦикла;	
		
	Исключение
		ТекстСообщенияОбОшибке = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке());
		Сообщить(ТекстСообщенияОбОшибке);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрЗапросаПриИзменении(Элемент)
	ОбновитьДоступностьЭлементовФормы();
	//ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДоступностьЭлементовФормы()
	Элементы.НомерС.Доступность = ?(ПараметрЗапроса = 2,Истина,Ложь);
	Элементы.НомерПо.Доступность = ?(ПараметрЗапроса = 2,Истина,Ложь);
	Элементы.Период.Доступность = ?(ПараметрЗапроса = 3,Истина,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Получить(Команда)
	ПолучитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьНаСервере()
	ТаблицаДокументов.Очистить();
	ВебСервис = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВебСервисSMS);
	
	Если ТипЗнч(ВебСервис) = Тип("Строка") Тогда
		URL = ВебСервис;
		Имя = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ПользовательВебСервисSMS);
		Пароль = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ПарольВебСервисSMS);
	Иначе
		URL = ВебСервис.URL;
		Имя = ВебСервис.Имя;
		Пароль = ВебСервис.Пароль;
	КонецЕсли;	
	
	Определение = Новый WSОпределения(URL,Имя,Пароль);
	URIПространстваИмен = Определение.Сервисы.Получить(0).URIПространстваИмен;
	ИмяСервиса = Определение.Сервисы.Получить(0).Имя;
	ИмяТочки = Определение.Сервисы.Получить(0).ТочкиПодключения.Получить(0).Имя;
	Прокси = Новый WSПрокси(Определение,URIПространстваИмен,ИмяСервиса,ИмяТочки);
	Прокси.Пользователь = Имя;
	Прокси.Пароль = Пароль;
	
	
	Source = Строка(ПланыОбмена.ОбменSMS.ЭтотУзел().УникальныйИдентификатор());
	ТипPacket = ФабрикаXDTO.Тип("http://1c-astor.ru/SMS", "Packet");
	ТипДанных = ТипPacket.Свойства.Получить("ShiftFilter").Тип;
	Для каждого Строка Из ТаблицаСмен Цикл
		Если Строка.Пометка = Ложь Тогда
			Продолжить;
		КонецЕсли;	
		ПакетPacket = ФабрикаXDTO.Создать(ТипPacket);
		ПакетPacket.Source = Source;
		ПакетPacket.Version = "1.0";
		ПакетPacket.Command = "GetZReportRetailSuiteStore";
		ПакетДанных = ФабрикаXDTO.Создать(ТипДанных);
		ПакетДанных.ShiftUID = Строка.UID;
		ПакетPacket.ShiftFilter.Добавить(ПакетДанных);	
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.УстановитьСтроку();
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,ПакетPacket,"Packet");
		Данные = ЗаписьXML.Закрыть();
		Попытка
			Результат = Прокси.SendPacket(Данные);
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.УстановитьСтроку(Результат);
			ЧтениеXML.ПервоеОбъявление();
			ЧтениеXML.Прочитать();
			XDTOZОтчетов = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,ФабрикаXDTO.Тип("http://1c-astor.ru/SMS", "ZReport"));
			СсылкаНаДокумент = Неопределено;
			Если ОбменДаннымиSMS.ЗагрузитьZОтчет(XDTOZОтчетов,СсылкаНаДокумент) Тогда
				ТипParams = ТипPacket.Свойства.Получить("Params").Тип;
				ТипShift = ТипPacket.Свойства.Получить("ShiftFilter").Тип;
				ПакетПодтверждения = ФабрикаXDTO.Создать(ТипPacket);
				ПакетПодтверждения.Source = Source;
				ПакетПодтверждения.Version = "1.0";
				ПакетПодтверждения.Command = "SetProcessedStatus";   
				ПакетПараметров = ФабрикаXDTO.Создать(ТипParams);
				ПакетПараметров.Status = 1;
				ПакетПодтверждения.Params.Добавить(ПакетПараметров);
				//Для каждого Строка Из ТаблицаСмен Цикл
				//	Если Строка.Пометка = Ложь Тогда
				//		Продолжить;
				//	КонецЕсли;	
					ПакетСмен = ФабрикаXDTO.Создать(ТипShift);
					ПакетСмен.ShiftUID = Строка.UID;
					ПакетПодтверждения.ShiftFilter.Добавить(ПакетСмен);	
				//КонецЦикла;	
				ЗаписьXML = Новый ЗаписьXML;
				ЗаписьXML.УстановитьСтроку();
				ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,ПакетПодтверждения,"Packet");
				Данные = ЗаписьXML.Закрыть();
				Результат = Прокси.SendPacket(Данные);
				СтрокаДокумента = ТаблицаДокументов.Добавить();
				СтрокаДокумента.Документ = СсылкаНаДокумент;
			КонецЕсли;
		Исключение
			ТекстСообщенияОбОшибке = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке());
			ВызватьИсключение(ТекстСообщенияОбОшибке);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры
