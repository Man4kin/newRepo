
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗадачаСсылка = Параметры.Ключ;
	ЗначениеВДанныеФормы(ЗадачаСсылка.ПолучитьОбъект(),ЗадачаОбъект);
	БизнесПроцесс = ЗадачаСсылка.БизнесПроцесс;
	ЗначениеВДанныеФормы(БизнесПроцесс.ПолучитьОбъект(),Объект);
	
	//++Минин 0000137110 2015-09-07
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, ЗНАЧЕНИЕ(Справочник.ЗначенияСвойствОбъектов.ПустаяСсылка)) КАК ВидМатрицы,
	|	НоменклатураДополнительныеРеквизиты.Ссылка
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоПризнакМатрицы
	|	И НоменклатураДополнительныеРеквизиты.Ссылка В(&Номенклатура)";
	Запрос.УстановитьПараметр("Номенклатура",Объект.Состав.Выгрузить(,"Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	КодПВХ = ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаПризнакМатрицы);
	Запрос.УстановитьПараметр("СвойствоПризнакМатрицы",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(КодПВХ));
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр из Объект.Состав Цикл 
		Значение = Результат.Найти(Стр.Номенклатура);
		Стр.ВидМатрицы = ?(Значение = Неопределено,Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка(),Значение.ВидМатрицы);
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Izh_АвтоЗаказНастройкаПризнакаМатрицы.Свойство,
	|	Izh_АвтоЗаказНастройкаПризнакаМатрицы.Цвет
	|ИЗ
	|	РегистрСведений.Izh_АвтоЗаказНастройкаПризнакаМатрицы КАК Izh_АвтоЗаказНастройкаПризнакаМатрицы");
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	НомерНастройки = 1;
	Пока Выборка.Следующий() Цикл
		НовыйЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		НовыйЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Настройка №"+НомерНастройки;
		НовыйЭлементУсловногоОформления.Представление = "СозданоПрограммно";
		НовыйЭлементУсловногоОформления.Использование = Истина;
		
		ЭлементОтбора = НовыйЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование = Истина;
		
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Состав.ВидМатрицы");
		ЭлементОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Выборка.Свойство;
		
		
		НовоеПоле = НовыйЭлементУсловногоОформления.Поля.Элементы.Добавить();
		НовоеПоле.Использование = Истина;
		НовоеПоле.Поле = Новый ПолеКомпоновкиДанных("ОбъектСостав");
		
		Цвет = Выборка.Цвет.Получить();
		//++Минин 2015-10-13 0000141418
		//НовыйЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Цвет);	
		НовыйЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Цвет);	
		//--Минин 2015-10-13 0000141418
		НомерНастройки = НомерНастройки + 1;
	КонецЦикла;
	//--Минин 0000137110 2015-09-07
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//БПЗначение = РеквизитФормыВЗначение("Объект");
	//БПЗначение.Записать();
	//dps+ 15.09.03 
	Если НЕ ЗначениеЗаполнено(Объект.Фирма) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите фирму!",,"Объект.Фирма");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите склад!",,"Объект.Склад");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	//dps- 15.09.03 
	БизнесПроцессОбъект = ДанныеФормыВЗначение(Объект,Тип("БизнесПроцессОбъект.АвтоЗаказ"));
	БизнесПроцессОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектСоставПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.ОбъектСостав.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Элементы.ОбъектСоставПоСЕ.ОтборСтрок = Новый ФиксированнаяСтруктура("Номенклатура",ТекДанные.Номенклатура);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//++Минин 2015-10-19 0000141413
	ОбщаяСуммаЗаказа = ПолучитьОбщуюСуммуЗаказа();
	//--Минин 2015-10-19 0000141413
	Элементы.ОбъектСостав.ТекущаяСтрока = 0;
	Если Элементы.ОбъектСостав.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элементы.ОбъектСоставПоСЕ.ОтборСтрок= Новый ФиксированнаяСтруктура("Номенклатура",Элементы.ОбъектСостав.ТекущиеДанные.Номенклатура);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПривестиКоличествоККвантуОтгрузки(Номенклатура,Поставщик,Количество,ВПутиРЦ = 0,ОстатокРЦ = 0,Полуквант = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаказНаРЦ = ТипЗнч(Поставщик) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	
	Построитель = Новый ПостроительЗапроса();
	Построитель.Текст =
	"ВЫБРАТЬ
	|	НоменклатураКонтрагента.Контрагент,
	|	НоменклатураКонтрагента.Номенклатура,
	|	НоменклатураКонтрагента.МинимальныйЗаказ,
	|	НоменклатураКонтрагента.ОсновнойПоставщик КАК ОсновнойПоставщик
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ГДЕ
	|	НоменклатураКонтрагента.Номенклатура В(&Номенклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновнойПоставщик УБЫВ";
	Построитель.ЗаполнитьНастройки();
	
	Отбор = Новый Структура();
	Если ТипЗнч(Поставщик) = Тип("СправочникСсылка.Контрагенты") Тогда
		Отбор.Вставить("Контрагент", Поставщик);
	КонецЕсли;
	
	Izh_ОбщегоНазначения.УстановитьОтборПостроителя(Построитель, Отбор);
	
	Запрос = Построитель.ПолучитьЗапрос();
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	ДанныеПоЗаказу = Запрос.Выполнить().Выгрузить();
	
	Если ЗаказНаРЦ Тогда
		//++БИТ БВО 2015-06-16
		//НеТрогатьЭтуГруппу = ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(
		//ПланыВидовХарактеристик.СлужебныеЗначения.НеСписыватьЕдиничныеОстаткиПоГруппе
		//);
		НеТрогатьЭтуГруппу = Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьЗначениеСвойстваСлужебногоЗначения(
		ПланыВидовХарактеристик.СлужебныеЗначения.НеСписыватьЕдиничныеОстаткиПоГруппе
		));
		//--БИТ БВО 2015-06-16		
	КонецЕсли;
	
	Если Количество = 0 Тогда
		Возврат 0 ;
	КонецЕсли;
	
	Если ЗаказНаРЦ Тогда
		Остаток = ОстатокРЦ + ВПутиРЦ;
	КонецЕсли;
	
	Отбор = Новый Структура("Номенклатура",Номенклатура);
	Для каждого Квант Из ДанныеПоЗаказу.НайтиСтроки(Отбор) Цикл
		
		Если Квант.МинимальныйЗаказ <> 0 Тогда
			
			//dps+ 15,08,24 135700 Округлять до ПОЛУКВАНТА, КАРЛ!!!
			Если Полуквант Тогда
				текКвант = Окр(Квант.МинимальныйЗаказ/2);
			Иначе
				текКвант = Квант.МинимальныйЗаказ;
			КонецЕсли;
			//dps- 15,08,24 135700 Округлять до ПОЛУКВАНТА, КАРЛ!!!
			
			Если ЗаказНаРЦ 
				И ЗначениеЗаполнено(Остаток) И Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Штучный 
				И Количество < текКвант И Остаток < текКвант Тогда 
				Количество = Остаток;
				Прервать; 
			КонецЕсли;
			
			Коэффициент = Окр(Количество / текКвант);
			Если Коэффициент = 0 Тогда
				Коэффициент = 1;
			КонецЕсли;
			Если ЗаказНаРЦ Тогда
				Коэффициент = Мин(Коэффициент, Цел(Остаток / текКвант));
			КонецЕсли;
			
			Количество = Коэффициент * текКвант;
			
			Если ЗаказНаРЦ Тогда
				Если (Остаток - Количество) = 1 
					И Номенклатура.ТипТовара <> Перечисления.ТипыТоваров.Весовой
					И НЕ Номенклатура.ПринадлежитЭлементу(НеТрогатьЭтуГруппу) Тогда
					Количество = Количество + 1;
				КонецЕсли;
			КонецЕсли;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	Возврат Количество;
КонецФункции

&НаКлиенте
Процедура ОбъектСоставПоСЕКоличествоПриИзменении(Элемент)
	ТекДанныеСЕ = Элементы.ОбъектСоставПоСЕ.ТекущиеДанные;    
	Если ТекДанныеСЕ.Количество <> 0 И КодВозвратаДиалога.Да = Вопрос("Пересчитать количество с учетом коэффициента упаковки?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,"Количество с учетом коробки",) Тогда 
		ТекДанныеСЕ.Количество = ТекДанныеСЕ.Количество * КоэфициентЯщика(ТекДанныеСЕ.Номенклатура, Объект.Поставщик);
	КонецЕсли;
	
	Если ТекДанныеСЕ = Неопределено Тогда Возврат; КонецЕсли;
	ТекДанныеСЕ.Количество = ПривестиКоличествоККвантуОтгрузки(ТекДанныеСЕ.Номенклатура,Объект.Поставщик,ТекДанныеСЕ.Количество);
	
	ТекДанные = Элементы.ОбъектСостав.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	мсв = Объект.СоставПоСЕ.НайтиСтроки(Новый Структура("Номенклатура",ТекДанные.Номенклатура));
	сум = 0;
	Для Каждого стр Из мсв Цикл
		сум = сум + стр.Количество;
	КонецЦикла;
	ТекДанные.Количество = сум;
	ТекДанные.Сумма = ТекДанные.Цена * сум;
	//++Минин 2015-10-19 0000141413
	ОбщаяСуммаЗаказа = ПолучитьОбщуюСуммуЗаказа();
	//--Минин 2015-10-19 0000141413
КонецПроцедуры

//++Минин 2015-10-19 0000141413
&НаСервере
Функция ПолучитьОбщуюСуммуЗаказа()
	Возврат Объект.Состав.Итог("Сумма");
КонецФункции
//--Минин 2015-10-19 0000141413

&НаСервере
Процедура ОбнулитьНаСервере()
	Для Каждого стр Из Объект.Состав Цикл
		стр.Количество = 0;
	КонецЦикла;
	Для Каждого стр Из Объект.СоставПоСЕ Цикл
		стр.Количество = 0;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция КоэфициентЯщика(Номенклатура, Контрагент)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураКонтрагента.КоэффициентЯщика КАК Коэф
	               |ИЗ
	               |	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	               |ГДЕ
	               |	НоменклатураКонтрагента.Номенклатура = &Номенклатура
	               |	И НоменклатураКонтрагента.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Рез = Запрос.Выполнить().Выбрать();
	Если рез.Количество() <> 0 Тогда 
		рез.Следующий();
		Возврат рез.Коэф;
	Иначе
		Возврат 1;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Обнулить(Команда)
	ОбнулитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектСоставПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ОбъектСоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

