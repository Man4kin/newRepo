  Перем СпрПараметрыБП;

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	Если не спрПараметрыБП.Использование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Дата = ТекущаяДата();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ДанныеЗаполнения <> Неопределено Тогда
		Основание = ДанныеЗаполнения.Основание;
		Название = ДанныеЗаполнения.Название;
		ДатаНачала = ДанныеЗаполнения.ДатаНачала;
		ДатаОкончания = ДанныеЗаполнения.ДатаОкончания;
	КонецЕсли;	
КонецПроцедуры

Процедура ОповеститьОНачалеПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
	Если здчЗадача = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	здчЗадача.Дата = НачалоДня(ДатаНачала);
	здчЗадача.Наименование ="Начало промо акции "+Название+" ("+ДатаНачала+"-"+?(ЗначениеЗаполнено(ДатаОкончания),ДатаОкончания,"...")+")"; 
	здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
	ФормируемыеЗадачи.Добавить(здчЗадача);
КонецПроцедуры

Процедура ОповеститьООкончанииПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
	Если здчЗадача = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	здчЗадача.Дата = КонецДня(ДатаОкончания);
	здчЗадача.Наименование = "Окончание промо акции "+Название+" ("+ДатаНачала+"-"+ДатаОкончания+")";
	здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
	ФормируемыеЗадачи.Добавить(здчЗадача);
КонецПроцедуры

Процедура ВыгузкаВОборудованиеНачалаРАОбработка(ТочкаМаршрутаБизнесПроцесса)
	Набор = РегистрыСведений.ПромоАкции.СоздатьНаборЗаписей();
	Набор.Отбор.СтруктурнаяЕдиница.Установить(СтруктурнаяЕдиница);
	Набор.Отбор.IDДеталей.Установить(Основание);
	Набор.Прочитать();
	Для Каждого Строка Из Набор Цикл
		Строка.ФлагНачала = Истина;
	КонецЦикла;	
	Набор.Записать();
КонецПроцедуры

Процедура ВыгрузкаВОборудованияОкончанияРАОбработка(ТочкаМаршрутаБизнесПроцесса)
	Набор = РегистрыСведений.ПромоАкции.СоздатьНаборЗаписей();
	Набор.Отбор.СтруктурнаяЕдиница.Установить(СтруктурнаяЕдиница);
	Набор.Отбор.IDДеталей.Установить(Основание);
	Набор.Прочитать();
	Для Каждого Строка Из Набор Цикл
		Строка.ФлагОкончания = Истина;
	КонецЦикла;	
	Набор.Записать();
КонецПроцедуры

Процедура ОповеститьОНачалеОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура ОповеститьООкончанииОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура БессрочнаяПромоАкцияПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ПолучитьДанныеООкончании().Пустой();
КонецПроцедуры

Функция ПолучитьДанныеООкончании()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПромоАкции.ДатаОкончания
		|ИЗ
		|	РегистрСведений.ПромоАкции КАК ПромоАкции
		|ГДЕ
		|	ПромоАкции.IDДеталей = &IDДеталей
		|	И ПромоАкции.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|	И НЕ ПромоАкции.ДатаОкончания ЕСТЬ NULL ";
    Запрос.УстановитьПараметр("IDДеталей",Основание);
    Запрос.УстановитьПараметр("СтруктурнаяЕдиница",СтруктурнаяЕдиница);
	Результат = Запрос.Выполнить();
	Возврат Результат;
КонецФункции	

Процедура ПриКопировании(ОбъектКопирования)
	ДатаЗавершения = '00010101000000';
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	ДатаЗавершения = УправлениеБизнесПроцессамиСервер.ДатаЗавершенияБизнесПроцесса(Ссылка);
	Записать();
КонецПроцедуры


спрПараметрыБП = Справочники.НастройкаБизнесПроцессов.НайтиПоКоду(Метаданные().Имя,,,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
