
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗадачаСсылка = Параметры.Ключ;
	ЗначениеВДанныеФормы(ЗадачаСсылка.ПолучитьОбъект(),ЗадачаОбъект);
	IDДеталей = Параметры.Основание;
	СтруктурнаяЕдиница = Параметры.СтруктурнаяЕдиница;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПромоАкции.IDПромо КАК IDПромо,
		|	ПромоАкции.IDКомпоненты КАК IDКомпоненты,
		|	ПромоАкции.IDДеталей КАК IDДеталей,
		|	ПромоАкции.ДатаНачала КАК ДатаНачала,
		|	ПромоАкции.ДатаОкончания КАК ДатаОкончания,
		|	ПромоАкции.Название КАК Название,
		|	ПромоАкции.ОписаниеПромо КАК ОписаниеПромо,
		|	ПромоАкции.ОписаниеДеталей КАК ОписаниеДеталей,
		|	ПромоАкции.ОписаниеКомпонента КАК ОписаниеКомпонента,
		|	ПромоАкции.СтруктурнаяЕдиница,
		|	ПромоАкции.ТипКомпонента,
		|	ПромоАкции.ТипПокупателя
		|ИЗ
		|	РегистрСведений.ПромоАкции КАК ПромоАкции
		|ГДЕ
		|	ПромоАкции.IDДеталей = &IDДеталей
		|	И ПромоАкции.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";

	Запрос.УстановитьПараметр("IDДеталей", IDДеталей);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Выборка);

	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDДеталей");
	Отбор.ПравоеЗначение = IDДеталей;
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтруктурнаяЕдиница");
	мСЕ = Новый Массив(2);
	мСЕ[0] = СтруктурнаяЕдиница;
	мСЕ[1] = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	Отбор.ПравоеЗначение = мСЕ;
	
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDДеталей");
	Отбор.ПравоеЗначение = IDДеталей;
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ПараметрыФормы = Новый Структура("АдресВхранилище", ПоместитьВХранилище(IDДеталей, СтруктурнаяЕдиница, ДатаНачала));
	ОткрытьФорму("Обработка.ПечатьЦенниковИЭтикеток.Форма.ПечатьЦенниковИЭтикеток", ПараметрыФормы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоместитьВХранилище(IDДеталей, СтруктурнаяЕдиница, ДатаАкции)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПромоАкцииНоменклатура.Номенклатура,
	               |	ПромоАкцииНоменклатура.ЕдиницаИзмерения,
	               |	ПромоАкцииНоменклатура.Цена
	               |ИЗ
	               |	РегистрСведений.ПромоАкцииНоменклатура КАК ПромоАкцииНоменклатура
	               |ГДЕ
	               |	ПромоАкцииНоменклатура.IDДеталей = &IDДеталей
	               |	И ПромоАкцииНоменклатура.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
	Запрос.УстановитьПараметр("IDДеталей", IDДеталей);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	Результат = Запрос.Выполнить();
	СтруктураПараметров = Новый Структура;
	Если НЕ Результат.Пустой() тогда
		СтруктураПараметров.Вставить("Состав", Результат.Выгрузить());
	КонецЕсли;
	СтруктураПараметров.Вставить("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	СтруктураПараметров.Вставить("ДатаАкции", ДатаАкции);
	СтруктураПараметров.Вставить("РежимРА", Истина);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураПараметров);	 
КонецФункции

&НаКлиенте
Процедура ДеревоКомпонентПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СписокНоменклатуры.Отбор.Элементы.Очистить();
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDПромо");
	Отбор.ПравоеЗначение = IDПромо;
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDКомпоненты");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDКомпоненты;
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDГруппы");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDГруппы;
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDДеталей");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDДеталей;
	
	СписокПорогов.Отбор.Элементы.Очистить();
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDПромо");
	Отбор.ПравоеЗначение = IDПромо;
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDКомпоненты");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDКомпоненты;
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDГруппы");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDГруппы;
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDДеталей");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDДеталей;
КонецПроцедуры
