Перем СпрПараметрыБП;



Процедура ПередЗаписью(Отказ)
	Дата = ТекущаяДата(); // установим дату бизнес-процесса
КонецПроцедуры

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	Если не спрПараметрыБП.Использование Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	  Основание = ДанныеЗаполнения;
КонецПроцедуры

Процедура ЗаполнениеИнвентаризационныхОписейПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ПолучитьДанныеОСкладах();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
		Если здчЗадача = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		здчЗадача.Дата = Основание.ДатаИнвентаризации;
		здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
		СтрокаДополнительно = здчЗадача.Дополнительно.Добавить();
		СтрокаДополнительно.Характеристика = "Склад";
		СтрокаДополнительно.Значение = ВыборкаДетальныеЗаписи.Ссылка;
		ФормируемыеЗадачи.Добавить(здчЗадача);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнениеИнвентаризационныхОписейОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура ЗаполнениеИнвентаризацииПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
	Если здчЗадача = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	//здчЗадача.ДатаНапоминания = НачалоДня(ТекущаяДата());
	здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
	ФормируемыеЗадачи.Добавить(здчЗадача);
КонецПроцедуры

Процедура ЗаполнениеИнвентаризацииОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Функция ПолучитьДанныеОСкладах()
	Запрос = Новый Запрос;
	Если Основание.ТипПередачиРезультатов = Перечисления.ТипыПередачиРезультатовИнвентаризации.ИзлишкиНедостачи Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ГрафикИнвентаризацийСклады.Склад КАК Ссылка
			|ИЗ
			|	Документ.ГрафикИнвентаризаций.Склады КАК ГрафикИнвентаризацийСклады
			|ГДЕ
			|	ГрафикИнвентаризацийСклады.Ссылка = &Ссылка";
	    Запрос.УстановитьПараметр("Ссылка",Основание);
	Иначе	
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Склады.Ссылка
			|ИЗ
			|	Справочник.Склады КАК Склады
			|ГДЕ
			|	Склады.Владелец = &Владелец
			|	И НЕ Склады.ПометкаУдаления";
	    Запрос.УстановитьПараметр("Владелец",Основание.СтруктурнаяЕдиница);
	КонецЕсли;	
	Результат = Запрос.Выполнить();
	Возврат Результат;
КонецФункции	

Процедура ПриКопировании(ОбъектКопирования)
	ДатаЗавершения = '00010101000000';
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	ДатаЗавершения = УправлениеБизнесПроцессамиСервер.ДатаЗавершенияБизнесПроцесса(Ссылка);
	Записать();
КонецПроцедуры


спрПараметрыБП = Справочники.НастройкаБизнесПроцессов.НайтиПоКоду(Метаданные().Имя,,,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);




