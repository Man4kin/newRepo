Перем СпрПараметрыБП;

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	Если не спрПараметрыБП.Использование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Дата = ТекущаяДата();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Для каждого Строка из ДанныеЗаполнения.Состав Цикл
		НоваяСтрока = Состав.Найти(Строка.ID,"ID");
		Если НоваяСтрока = Неопределено Тогда
			НоваяСтрока = Состав.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
	КонецЦикла;
	Дата = ДанныеЗаполнения.Основание;
	Основание = ДанныеЗаполнения.Основание;
КонецПроцедуры

Процедура ОповеститьОНачалеПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
	//здчЗадача.ДатаНапоминания = НачалоДня(Дата);
	здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
	ФормируемыеЗадачи.Добавить(здчЗадача);
КонецПроцедуры

Процедура ОповеститьООкончанииПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ПолучитьДанныеООкончании();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
		Если здчЗадача = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		здчЗадача.Дата = НачалоДня(ВыборкаДетальныеЗаписи.Период);
		//здчЗадача.ДатаНапоминания = здчЗадача.Дата;
		здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
		ФормируемыеЗадачи.Добавить(здчЗадача);
	КонецЦикла;
КонецПроцедуры

Процедура ОповеститьОНачалеОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура ОповеститьООкончанииОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура НоваяЦенаПриСозданииВложенныхБизнесПроцессов(ТочкаМаршрутаБизнесПроцесса, ФормируемыеБизнесПроцессы, Отказ)
	ФормируемыеБизнесПроцессы[0].ФлагРаспродажи = Истина;
	ФормируемыеБизнесПроцессы[0].Состав.Загрузить(Состав.Выгрузить());
КонецПроцедуры

Процедура СтараяЦенаПриСозданииВложенныхБизнесПроцессов(ТочкаМаршрутаБизнесПроцесса, ФормируемыеБизнесПроцессы, Отказ)
	ФормируемыеБизнесПроцессы[0].ФлагРаспродажи = Ложь;
	СоставВложенногоБП = ФормируемыеБизнесПроцессы[0].Состав;
	Для Каждого Строка Из Состав Цикл
		НоваяСтрока = СоставВложенногоБП.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		НоваяСтрока.ID = Строка.IDВосстановления;
		НоваяСтрока.Цена = УправлениеЦенамиСервер.ПолучитьЦенуПоID(Строка.IDВосстановления,"IDВосстановления");
	КонецЦикла;	
КонецПроцедуры

Процедура БессрочнаяРаспродажаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ПолучитьДанныеООкончании().Пустой();
КонецПроцедуры

Функция ПолучитьДанныеООкончании()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатуры.Период
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПОЛНОЕ СОЕДИНЕНИЕ БизнесПроцесс.НоваяРаспродажа.Состав КАК НоваяРаспродажаСостав
		|		ПО ЦеныНоменклатуры.ID = НоваяРаспродажаСостав.IDВосстановления
		|ГДЕ
		|	НоваяРаспродажаСостав.Ссылка = &Ссылка
		|	И (НЕ ЦеныНоменклатуры.Период ЕСТЬ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатуры.Период";
    Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить();
	Возврат Результат;
КонецФункции	

Процедура ПриКопировании(ОбъектКопирования)
	ДатаЗавершения = '00010101000000';
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	ДатаЗавершения = УправлениеБизнесПроцессамиСервер.ДатаЗавершенияБизнесПроцесса(Ссылка);
	Записать();
КонецПроцедуры
	
	спрПараметрыБП = Справочники.НастройкаБизнесПроцессов.НайтиПоКоду(Метаданные().Имя,,,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
