Перем СпрПараметрыБП;

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Для каждого Строка из ДанныеЗаполнения.Состав Цикл
		//Если Строка.ID = 0 Тогда
		//	НоваяСтрока = Состав.Найти(Строка.Номенклатура,"Номенклатура");
		//Иначе
		//	НоваяСтрока = Состав.Найти(Строка.ID,"ID");
		//КонецЕсли;
		//Если НоваяСтрока = Неопределено Тогда
		//	НоваяСтрока = Состав.Добавить();
		//КонецЕсли;
		//ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
		НайденныеСтроки = Состав.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения", Строка.Номенклатура, Строка.ЕдиницаИзмерения));
		Если НайденныеСтроки.Количество() = 0 Тогда
			сСостав = Состав.Добавить();
		Иначе
			сСостав = НайденныеСтроки[0];
			Если сСостав.ID >= Строка.ID Тогда	//"старая" цена в рамках одного бп
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(сСостав, Строка);
	КонецЦикла;
	Дата = ДанныеЗаполнения.Основание;
	Основание = ДанныеЗаполнения.Основание;
КонецПроцедуры

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	Если не спрПараметрыБП.Использование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура РаскладкаЦенниковПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Описание = ПолучитьОписаниеЗадачи(ТочкаМаршрутаБизнесПроцесса);
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса, , Описание);
	Если здчЗадача = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	//здчЗадача.ДатаНапоминания = НачалоДня(ДАта);
	здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь;
	ФормируемыеЗадачи.Добавить(здчЗадача);
КонецПроцедуры

Процедура ПечатьЦенниковПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Описание = ПолучитьОписаниеЗадачи(ТочкаМаршрутаБизнесПроцесса);
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса, , Описание);
	Если здчЗадача = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	//здчЗадача.ДатаНапоминания = НачалоДня(Дата);
	здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
	ФормируемыеЗадачи.Добавить(здчЗадача);
КонецПроцедуры

Процедура ПечатьЦенниковОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура РаскладкаЦенниковОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура ВыгрузкаЦенВОборудованиеОбработка(ТочкаМаршрутаБизнесПроцесса)
	Для Каждого Строка Из Состав Цикл
		Набор = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
		Набор.Отбор.Период.Установить(Строка.Период);
		Набор.Отбор.СтруктурнаяЕдиница.Установить(СтруктурнаяЕдиница);
		Набор.Отбор.Номенклатура.Установить(Строка.Номенклатура);
		Набор.Отбор.ЕдиницаИзмерения.Установить(Строка.ЕдиницаИзмерения);
		Набор.Отбор.ID.Установить(Строка.ID);
		Набор.Прочитать();
		Если Набор.Количество() = 0 Тогда
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			//"Запись не найдена!
			//|"+Строка.Номенклатура+" - "+Строка.ЕдиницаИзмерения+" - "+Строка.ID);
		Иначе
			Набор.ЭтотОбъект[0].АктивностьЗаписи = Истина;
			Набор.Записать();
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ДатаЗавершения = '00010101000000';
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	ДатаЗавершения = УправлениеБизнесПроцессамиСервер.ДатаЗавершенияБизнесПроцесса(Ссылка);
	Записать();
КонецПроцедуры

Процедура ВыгрузкаАктивацииЦенОбработка(ТочкаМаршрутаБизнесПроцесса)
	// Вставить содержимое обработчика.
	Если не ПараметрыСеанса.ЭтоЦентр Тогда
		
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//			   |	ЕСТЬNULL(НастройкаБизнесПроцессовДополнительныеРеквизиты.Значение, ЛОЖЬ) КАК Выгружать
		//			   |ИЗ
		//			   |	ПланВидовХарактеристик.ДополнительныеРеквизитыБП КАК ДополнительныеРеквизитыБП
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкаБизнесПроцессов.ДополнительныеРеквизиты КАК НастройкаБизнесПроцессовДополнительныеРеквизиты
		//			   |		ПО ДополнительныеРеквизитыБП.Ссылка = НастройкаБизнесПроцессовДополнительныеРеквизиты.Свойство
		//			   |ГДЕ
		//			   |	ДополнительныеРеквизитыБП.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыБП.ВыгружатьАктивированныеЦены)
		//			   |	И НастройкаБизнесПроцессовДополнительныеРеквизиты.Ссылка.Код = &Код";
		//Запрос.УстановитьПараметр("Код",ЭтотОбъект.Метаданные().Имя);
		//
		//Результат = Запрос.Выполнить();
		//
		//ВыгружатьЦены = ложь;
		//
		//если не Результат.Пустой() тогда
		//	Выборка = Результат.Выбрать();
		//	Выборка.Следующий();
		//	ВыгружатьЦены = Выборка.Выгружать;
		//конецесли;	
		//
		//если ВыгружатьЦены тогда
		//	Выборка = ПланыОбмена.ОбменORDM.Выбрать();
		//	ЭтотУзел = ПланыОбмена.ОбменORDM.ЭтотУзел();
		//	Пока Выборка.Следующий() Цикл
		//		Узел = Выборка.Ссылка;
		//		Если Узел = ЭтотУзел Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		ЭтотОбъект.ОбменДанными.Получатели.Добавить(Узел);
		//	КонецЦикла;	
		//конецесли;	
		Izh_ОбменДаннымиPOS.Выгрузить(Состав.ВыгрузитьКолонку("Номенклатура"));
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьОписаниеЗадачи(ТочкаМаршрутаБизнесПроцесса)

	Рез = ТочкаМаршрутаБизнесПроцесса.Пояснение;
	
	сткДопРеквизитыБП = УправлениеБизнесПроцессамиСервер.ПолучитьДопРеквизитыНастройкиБизнеснесПроцесса(Ссылка);
	Если сткДопРеквизитыБП.ВариантСозданияБП = Перечисления.ВариантыСозданияБПНоваяЦена.ПоКатегории Тогда
		Рез = Рез + " По категории: ";
		КатегорииСтрокой = 	"";
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	НоваяЦенаСостав.Номенклатура.Родитель.Родитель.Родитель КАК Категория
			|ИЗ
			|	БизнесПроцесс.НоваяЦена.Состав КАК НоваяЦенаСостав
			|ГДЕ
			|	НоваяЦенаСостав.Ссылка = &Ссылка";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			КатегорииСтрокой = КатегорииСтрокой + ", """ + Выборка.Категория + """";
		КонецЦикла;
		
		Рез = Рез + Сред(КатегорииСтрокой, 3);
	КонецЕсли;
	
	Возврат Рез;
КонецФункции


спрПараметрыБП = Справочники.НастройкаБизнесПроцессов.НайтиПоКоду(Метаданные().Имя,,,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);

