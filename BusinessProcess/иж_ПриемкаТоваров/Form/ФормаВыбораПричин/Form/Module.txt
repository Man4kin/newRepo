
&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодвал(Форма)
	
	// !!!! efim
	#Если _ Тогда
		Форма = ЭтаФорма;
	#КонецЕсли
	// !!!!
	
	ПоставкаИзРЦ = Форма.ПоставкаИзРЦ;
	РазрешеноПриходоватьБрак = Форма.РазрешеноПриходоватьБрак;
	СписокПричин = Форма.СписокПричин;
	
	ТекущееРасхождение = 0;
	ТекущееРасхождениеПоБраку = 0;
	
	Если ПоставкаИзРЦ Тогда
		
		Для каждого СтрокаТЗ Из СписокПричин Цикл
			Если СтрокаТЗ.ПризнакПриемки = ПредопределенноеЗначение("Перечисление.РезультатПриемки.Брак") Тогда
				ТекущееРасхождениеПоБраку = ТекущееРасхождениеПоБраку + СтрокаТЗ.Количество;
			Иначе
				ТекущееРасхождение = ТекущееРасхождение + СтрокаТЗ.Количество;
			КонецЕсли;
		КонецЦикла;
		
	// {ВетровИА Обращение №0000136071
	ИначеЕсли РазрешеноПриходоватьБрак Тогда
		
		Для каждого СтрокаТЗ Из СписокПричин Цикл
			Если СтрокаТЗ.ПризнакПриемки = ПредопределенноеЗначение("Перечисление.РезультатПриемки.Брак")
				ИЛИ СтрокаТЗ.ПризнакПриемки = ПредопределенноеЗначение("Перечисление.РезультатПриемки.Недогруз") Тогда
				ТекущееРасхождениеПоБраку = ТекущееРасхождениеПоБраку + СтрокаТЗ.Количество;
			Иначе
				ТекущееРасхождение = ТекущееРасхождение + СтрокаТЗ.Количество;
			КонецЕсли;
		КонецЦикла;
	// ВетровИА Обращение №0000136071}	
	Иначе
		
		ТекущееРасхождение = СписокПричин.Итог("Количество");
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Форма, Новый Структура(
		"ТекущееРасхождение, ТекущееРасхождениеПоБраку",
		ТекущееРасхождение, ТекущееРасхождениеПоБраку
	));
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрСписокПричин = ПолучитьИзВременногоХранилища(Параметры.Причины);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СписокПричин", ПараметрСписокПричин);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СписокПричин.Причина,
		|	СписокПричин.Количество
		|ПОМЕСТИТЬ ВТ_СписокПричин
		|ИЗ
		|	&СписокПричин КАК СписокПричин
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_СписокПричин.Причина ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Пометка,
		|	Izh_ПричиныРасхожденийПриПриемке.Ссылка КАК Причина,
		|	Izh_ПричиныРасхожденийПриПриемке.ПризнакПриемки,
		|	ЕСТЬNULL(ВТ_СписокПричин.Количество, 0) КАК Количество
		|ИЗ
		|	Справочник.Izh_ПричиныРасхожденийПриПриемке КАК Izh_ПричиныРасхожденийПриПриемке
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокПричин КАК ВТ_СписокПричин
		|		ПО Izh_ПричиныРасхожденийПриПриемке.Ссылка = ВТ_СписокПричин.Причина";
	СписокПричин.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Расхождение = Izh_ОбщегоНазначенияКлиентСервер.ПоМодулю(Параметры.Расхождение);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "ПоставкаИзРЦ, Количество, РазрешеноПриходоватьБрак");
	
	ОбновитьПодвал(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗавершитьВыбор(Команда)
	
	Результат = Новый Структура(
		"ТекущаяСтрока, Причины",
		Параметры.ТекущаяСтрока,
		ЗавершитьВыборСервер()
	);
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

&НаСервере
Функция ЗавершитьВыборСервер()
	
	Результат = СписокПричин.Выгрузить(Новый Структура("Пометка", Истина));
	
	Возврат ПоместитьВоВременноеХранилище(Результат);
	
КонецФункции

&НаКлиенте
Процедура СписокПричинПриИзменении(Элемент)
	
	ОбновитьПодвал(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПричинПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.СписокПричин.ТекущиеДанные;
	Если НЕ ТекущаяСтрока.Пометка Тогда
		ТекущаяСтрока.Количество = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПричинКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.СписокПричин.ТекущиеДанные;
	ТекущаяСтрока.Пометка = (ТекущаяСтрока.Количество > 0);
	
КонецПроцедуры
