
Функция ФормаВыполненияЗадачи(Знач Задача, Знач ТочкаМаршрута) Экспорт 
	
	СписокВариантов = Неопределено;
	ДобавитьВариантОткрытияФормы(СписокВариантов, 
		ТочкиМаршрута.ЗаполнениеАкта,
		"БизнесПроцесс.иж_ПриемкаТоваров.Форма.ФормаАктПриемки",
		Задача
	);
	ДобавитьВариантОткрытияФормы(СписокВариантов,
		ТочкиМаршрута.ЗаполнениеАктаИзРЦ,
		"БизнесПроцесс.иж_ПриемкаТоваров.Форма.ФормаАктПриемки",
		Задача
	);
	
	Результат = СписокВариантов[ТочкаМаршрута];
	Если Результат = Неопределено Тогда
		Результат = Новый Структура();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьВариантОткрытияФормы(СписокВариантов, Знач ТочкаМаршрута, Знач ИмяФормы, Знач ПараметрыФормы)
	
	Если СписокВариантов = Неопределено Тогда
		СписокВариантов = Новый Соответствие();
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыФормы) <> Тип("Структура") Тогда
		ПараметрыФормы = Новый Структура("Ключ", ПараметрыФормы);
	КонецЕсли;
	
	СписокВариантов.Вставить(ТочкаМаршрута, Новый Структура(
		"ИмяФормы, ПараметрыФормы",
		ИмяФормы, ПараметрыФормы
	));
	
КонецПроцедуры


Процедура ЗапуститьПроцесс(Основание) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = Новый Структура(
		"БизнесПроцесс, Основание, Искать, Удалять, СтруктурнаяЕдиница",
		БизнесПроцессы.иж_ПриемкаТоваров,
		Основание.Ссылка, 
		Истина, 
		Ложь,
		Основание.СтруктурнаяЕдиница
	);
	УправлениеБизнесПроцессамиСервер.ЗапуститьБизнесПроцесс(Параметры);
	
КонецПроцедуры

Процедура ЗавершитьЗаконченныеПроцессы() Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТочкаЗаполнения = Новый Массив();
	ТочкаЗаполнения.Добавить(ТочкиМаршрута.ЗаполнениеАкта);
	ТочкаЗаполнения.Добавить(ТочкиМаршрута.ЗаполнениеАктаИзРЦ);
	
	ТочкиЗавершения = Новый Массив();
	ТочкиЗавершения.Добавить(ТочкиМаршрута.КорректировкаАкта);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ТочкиЗавершения, ТочкаЗаполнения);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТочкиЗавершения", ТочкиЗавершения);
	Запрос.УстановитьПараметр("ТочкиЗаполнения", ТочкаЗаполнения);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("СрокВыполнения", УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.СрокВыполненияПриемки));
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗадачаИсполнителя.Ссылка,
		|	ЗадачаИсполнителя.БизнесПроцесс
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ БизнесПроцесс.иж_ПриемкаТоваров КАК иж_ПриемкаТоваров
		|		ПО ЗадачаИсполнителя.БизнесПроцесс = иж_ПриемкаТоваров.Ссылка
		|ГДЕ
		|	иж_ПриемкаТоваров.Стартован
		|	И НЕ иж_ПриемкаТоваров.Завершен
		|	И НЕ ЗадачаИсполнителя.Выполнена
		|	И ЗадачаИсполнителя.ТочкаМаршрута В(&ТочкиЗавершения)
		|	И НЕ(ЗадачаИсполнителя.ТочкаМаршрута В (&ТочкиЗаполнения)
		|				И НЕ иж_ПриемкаТоваров.Корректировка
		|				И (&СрокВыполнения = 0
		|					ИЛИ РАЗНОСТЬДАТ(иж_ПриемкаТоваров.Основание.Дата, &ТекущаяДата, ДЕНЬ) < &СрокВыполнения))";
	НезавершенныеЗадачи = Запрос.Выполнить().Выгрузить();
	
	Если НезавершенныеЗадачи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СписокБП = НезавершенныеЗадачи.Скопировать();
	СписокБП.Свернуть("БизнесПроцесс");
	СписокБП = СписокБП.ВыгрузитьКолонку("БизнесПроцесс");
	Для каждого БП Из СписокБП Цикл
		БПОбъект = БП.ПолучитьОбъект();
		БПОбъект.ЗавершитьПроцесс = Истина;
		БПОбъект.Записать();
	КонецЦикла;
	
	Для каждого Задача Из НезавершенныеЗадачи Цикл
		ЗадачаОбъект = Задача.Ссылка.ПолучитьОбъект();
		ЗадачаОбъект.ВыполнитьЗадачу();
	КонецЦикла;
	
КонецПроцедуры
