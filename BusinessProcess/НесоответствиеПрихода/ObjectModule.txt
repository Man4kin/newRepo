Перем СпрПараметрыБП;



Процедура ПередЗаписью(Отказ)
	Дата = ТекущаяДата(); // установим дату бизнес-процесса
КонецПроцедуры

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	Если не спрПараметрыБП.Использование Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ЕстьНесоответствиеПоЦенамПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Если ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов") Тогда
		стрЦена = "Цена";
	Иначе
		стрЦена = "ЦенаБезНДС";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(Основание.ДокОснование) И ТипЗнч(Основание.ДокОснование) = Тип("ДокументСсылка.ПланируемаяПоставка") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав." + стрЦена + " КАК ЦенаПоставки,
		|	НоменклатураКонтрагента." + стрЦена + " КАК ЦенаЗаказа
		|ИЗ
		|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланируемаяПоставка.Состав КАК НоменклатураКонтрагента
		|		ПО ПриходнаяНакладнаяСостав.Номенклатура = НоменклатураКонтрагента.Номенклатура
		|			И ПриходнаяНакладнаяСостав.Ссылка.ДокОснование = НоменклатураКонтрагента.Ссылка
		|ГДЕ
		|	НоменклатураКонтрагента." + стрЦена + " <> ПриходнаяНакладнаяСостав." + стрЦена + "
		|	И ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		|	И НоменклатураКонтрагента.Ссылка = &ДокОснование";
		Запрос.УстановитьПараметр("ДокОснование",Основание.ДокОснование);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав." + стрЦена + " КАК ЦенаПоставки,
		|	НоменклатураКонтрагента.Цена КАК ЦенаЗаказа
		|ИЗ
		|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|		ПО ПриходнаяНакладнаяСостав.Номенклатура = НоменклатураКонтрагента.Номенклатура
		|			И ПриходнаяНакладнаяСостав.Ссылка.Контрагент = НоменклатураКонтрагента.Контрагент
		|ГДЕ
		|	НоменклатураКонтрагента.Цена <> ПриходнаяНакладнаяСостав." + стрЦена + "
		|	И ПриходнаяНакладнаяСостав.Ссылка = &Ссылка";
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка",Основание);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = НесоответствиеПоЦенам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	Записать();
	Результат = НЕ РезультатЗапроса.Пустой();
	
КонецПроцедуры

Процедура ЕстьНесоответствиеПоКоличествуПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Если НЕ ЗначениеЗаполнено(Основание.ДокОснование) Тогда
		Результат = Ложь;
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДвиженияТМЦ.Номенклатура КАК Номенклатура,
		|	ДвиженияТМЦ.Количество КАК КоличествоЗаказа,
		|	СУММА(ПриходнаяНакладнаяСостав.Количество) КАК КоличествоПрихода
		|ИЗ
		|	РегистрНакопления.ДвиженияТМЦ КАК ДвиженияТМЦ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|		ПО ДвиженияТМЦ.Номенклатура = ПриходнаяНакладнаяСостав.Номенклатура
		|ГДЕ
		|	ДвиженияТМЦ.Регистратор = &Регистратор
		|	И ПриходнаяНакладнаяСостав.Ссылка.ДокОснование = &Регистратор
		|	И ПриходнаяНакладнаяСостав.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ДвиженияТМЦ.Номенклатура,
		|	ДвиженияТМЦ.Количество";

	Запрос.УстановитьПараметр("Регистратор", Основание.ДокОснование);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = НесоответствиеПоКоличеству.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
		НоваяСтрока.ЕдиницаИзмерения = ОбработкаТабличныхЧастейСервер.ПолучитьЕдиницуИзмеренияНоменклатурыПоУмолчанию(НоваяСтрока.Номенклатура, Ложь);
		НоваяСтрока.Коэффициент = НоваяСтрока.ЕдиницаИзмерения.Коэффициент;
	КонецЦикла;
    Записать();
	Результат = НЕ РезультатЗапроса.Пустой();
КонецПроцедуры

Процедура ЕстьНесоответствиеНоменклатурыПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Если НЕ ЗначениеЗаполнено(Основание.ДокОснование) Тогда
		Результат = Ложь;
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Состав.Номенклатура
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
		|		ПланируемаяПоставкаСостав.Номенклатура КАК НоменклатураЗаказа
		|	ИЗ
		|		Документ.ПланируемаяПоставка.Состав КАК ПланируемаяПоставкаСостав
		|			ПОЛНОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|			ПО (ПриходнаяНакладнаяСостав.Номенклатура = ПланируемаяПоставкаСостав.Номенклатура)
		|				И (ПриходнаяНакладнаяСостав.Ссылка.ДокОснование = ПланируемаяПоставкаСостав.Ссылка)
		|	ГДЕ
		|		ПриходнаяНакладнаяСостав.Ссылка = &Ссылка) КАК Состав
		|ГДЕ
		|	Состав.НоменклатураЗаказа ЕСТЬ NULL ";

	Запрос.УстановитьПараметр("Ссылка",Основание);
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = НесоответствиеПоНоменклатуре.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;
    Записать();
	Результат = НЕ РезультатЗапроса.Пустой();
КонецПроцедуры

Процедура ОповещениеОНесоответствииПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
	Если здчЗадача = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	//здчЗадача.ДатаНапоминания = НачалоДня(ТекущаяДата());
	здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
	ФормируемыеЗадачи.Добавить(здчЗадача);
КонецПроцедуры

Процедура ОповещениеОНесоответствииОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	  Основание = ДанныеЗаполнения;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ДатаЗавершения = '00010101000000';
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	ДатаЗавершения = УправлениеБизнесПроцессамиСервер.ДатаЗавершенияБизнесПроцесса(Ссылка);
	Записать();
КонецПроцедуры


спрПараметрыБП = Справочники.НастройкаБизнесПроцессов.НайтиПоКоду(Метаданные().Имя,,,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
