Перем СпрПараметрыБП;

Процедура ЕстьНеРаспределенныйПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ПроверкаВесовогоТовара();
КонецПроцедуры

//проверяет необходимость добавления весового товара 
Функция ПроверкаВесовогоТовара()
	Выборка = Справочники.Весы.ВыбратьИерархически(); 
	Если НЕ Выборка.Следующий() Тогда
		Результат = Ложь;	//нет весов и не надо
	Иначе
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Ссылка", Основание);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница); //V
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Номенклатура.Транзакционный
		|			ТОГДА Номенклатура.Ссылка
		|		ИНАЧЕ Номенклатура.Родитель
		|	КОНЕЦ КАК Ссылка
		|ПОМЕСТИТЬ ТранзакционныйТовар
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТранзакционныйТовар.Ссылка
		|ИЗ
		|	ТранзакционныйТовар КАК ТранзакционныйТовар
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
		|		ПО ТранзакционныйТовар.Ссылка = СтатусыНоменклатуры.Номенклатура
		|			И (СтатусыНоменклатуры.СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница))
		|ГДЕ
		|	ТранзакционныйТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И ТранзакционныйТовар.Ссылка.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Весовой)
		|	И СтатусыНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТоваров.Активный)";
		
		Если Запрос.Выполнить().Пустой() Тогда
			Результат = Ложь;	//не прошел проверку транзакционный товар и не надо
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ВесовойТовар.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ВесовойТовар КАК ВесовойТовар
			|ГДЕ
			|	ВесовойТовар.Номенклатура В ИЕРАРХИИ
			|			(ВЫБРАТЬ
			|				ТранзакционныйТовар.Ссылка
			|			ИЗ
			|				ТранзакционныйТовар КАК ТранзакционныйТовар)";
			Если Запрос.Выполнить().Пустой() Тогда	//пустой значит еще ничего не привязали
				Если Основание.Транзакционный Тогда
					ТранзакционныйТовар = Основание;
				Иначе
					ТранзакционныйТовар = Основание.Родитель;
				КонецЕсли;
				мНоменклатураСШК = ШтриховыеКоды.ПолучитьМассивНоменклатурыСШКДляВесов(ТранзакционныйТовар);
				Если мНоменклатураСШК.Количество() = 0 Тогда	//нет шк, нечего привязывать
					Результат = Ложь;
				Иначе
					Результат = Истина;
				КонецЕсли;
			Иначе
				Результат = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	Если не спрПараметрыБП.Использование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
	Если здчЗадача = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	//здчЗадача.ДатаНапоминания = ТекущаяДата();
	здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
	ФормируемыеЗадачи.Добавить(здчЗадача);
КонецПроцедуры

Процедура РаспределениеПоВесамПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	здчЗадача = УправлениеБизнесПроцессамиСервер.СоздатьЗадачу(Ссылка, ТочкаМаршрутаБизнесПроцесса);
	//здчЗадача.ДатаНапоминания = НачалоДня(ТекущаяДата());
	Если здчЗадача <> Неопределено Тогда
		здчЗадача.РазрешитьИнтерактивноеВыполнение = Ложь; // руками выполнять нельзя
		ФормируемыеЗадачи.Добавить(здчЗадача);
	КонецЕсли;	  
КонецПроцедуры

Процедура РаспределениеПоВесамОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Не ПроверкаВЕсовогоТовара();
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Дата = ТекущаяДата();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Основание = ДанныеЗаполнения;
КонецПроцедуры

Процедура ЗаполнитьРеквизитыОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	Результат = Истина;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ДатаЗавершения = '00010101000000';
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	ДатаЗавершения = УправлениеБизнесПроцессамиСервер.ДатаЗавершенияБизнесПроцесса(Ссылка);
	Записать();
КонецПроцедуры

Процедура ЕслиТранзакционныйПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = Основание.Транзакционный;
КонецПроцедуры

спрПараметрыБП = Справочники.НастройкаБизнесПроцессов.НайтиПоКоду(Метаданные().Имя,,,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
