
//{ СИТЕК БрыляковЕЮ 2014-10-09  
Процедура Izh_ЗапускПриемкиТоваровПриЗаписи(Источник, Отказ) Экспорт
	
	БизнесПроцессы.иж_ПриемкаТоваров.ЗапуститьПроцесс(Источник);
	
КонецПроцедуры

Процедура Izh_ЗавершениеПриемкиТоваров() Экспорт
	
	БизнесПроцессы.иж_ПриемкаТоваров.ЗавершитьЗаконченныеПроцессы();
	
КонецПроцедуры

Процедура Izh_ЗапускОбработкиБрака() Экспорт
	
	БизнесПроцессы.иж_ОбработкаБрака.ЗапуститьПроцессыПоРасписанию();
	
КонецПроцедуры


Процедура Izh_БракПриПриемкеОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	// !!!! efim
	#Если _ Тогда
		Источник = Документы.ПриходнаяНакладная.СоздатьДокумент();
		Источник = Документы.КоррекцияЗапасов.СоздатьДокумент();
		//Источник = Документы.РасходнаяНакладная.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	ПроверитьОстатки = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
		
		КодОперации = Перечисления.КодыОпераций.ПоступлениеТоваров;
		Направление = ВидДвиженияНакопления.Приход;
		ПоДокументу = Источник.Ссылка;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.КоррекцияЗапасов")
		И (ТипЗнч(Источник.ДокОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") 
		ИЛИ ТипЗнч(Источник.ДокОснование) = Тип("ДокументСсылка.КоррекцияЗапасов")) Тогда
		
		ВидыСписания = Новый Массив();
		ВидыСписания.Добавить(ПланыВидовХарактеристик.СлужебныеЗначения.ВидСписанияПриПриемке);
		ВидыСписания.Добавить(ПланыВидовХарактеристик.СлужебныеЗначения.ВидСписанияПриРеализации);
		Для Сч = 0 По ВидыСписания.Количество() - 1 Цикл
			//++БИТ БВО 2015-06-16
			//ВидыСписания[Сч] = ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ВидыСписания[Сч]);
			ВидыСписания[Сч] = Справочники.ВидыСписания.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ВидыСписания[Сч]));
			//--БИТ БВО 2015-06-16
		КонецЦикла;
		Если ВидыСписания.Найти(Источник.ВидСписания) = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(Источник.ДокОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") И НЕ Источник.Оприходование Тогда
			КодОперации = Перечисления.КодыОпераций.ПоступлениеТоваров;
			Направление = ВидДвиженияНакопления.Расход;
		ИначеЕсли ТипЗнч(Источник.ДокОснование) = Тип("ДокументСсылка.КоррекцияЗапасов") И Источник.Оприходование Тогда
			КодОперации = Перечисления.КодыОпераций.ВозвратПоставщику;
			Направление = ВидДвиженияНакопления.Приход;
		Иначе
			Возврат;
		КонецЕсли;
		
		ПоДокументу = Источник.ДокОснование;
		Ограничитель = 5;
		Пока ТипЗнч(ПоДокументу) <> Тип("ДокументСсылка.ПриходнаяНакладная") И Ограничитель > 0 Цикл
			Попытка
				ПоДокументу = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПоДокументу, "ДокОснование");
			Исключение
				Возврат;
			КонецПопытки;
			Ограничитель = Ограничитель - 1;
		КонецЦикла;
		Если Ограничитель < 0 Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.РасходнаяНакладная") 
		И ТипЗнч(Источник.ДокОснование) = Тип("ДокументСсылка.ПриходнаяНакладная")
		И Источник.Возврат Тогда
		
		КодОперации = Перечисления.КодыОпераций.ВозвратПоставщику;
		Направление = ВидДвиженияНакопления.Расход;
		ПоДокументу = Источник.ДокОснование;
		
		ПроверитьОстатки = Истина;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Источник.Движения.Izh_БракПриПриемке.Записывать = Истина;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Состав.Номенклатура,
		|	Состав.Количество * Состав.Коэффициент КАК Количество,
		|	Состав.Сумма
		|ПОМЕСТИТЬ ВТ_Движения
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
		|		ПриходнаяНакладнаяСостав.Izh_КоличествоБрак КАК Количество,
		|		ПриходнаяНакладнаяСостав.Коэффициент КАК Коэффициент,
		|		ПриходнаяНакладнаяСостав.Цена * ПриходнаяНакладнаяСостав.Izh_КоличествоБрак КАК Сумма
		|	ИЗ
		|		Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|	ГДЕ
		|		ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		|		И ПриходнаяНакладнаяСостав.Izh_КоличествоБрак > 0
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КоррекцияЗапасовСостав.Номенклатура,
		|		КоррекцияЗапасовСостав.Количество,
		|		КоррекцияЗапасовСостав.Коэффициент,
		|		КоррекцияЗапасовСостав.Сумма
		|	ИЗ
		|		Документ.КоррекцияЗапасов.Состав КАК КоррекцияЗапасовСостав
		|	ГДЕ
		|		КоррекцияЗапасовСостав.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РасходнаяНакладнаяСостав.Номенклатура,
		|		РасходнаяНакладнаяСостав.Количество,
		|		РасходнаяНакладнаяСостав.Коэффициент,
		|		РасходнаяНакладнаяСостав.Сумма
		|	ИЗ
		|		Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
		|	ГДЕ
		|		РасходнаяНакладнаяСостав.Ссылка = &Ссылка) КАК Состав
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Движения.Номенклатура,
		|	ВТ_Движения.Количество,
		|	ВТ_Движения.Сумма
		|ИЗ
		|	ВТ_Движения КАК ВТ_Движения";
	Движения = Запрос.Выполнить().Выгрузить();
	
	Если Движения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Izh_ОбработкаКоллекций.ДобавитьИЗаполнитьКолонки(Движения, Новый Структура(
		"Период, Регистратор, ВидДвижения, КодОперации, ПоДокументу",
		Источник.Дата,
		Источник.Ссылка,
		Направление,
		КодОперации,
		ПоДокументу
	));
	
	Источник.Движения.Izh_БракПриПриемке.Загрузить(Движения);
	
КонецПроцедуры

Процедура Izh_КоррекцияКоррекцииЗапасовОбработкаЗаполнения(Источник, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	// !!!! efim
	#Если _ Тогда
		Источник = Документы.КоррекцияЗапасов.СоздатьДокумент();
		ДанныеЗаполнения = Источник.Ссылка;
	#КонецЕсли
	// !!!!
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КоррекцияЗапасов") Тогда
		
		Основание = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения, "ДокОснование");
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			
			ЗаполнитьЗначенияСвойств(Источник, ДанныеЗаполнения,, "Дата, Номер, Проведен, ПометкаУдаления, Автор");
			ЗаполнитьЗначенияСвойств(Источник, Новый Структура(
				"ДокОснование, Оприходование",
				ДанныеЗаполнения, 
				Истина
			));
			
			Источник.Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Izh_РасхожденияПриПриемкеОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	// !!!! efim
	#Если _ Тогда
		Источник = Документы.ПриходнаяНакладная.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	Источник.Движения.Izh_РасхожденияПриПриемке.Записывать = Истина;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяIzh_ПричиныРасхождений.Номенклатура,
		|	ПриходнаяНакладнаяIzh_ПричиныРасхождений.Причина,
		|	ПриходнаяНакладнаяIzh_ПричиныРасхождений.Количество,
		|	ВЫБОР
		|		КОГДА Состав.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ Состав.Сумма * ПриходнаяНакладнаяIzh_ПричиныРасхождений.Количество / Состав.Количество
		|	КОНЕЦ КАК Сумма
		|ИЗ
		|	Документ.ПриходнаяНакладная.Izh_ПричиныРасхождений КАК ПриходнаяНакладнаяIzh_ПричиныРасхождений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПриходнаяНакладнаяСостав.Ссылка КАК Ссылка,
		|			ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
		|			СУММА(ПриходнаяНакладнаяСостав.Сумма) КАК Сумма,
		|			СУММА(ПриходнаяНакладнаяСостав.Количество) КАК Количество
		|		ИЗ
		|			Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|		ГДЕ
		|			ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПриходнаяНакладнаяСостав.Номенклатура,
		|			ПриходнаяНакладнаяСостав.Ссылка) КАК Состав
		|		ПО ПриходнаяНакладнаяIzh_ПричиныРасхождений.Номенклатура = Состав.Номенклатура
		|			И ПриходнаяНакладнаяIzh_ПричиныРасхождений.Ссылка = Состав.Ссылка";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Движения = Результат.Выгрузить();
	Izh_ОбработкаКоллекций.ДобавитьКолонки(Движения, "СуммаУпр");
	Движения.ЗагрузитьКолонку(Движения.ВыгрузитьКолонку("Сумма"), "СуммаУпр");
	
	Izh_ОбработкаКоллекций.ДобавитьИЗаполнитьКолонки(Движения, Новый Структура("Период", Источник.Дата));
	
	Источник.Движения.Izh_РасхожденияПриПриемке.Загрузить(Движения);
	
КонецПроцедуры

// СИТЕК БрыляковЕЮ 2014-10-09 }
