
Процедура ОчиститьДополнительныеСвойства(Объект) Экспорт 
	
	Перем РегистрыДляКонтроля;
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриложениеПоАлкоголю.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	ДопСвойства = Объект.ДополнительныеСвойства;
	ДопСвойства.ДляПроведения.МенеджерВТ.Закрыть();
	
	Если ДопСвойства.ДляПроведения.Свойство("РегистрыДляКонтроля", РегистрыДляКонтроля) Тогда
		Для каждого НаборЗаписей Из РегистрыДляКонтроля Цикл
			НаборЗаписей.ДополнительныеСвойства.Очистить();
		КонецЦикла;
	КонецЕсли;
	
	ДопСвойства.Удалить("ДляПроведения");
	
КонецПроцедуры

Процедура ИнициализироватьДополнительныеСвойстваПередЗаписью(Объект, Знач РежимЗаписи) Экспорт 
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриходнаяНакладная.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	ДопСвойства = Объект.ДополнительныеСвойства;
	
	ДопСвойства.Вставить("ЭтоНовый", Объект.ЭтоНовый());
	ДопСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ИнициализироватьДополнительныеСвойства(Объект, Знач РежимПроведения) Экспорт 
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриходнаяНакладная.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	ДляПроведения = Новый Структура(
		"МенеджерВТ, Ссылка, РежимПроведения",
		Новый МенеджерВременныхТаблиц(),
		Объект.Ссылка,
		РежимПроведения
	);
	
	Объект.ДополнительныеСвойства.Вставить("ДляПроведения", ДляПроведения);
	
КонецПроцедуры

Процедура ЗаписатьНаборыЗаписей(Объект) Экспорт 
	
	Перем РегистрыДляКонтроля;
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриходнаяНакладная.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	ИменаРегистровДляКонтроля = Новый Массив();
	
	Если Объект.ДополнительныеСвойства.Свойство("РегистрыДляКонтроля", РегистрыДляКонтроля) Тогда
		
		Для каждого НаборЗаписей Из РегистрыДляКонтроля Цикл
			// !!!! efim
			#Если _ Тогда
				НаборЗаписей = РегистрыНакопления.УчетАлкоголяПоПроизводителям.СоздатьНаборЗаписей();
			#КонецЕсли
			// !!!!
			Если НаборЗаписей.Записывать Тогда
				
				ИменаРегистровДляКонтроля.Добавить(НаборЗаписей.Метаданные().Имя);
				
				НаборЗаписей.БлокироватьДляИзменения = Истина;
				
				ДопСвойстваНабора = НаборЗаписей.ДополнительныеСвойства;
				дсн = ДопСвойстваНабора;
				дсн.Вставить("КонтрольОстатков", Истина);
				дсн.Вставить("ЭтоНовый", Объект.ДополнительныеСвойства.ЭтоНовый);
				дсн.Вставить("ДляПроведения", Новый Структура(
					"МенеджерВТ", Объект.ДополнительныеСвойства.ДляПроведения.МенеджерВТ
				));
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Объект.ДополнительныеСвойства.Вставить("ИменаРегистровДляКонтроля", ИменаРегистровДляКонтроля);
	
	Объект.Движения.Записать();
	
КонецПроцедуры

Функция КонтролироватьОстатки(НаборЗаписей) Экспорт 
	
	Перем КонтрольОстатков;
	
	Возврат НаборЗаписей.ДополнительныеСвойства.Свойство("КонтрольОстатков", КонтрольОстатков) И КонтрольОстатков;
	
КонецФункции


Процедура ВыполнитьКонтрольОстатков(Объект, Отказ) Экспорт 
	
	Перем РегистрыДляКонтроля;
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриходнаяНакладная.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	ДопСвойства = Объект.ДополнительныеСвойства;
	
	Если НЕ ДопСвойства.Свойство("ИменаРегистровДляКонтроля", РегистрыДляКонтроля)
		ИЛИ РегистрыДляКонтроля.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивРезультатов = Новый Массив();
	
	Для каждого ИмяРегистра Из РегистрыДляКонтроля Цикл
		
		Если ИмяРегистра = "УчетАлкоголяПоПроизводителям" Тогда
			ПроверитьПроведениеПоУчетуАлкоголя(Объект, Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьПроведениеПоУчетуАлкоголя(Объект, Отказ)
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриложениеПоАлкоголю.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура %Номенклатура%/%ВидАлкогольнойПродукции%/%Производитель%
                            |Превышен остаток на %Количество% %ЕдиницаИзмерения%'");
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Объект.ДополнительныеСвойства.ДляПроведения.МенеджерВТ;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УчетАлкоголяПоПроизводителямОстатки.Номенклатура,
		|	УчетАлкоголяПоПроизводителямОстатки.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	УчетАлкоголяПоПроизводителямОстатки.ВидАлкогольнойПродукции,
		|	УчетАлкоголяПоПроизводителямОстатки.Производитель,
		|	-УчетАлкоголяПоПроизводителямОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.УчетАлкоголяПоПроизводителям.Остатки(
		|			,
		|			(СтруктурнаяЕдиница, Фирма, Номенклатура, ВидАлкогольнойПродукции, Производитель) В
		|				(ВЫБРАТЬ
		|					ДвиженияУчетАлкоголя.СтруктурнаяЕдиница,
		|					ДвиженияУчетАлкоголя.Фирма,
		|					ДвиженияУчетАлкоголя.Номенклатура,
		|					ДвиженияУчетАлкоголя.ВидАлкогольнойПродукции,
		|					ДвиженияУчетАлкоголя.Производитель
		|				ИЗ
		|					ДвиженияУчетАлкоголя КАК ДвиженияУчетАлкоголя)) КАК УчетАлкоголяПоПроизводителямОстатки
		|ГДЕ
		|	УчетАлкоголяПоПроизводителямОстатки.КоличествоОстаток < 0";
	СообщитьОбОшибкахПроведения(ШаблонСообщения, Объект, Отказ, Запрос.Выполнить());
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведения(Знач ШаблонСообщения, Объект, Отказ, Знач Результат)
	
	Таблица = Результат.Выгрузить();
	
	ДляПодстановки = Новый Структура();
	Для каждого Колонка Из Таблица.Колонки Цикл
		ДляПодстановки.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Для каждого СтрокаТЗ Из Таблица Цикл
		
		ЗаполнитьЗначенияСвойств(ДляПодстановки, СтрокаТЗ);
		ТекстСообщения = Izh_СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтрокуИзСтруктуры(ШаблонСообщения, ДляПодстановки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры
