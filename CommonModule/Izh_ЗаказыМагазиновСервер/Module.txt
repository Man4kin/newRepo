// Функция - Разделить таблицу значений на части
//
// Параметры:
//  ВходящаяТЗ			 - тип("ТаблицаЗначений") -  Таблица, которую необходимо разбить на части
//  КоличествоСтрокВТЗ	 - Количество строк в новых таблицах значений	 - 
// Возвращаемое значение:
//  Массив, элементы которого - это таблицы значений - 
Функция РазделитьТаблицуЗначенийНаЧасти(ВходящаяТЗ,КоличествоСтрокВТЗ) Экспорт
	МассивТЗ = Новый Массив;
	Если КоличествоСтрокВТЗ > 0 Тогда
		тзНовыйСостав = ВходящаяТЗ.СкопироватьКолонки();
		НомерСтроки = 1;
		Для Каждого СтрокаТЗ из ВходящаяТЗ Цикл
			Если НомерСтроки > КоличествоСтрокВТЗ Тогда
				МассивТЗ.Добавить(тзНовыйСостав);
				тзНовыйСостав = ВходящаяТЗ.СкопироватьКолонки();
				НомерСтроки = 1;
			КонецЕсли;	
			НоваяСтрока = тзНовыйСостав.добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		Если тзНовыйСостав.Количество()>0 Тогда
			МассивТЗ.Добавить(тзНовыйСостав);	
		КонецЕсли;
	Иначе	
		МассивТЗ.Добавить(ВходящаяТЗ);
	КонецЕсли;	
	Возврат МассивТЗ;
КонецФункции

// проверим только на количество созданных ТЗ
Функция Тест_РазделитьТаблицуЗначенийНаЧасти()
	ТестоваяТаблица = Новый ТаблицаЗначений;
	ТестоваяТаблица.Колонки.Добавить("ТестовоеЗначение");
	Генератор = Новый ГенераторСлучайныхЧисел();
	Для ъ=1 по 100 Цикл
		НоваяСтрока = ТестоваяТаблица.Добавить();	
		НоваяСтрока.ТестовоеЗначение_1 = Генератор.СлучайноеЧисло(1,10);
	КонецЦикла;
	МассивТЗ = РазделитьТаблицуЗначенийНаЧасти(ТестоваяТаблица,30);
	Возврат МассивТЗ.Количество() = 4;
КонецФункции

Процедура СформироватьДокументПеремещениеНаОснованииЗаказа(ДокументЗаказ,МассивДокументов,СкладРезерва)
	ДокПеремещение = Документы.Перемещение.СоздатьДокумент();
	ДокПеремещение.Заполнить(ДокументЗаказ.Ссылка);
	ДокПеремещение.Дата = ТекущаяДата();
	ДокПеремещение.СкладПолучатель = СкладРезерва;
	Попытка
		ДокПеремещение.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ДокПеремещение.Записать(РежимЗаписиДокумента.Запись);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка :"+ОписаниеОшибки()+"
		|Документ не проведен, только записан. Для резервирования товара необходимо его провести",ДокПеремещение.Ссылка);
	КонецПопытки;
	МассивДокументов.Добавить(ДокПеремещение);
КонецПроцедуры

// Функция - Сформировать заказ внешний
//
// Параметры:
//  ШапкаДокумента				 - Тип Структура -  с заполненными полями шапки документа
//  тзСостав					 - 	Тип ТаблицаЗначений - Таблица значений с данными табличной части
//  КоличествоСтрокВДокументе	 - Тип Число	 - Количество строк в одном документе
// Возвращаемое значение:
//  Тип Массив - Массив сформированных документов. При невозможности проведения, документ записывается и пользователю сообщается об ошибке
Функция СформироватьЗаказВнешний(ШапкаДокумента,тзСостав,КоличествоСтрокВДокументе=0) Экспорт
	Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница,"ТипСтруктурнойЕдиницы")<>Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		ВызватьИсключение "Процедура резервирования товара предусмотрена только для распределительного центра";
	КонецЕсли;
	СтруктураКонстант = Разработка_Ижтрейдинг_Сервер.ПолучитьЗначениеКонстанты("ЗагрузкаЗаказаПоставщика");
	МассивТЗ = РазделитьТаблицуЗначенийНаЧасти(тзСостав,КоличествоСтрокВДокументе);
	НеобходимоРезервирование = НЕ (ШапкаДокумента.Свойство("Склад") И ОбщегоНазначения.ПолучитьЗначениеРеквизита(ШапкаДокумента.Склад,"ТипСклада")=Перечисления.ТипыСкладов.Фруктовый);
	Если ШапкаДокумента.Свойство("Дата") Тогда
		ДатаДок = ШапкаДокумента.Дата;
	Иначе
		ДатаДок = ТекущаяДата();
	КонецЕсли;
	МассивДокументов = новый Массив;
	Для Каждого ТЗДокумента из МассивТЗ Цикл
		ДокументЗаказВнешний = Документы.ЗаказВнешний.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ДокументЗаказВнешний,ШапкаДокумента);
		ДокументЗаказВнешний.Дата = ДатаДок; 
		ДокументЗаказВнешний.Состав.Загрузить(ТЗДокумента);
		Для Каждого СтрокаТЧ из ДокументЗаказВнешний.Состав Цикл
			СтрокаТЧ.СуммаНДС = ОбработкаТабличныхЧастейСервер.РассчитатьСуммуНДС(СтрокаТЧ.Сумма, Истина, ОбщегоНазначения.ПолучитьЗначениеРеквизита(СтрокаТЧ.СтавкаНДС,"Ставка"));		
		КонецЦикла;
		Попытка
			
			ДокументЗаказВнешний.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
			
			ДокументЗаказВнешний.Записать(РежимЗаписиДокумента.Запись);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка :"+ОписаниеОшибки()+"
			|Документ не проведен, только записан. Для резервирования товара необходимо его провести",ДокументЗаказВнешний.Ссылка);
			
		КонецПопытки; 
		
		МассивДокументов.Добавить(ДокументЗаказВнешний);
		
		Если НеобходимоРезервирование Тогда
			
			СформироватьДокументПеремещениеНаОснованииЗаказа(ДокументЗаказВнешний,МассивДокументов,СтруктураКонстант.СкладРезерва);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивДокументов;
КонецФункции