//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//Процедура ОбменДанными(Ссылка) Экспорт
//	ВсеОшибки = "";
//	КоличествоОшибок = 0;
//	КоличествоПакетов = 0;
//	Попытка
//		ВебСервис = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВебСервисRMS);
//		Определение = Новый WSОпределения(ВебСервис.URL,ВебСервис.Имя,ВебСервис.Пароль);
//		URIПространстваИмен = Определение.Сервисы.Получить(0).URIПространстваИмен;
//		ИмяСервиса = Определение.Сервисы.Получить(0).Имя;
//		ИмяТочки = Определение.Сервисы.Получить(0).ТочкиПодключения.Получить(0).Имя;
//		Прокси = Новый WSПрокси(Определение,URIПространстваИмен,ИмяСервиса,ИмяТочки);
//		Прокси.Пользователь = ВебСервис.Имя;
//		Прокси.Пароль = ВебСервис.Пароль;
//	Исключение
//		Ошибка = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке(),"WebService ЦВД");
//		ВызватьИсключение(Ошибка);
//	КонецПопытки;
//	
//	//Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
//		ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Ссылка, Ссылка.НомерОтправленного+1);
//		Пока ВыборкаИзменений.Следующий() Цикл
//			Ошибка = "";
//			Объект = ВыборкаИзменений.Получить();
//			ТипОбъекта = ТипЗнч(Объект);
//			Ушло = Ложь;
//			Если ТипОбъекта = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
//				//Если ПараметрыСеанса.ЭтоЦентр И НЕ Объект.ОбработанЦВД  Тогда
//				//	Ушло = Ложь;
//				//Иначе
//				Ушло = ОтправитьПриходнуюНакладную(Объект,Прокси,Ошибка);
//				//КонецЕсли;	
//			ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.КорректировкаПоступления") Тогда
//				//Если ПараметрыСеанса.ЭтоЦентр И НЕ Объект.ОбработанЦВД  Тогда
//				//	Ушло = Ложь;
//				//Иначе
//				Ушло = ОтправитьКорректировкуПоступления(Объект,Прокси,Ошибка);
//				//КонецЕсли;	
//			ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.РегистрацияСчетФактуры") Тогда
//				//Если ПараметрыСеанса.ЭтоЦентр И НЕ Объект.ОбработанЦВД  Тогда
//				//	Ушло = Ложь;
//				//Иначе
//				Ушло = ОтправитьРегистрациюСчетФактуры(Объект,Прокси,Ошибка);
//				//КонецЕсли;
//			ИначеЕсли ТипОбъекта = Тип("УдалениеОбъекта") Тогда
//				Ушло = ОтправитьУдалениеОбъекта(Объект,Прокси,Ошибка);
//			КонецЕсли;	

//			Если Ушло Тогда
//				ПланыОбмена.УдалитьРегистрациюИзменений(Ссылка, Объект);
//			КонецЕсли; 
//			КоличествоПакетов = КоличествоПакетов + 1;
//			Если Ошибка <> "" Тогда
//				ВсеОшибки = Ошибка;
//				КоличествоОшибок = КоличествоОшибок + 1;
//			КонецЕсли;	
//		КонецЦикла;
//	//Иначе
//	//	ТаблицаОбъектов = Новый ТаблицаЗначений;
//	//	ТаблицаОбъектов.Колонки.Добавить("Объект");
//	//	ТаблицаОбъектов.Колонки.Добавить("ТипОбъекта");
//	//	ТаблицаОбъектов.Колонки.Добавить("СтруктурнаяЕдиница");
//	//	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Ссылка, Ссылка.НомерОтправленного+1);
//	//	Пока ВыборкаИзменений.Следующий() Цикл
//	//		Объект = ВыборкаИзменений.Получить();
//	//		ТипОбъекта = ТипЗнч(Объект);
//	//		СтрокаТаблицы = ТаблицаОбъектов.Добавить();
//	//		СтрокаТаблицы.Объект = Объект;
//	//		СтрокаТаблицы.ТипОбъекта = ТипОбъекта;
//	//		СтрокаТаблицы.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
//	//	КонецЦикла;
//	//	ТаблицаОбъектов.Сортировать("СтруктурнаяЕдиница");
//	//	Для Каждого Строка Из ТаблицаОбъектов Цикл
//	//		Ошибка = "";
//	//		Ушло = Ложь;
//	//		Если Строка.ТипОбъекта = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
//	//			Ушло = ОтправитьПриходнуюНакладную(Строка.Объект,Прокси,Ошибка);
//	//		ИначеЕсли Строка.ТипОбъекта = Тип("УдалениеОбъекта") Тогда
//	//			Ушло = ОтправитьУдалениеОбъекта(Строка.Объект,Прокси,Ошибка);
//	//		КонецЕсли;	
//	//		Если Ушло Тогда
//	//			ПланыОбмена.УдалитьРегистрациюИзменений(Ссылка, Строка.Объект);
//	//		КонецЕсли; 
//	//		КоличествоПакетов = КоличествоПакетов + 1;
//	//		Если Ошибка <> "" Тогда
//	//			ВсеОшибки = Ошибка;
//	//			КоличествоОшибок = КоличествоОшибок + 1;
//	//		КонецЕсли;	
//	//	КонецЦикла;
//	//КонецЕсли;
//	Если ВсеОшибки <> "" Тогда
//		Сообшение = "Всего ошибок - "+КоличествоОшибок+" из "+КоличествоПакетов+"
//		| последняя ошибка:
//		|"+ВсеОшибки;
//		ВызватьИсключение(Сообшение);
//	КонецЕсли;	
//КонецПроцедуры

Процедура ОбменДанными(Ссылка) Экспорт
	
	ВсеОшибки = "";
	КоличествоОшибок = 0;
	КоличествоПакетов = 0;
	Попытка
		ВебСервис = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВебСервисRMS);
		//НастройкаПроксиСервера = ПолучениеФайловИзИнтернета.ПолучитьНастройкиПроксиНаСервере1СПредприятие();
		//ИнтернетПрокси = ?(НастройкаПроксиСервера = Неопределено, Неопределено, ПолучениеФайловИзИнтернетаКлиентСервер.СформироватьПрокси(НастройкаПроксиСервера, "http"));
		Определение = Новый WSОпределения(ВебСервис.URL,ВебСервис.Имя,ВебСервис.Пароль);
		URIПространстваИмен = Определение.Сервисы.Получить(0).URIПространстваИмен;
		ИмяСервиса = Определение.Сервисы.Получить(0).Имя;
		ИмяТочки = Определение.Сервисы.Получить(0).ТочкиПодключения.Получить(0).Имя;
		Прокси = Новый WSПрокси(Определение,URIПространстваИмен,ИмяСервиса,ИмяТочки);
		Прокси.Пользователь = ВебСервис.Имя;
		Прокси.Пароль = ВебСервис.Пароль;
	Исключение
		Ошибка = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке(),"WebService ЦВД");
		ВызватьИсключение(Ошибка);
	КонецПопытки;
	
	//{ СИТЕК БрыляковЕЮ 2015-05-21  
	ДолжныБытьПроведены = Izh_ОбщегоНазначенияКлиентСервер.ЗначенияВМассиве(
		Тип("ДокументОбъект.ПриходнаяНакладная"),
		Тип("ДокументОбъект.КорректировкаПоступления")
	);
	// СИТЕК БрыляковЕЮ 2015-05-21 }
	
	//Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Ссылка, Ссылка.НомерОтправленного+1);
		Пока ВыборкаИзменений.Следующий() Цикл
			Ошибка = "";
			Объект = ВыборкаИзменений.Получить();
			ТипОбъекта = ТипЗнч(Объект);
			Ушло = Ложь;
			
			//{ СИТЕК БрыляковЕЮ 2015-05-21  
			Выгружать = Истина;
			Если ДолжныБытьПроведены.Найти(ТипЗнч(Объект)) <> Неопределено Тогда
				Выгружать = Ложь;
			КонецЕсли;	
			
			Если Выгружать Тогда
			// СИТЕК БрыляковЕЮ 2015-05-21 }
			
			Если ТипОбъекта = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
				//Если ПараметрыСеанса.ЭтоЦентр И НЕ Объект.ОбработанЦВД  Тогда
				//	Ушло = Ложь;
				//Иначе
					Ушло = ОтправитьПриходнуюНакладную(Объект,Прокси,Ошибка);
				//КонецЕсли;	
			ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.КорректировкаПоступления") Тогда
				//Если ПараметрыСеанса.ЭтоЦентр И НЕ Объект.ОбработанЦВД  Тогда
				//	Ушло = Ложь;
				//Иначе
					Ушло = ОтправитьКорректировкуПоступления(Объект,Прокси,Ошибка);
				//КонецЕсли;	
			ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.РегистрацияСчетФактуры") Тогда
				//Если ПараметрыСеанса.ЭтоЦентр И НЕ Объект.ОбработанЦВД  Тогда
				//	Ушло = Ложь;
				//Иначе
					Ушло = ОтправитьРегистрациюСчетФактуры(Объект,Прокси,Ошибка);
				//КонецЕсли;				
			ИначеЕсли ТипОбъекта = Тип("УдалениеОбъекта") Тогда
				Ушло = ОтправитьУдалениеОбъекта(Объект,Прокси,Ошибка);
				
			//{ СИТЕК БрыляковЕЮ 2015-05-08  
			Иначе
				//Ушло = Izh_ОбменДаннымиЦВД.ОтправитьОбъект(Объект, Прокси, Ошибка);
			// СИТЕК БрыляковЕЮ 2015-05-08 }
			
			КонецЕсли;	
			
			//{ СИТЕК БрыляковЕЮ 2015-05-21  
			КонецЕсли;
			// СИТЕК БрыляковЕЮ 2015-05-21 }
			
			Если Ушло Тогда
				ПланыОбмена.УдалитьРегистрациюИзменений(Ссылка, Объект);
			КонецЕсли; 
			КоличествоПакетов = КоличествоПакетов + 1;
			Если Ошибка <> "" Тогда
				ВсеОшибки = Ошибка;
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;	
		КонецЦикла;
	//Иначе
	//	ТаблицаОбъектов = Новый ТаблицаЗначений;
	//	ТаблицаОбъектов.Колонки.Добавить("Объект");
	//	ТаблицаОбъектов.Колонки.Добавить("ТипОбъекта");
	//	ТаблицаОбъектов.Колонки.Добавить("СтруктурнаяЕдиница");
	//	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Ссылка, Ссылка.НомерОтправленного+1);
	//	Пока ВыборкаИзменений.Следующий() Цикл
	//		Объект = ВыборкаИзменений.Получить();
	//		ТипОбъекта = ТипЗнч(Объект);
	//		СтрокаТаблицы = ТаблицаОбъектов.Добавить();
	//		СтрокаТаблицы.Объект = Объект;
	//		СтрокаТаблицы.ТипОбъекта = ТипОбъекта;
	//		СтрокаТаблицы.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
	//	КонецЦикла;
	//	ТаблицаОбъектов.Сортировать("СтруктурнаяЕдиница");
	//	Для Каждого Строка Из ТаблицаОбъектов Цикл
	//		Ошибка = "";
	//		Ушло = Ложь;
	//		Если Строка.ТипОбъекта = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
	//			Ушло = ОтправитьПриходнуюНакладную(Строка.Объект,Прокси,Ошибка);
	//		ИначеЕсли Строка.ТипОбъекта = Тип("УдалениеОбъекта") Тогда
	//			Ушло = ОтправитьУдалениеОбъекта(Строка.Объект,Прокси,Ошибка);
	//		КонецЕсли;	
	//		Если Ушло Тогда
	//			ПланыОбмена.УдалитьРегистрациюИзменений(Ссылка, Строка.Объект);
	//		КонецЕсли; 
	//		КоличествоПакетов = КоличествоПакетов + 1;
	//		Если Ошибка <> "" Тогда
	//			ВсеОшибки = Ошибка;
	//			КоличествоОшибок = КоличествоОшибок + 1;
	//		КонецЕсли;	
	//	КонецЦикла;
	//КонецЕсли;
	Если ВсеОшибки <> "" Тогда
		Сообшение = "Всего ошибок - "+КоличествоОшибок+" из "+КоличествоПакетов+"
		| последняя ошибка:
		|"+ВсеОшибки;
		ВызватьИсключение(Сообшение);
	КонецЕсли;	
КонецПроцедуры
//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//Функция ОтправитьСообщение(Package,Прокси,Имя)
//	ЗаписьXML = Новый ЗаписьXML;
//	ЗаписьXML.УстановитьСтроку();
//	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,Package,Имя,,,НазначениеТипаXML.Явное);
//	Данные = ЗаписьXML.Закрыть();
//	Результат = Истина;
//	МестоВызова = ?(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.Центр,"center","sh/"+СокрЛП(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Код));
//	Попытка
//		Результат = Прокси.DataExchange(МестоВызова,Данные);
//		Если Результат = Ложь Тогда
//			ЗаписьЖурналаРегистрации("WebService ЦВД", УровеньЖурналаРегистрации.Ошибка,,,Данные);
//			Package = Данные;
//		Иначе	
//			Package = "";
//		КонецЕсли;	
//	Исключение
//		Package = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке(),"WebService ЦВД");
//		Результат = Ложь;
//	КонецПопытки;
//	Возврат Результат;
//КонецФункции

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//Функция ОтправитьПриходнуюНакладную(Объект,Прокси,Ошибка)
//	ТипДокумента = ФабрикаXDTO.Тип("http://apm-consult.ru/RS", "DocumentObject_ПриходнаяНакладная_ЦВД");
//	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
//	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
//	Пакет.DeletionMark = Объект.ПометкаУдаления;
//	Пакет.Date = Объект.Дата;
//	Пакет.Number = Объект.Номер;
//	Пакет.Posted = Объект.Проведен;
//	Пакет.Фирма = Строка(Объект.Фирма.УникальныйИдентификатор());
//	Пакет.Автор = Строка(Объект.Автор.УникальныйИдентификатор());
//	Пакет.БонуснаяПоставка = Объект.БонуснаяПоставка;
//	Пакет.Валюта = Строка(Объект.Валюта.УникальныйИдентификатор());
//	//Котлячкова ++ 29,01,15  Ошибки обмена ЦВД.
//	Пакет.Грузоотправитель = ?(Объект.Грузополучатель = Неопределено,"",Объект.Грузоотправитель.Код);
//	//Котлячкова -- 29,01,15
//	Пакет.ГрузополучательТип = ?(Объект.Грузополучатель = Неопределено,"",Объект.Грузополучатель.Метаданные().Имя);
//	Пакет.Грузополучатель = ?(Объект.Грузополучатель = Неопределено,"",Объект.Грузополучатель.Код);
//	Пакет.ДатаДокумента = Объект.ДатаДокумента;
//	Пакет.ДатаСФ = Объект.ДатаСФ;
//	Пакет.Комментарий = Объект.Комментарий;
//	Пакет.КонтрагентТип = Объект.Контрагент.Метаданные().Имя;
//	Пакет.Контрагент = Объект.Контрагент.Код;
//	Пакет.Курс = Объект.Курс;
//	Пакет.Кратность = Объект.Кратность;
//	Пакет.НомерДокумента = Объект.НомерДокумента;
//	Пакет.НомерСФ = Объект.НомерСФ;
//	Пакет.Приемщик = Строка(Объект.Приемщик.УникальныйИдентификатор());
//	Пакет.Склад = Строка(Объект.Склад.УникальныйИдентификатор());
//	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
//	Попытка
//		Пакет.ТипДоговора = Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Объект.ТипДоговора)).Имя;
//	Исключение
//	КонецПопытки;
//	Пакет.СуммаИтого = Объект.СуммаИтого;
//	Пакет.СуммаНДСИтого = Объект.СуммаНДСИтого;
//	Пакет.ДокОснование = ?(Объект.ДокОснование = Неопределено,"",Строка(Объект.ДокОснование.УникальныйИдентификатор()));
//	Пакет.ДокОснованиеТип = ?(Объект.ДокОснование = Неопределено,"",Объект.ДокОснование.Метаданные().Имя);
//	Пакет.ОбработанЦВД = Объект.ОбработанЦВД;
//	Пакет.Контролер = Строка(Объект.Контролер.УникальныйИдентификатор());;
//	
//	ТипСостав = ФабрикаXDTO.Тип("http://apm-consult.ru/RS", "DocumentTabularSectionRow_ПриходнаяНакладная_Состав_ЦВД");
//	Для Каждого Строка Из Объект.Состав Цикл
//		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
//		ПакетСостав.Номенклатура = Строка.Номенклатура.Код;
//		ПакетСостав.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения.Наименование;
//		ПакетСостав.Количество = Строка.Количество;
//		ПакетСостав.КоличествоПоДокументу = Строка.КоличествоПоДокументу;
//		ПакетСостав.Коэффициент = Строка.Коэффициент;
//		ПакетСостав.Цена = Строка.Цена;
//		//{БредовЮГ 2013-09-17 Добавил в обмен цену протокола, т.к. она не учавствовала в обмене
//		ПакетСостав.ЦенаПротокола = Строка.ЦенаПротокола;
//		//БредовЮГ 2013-09-17 Добавил в обмен цену протокола, т.к. она не учавствовала в обмене}
//		ПакетСостав.Вес = Строка.Вес;
//		ПакетСостав.ЕдиницаВеса = Строка.ЕдиницаВеса.Код;
//		ПакетСостав.СтавкаНДС = Строка.СтавкаНДС.Ставка;
//		ПакетСостав.Сумма = Строка.Сумма;
//		ПакетСостав.СуммаНДС = Строка.СуммаНДС;
//		Пакет.Состав.Добавить(ПакетСостав);
//	КонецЦикла;
//	
//	
//	//Результат = ОтправитьСообщение(Пакет,Прокси,"DocumentObject_ПриходнаяНакладная");
//	//Ошибка = Пакет;
//	
//	КодЛокации = ?(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.Центр,Формат(Объект.СтруктурнаяЕдиница.Код,"ЧГ="),"center");
//	
//	RibMessages = ОбменДаннымиRIBСервер.УпаковатьВСообщение(Объект.Дата,Объект.Номер,Пакет,"DocumentObject_ПриходнаяНакладная_ЦВД","CID","RS_ПриходнаяНакладная",КодЛокации);
//	Результат = ОбменДаннымиRIBСервер.ОтправитьСообщение(RibMessages,Прокси);
//	Ошибка = RibMessages;
//	Возврат Результат;
//КонецФункции

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Функция ОтправитьКорректировкуПоступления(Объект,Прокси,Ошибка)
//	ТипДокумента = ФабрикаXDTO.Тип("http://apm-consult.ru/RS", "DocumentObject_КорректировкаПоступления_ЦВД");
//	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
//	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
//	Пакет.DeletionMark = Объект.ПометкаУдаления;
//	Пакет.Date = Объект.Дата;
//	Пакет.Number = Объект.Номер;
//	Пакет.Posted = Объект.Проведен;
//	Пакет.Фирма = Строка(Объект.Фирма.УникальныйИдентификатор());
//	Пакет.Автор = Строка(Объект.Автор.УникальныйИдентификатор());
//	Пакет.ДатаДокумента = Объект.ДатаДокумента;
//	Пакет.ДатаСФ = Объект.ДатаСФ;
//	Пакет.Комментарий = Объект.Комментарий;
//	Пакет.КонтрагентТип = Объект.Контрагент.Метаданные().Имя;
//	Пакет.Контрагент = Объект.Контрагент.Код;
//	Пакет.НомерДокумента = Объект.НомерДокумента;
//	Пакет.НомерСФ = Объект.НомерСФ;
//	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
//	Пакет.СуммаИтого = Объект.СуммаИтого;
//	Пакет.СуммаНДСИтого = Объект.СуммаНДСИтого;
//	Пакет.РежимКорректировки = Метаданные.Перечисления.РежимыКорректировок.EnumValues.Get(Перечисления.РежимыКорректировок.Индекс(Объект.РежимКорректировки)).Имя;
//	Пакет.ДокументПоступления = ?(Объект.ДокументПоступления = Неопределено,"",Строка(Объект.ДокументПоступления.УникальныйИдентификатор()));
//	Пакет.ДокументПоступленияТип = ?(Объект.ДокументПоступления = Неопределено,"",Объект.ДокументПоступления.Метаданные().Имя);
//	Пакет.ИсправляемыйДокумент = ?(Объект.ИсправляемыйДокумент = Неопределено,"",Строка(Объект.ИсправляемыйДокумент.УникальныйИдентификатор()));
//	Пакет.ИсправляемыйДокументТип = ?(Объект.ИсправляемыйДокумент = Неопределено,"",Объект.ИсправляемыйДокумент.Метаданные().Имя);
//	Пакет.ОбработанЦВД = Объект.ОбработанЦВД;
//	
//	ТипСостав = ФабрикаXDTO.Тип("http://apm-consult.ru/RS", "DocumentTabularSectionRow_КорректировкаПоступления_Состав_ЦВД");
//	Для Каждого Строка Из Объект.Состав Цикл
//		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
//		ПакетСостав.Номенклатура = Строка.Номенклатура.Код;
//		ПакетСостав.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения.Наименование;
//		ПакетСостав.Количество = Строка.Количество;
//		ПакетСостав.КоличествоДоИзменения = Строка.КоличествоДоИзменения;
//		ПакетСостав.КоличествоДоКорректировки = Строка.КоличествоДоКорректировки;
//		ПакетСостав.Коэффициент = Строка.Коэффициент;
//		ПакетСостав.Цена = Строка.Цена;
//		ПакетСостав.ЦенаДоКорректировки = Строка.ЦенаДоКорректировки;
//		ПакетСостав.ЦенаДоИзменения = Строка.ЦенаДоИзменения;
//		ПакетСостав.СуммаНДС = Строка.СуммаНДС;
//		ПакетСостав.СуммаНДСДоКорректировки = Строка.СуммаНДСДоКорректировки;
//		ПакетСостав.СуммаНДСДоИзменения = Строка.СуммаНДСДоИзменения;
//		ПакетСостав.Сумма = Строка.Сумма;
//		ПакетСостав.СуммаДоКорректировки = Строка.СуммаДоКорректировки;
//		ПакетСостав.СуммаДоИзменения = Строка.СуммаДоИзменения;
//		ПакетСостав.СтавкаНДС = Строка.СтавкаНДС.Ставка;
//		ПакетСостав.СтавкаНДСДоИзменения = Строка.СтавкаНДСДоИзменения.Ставка;
//		ПакетСостав.Вес = Строка.Вес;
//		ПакетСостав.ЕдиницаВеса = Строка.ЕдиницаВеса.Код;
//		ПакетСостав.ЕстьВДокументеПоступления = Строка.ЕстьВДокументеПоступления;
//		Пакет.Состав.Добавить(ПакетСостав);
//	КонецЦикла;
//	
//	
//	КодЛокации = ?(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.Центр,Формат(Объект.СтруктурнаяЕдиница.Код,"ЧГ="),"center");
//	
//	RibMessages = ОбменДаннымиRIBСервер.УпаковатьВСообщение(Объект.Дата,Объект.Номер,Пакет,"DocumentObject_КорректировкаПоступления_ЦВД","CID","RS_КорректировкаПоступления",КодЛокации);
//	Результат = ОбменДаннымиRIBСервер.ОтправитьСообщение(RibMessages,Прокси);
//	Ошибка = RibMessages;
//	Возврат Результат;
//КонецФункции

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Функция ОтправитьРегистрациюСчетФактуры(Объект,Прокси,Ошибка)
//	
//	ТипДокумента = ФабрикаXDTO.Тип("http://apm-consult.ru/RS", "DocumentObject_РегистрацияСчетФактуры_ЦВД");
//	Пакет = ФабрикаXDTO.Создать(ТипДокумента);

//	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
//	Пакет.DeletionMark = Объект.ПометкаУдаления;
//	Пакет.Date = Объект.Дата;
//	Пакет.Number = Объект.Номер;
//	Пакет.Posted = Объект.Проведен;
//	Пакет.Фирма = Строка(Объект.Фирма.УникальныйИдентификатор());
//	Пакет.Автор = Строка(Объект.Автор.УникальныйИдентификатор());
//	Пакет.ВидСчетаФактуры = Метаданные.Перечисления.ВидСчетаФактурыПолученного.EnumValues.Get(Перечисления.ВидСчетаФактурыПолученного.Индекс(Объект.ВидСчетаФактуры)).Имя;
//	Пакет.Комментарий = Объект.Комментарий;
//	Пакет.КонтрагентТип = Объект.Контрагент.Метаданные().Имя;
//	Пакет.Контрагент = Объект.Контрагент.Код;
//	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
//	Пакет.НомерВходящегоДокумента = Объект.НомерВходящегоДокумента;
//	Пакет.ДатаВходящегоДокумента = Объект.ДатаВходящегоДокумента;
//	
//	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда 
//		Пакет.ДокументОснование = Строка(Объект.ДокументОснование.УникальныйИдентификатор());
//		Пакет.ДокументОснованиеТип = Объект.ДокументОснование.Метаданные().Имя;
//	Иначе
//		Пакет.ДокументОснование = "";
//		Пакет.ДокументОснованиеТип = "";
//	КонецЕсли;
//	
//	Пакет.Фирма = Строка(Объект.Фирма.УникальныйИдентификатор());
//	Пакет.НомерИсправления = Объект.НомерИсправления;
//	Пакет.ДатаИсправления = Объект.ДатаИсправления;
//	Пакет.Исправление = Объект.Исправление;
//	Пакет.ИсправляемыйСчетФактура = Строка(Объект.ИсправляемыйСчетФактура.УникальныйИдентификатор());
//	Пакет.НомерИсходногоДокумента = Объект.НомерИсходногоДокумента;
//	Пакет.ДатаИсходногоДокумента = Объект.ДатаИсходногоДокумента;
//	Пакет.УчитыватьИсправлениеИсходногоДокумента = Объект.УчитыватьИсправлениеИсходногоДокумента;
//	Пакет.НомерИсправленияИсходногоДокумента = Объект.НомерИсправленияИсходногоДокумента;
//	Пакет.ДатаИсправленияИсходногоДокумента = Объект.ДатаИсправленияИсходногоДокумента;
//	Пакет.НДСПредъявленКВычету = Объект.НДСПредъявленКВычету;
//	Пакет.СчетФактураБезНДС = Объект.СчетФактураБезНДС;
//	Пакет.КодВидаОперации = Объект.КодВидаОперации;
//	Пакет.КодСпособаПолучения = Объект.КодСпособаПолучения;
//	Пакет.СуммаДокумента = Объект.СуммаДокумента;
//	Пакет.СуммаУвеличение = Объект.СуммаУвеличение;
//	Пакет.СуммаУменьшение = Объект.СуммаУменьшение;
//	Пакет.СуммаНДСДокумента = Объект.СуммаНДСДокумента;
//	Пакет.СуммаНДСУвеличение = Объект.СуммаНДСУвеличение;
//	Пакет.СуммаНДСУменьшение = Объект.СуммаНДСУменьшение;
//	Пакет.ОбработанЦВД = Объект.ОбработанЦВД;
//	
//	КодЛокации = ?(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.Центр,Формат(Объект.СтруктурнаяЕдиница.Код,"ЧГ="),"center");
//	
//	RibMessages = ОбменДаннымиRIBСервер.УпаковатьВСообщение(Объект.Дата,Объект.Номер,Пакет,"DocumentObject_РегистрацияСчетФактуры_ЦВД","CID","RS_РегистрацияСчетФактуры",КодЛокации);
//	Результат = ОбменДаннымиRIBСервер.ОтправитьСообщение(RibMessages,Прокси);
//	Ошибка = RibMessages;
//	Возврат Результат;
//	
//КонецФункции

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Функция ОтправитьУдалениеОбъекта(Объект,Прокси,Ошибка)
//	ТипДокумента = ФабрикаXDTO.Тип("http://apm-consult.ru/RS", "УдалениеОбъекта");
//	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
//	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
//	Пакет.Тип = ПривестиТип(Объект.Ссылка.Метаданные().Имя,Объект.Ссылка);
//	//Результат = ОтправитьСообщение(Пакет,Прокси,"УдалениеОбъекта");
//	//Ошибка = Пакет;
//	КодЛокации = ?(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.Центр,Формат(Объект.СтруктурнаяЕдиница.Код,"ЧГ="),"center");
//	RibMessages = ОбменДаннымиRIBСервер.УпаковатьВСообщение(Объект.Дата,Объект.Номер,Пакет,"УдалениеОбъекта","CID","RS_УдалениеОбъекта",КодЛокации);
//	Результат = ОбменДаннымиRIBСервер.ОтправитьСообщение(RibMessages,Прокси);
//	Ошибка = RibMessages;
//	Возврат Результат;
//КонецФункции

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Функция ПривестиТип(Тип,Ссылка)
//	Если Тип = "РасходнаяНакладная" Тогда
//		Если Ссылка.Возврат Тогда
//			Тип = "ВозвратнаяНакладная";
//		КонецЕсли;	
//	ИначеЕсли Тип = "ВозвратнаяНакладнаяОтПокупателя" Тогда
//		Тип = "ВозвратнаяНакладная";
//	КонецЕсли;	
//	Возврат Тип;
//КонецФункции

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Функция ЕстьНулевыеЦены(Ссылка) Экспорт
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ПриходнаяНакладная.Ссылка
//		|ИЗ
//		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
//		|ГДЕ
//		|	ПриходнаяНакладная.Состав.Цена = 0
//		|	И ПриходнаяНакладная.Ссылка = &Ссылка";

//	Запрос.УстановитьПараметр("Ссылка", Ссылка);

//	Результат = Запрос.Выполнить();
//	
//	Если Результат.Пустой() Тогда
//		Возврат Ложь;
//	КонецЕсли;	
//	Возврат Истина;
//КонецФункции	
//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Процедура ЗагрузитьУдалениеОбъекта(XDTO) Экспорт
//	Ссылка = Документы[XDTO.Тип].ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//	Объект = Ссылка.ПолучитьОбъект();
//	Если Объект <> Неопределено Тогда 
//		Объект.Удалить();
//	КонецЕсли;
//КонецПроцедуры

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Процедура ЗагрузитьПриходнаяНакладная(XDTO) Экспорт
//	Ссылка = Документы.ПриходнаяНакладная.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//	Объект = Ссылка.ПолучитьОбъект();
//	Если Объект = Неопределено Тогда 
//		Объект = Документы.ПриходнаяНакладная.СоздатьДокумент();
//		Ссылка = Документы.ПриходнаяНакладная.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//		Объект.УстановитьСсылкуНового(Ссылка);
//	//{БредовЮГ 2013-08-14  поставил проверку , если загружается в RS.Center из RS.WH ,а объект уже Обработан ЦВД, тогда ничего не делать
//	//Иначе
//	//	Если ПараметрыСеанса.ЭтоЦентр И Объект.ОбработанЦВД Тогда
//	//		Возврат;
//	//	КонецЕсли;
//	//БредовЮГ 2013-08-14  поставил проверку , если загружается в RS.Center из RS.WH ,а объект уже Обработан ЦВД, тогда ничего не делать	}
//	КонецЕсли;
//	Объект.БонуснаяПоставка = XDTO.БонуснаяПоставка;
//	Объект.Валюта = Справочники.Валюты.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Валюта));
//	Объект.Грузоотправитель = Справочники.Контрагенты.НайтиПоКоду(XDTO.Грузоотправитель);
//	Объект.Грузополучатель = ?(XDTO.ГрузополучательТип = "",Неопределено,Справочники[XDTO.ГрузополучательТип].НайтиПоКоду(XDTO.Грузополучатель));
//	Если ПараметрыСеанса.ЭтоЦентр Тогда
//		Объект.Дата = XDTO.Date;
//	КонецЕсли;
//	Объект.ДатаДокумента = XDTO.ДатаДокумента;
//	Объект.ДатаСФ = XDTO.ДатаСФ;
//	Объект.Контрагент = Справочники[XDTO.КонтрагентТип].НайтиПоКоду(XDTO.Контрагент);
//	Объект.Фирма = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Фирма));
//	Объект.Автор = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Автор));
//	Объект.Курс = XDTO.Курс;
//	Объект.Кратность = XDTO.Кратность;
//	Объект.Номер = XDTO.Number;
//	Объект.НомерДокумента = XDTO.НомерДокумента;
//	Объект.НомерСФ = XDTO.НомерСФ;
//	Объект.Приемщик = Справочники.ФизическиеЛица.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Приемщик));
//	Объект.СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.НайтиПоКоду(XDTO.СтруктурнаяЕдиница);
//	Объект.Склад = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Склад));
//	Объект.СуммаИтого = XDTO.СуммаИтого;
//	Объект.СуммаНДСИтого = XDTO.СуммаНДСИтого;
//	Попытка
//		Объект.ТипДоговора = Перечисления.ТипыДоговоров[XDTO.ТипДоговора];
//	Исключение
//	КонецПопытки;
//	Объект.Комментарий = XDTO.Комментарий;
//	Если XDTO.ДокОснование <> "" Тогда
//		Объект.ДокОснование = Документы[XDTO.ДокОснованиеТип].ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.ДокОснование));
//	КонецЕсли;	
//	Объект.Контролер = Справочники.ФизическиеЛица.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Контролер));
//	
//	Объект.Состав.Очистить();
//	Для Каждого Строка Из XDTO.Состав Цикл
//		НоваяСтрока = Объект.Состав.Добавить();
//		НоваяСтрока.Номенклатура = ОбменДаннымиRIBСервер.ПолучитьНоменклатуруПоКоду(Строка.Номенклатура);
//		НоваяСтрока.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(Строка.ЕдиницаИзмерения,,,НоваяСтрока.Номенклатура);
//		НоваяСтрока.Коэффициент = Строка.Коэффициент;
//		НоваяСтрока.Количество = Строка.Количество;
//		НоваяСтрока.КоличествоПоДокументу = Строка.КоличествоПоДокументу;
//		НоваяСтрока.Сумма = Строка.Сумма;
//		НоваяСтрока.СтавкаНДС = Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка",Число(Строка.СтавкаНДС));
//		НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
//		НоваяСтрока.Цена = Строка.Цена;
//		//{БредовЮГ 2013-09-17 Добавил в обмен цену протокола, т.к. она не учавствовала в обмене
//		НоваяСтрока.ЦенаПротокола = Строка.ЦенаПротокола;
//		//БредовЮГ 2013-09-17 Добавил в обмен цену протокола, т.к. она не учавствовала в обмене		}
//		НоваяСтрока.Вес = Строка.Вес;
//		НоваяСтрока.ЕдиницаВеса = Справочники.ЕдиницыИзмерения.НайтиПоКоду(Строка.ЕдиницаВеса,,,НоваяСтрока.Номенклатура);
//	КонецЦикла;
//	//Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
//	//	Объект.ОбработанЦВД = XDTO.ОбработанЦВД;
//	//Иначе
//	//	Объект.ОбработанЦВД = ЛОЖЬ;
//	//КонецЕсли;	
//	Объект.ДополнительныеСвойства.Вставить("ОбменЦВД",Истина);
//	
//	Если XDTO.DeletionMark = ЛОЖЬ И Объект.ПометкаУдаления = ИСТИНА Тогда
//		Объект.ПометкаУдаления = XDTO.DeletionMark;
//	КонецЕсли;
//	
//	Если XDTO.DeletionMark = ИСТИНА Тогда
//		//Объект.ОбработанЦВД = ЛОЖЬ;
//		Объект.ДополнительныеСвойства.Вставить("РазрешеноРедактировать",Истина);
//		Если ПараметрыСеанса.ЭтоЦентр И Объект.Проведен Тогда
//			Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
//		КонецЕсли;	
//		Объект.ПометкаУдаления = XDTO.DeletionMark;
//		Объект.Записать(РежимЗаписиДокумента.Запись);
//	Иначе
//		Если XDTO.Posted Тогда
//			Объект.Записать(РежимЗаписиДокумента.Проведение);
//		Иначе	
//			Объект.Записать(РежимЗаписиДокумента.Запись);
//		КонецЕсли;
//	КонецЕсли;
//КонецПроцедуры

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Процедура ЗагрузитьКорректировкаПоступления(XDTO) Экспорт
//	Ссылка = Документы.КорректировкаПоступления.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//	Объект = Ссылка.ПолучитьОбъект();
//	Если Объект = Неопределено Тогда 
//		Объект = Документы.КорректировкаПоступления.СоздатьДокумент();
//		Ссылка = Документы.КорректировкаПоступления.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//		Объект.УстановитьСсылкуНового(Ссылка);
//	//{БредовЮГ 2013-08-14  поставил проверку , если загружается в RS.Center из RS.WH ,а объект уже Обработан ЦВД, тогда ничего не делать
//	//Иначе
//	//	Если ПараметрыСеанса.ЭтоЦентр И Объект.ОбработанЦВД Тогда
//	//		Возврат;
//	//	КонецЕсли;
//	//БредовЮГ 2013-08-14  поставил проверку , если загружается в RS.Center из RS.WH ,а объект уже Обработан ЦВД, тогда ничего не делать	}
//	КонецЕсли;
//	Объект.Дата = XDTO.Date; 
//	Объект.ДатаДокумента = XDTO.ДатаДокумента;
//	Объект.ДатаСФ = XDTO.ДатаСФ;
//	Объект.Контрагент = Справочники[XDTO.КонтрагентТип].НайтиПоКоду(XDTO.Контрагент);
//	Объект.Фирма = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Фирма));
//	Объект.Автор = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Автор));
//	Объект.Номер = XDTO.Number;
//	Объект.НомерДокумента = XDTO.НомерДокумента;
//	Объект.НомерСФ = XDTO.НомерСФ;
//	Объект.СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.НайтиПоКоду(XDTO.СтруктурнаяЕдиница);
//	Объект.СуммаИтого = XDTO.СуммаИтого;
//	Объект.СуммаНДСИтого = XDTO.СуммаНДСИтого;
//	Попытка
//		Объект.РежимКорректировки = Перечисления.РежимыКорректировок[XDTO.РежимКорректировки];
//	Исключение
//	КонецПопытки;
//	Объект.Комментарий = XDTO.Комментарий;
//	Если XDTO.ДокументПоступления <> "" Тогда
//		Объект.ДокументПоступления = Документы[XDTO.ДокументПоступленияТип].ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.ДокументПоступления));
//	КонецЕсли;	
//	Если XDTO.ИсправляемыйДокумент <> "" Тогда
//		Объект.ИсправляемыйДокумент = Документы[XDTO.ИсправляемыйДокументТип].ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.ИсправляемыйДокумент));
//	КонецЕсли;	
//	
//	Объект.Состав.Очистить();
//	Для Каждого Строка Из XDTO.Состав Цикл
//		НоваяСтрока = Объект.Состав.Добавить();
//		НоваяСтрока.Номенклатура = ОбменДаннымиRIBСервер.ПолучитьНоменклатуруПоКоду(Строка.Номенклатура);
//		НоваяСтрока.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(Строка.ЕдиницаИзмерения,,,НоваяСтрока.Номенклатура);
//		НоваяСтрока.Коэффициент = Строка.Коэффициент;
//		НоваяСтрока.Количество = Строка.Количество;
//		НоваяСтрока.КоличествоДоИзменения = Строка.КоличествоДоИзменения;
//		НоваяСтрока.КоличествоДоКорректировки = Строка.КоличествоДоКорректировки;
//		НоваяСтрока.Сумма = Строка.Сумма;
//		НоваяСтрока.СуммаДоКорректировки = Строка.СуммаДоКорректировки;
//		НоваяСтрока.СуммаДоИзменения = Строка.СуммаДоИзменения;
//		НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
//		НоваяСтрока.СуммаНДСДоИзменения = Строка.СуммаНДСДоИзменения;
//		НоваяСтрока.СуммаНДСДоКорректировки = Строка.СуммаНДСДоКорректировки;
//		НоваяСтрока.СтавкаНДС = Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка",Число(Строка.СтавкаНДС));
//		НоваяСтрока.СтавкаНДСДоИзменения = Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка",Число(Строка.СтавкаНДСДоИзменения));
//		НоваяСтрока.Цена = Строка.Цена;
//		НоваяСтрока.ЦенаДоИзменения = Строка.ЦенаДоИзменения;
//		НоваяСтрока.ЦенаДоКорректировки = Строка.ЦенаДоКорректировки;
//		НоваяСтрока.Вес = Строка.Вес;
//		НоваяСтрока.ЕдиницаВеса = Справочники.ЕдиницыИзмерения.НайтиПоКоду(Строка.ЕдиницаВеса,,,НоваяСтрока.Номенклатура);
//		НоваяСтрока.ЕстьВДокументеПоступления = Строка.ЕстьВДокументеПоступления;
//	КонецЦикла;
//	//Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
//	//	Объект.ОбработанЦВД = XDTO.ОбработанЦВД;
//	//КонецЕсли;	
//	Объект.ПометкаУдаления = XDTO.DeletionMark;
//	Объект.ДополнительныеСвойства.Вставить("ОбменЦВД",Истина);
//	//БредовЮГ+  12-07-2013 Внес исправления , решение было в задаче http://jira.apm-it.ru:8080/browse/MILAN-577
//	//Объект.Записать(РежимЗаписиДокумента.Запись);
//	//Если ПараметрыСеанса.ЭтоЦентр Тогда
//	//	Объект.Записать(РежимЗаписиДокумента.Запись);
//	//Иначе
//	//	Объект.Записать(РежимЗаписиДокумента.Проведение);
//	//КонецЕсли;	
//	Если XDTO.Posted Тогда
//		Объект.Записать(РежимЗаписиДокумента.Проведение);
//	Иначе	
//		Объект.Записать(РежимЗаписиДокумента.Запись);
//	КонецЕсли;
//	//БредовЮГ-  12-07-2013 Внес исправления , решение было в задаче http://jira.apm-it.ru:8080/browse/MILAN-577
//КонецПроцедуры

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761

//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//Процедура ЗагрузитьРегистрацияСчетФактуры(XDTO) Экспорт
//	
//	Ссылка = Документы.РегистрацияСчетФактуры.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//	Объект = Ссылка.ПолучитьОбъект();
//	
//	Если Объект = Неопределено Тогда 
//		Объект = Документы.РегистрацияСчетФактуры.СоздатьДокумент();
//		Ссылка = Документы.РегистрацияСчетФактуры.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//		Объект.УстановитьСсылкуНового(Ссылка);
//	//{БредовЮГ 2013-08-14  поставил проверку , если загружается в RS.Center из RS.WH ,а объект уже Обработан ЦВД, тогда ничего не делать
//	//Иначе
//	//	Если ПараметрыСеанса.ЭтоЦентр И Объект.ОбработанЦВД Тогда
//	//		Возврат;
//	//	КонецЕсли;
//	//БредовЮГ 2013-08-14  поставил проверку , если загружается в RS.Center из RS.WH ,а объект уже Обработан ЦВД, тогда ничего не делать	}
//	КонецЕсли;
//	
//	Объект.Дата = XDTO.Date; 
//	Объект.Контрагент = Справочники[XDTO.КонтрагентТип].НайтиПоКоду(XDTO.Контрагент);
//	Объект.Фирма = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Фирма));
//	Объект.Автор = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Автор));
//	Объект.Номер = XDTO.Number;
//	Объект.СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.НайтиПоКоду(XDTO.СтруктурнаяЕдиница);
//	Объект.Комментарий = XDTO.Комментарий;
//	
//	Попытка
//		Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного[XDTO.ВидСчетаФактуры];
//	Исключение
//	КонецПопытки;
//	
//	Объект.НомерВходящегоДокумента = XDTO.НомерВходящегоДокумента;
//	Объект.ДатаВходящегоДокумента = XDTO.ДатаВходящегоДокумента;
//	
//	Если XDTO.ДокументОснование <> "" Тогда
//		Объект.ДокументОснование = Документы[XDTO.ДокументОснованиеТип].ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.ДокументОснование));
//	КонецЕсли;
//	
//	Объект.НомерИсправления = XDTO.НомерИсправления;
//	Объект.ДатаИсправления = XDTO.ДатаИсправления;
//	Объект.Исправление = XDTO.Исправление;
//	Объект.ИсправляемыйСчетФактура = Документы.РегистрацияСчетФактуры.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.ИсправляемыйСчетФактура));
//	Объект.НомерИсходногоДокумента = XDTO.НомерИсходногоДокумента;
//	Объект.ДатаИсходногоДокумента = XDTO.ДатаИсходногоДокумента;
//	Объект.УчитыватьИсправлениеИсходногоДокумента = XDTO.УчитыватьИсправлениеИсходногоДокумента;
//	Объект.НомерИсправленияИсходногоДокумента = XDTO.НомерИсправленияИсходногоДокумента;
//	Объект.ДатаИсправленияИсходногоДокумента = XDTO.ДатаИсправленияИсходногоДокумента;
//	Объект.НДСПредъявленКВычету = XDTO.НДСПредъявленКВычету;
//	Объект.СчетФактураБезНДС = XDTO.СчетФактураБезНДС;
//	Объект.КодВидаОперации = XDTO.КодВидаОперации;
//	Объект.КодСпособаПолучения = XDTO.КодСпособаПолучения;
//	Объект.СуммаДокумента = XDTO.СуммаДокумента;
//	Объект.СуммаУвеличение = XDTO.СуммаУвеличение;
//	Объект.СуммаУменьшение = XDTO.СуммаУменьшение;
//	Объект.СуммаНДСДокумента = XDTO.СуммаНДСДокумента;
//	Объект.СуммаНДСУвеличение = XDTO.СуммаНДСУвеличение;
//	Объект.СуммаНДСУменьшение = XDTO.СуммаНДСУменьшение;
//	
//	//Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
//	//	Объект.ОбработанЦВД = XDTO.ОбработанЦВД;
//	//КонецЕсли;	
//	//
//	Объект.ПометкаУдаления = XDTO.DeletionMark;
//	Объект.ДополнительныеСвойства.Вставить("ОбменЦВД",Истина);
//	//БредовЮГ+  12-07-2013 Внес исправления , решение было в задаче http://jira.apm-it.ru:8080/browse/MILAN-577
//	//Объект.Записать(РежимЗаписиДокумента.Запись);
//	//Если ПараметрыСеанса.ЭтоЦентр Тогда
//	//	Объект.Записать(РежимЗаписиДокумента.Запись);
//	//Иначе
//	//	Объект.Записать(РежимЗаписиДокумента.Проведение);
//	//КонецЕсли;	
//	Если XDTO.Posted Тогда
//		Объект.Записать(РежимЗаписиДокумента.Проведение);
//	Иначе	
//		Объект.Записать(РежимЗаписиДокумента.Запись);
//	КонецЕсли;
//	
//	//БредовЮГ-  12-07-2013 Внес исправления , решение было в задаче http://jira.apm-it.ru:8080/browse/MILAN-577
//	
//	
//КонецПроцедуры

//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761


//++МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
//!пока закомментировал, тк ранее этой функции не было

//Функция ЗагрузитьАктПриеки(XDTO) Экспорт
//	Попытка
//		Результат=Истина;
//		Ссылка = Документы.АктПриемки.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//		Объект = Ссылка.ПолучитьОбъект();
//		Если Объект = Неопределено Тогда 
//			Объект = Документы.АктПриемки.СоздатьДокумент();
//			Ссылка = Документы.АктПриемки.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Ref));
//			Объект.УстановитьСсылкуНового(Ссылка);
//		КонецЕсли;
//		Объект.Дата = XDTO.Date; 
//		Объект.Номер = XDTO.Number;
//		Объект.Автор = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Автор));
//		Объект.Валюта = Справочники.Валюты.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Валюта));
//		Объект.Грузоотправитель = Справочники.Контрагенты.НайтиПоКоду(XDTO.Грузоотправитель);
//		Объект.ДатаДокумента = XDTO.ДатаДокумента;
//		Объект.Заключение = XDTO.Заключение;
//		Объект.Кладовщик = Справочники.Контрагенты.НайтиПоКоду(XDTO.Кладовщик);
//		Объект.Комментарий = XDTO.Комментарий;
//		Объект.Контрагент = Справочники.Контрагенты.НайтиПоКоду(XDTO.Контрагент);
//		Объект.Курс = XDTO.Курс;
//		Объект.Кратность = XDTO.Кратность;
//		Объект.НомерДокумента = XDTO.НомерДокумента;
//		Объект.ПредстСотр = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.ПредстСотр));
//		Объект.ПредстФирма = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.ПредстФирма));
//		Объект.Склад = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Склад));
//		Объект.СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.НайтиПоКоду(XDTO.СтруктурнаяЕдиница);
//		Попытка
//			Объект.ТипДоговора = Перечисления.ТипыДоговоров[XDTO.ТипДоговора];
//		Исключение
//		КонецПопытки;
//		Объект.Фирма = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(XDTO.Фирма));	
//		Объект.Товаровед = Справочники.Контрагенты.НайтиПоКоду(XDTO.Товаровед);
//		
//		Объект.Состав.Очистить();
//		Для Каждого Строка Из XDTO.Состав Цикл
//			НоваяСтрока = Объект.Состав.Добавить();
//			НоваяСтрока.Номенклатура = ОбменДаннымиRIBСервер.ПолучитьНоменклатуруПоКоду(Строка.Номенклатура);
//			НоваяСтрока.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(Строка.ЕдиницаИзмерения,,,НоваяСтрока.Номенклатура);
//			НоваяСтрока.Коэффициент = Строка.Коэффициент;
//			НоваяСтрока.Количество = Строка.Количество;
//			НоваяСтрока.Ключ = Строка.Ключ;
//			НоваяСтрока.КоличествоПоДокументу = Строка.КоличествоПоДокументу;
//			НоваяСтрока.Сумма = Строка.Сумма;
//			НоваяСтрока.СуммаПоДокументу = Строка.СуммаПоДокументу;
//			НоваяСтрока.СтавкаНДС = Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка",Число(Строка.СтавкаНДС));
//			НоваяСтрока.ПроцКол = Строка.ПроцКол;
//			НоваяСтрока.ПроцСумма = Строка.ПроцСумма;
//			НоваяСтрока.РКоличество = Строка.РКоличество;
//			НоваяСтрока.РСумма = Строка.РСумма;
//			НоваяСтрока.Цена = Строка.Цена;
//		КонецЦикла;
//		
//		Объект.ПричиныРасхождений.Очистить();
//		Для Каждого Строка Из XDTO.ПричиныРасхождений Цикл
//			НоваяСтрока = Объект.ПричиныРасхождений.Добавить();
//			НоваяСтрока.Ключ = Строка.Ключ;
//			НоваяСтрока.Количество = Строка.Количество;
//			НоваяСтрока.Причина = Перечисления.РезультатПриемки[Строка.Причина]
//		КонецЦикла;
//		
//		Объект.ПометкаУдаления = XDTO.DeletionMark;
//		Объект.ДополнительныеСвойства.Вставить("ОбменЦВД",Истина);
//		Если ПараметрыСеанса.ЭтоЦентр Тогда
//			Объект.Записать(РежимЗаписиДокумента.Запись);
//		КонецЕсли;
//	Исключение
//		Package = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке());
//		Результат = Ложь;
//	КонецПопытки;
//	Возврат Результат; 	
//КонецФункции	
//--МининНА 15-02-24 в шине статус complite, а по факту не выгружено. Решение АПМ.
//https://jira.apm-it.ru:8443/browse/MILAN-761
