// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМ

// Обработчик для события ПриСозданииНаСервере
Функция ПриСозданииНаСервереКИ(Объект, ЭлементВид, Ссылка) Экспорт
	
	ИмяСправочника = Ссылка.Метаданные().Имя;
	ГруппаВидовКИ = Справочники.ВидыКонтактнойИнформации["Справочник" + ИмяСправочника];
	
	КонтактнаяИнформация = Новый ТаблицаЗначений;
	КонтактнаяИнформация.Колонки.Добавить("Тип");
	КонтактнаяИнформация.Колонки.Добавить("Вид");
	КонтактнаяИнформация.Колонки.Добавить("НомерКартинки");
	КонтактнаяИнформация.Колонки.Добавить("Представление");
	КонтактнаяИнформация.Колонки.Добавить("ПометкаУдаления");
	
	ТабЗн = Объект.КонтактнаяИнформация.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК Вид,
	|	ВидыКонтактнойИнформации.Наименование,
	|	ВидыКонтактнойИнформации.Тип,
	|	ВидыКонтактнойИнформации.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = &ГруппаВидовКИ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПометкаУдаления,
	|	ВидыКонтактнойИнформации.Порядок";
	
	Запрос.УстановитьПараметр("ГруппаВидовКИ", ГруппаВидовКИ);
	
	масУдалять = Новый Массив;
	МаксДлинаИмени = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрВКИ = ТабЗн.Найти(Выборка.Вид, "Вид");
		Если СтрВКИ = Неопределено И Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		новСтр = КонтактнаяИнформация.Добавить();
		новСтр.Тип                            = Выборка.Тип;
		новСтр.Вид                            = Выборка.Вид;
		новСтр.НомерКартинки                  = ПолучитьНомерКартинкиПоТипу(Выборка.Тип, Выборка.ПометкаУдаления);
		новСтр.Представление                  = "";
		новСтр.ПометкаУдаления                = Выборка.ПометкаУдаления;
		
		Если СтрВКИ <> Неопределено Тогда
			новСтр.Представление = СтрВКИ.Представление;
			
			//ЗначенияВОбъекте = СтрВКИ.ЗначенияПолей.Получить();
			//Если ТипЗнч(ЗначенияВОбъекте) = Тип("СписокЗначений") Тогда
			//	новСтр.ЗначенияПолей = ЗначенияВОбъекте;
			//КонецЕсли;
		КонецЕсли;
		
		МаксДлинаИмени = Макс(МаксДлинаИмени, СтрДлина(Выборка.Наименование));
		
	КонецЦикла;
	
	Если МаксДлинаИмени > 0 Тогда
		ЭлементВид.Ширина = МаксДлинаИмени;
	КонецЕсли;
	
	Возврат КонтактнаяИнформация;
	
КонецФункции

// Обработчик для события ПередЗаписьюНаСервере
Процедура ПередЗаписьюНаСервереКИ(КонтактнаяИнформация, ТекущийОбъект) Экспорт
	
	ТабЗн = ТекущийОбъект.КонтактнаяИнформация.Выгрузить();
	ТекущийОбъект.КонтактнаяИнформация.Очистить();
	Для Каждого Стр Из КонтактнаяИнформация Цикл
		Если Не ПустаяСтрока(Стр.Представление) Тогда
			новСтр = ТекущийОбъект.КонтактнаяИнформация.Добавить();
			новСтр.Тип = Стр.Тип; 			
			НовСтр.Вид = ПолучитьВидКонтактнойИнформации(ТекущийОбъект,Стр.Вид);
			новСтр.Представление = Стр.Представление;
			
			//Если Стр.ЗначенияПолей.Количество() > 0 Тогда
			//	новСтр.ЗначенияПолей = Новый ХранилищеЗначения(Стр.ЗначенияПолей);
			//КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьВидКонтактнойИнформации(ТекущийОбъект,Тип) экспорт
	ИмяСправочника = ТекущийОбъект.Метаданные().Имя;
	ГруппаВидовКИ = Справочники.ВидыКонтактнойИнформации["Справочник" + ИмяСправочника];
	флаг = ?(ТипЗнч(Тип) = Тип("СправочникСсылка.ВидыКонтактнойИнформации"),Истина,Ложь);
	запрос = новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК Вид
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = &ГруппаВидовКИ
	|	И ВидыКонтактнойИнформации."+?(Флаг,"Ссылка","Наименование")+" = &Тип
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыКонтактнойИнформации.ПометкаУдаления,
	|	ВидыКонтактнойИнформации.Порядок";
	
	Запрос.УстановитьПараметр("Тип",Тип);
	Запрос.УстановитьПараметр("ГруппаВидовКИ", ГруппаВидовКИ);
	Рез = Запрос.Выполнить();
	вид = неопределено;	
	Выборка =Рез.Выбрать();
	Пока Выборка.Следующий() цикл
		Вид = Выборка.Вид;
	Конеццикла;
	Возврат вид;
	
конецФункции

// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// СЛУЖЕБНЫЕ


// По типу контактной информации получить номер картинки для отображения в таблице контактной информации
Функция ПолучитьНомерКартинкиПоТипу(Тип, ПометкаУдаления)
	
	Если ПометкаУдаления Тогда
		Возврат 7;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		Возврат 0;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		Возврат 2;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
		Возврат 3;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
		Возврат 4;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
		Возврат 5;
	Иначе
		Возврат 6;
	КонецЕсли;
	
КонецФункции

// Проверить по типу контактной информации, доступно ли редактирование в диалоге
Функция ДляТипаКонтактнойИнформацииДоступноРедактированиеВДиалоге(Тип)
	
	Если Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		Возврат Истина;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		Возврат Истина;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции


// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// ОБНОВЛЕНИЕ ИНФОРМАЦИОННОЙ БАЗЫ

// Обновить один вид контактной информации
Процедура ОбновитьВидКИ(ВидКИ, Тип) Экспорт
	
	Объект = ВидКИ.ПолучитьОбъект();
	Объект.Тип                               = Тип;
	Объект.Записать();
	
КонецПроцедуры

// Получить значение определенного вида контактной информации у объекта
Функция ПолучитьКонтактнуюИнформацияОбъекта(Ссылка, ВидКонтактнойИнформации) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	Справочник." + Ссылка.Метаданные().Имя + ".КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Ссылка = &Ссылка
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Вид",    ВидКонтактнойИнформации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Представление;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции



Функция ПолучитьАдресЭлектроннойПочтыКонтрагента(Контрагент) Экспорт

	Результат = УправлениеКонтактнойИнформациейСервер.ПолучитьКонтактнуюИнформацияОбъекта(Контрагент, 
		Справочники.ВидыКонтактнойИнформации.EmailКонтрагента);
	Возврат Результат;
	
КонецФункции 

Функция ПолучитьАдресЭлектроннойПочтыСтруктурнойЕдиницы(СЕ) Экспорт

	Результат = УправлениеКонтактнойИнформациейСервер.ПолучитьКонтактнуюИнформацияОбъекта(СЕ, 
		Справочники.ВидыКонтактнойИнформации.EmailСтруктурнойЕдиницы);
	Возврат Результат;
	
КонецФункции 

