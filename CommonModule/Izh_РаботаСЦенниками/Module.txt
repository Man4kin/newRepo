// Функция - Фирма на ценник
//	
// Параметры:
//  Номенклатура - Тип (Спарвочник.Номенклатура) -  номенклатура, по которой получается фирма
// Возвращаемое значение:
//  Наименование организации строкой
Функция ФирмаНаЦенник(Номенклатура) Экспорт 
	СтрТЗ = Номенклатура.ДополнительныеРеквизиты.Найти(ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.Реквизит("ВидАлкогольнойПродукции"));
	Если СтрТЗ<>Неопределено Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Izh_ЗначенияСвойствОбъектов.Значение
		|ИЗ
		|	РегистрСведений.Izh_ЗначенияСвойствОбъектов КАК Izh_ЗначенияСвойствОбъектов
		|ГДЕ
		|	Izh_ЗначенияСвойствОбъектов.Объект = &Объект
		|	И Izh_ЗначенияСвойствОбъектов.Свойство = &Свойство";
		Запрос.УстановитьПараметр("Объект", ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
		Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.НайтиПоКоду("0000000378"));
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			Возврат "";
		Иначе 
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл 
				Возврат СокрЛП(Выборка.Значение);
			КонецЦикла;
		КонецЕсли;
	Иначе 
		Возврат СокрЛП(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Организация);
	КонецЕсли;
КонецФункции

// Функция - ШКНа ценник
//
// Параметры:
//  Номенклатура - Тип (Спарвочник.Номенклатура) -  номенклатура, по которой получается ШтрихКод
// Возвращаемое значение:
//  ШтрихКод товара строкой
Функция ШКНаЦенник(Номенклатура) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Код
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Родитель = &Родитель
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.Транзакционный
	|	И Номенклатура.ФлагОсновногоШК";
	Запрос.УстановитьПараметр("Родитель",Номенклатура);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат "";
	Иначе 
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл 
			Возврат СокрЛП(Выборка.Код);
		КонецЦикла;
	КонецЕсли;
КонецФункции

// Функция - Весовка на ценник
//
// Параметры:
//  Номенклатура - Тип (Спарвочник.Номенклатура) -  номенклатура, по которой получается весовка на ценник
// Возвращаемое значение:
//   Возвращает количество товара, продаваемого за указанную цену.  
Функция ВесовкаНаЦенник(Номенклатура) Экспорт 
	СтрТЗ = Номенклатура.ДополнительныеРеквизиты.Найти(ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.Реквизит("ЦенникЗа100г"));
	
	Если Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Штучный Тогда 
		Возврат "за 1 шт.";
	ИначеЕсли СтрТЗ=Неопределено Тогда 
		Возврат "за 1 кг.";
	ИначеЕсли СтрТЗ.Значение.Наименование="Да" Тогда 
		Возврат "за 100 гр.";
	КонецЕсли;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	НоменклатураДополнительныеРеквизиты.Свойство,
	//|	НоменклатураДополнительныеРеквизиты.Значение
	//|ПОМЕСТИТЬ ВТ_Номенклатура
	//|ИЗ
	//|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	//|ГДЕ
	//|	НоменклатураДополнительныеРеквизиты.Ссылка = &Номенклатура
	//|	И НЕ НоменклатураДополнительныеРеквизиты.Ссылка.ПометкаУдаления
	////|	И НоменклатураДополнительныеРеквизиты.Свойство = &Свойство
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_Номенклатура.Свойство
	//|ИЗ
	//|	ВТ_Номенклатура КАК ВТ_Номенклатура
	////|ГДЕ
	////|	ВТ_Номенклатура.Значение = &Значение
	//|";
	//Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	//Запрос.УстановитьПараметр("Свойство",Номенклатура);
	//Запрос.УстановитьПараметр("Значение",Номенклатура);
	//Результат = Запрос.Выполнить();	
	//Если Результат.Пустой() Тогда 
	//	Возврат "за 1 кг.";
	//Иначе 
	//	Возврат "за 100 гр.";
	//КонецЕсли;
КонецФункции

// Функция - Весы на ценник
//
// Параметры:
//  Номенклатура - Тип (Спарвочник.Номенклатура) -  номенклатура, по которой получается наименование весов
// Возвращаемое значение:
//   Наименование весов строкой 
Функция ВесыНаЦенник(Номенклатура) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВесовойТовар.Владелец.Наименование КАК Весы
	|ИЗ
	|	Справочник.ВесовойТовар КАК ВесовойТовар
	|ГДЕ
	|	ВесовойТовар.Номенклатура.Родитель = &Номенклатура
	|	И НЕ ВесовойТовар.ПометкаУдаления";
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат "";
	Иначе 
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл 
			Возврат СокрЛП(Выборка.Весы);
		КонецЦикла;
	КонецЕсли;
КонецФункции

// Функция - PLUНа ценник
//
// Параметры:
//  Номенклатура - Тип (Спарвочник.Номенклатура) -  номенклатура, по которой получается наименование PLU товара
// Возвращаемое значение:
//   PLU код товара на весах 
Функция PLUНаЦенник(Номенклатура) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВесовойТовар.Код
	|ИЗ
	|	Справочник.ВесовойТовар КАК ВесовойТовар
	|ГДЕ
	|	ВесовойТовар.Номенклатура.Родитель = &Номенклатура
	|	И НЕ ВесовойТовар.ПометкаУдаления";
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат "";
	Иначе 
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл 
			Возврат СокрЛП(Выборка.Код);
		КонецЦикла;
	КонецЕсли;
КонецФункции

// Функция - Инфо на ценник
//
// Параметры:
//  Номенклатура - Тип (Спарвочник.Номенклатура) -  номенклатура, по которой получается информация по товару
//		(Доп.реквизит "Информация о товаре" в карточке Номенклатуры)
// Возвращаемое значение:
//   Информаци по товару строкой 
Функция ИнфоНаЦенник(Номенклатура) Экспорт 
	СтрТЗ = Номенклатура.ДополнительныеРеквизиты.Найти(ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.Реквизит("ИнфоОТоваре"));
	Если СтрТЗ<>Неопределено Тогда 
		СтрокаИнфо = СокрЛП(СтрТЗ.Значение);
		Пока Найти(СтрокаИнфо,"  ")<>0 Цикл 
			СтрокаИнфо = СтрЗаменить(СтрокаИнфо,"  "," ");
		КонецЦикла;
		Возврат СтрокаИнфо;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

// Функция - Данные акции на ценник
//
// Параметры:
//  Номенклатура - номенклатура, по которой получается данные по акции
//  Флаг		 -	Данные выводятся в зависимости от значения:
//		1 - Цена акции только рубли
//		2 - Цена акции только копейки
//		3 - Процент скидки
//		4 - Цена только копейки 
//		5 - Цена только рубли
//		6 - Порог акции
// Возвращаемое значение:
//   Данные выводятся в зависимости от значения "Флаг":
//		1 - Цена акции только рубли
//		2 - Цена акции только копейки
//		3 - Процент скидки 
//		4 - Цена только копейки 
//		5 - Цена только рубли
//		6 - Порог акции
Функция ДанныеАкцииНаЦенник(Номенклатура,Флаг) Экспорт 
	ЦенаАкцииРубли="";
	ЦенаАкцииКопейки="";
	ПроцентСкидки="";
	ЦенаКопейки="";
	ЦенаРубли="";
	ПорогАкции="";
	
	Запрос = Новый Запрос;
	Если Флаг=4 или Флаг=5 Тогда 
		//Запрос.Текст = "ВЫБРАТЬ
		//|	ЦеныНоменклатурыСрезПоследних.Цена
		//|ИЗ
		//|	(ВЫБРАТЬ ПЕРВЫЕ 1
		//|		МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID,
		//|		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура
		//|	ИЗ
		//|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		//|				&ТекущаяДата,
		//|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		//|					И Номенклатура = &Номенклатура
		//|					И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		//|	
		//|	СГРУППИРОВАТЬ ПО
		//|		ЦеныНоменклатурыСрезПоследних.Номенклатура) КАК ВложенныйЗапрос
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		//|				&ТекущаяДата,
		//|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		//|					И Номенклатура = &Номенклатура
		//|					И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		//|		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура)
		//|			И (ЦеныНоменклатурыСрезПоследних.ID = ВложенныйЗапрос.ID)";
		Запрос.Текст = "ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&ТекущаяДата,
		|			Номенклатура = &Номенклатура
		|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|				И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|			ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|			МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID
		|		ИЗ
		|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|					&ТекущаяДата,
		|					Номенклатура = &Номенклатура
		|						И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|						И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|					МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Период) КАК Период
		|				ИЗ
		|					РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|							&ТекущаяДата,
		|							Номенклатура = &Номенклатура
		|								И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|								И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		|				ГДЕ
		|					ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		|				ПО ЦеныНоменклатурыСрезПоследних.Период = ВложенныйЗапрос.Период
		|					И ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
		|					И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
		|		ГДЕ
		|			ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|			ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
		|			И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
		|			И ЦеныНоменклатурыСрезПоследних.ID = ВложенныйЗапрос.ID";
		Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница",ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			Возврат "";
		Иначе 
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Цена = Выборка.Цена;
		КонецЕсли;
		Если ВесовкаНаЦенник(Номенклатура) = "за 100 гр." Тогда 
			Цена = Цена/10;
		КонецЕсли;
		
		ЦенаСтрокой = Строка(Формат(Цена,"ЧЦ=15; ЧДЦ=2; ЧРГ="));  
		ЦенаРубли = Лев(ЦенаСтрокой,СтрДлина(ЦенаСтрокой)-3);
		ЦенаКопейки = Прав(ЦенаСтрокой,2);
		Если Флаг=4 Тогда 
			Возврат ЦенаКопейки;
		ИначеЕсли Флаг=5 Тогда 
			Возврат ЦенаРубли;
		КонецЕсли;
	Иначе 
		//Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		//|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID,
		//|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура
		//|ПОМЕСТИТЬ ВТ_IDЦены
		//|ИЗ
		//|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		//|			&ТекущаяДата,
		//|			СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		//|				И Номенклатура = &Номенклатура
		//|				И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	ЦеныНоменклатурыСрезПоследних.Номенклатура
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ ПЕРВЫЕ 1
		//|	МИНИМУМ(ПромоАкцииНоменклатура.Цена) КАК ЦенаАкции,
		//|	ЦеныНоменклатурыСрезПоследних.Цена
		//|ИЗ
		//|	РегистрСведений.ПромоАкцииНоменклатура КАК ПромоАкцииНоменклатура
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПромоАкции КАК ПромоАкции
		//|		ПО ПромоАкцииНоменклатура.IDПромо = ПромоАкции.IDПромо
		//|			И ПромоАкцииНоменклатура.IDКомпоненты = ПромоАкции.IDКомпоненты
		//|			И ПромоАкцииНоменклатура.IDГруппы = ПромоАкции.IDГруппы
		//|			И ПромоАкцииНоменклатура.IDДеталей = ПромоАкции.IDДеталей
		//|			И ПромоАкцииНоменклатура.СтруктурнаяЕдиница = ПромоАкции.СтруктурнаяЕдиница,
		//|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		//|			&ТекущаяДата,
		//|			СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		//|				И Номенклатура = &Номенклатура
		//|				И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних,
		//|	ВТ_IDЦены КАК ВТ_IDЦены
		//|ГДЕ
		//|	ПромоАкцииНоменклатура.Номенклатура = &Номенклатура
		//|	И ПромоАкцииНоменклатура.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		//|	И КОНЕЦПЕРИОДА(ПромоАкции.ДатаОкончания, ДЕНЬ) >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		//|	И НАЧАЛОПЕРИОДА(ПромоАкции.ДатаНачала, ДЕНЬ) <= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		//|	И ПромоАкцииНоменклатура.Цена <> 0
		//|	И ЦеныНоменклатурыСрезПоследних.ID В
		//|			(ВЫБРАТЬ
		//|				А.ID
		//|			ИЗ
		//|				ВТ_IDЦены КАК А)
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	ЦеныНоменклатурыСрезПоследних.Цена";
		Запрос.Текст = "ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		|	ЦеныНоменклатурыСрезПоследних.ID
		|ПОМЕСТИТЬ ВТ_IDЦены
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&ТекущаяДата,
		|			Номенклатура = &Номенклатура
		|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|				И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|			ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|			МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID
		|		ИЗ
		|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|					&ТекущаяДата,
		|					Номенклатура = &Номенклатура
		|						И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|						И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|					МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Период) КАК Период
		|				ИЗ
		|					РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|							&ТекущаяДата,
		|							Номенклатура = &Номенклатура
		|								И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|								И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних
		|				ГДЕ
		|					ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		|				ПО ЦеныНоменклатурыСрезПоследних.Период = ВложенныйЗапрос.Период
		|					И ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
		|					И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
		|		ГДЕ
		|			ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|			ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
		|			И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
		|			И ЦеныНоменклатурыСрезПоследних.ID = ВложенныйЗапрос.ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	МИНИМУМ(ПромоАкцииНоменклатура.Цена) КАК ЦенаАкции,
		|	ЦеныНоменклатурыСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.ПромоАкцииНоменклатура КАК ПромоАкцииНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПромоАкции КАК ПромоАкции
		|		ПО ПромоАкцииНоменклатура.IDПромо = ПромоАкции.IDПромо
		|			И ПромоАкцииНоменклатура.IDКомпоненты = ПромоАкции.IDКомпоненты
		|			И ПромоАкцииНоменклатура.IDГруппы = ПромоАкции.IDГруппы
		|			И ПромоАкцииНоменклатура.IDДеталей = ПромоАкции.IDДеталей
		|			И ПромоАкцииНоменклатура.СтруктурнаяЕдиница = ПромоАкции.СтруктурнаяЕдиница,
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&ТекущаяДата,
		|			СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|				И Номенклатура = &Номенклатура
		|				И АктивностьЗаписи) КАК ЦеныНоменклатурыСрезПоследних,
		|	ВТ_IDЦены КАК ВТ_IDЦены
		|ГДЕ
		|	ПромоАкцииНоменклатура.Номенклатура = &Номенклатура
		|	И ПромоАкцииНоменклатура.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|	И КОНЕЦПЕРИОДА(ПромоАкции.ДатаОкончания, ДЕНЬ) >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|	И НАЧАЛОПЕРИОДА(ПромоАкции.ДатаНачала, ДЕНЬ) <= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|	И ПромоАкцииНоменклатура.Цена <> 0
		|	И ЦеныНоменклатурыСрезПоследних.ID В
		|			(ВЫБРАТЬ
		|				А.ID
		|			ИЗ
		|				ВТ_IDЦены КАК А)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыСрезПоследних.Цена";
		Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница",ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
		Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			Возврат "";
		Иначе 
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ЦенаАкции = Выборка.ЦенаАкции;
			Цена = Выборка.Цена;
			Если ЦенаАкции = NULL Тогда 
				Возврат "";
			КонецЕсли;
		КонецЕсли;
		
		Если ВесовкаНаЦенник(Номенклатура) = "за 100 гр." Тогда 
			ЦенаАкции = ЦенаАкции/10;
			Цена = Цена/10;
		КонецЕсли;
		
		ЦенаАкцииСтрокой = Строка(Формат(ЦенаАкции,"ЧЦ=15; ЧДЦ=2; ЧРГ="));  
		ЦенаСтрокой = Строка(Формат(Цена,"ЧЦ=15; ЧДЦ=2; ЧРГ="));  
		
		ЦенаАкцииРубли = Лев(ЦенаАкцииСтрокой,СтрДлина(ЦенаАкцииСтрокой)-3);
		ЦенаАкцииКопейки = Прав(ЦенаАкцииСтрокой,2);
		ПроцентСкидки = Формат(100-(ЦенаАкции*100/Цена),"ЧЦ=2; ЧН=0");
		
		Если Флаг=1 Тогда
			Возврат ЦенаАкцииРубли;	
		ИначеЕсли Флаг=2 Тогда
			Возврат ЦенаАкцииКопейки;
		ИначеЕсли Флаг=3 Тогда
			Возврат ПроцентСкидки;
		КонецЕсли;
	КонецЕсли;
КонецФункции

