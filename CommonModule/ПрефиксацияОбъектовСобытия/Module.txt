////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ВНЕШНИЕ ПРОЦЕДУРЫ


// для справочников

// Выполняет проверку модифицированности реквизита Организация элемента справочника
// Если реквизит Организация изменен, то Код элемента обнуляется.
// Это необходимо для назначения нового кода элементу
//
// Параметры:
//  Источник - СправочникОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьКодСправочникаПоОрганизации(Источник, Отказ) Экспорт
	
	ПроверитьКодОбъектаПоОрганизации(Источник);
	
КонецПроцедуры


// для документов

// Выполняет проверку модифицированности Даты документа
// Если дата не входит в предыдущий период, то номер документа обнуляется.
// Это необходимо для назначения нового номера документу
//
// Параметры:
//  Источник - ДокументОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьНомерДокументаПоДате(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	ПроверитьНомерОбъектаПоДате(Источник);
	
КонецПроцедуры

// Выполняет проверку модифицированности Даты и Организации документа
// Если дата не входит в предыдущий период или изменен реквизит Организация, то номер документа обнуляется.
// Это необходимо для назначения нового номера документу
//
// Параметры:
//  Источник - ДокументОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьНомерДокументаПоДатеИОрганизации(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++Минин 0000134090 2015-07-21
	ПроверитьНомерОбъектаПоДатеИОрганизации(Источник);
	
	//заполним автора если он не заполнен
	Если НЕ ЗначениеЗаполнено(Источник.Автор) Тогда
		Источник.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Источник.ДополнительныеСвойства.Вставить("ЭтоНовый", Источник.ЭтоНовый());
	Источник.ДополнительныеСвойства.Вставить("БылПроведен", Источник.Проведен);
	
	//{ СИТЕК БрыляковЕЮ 2015-04-30  
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	// СИТЕК БрыляковЕЮ 2015-04-30 }
	
	//++Минин 0000134090 2015-07-21
	Если НЕ (Источник.ДополнительныеСвойства.Свойство("ОтправкаRMS") И Источник.ДополнительныеСвойства.ОтправкаRMS) Тогда //dps 15.08.19 135637 Ошибка Завершения приемки товаров
		Отказ = Izh_ОбменДанными.ЗапрещеноИзменение(Источник);
		Если Отказ Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Запрещено изменение! Объект уже отправлен в другие системы!'"),
			Источник
			);
		КонецЕсли;
	КонецЕсли;
	//++Минин 0000134090 2015-07-21
	
	//{ СИТЕК БрыляковЕЮ 2015-05-06  
	// Исходный текст --> 
	//{БредовЮГ 2013-11-30 Наряд №000134783
	//{ВетровИА 30.03.2015 Наряд №000146452 Добавил проверку роли ЗапускРегламентныхЗаданий} 
	//Если НЕ РольДоступна("ЗапускРегламентныхЗаданий") И НЕ (Источник.ДополнительныеСвойства.Свойство("ОбменЦВД") И Источник.ДополнительныеСвойства.ОбменЦВД) 
	//	И НЕ (Источник.ДополнительныеСвойства.Свойство("ОтправкаRMS") И Источник.ДополнительныеСвойства.ОтправкаRMS)Тогда
	//	
	//	Если ПараметрыСеанса.ЭтоЦентр Тогда  
	//		Если ТипЗнч(Источник)=Тип("ДокументОбъект.ПриходнаяНакладная") ИЛИ Источник.Проведен Тогда
	//			Отказ = Истина;	
	//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//			НСтр("ru = 'Запрещено изменение! Объект уже отправлен в другие системы!'"),Источник);
	//		КонецЕсли;
	//	ИначеЕсли  Источник.Проведен Тогда
	//			Отказ = Истина;	
	//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//			НСтр("ru = 'Запрещено изменение! Объект уже отправлен в другие системы!'"),Источник);
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//БредовЮГ 2013-11-30 Наряд №000134783}
	// <-- Исходный текст 
	// СИТЕК БрыляковЕЮ 2015-05-06 }
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

//+Зернятко А.В.@21.06.2013 - Изменение стратегии нумерации
Функция ДатаСменыСтратегииНумерации2013(ИмяДокумента = "") Экспорт
	
	//Типовой вариант (изменение стратегии нумерации во всей базе)
	Возврат Дата(1,1,1);
	
КонецФункции
/////Зернятко А.В.@ - конец блока		
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановитьПрефикс(Источник, СтандартнаяОбработка, Префикс) Экспорт
	Если ТипЗнч(Источник.Номер) = Тип("Число")	Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.Ссылка.Метаданные().Реквизиты.Найти("СтруктурнаяЕдиница") = Неопределено Тогда
		ПрефиксИнформационнойБазы = "";
	Иначе
		//*Зернятко А.В.@13.03.2013 17:38:04 - Изменение стратегии нумерации
		//ПрефиксИнформационнойБазы = Формат(Источник.СтруктурнаяЕдиница.Код,"ЧГ=");
		
		//{БредовЮГ 2015-02-15 Пробуем решить проблему неуникальности номеров при обмене ЦВД за счет префиксов СЕ
		Если ПараметрыСеанса.ЭтоЦентр И ТипЗнч(Источник) = Тип("ДокументОбъект.КорректировкаПоступления") Тогда
			ПрефиксСЕ = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Префикс;	
		Иначе
			ПрефиксСЕ = Источник.СтруктурнаяЕдиница.Префикс;
		КонецЕсли;
		//БредовЮГ 2015-02-15 Пробуем решить проблему неуникальности номеров при обмене ЦВД за счет префиксов СЕ}
		ПрефиксИнформационнойБазы = ВРег(Лев(ПрефиксСЕ,1)) + НРег(Прав(ПрефиксСЕ,СтрДлина(СокрЛП(ПрефиксСЕ))-1));
		///Зернятко А.В.@ - конец блока 
	КонецЕсли;	
	
	
	Если Источник.Ссылка.Метаданные().Реквизиты.Найти("Фирма") = Неопределено Тогда
		ПрефиксОрганизации = "";
	Иначе
		//*Зернятко А.В.@13.03.2013 17:38:04 - Изменение стратегии нумерации
		ПрефиксФ = Источник.Фирма.Префикс;
		ПрефиксОрганизации = ВРег(Лев(ПрефиксФ,1)) + НРег(Прав(ПрефиксФ,СтрДлина(СокрЛП(ПрефиксФ))-1));
		///Зернятко А.В.@ - конец блока 
	КонецЕсли;	
	
	//Котлячкова++ 25,05,13	
	ОсновнойПрефикс = ПрефиксОрганизации+?(ПрефиксОрганизации="","", "-")+ ПрефиксИнформационнойБазы;
	//Котлячкова--	
	Разделитель = "";//?(ПустаяСтрока(ОсновнойПрефикс), "", "-");
	
	Префикс = ОсновнойПрефикс + Разделитель + Префикс;
	
	// если префикс не задан, то устанавливаем значение по умолчанию
	Если ПустаяСтрока(Префикс) Тогда
		
		Префикс = "0";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНомерОбъектаПоДате(Объект)
	
	Если Объект.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = Объект.Метаданные();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ШапкаОбъекта.Дата КАК Дата
	|ИЗ
	|	" + МетаданныеОбъекта.ПолноеИмя() + " КАК ШапкаОбъекта
	|ГДЕ
	|	ШапкаОбъекта.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Не ДатыОбъектаОдногоПериода(Выборка.Дата, Объект.Дата, МетаданныеОбъекта) Тогда
			
			Объект.Номер = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНомерОбъектаПоДатеИОрганизации(Объект)
	
	Если Объект.ЭтоНовый() ИЛИ Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = Объект.Метаданные();
	Если МетаданныеОбъекта.Реквизиты.Найти("Фирма") = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ШапкаОбъекта.Дата        КАК Дата,
	|	ШапкаОбъекта.Фирма КАК Фирма
	|ИЗ
	|	" + МетаданныеОбъекта.ПолноеИмя() + " КАК ШапкаОбъекта
	|ГДЕ
	|	ШапкаОбъекта.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.Фирма <> Объект.Фирма Тогда
			
			Объект.Номер = "";
			
		ИначеЕсли Не ДатыОбъектаОдногоПериода(Выборка.Дата, Объект.Дата, МетаданныеОбъекта) Тогда
			
			Объект.Номер = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКодОбъектаПоОрганизации(Объект)
	
	Если Объект.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = Объект.Метаданные();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ШапкаОбъекта.Организация КАК Организация
	|ИЗ
	|	" + МетаданныеОбъекта.ПолноеИмя() + " КАК ШапкаОбъекта
	|ГДЕ
	|	ШапкаОбъекта.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если Выборка.Организация <> Объект.Организация Тогда
			
			Объект.Код = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Функция ДатыОбъектаОдногоПериода(Знач Дата1, Знач Дата2, МетаданныеОбъекта)
	
	Если ПериодичностьНомераДокументаГод(МетаданныеОбъекта) Тогда
		
		РазностьДат = НачалоГода(Дата1) - НачалоГода(Дата2);
		
	ИначеЕсли ПериодичностьНомераДокументаКвартал(МетаданныеОбъекта) Тогда
		
		РазностьДат = НачалоКвартала(Дата1) - НачалоКвартала(Дата2);
		
	ИначеЕсли ПериодичностьНомераДокументаМесяц(МетаданныеОбъекта) Тогда
		
		РазностьДат = НачалоМесяца(Дата1) - НачалоМесяца(Дата2);
		
	ИначеЕсли ПериодичностьНомераДокументаДень(МетаданныеОбъекта) Тогда
		
		РазностьДат = НачалоДня(Дата1) - НачалоДня(Дата2);
		
	Иначе // ПериодичностьНомераДокументаНеопределено
		
		РазностьДат = 0;
		
	КонецЕсли;
	
	Возврат РазностьДат = 0;
	
КонецФункции

Функция ПериодичностьНомераДокументаГод(МетаданныеОбъекта)
	
	Возврат МетаданныеОбъекта.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Год;
	
КонецФункции

Функция ПериодичностьНомераДокументаКвартал(МетаданныеОбъекта)
	
	Возврат МетаданныеОбъекта.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Квартал;
	
КонецФункции

Функция ПериодичностьНомераДокументаМесяц(МетаданныеОбъекта)
	
	Возврат МетаданныеОбъекта.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Месяц;
	
КонецФункции

Функция ПериодичностьНомераДокументаДень(МетаданныеОбъекта)
	
	Возврат МетаданныеОбъекта.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.День;
	
КонецФункции



