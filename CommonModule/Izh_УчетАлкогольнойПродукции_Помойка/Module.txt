
////////////////////////////////////////////////////////////////////////////////
// ПриложениеПоАлкоголю

Процедура ЗаполнитьУниверсальнаяПроцедура(ДокументОснование)
	  
	ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьТаблицуАлкоголя(ДокументОснование.Состав);
	
	Если НЕ ЗначениеЗаполнено(ТаблицаАлкоголя) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='В документе %1 отсутствует алкогольная продукция.'"),
		ДокументОснование);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ЭтотОбъект.ДокОснование       = ДокументОснование;
	ЭтотОбъект.Фирма              = ДокументОснование.Фирма;
	ЭтотОбъект.СтруктурнаяЕдиница = ДокументОснование.СтруктурнаяЕдиница;
	ЭтотОбъект.Грузоотправитель = ДокументОснование.Грузоотправитель;
	ЭтотОбъект.НомерДокумента = ДокументОснование.НомерДокумента;
	ЭтотОбъект.ДатаДокумента = ДокументОснование.ДатаДокумента;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаАлкоголя.*
	|ПОМЕСТИТЬ времТаблицаАлкоголя
	|ИЗ
	|	&ТаблицаАлкоголя КАК времТаблицаАлкоголя
	|;
	|ВЫБРАТЬ
	|	времТаблицаАлкоголя.Номенклатура,
	|	времТаблицаАлкоголя.ЕдиницаИзмерения,
	|	времТаблицаАлкоголя.Количество,
	|	времТаблицаАлкоголя.Коэффициент,
	|	времТаблицаАлкоголя.ВидАлкогольнойПродукции,
	|	времТаблицаАлкоголя.Производитель	
	|ИЗ
	|	времТаблицаАлкоголя КАК времТаблицаАлкоголя
	|ГДЕ
	|	Количество <> 0");
	
	Запрос.УстановитьПараметр("ТаблицаАлкоголя",ТаблицаАлкоголя);
	Запрос.УстановитьПараметр("СписокНоменклатуры",ДокументОснование.Состав.ВыгрузитьКолонку("Номенклатура"));

	тз = Запрос.Выполнить().Выгрузить();
	ЭтотОбъект.Состав.Загрузить(тз);
	
КонецПроцедуры

Процедура ЗаполнитьПоКоррекцииЗапасов(ДокументОснование)
	
	Если ДокументОснование.Оприходование Тогда
		ЗаполнитьУниверсальнаяПроцедура(ДокументОснование);
	Иначе
		//ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		//НСтр("ru='Документ %1 не является документом оприходования.'"),
		//ДокументОснование);
		//ВызватьИсключение ТекстСообщения;
		ЗаполнитьПоРасходномуДокументу(ДокументОснование);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоПриходнойНакладной(ДокументОснование)
	  
	ЗаполнитьУниверсальнаяПроцедура(ДокументОснование);

КонецПроцедуры

Процедура ЗаполнитьПоРасходномуДокументу(ДокументОснование)
	
	РучнойРасходАлкогольнойПродукции = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РучнойРасходАлкогольнойПродукции,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
	Если РучнойРасходАлкогольнойПродукции Тогда
		
		ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьТаблицуАлкоголя(ДокументОснование.Состав);
		
		Если НЕ ЗначениеЗаполнено(ТаблицаАлкоголя) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В документе %1 отсутствует алкогольная продукция.'"),
			ДокументОснование);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ЭтотОбъект.ДокОснование       = ДокументОснование;
		ЭтотОбъект.Фирма              = ДокументОснование.Фирма;
		ЭтотОбъект.СтруктурнаяЕдиница = ДокументОснование.СтруктурнаяЕдиница;
		ЭтоКорректировкаРеализации = ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации");

		Если ЭтоКорректировкаРеализации Тогда
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ТаблицаСостав.*
			|ПОМЕСТИТЬ ВремТаблицаСостав
			|ИЗ
			|	&ТаблицаСостав КАК ТаблицаСостав
			|;
			|ВЫБРАТЬ 
			|	ВремТаблицаСостав.Номенклатура,
			|	ВремТаблицаСостав.ЕдиницаИзмерения,
			|	ВЫРАЗИТЬ((ВремТаблицаСостав.Количество - ВремТаблицаСостав.КоличествоДоИзменения) * ВремТаблицаСостав.Коэффициент КАК ЧИСЛО(15, 3)) КАК Количество,
			|	ВремТаблицаСостав.Коэффициент
			|ИЗ
			|	ВремТаблицаСостав КАК ВремТаблицаСостав
			|	ГДЕ ВремТаблицаСостав.Количество - ВремТаблицаСостав.КоличествоДоИзменения <> 0");
			Запрос.УстановитьПараметр("ТаблицаСостав",ДокументОснование.Состав);
			ТЗ = Запрос.Выполнить().Выгрузить();
			ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьСвернутуюТаблицуАлкоголяСЕдиницами(ТЗ);
		Иначе
			ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьСвернутуюТаблицуАлкоголяСЕдиницами(ДокументОснование.Состав);
		КонецЕсли;
		
		ТаблицаАлкоголя.Колонки.Добавить("СтруктурнаяЕдиница",Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
		ТаблицаАлкоголя.ЗаполнитьЗначения(ДокументОснование.СтруктурнаяЕдиница,"СтруктурнаяЕдиница");
		ТаблицаАлкоголя.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));
		ТаблицаАлкоголя.ЗаполнитьЗначения(ДокументОснование.Фирма,"Фирма");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	времТаблицаАлкоголя.*
		|ПОМЕСТИТЬ времТаблицаАлкоголя
		|ИЗ
		|	&ТаблицаАлкоголя КАК времТаблицаАлкоголя
		|;
		|ВЫБРАТЬ 
		|	времТаблицаАлкоголя.Номенклатура,
		|	времТаблицаАлкоголя.Фирма,
		|	времТаблицаАлкоголя.СтруктурнаяЕдиница,
		|   времТаблицаАлкоголя.Количество,
		|   времТаблицаАлкоголя.ЕдиницаИзмерения,
		|   времТаблицаАлкоголя.Коэффициент,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ОстаткиАлкоголя.КоличествоОстаток < 0
		|				ТОГДА 0
		|			ИНАЧЕ ОстаткиАлкоголя.КоличествоОстаток
		|		КОНЕЦ, 0) КАК КоличествоОстаток,
		|   ОстаткиАлкоголя.ВидАлкогольнойПродукции,
		|   ОстаткиАлкоголя.Производитель
		|ИЗ	
		|	времТаблицаАлкоголя КАК времТаблицаАлкоголя
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетАлкоголяПоПроизводителям.Остатки(
		|				&МоментВремени,
		|				(Фирма, СтруктурнаяЕдиница, Номенклатура) В
		|						(ВЫБРАТЬ
		|							с.Фирма,
		|							с.СтруктурнаяЕдиница,
		|							с.Номенклатура
		|						ИЗ
		|							времТаблицаАлкоголя КАК с
		|						ГДЕ
		|							с.Фирма = &Фирма)) КАК ОстаткиАлкоголя
		|		ПО времТаблицаАлкоголя.Номенклатура = ОстаткиАлкоголя.Номенклатура
		|	    И времТаблицаАлкоголя.СтруктурнаяЕдиница = ОстаткиАлкоголя.СтруктурнаяЕдиница
		|ГДЕ
		|	времТаблицаАлкоголя.Фирма = &Фирма
		|УПОРЯДОЧИТЬ ПО
		|	Производитель
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	МАКСИМУМ(Производитель),
		|	СУММА(КоличествоОстаток)
		|ПО
		|	времТаблицаАлкоголя.СтруктурнаяЕдиница,
		|	времТаблицаАлкоголя.Номенклатура");
		
		Запрос.УстановитьПараметр("ТаблицаАлкоголя",ТаблицаАлкоголя);
		Запрос.УстановитьПараметр("МоментВремени",ДокументОснование.МоментВремени());
		Запрос.УстановитьПараметр("Фирма",ДокументОснование.Фирма);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаСтруктурнаяЕдиница = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСтруктурнаяЕдиница.Следующий() Цикл
			ВыборкаНоменклатура = ВыборкаСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНоменклатура.Следующий() Цикл
				чКолСписываем = ВыборкаНоменклатура.Количество;
				ВыборкаРегистраторДата = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаРегистраторДата.Следующий() Цикл
					чКолТек = МИН(ВыборкаРегистраторДата.КоличествоОстаток,чКолСписываем);
					Если чКолТек > 0 
						ИЛИ чКолТек < 0 И ЭтоКорректировкаРеализации Тогда
						НоваяСтрока = ЭтотОбъект.Состав.Добавить();
						НоваяСтрока.Номенклатура            = ВыборкаРегистраторДата.Номенклатура;
						НоваяСтрока.ВидАлкогольнойПродукции = ВыборкаРегистраторДата.ВидАлкогольнойПродукции;
						НоваяСтрока.Производитель           = ВыборкаРегистраторДата.Производитель;
						НоваяСтрока.ЕдиницаИзмерения        = ВыборкаРегистраторДата.ЕдиницаИзмерения;
						НоваяСтрока.Коэффициент             = ВыборкаРегистраторДата.Коэффициент;
						НоваяСтрока.Количество              = чКолТек;
					КонецЕсли;
					чКолСписываем = чКолСписываем - чКолТек;
					Если чКолСписываем = 0 Тогда
						Прервать;
					КонецЕсли;	
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	Иначе
		ТекстСообщения = НСтр("ru='Для данной структурной единицы не настроен ручной расход алкогольной продукции. "+Символы.ПС+"Ввод документа невозможен.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПоВводуОстатков(ДокументОснование)
	
	Если НЕ (ДокументОснование.ТипОстатков = Перечисления.ТипыОстатков.КупленныеТовары 
		ИЛИ ДокументОснование.ТипОстатков = Перечисления.ТипыОстатков.КомиссионныеТовары 
		ИЛИ ДокументОснование.ТипОстатков = Перечисления.ТипыОстатков.ХранимыеТовары) 
		Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Документ %1 не является документом ввода остатков товаров.'"),
		ДокументОснование);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ДокументОснование.ТипОстатков = Перечисления.ТипыОстатков.КупленныеТовары Тогда
		 ТабличнаяЧастьСостав = ДокументОснование.КупленныеТовары;
	ИначеЕсли ДокументОснование.ТипОстатков = Перечисления.ТипыОстатков.КомиссионныеТовары Тогда
		 ТабличнаяЧастьСостав = ДокументОснование.КомиссионныеТовары;
	ИначеЕсли ДокументОснование.ТипОстатков = Перечисления.ТипыОстатков.ХранимыеТовары Тогда
		 ТабличнаяЧастьСостав = ДокументОснование.ХранимыеТовары;
	КонецЕсли;
	
   	ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьТаблицуАлкоголя(ТабличнаяЧастьСостав);
	
	Если НЕ ЗначениеЗаполнено(ТаблицаАлкоголя) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='В документе %1 отсутствует алкогольная продукция.'"),
		ДокументОснование);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ЭтотОбъект.ДокОснование       = ДокументОснование;
	ЭтотОбъект.Фирма              = ДокументОснование.Фирма;
	ЭтотОбъект.СтруктурнаяЕдиница = ДокументОснование.СтруктурнаяЕдиница;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаАлкоголя.*
	|ПОМЕСТИТЬ времТаблицаАлкоголя
	|ИЗ
	|	&ТаблицаАлкоголя КАК времТаблицаАлкоголя
	|;
	|ВЫБРАТЬ
	|	времТаблицаАлкоголя.Номенклатура,
	|	времТаблицаАлкоголя.ЕдиницаИзмерения,
	|	времТаблицаАлкоголя.Количество,
	|	времТаблицаАлкоголя.Коэффициент,
	|	времТаблицаАлкоголя.ВидАлкогольнойПродукции,
	|	времТаблицаАлкоголя.Производитель	
	|ИЗ
	|	времТаблицаАлкоголя КАК времТаблицаАлкоголя");
	
	Запрос.УстановитьПараметр("ТаблицаАлкоголя",ТаблицаАлкоголя);
	Запрос.УстановитьПараметр("СписокНоменклатуры",ТабличнаяЧастьСостав.ВыгрузитьКолонку("Номенклатура"));
	тз = Запрос.Выполнить().Выгрузить();
	ЭтотОбъект.Состав.Загрузить(тз);
	
КонецПроцедуры

Процедура ЗаполнитьПоКорректировкеПоступления(ДокументОснование)
	
	ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьТаблицуАлкоголя(ДокументОснование.Состав);
	
	Если НЕ ЗначениеЗаполнено(ТаблицаАлкоголя) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='В документе %1 отсутствует алкогольная продукция.'"),
		ДокументОснование);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ЭтотОбъект.ДокОснование       = ДокументОснование;
	ЭтотОбъект.Фирма              = ДокументОснование.Фирма;
	ЭтотОбъект.СтруктурнаяЕдиница = ДокументОснование.СтруктурнаяЕдиница;
	
	ДокументПоступленияСсылка = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ДокументОснование.ДокументПоступления, Истина);
	Если ДокументОснование.РежимКорректировки = Перечисления.РежимыКорректировок.СогласованноеИзменение Тогда
		ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ДокументОснование.ДокументПоступления, Истина);
	Иначе
		ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ДокументОснование.ДокументПоступления, Ложь);
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаАлкоголя.*
	|ПОМЕСТИТЬ времТаблицаАлкоголя
	|ИЗ
	|	&ТаблицаАлкоголя КАК времТаблицаАлкоголя
	|;
	|ВЫБРАТЬ
	|	времТаблицаАлкоголя.Номенклатура,
	|	времТаблицаАлкоголя.ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ((времТаблицаАлкоголя.Количество - времТаблицаАлкоголя.КоличествоДоИзменения) * времТаблицаАлкоголя.Коэффициент КАК ЧИСЛО(15, 3)) КАК Количество,
	|	времТаблицаАлкоголя.Коэффициент,
	|	времТаблицаАлкоголя.ВидАлкогольнойПродукции,
	|	времТаблицаАлкоголя.Производитель	
	|ИЗ
	|	времТаблицаАлкоголя КАК времТаблицаАлкоголя
	|	ГДЕ времТаблицаАлкоголя.Количество - времТаблицаАлкоголя.КоличествоДоИзменения <> 0");
	
	Запрос.УстановитьПараметр("ТаблицаАлкоголя",ТаблицаАлкоголя);
	Запрос.УстановитьПараметр("СписокНоменклатуры",ДокументОснование.Состав.ВыгрузитьКолонку("Номенклатура"));
	тз = Запрос.Выполнить().Выгрузить();
	ЭтотОбъект.Состав.Загрузить(тз);

КонецПроцедуры

Процедура ЗаполнитьПоВозвратнойНакладнойОтПокупателя(ДокументОснование)
	
	//если у документа возврата нет документа-основания,
	//заполним табличную часть приложения по алкоголю из его табличной части
	Если НЕ ЗначениеЗаполнено(ДокументОснование.ДокОснование) Тогда
		ЗаполнитьУниверсальнаяПроцедура(ДокументОснование);
		Возврат;
	КонецЕсли;
	
	//если у документа возврата есть документ-основание,
	//то заполнять табличную часть приложения по алкоголю
	//будем исходя из движений документа продажи
	
	ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьТаблицуАлкоголя(ДокументОснование.Состав);
	
	Если НЕ ЗначениеЗаполнено(ТаблицаАлкоголя) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='В документе %1 отсутствует алкогольная продукция.'"),
		ДокументОснование);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ЭтотОбъект.ДокОснование       = ДокументОснование;
	ЭтотОбъект.Фирма              = ДокументОснование.Фирма;
	ЭтотОбъект.СтруктурнаяЕдиница = ДокументОснование.СтруктурнаяЕдиница;
	
	Запрос = Новый Запрос(
	
	"ВЫБРАТЬ
	|	времТаблицаАлкоголя.*
	|ПОМЕСТИТЬ времТаблицаАлкоголя
	|ИЗ
	|	&ТаблицаАлкоголя КАК времТаблицаАлкоголя
	|;
	|ВЫБРАТЬ 
	|	времТаблицаАлкоголя.Номенклатура,
	|	времТаблицаАлкоголя.ЕдиницаИзмерения,
	|	времТаблицаАлкоголя.Коэффициент,
	|   времТаблицаАлкоголя.Количество,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ДвиженияАлкоголя.КоличествоРасход < 0
	|				ТОГДА 0
	|			ИНАЧЕ ДвиженияАлкоголя.КоличествоРасход
	|		КОНЕЦ, 0) КАК КоличествоОстаток,
	|   ДвиженияАлкоголя.Производитель КАК Производитель,
	|   ДвиженияАлкоголя.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции
	|ИЗ	
	|	времТаблицаАлкоголя КАК времТаблицаАлкоголя
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		УчетАлкоголяПоПроизводителямОбороты.Номенклатура,
	|		УчетАлкоголяПоПроизводителямОбороты.Производитель,
	|		УчетАлкоголяПоПроизводителямОбороты.ВидАлкогольнойПродукции,
	|		УчетАлкоголяПоПроизводителямОбороты.КоличествоРасход
	|ИЗ
	|	РегистрНакопления.УчетАлкоголяПоПроизводителям.Обороты(, , Регистратор, ) КАК УчетАлкоголяПоПроизводителямОбороты
	|ГДЕ
	|	УчетАлкоголяПоПроизводителямОбороты.Регистратор = &Регистратор) КАК ДвиженияАлкоголя
	|		ПО времТаблицаАлкоголя.Номенклатура = ДвиженияАлкоголя.Номенклатура
	|УПОРЯДОЧИТЬ ПО
	|	Производитель
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(Производитель),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	времТаблицаАлкоголя.Номенклатура");

	Запрос.УстановитьПараметр("ТаблицаАлкоголя",ТаблицаАлкоголя);
	
	РучнойРасходАлкогольнойПродукции = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РучнойРасходАлкогольнойПродукции,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
	Если РучнойРасходАлкогольнойПродукции Тогда
		СуществующийДокументПриложениеПоАлкоголю = НайтиПодчиненныйДокументПриложениеПоАлкоголю(ДокументОснование.ДокОснование);
		Запрос.УстановитьПараметр("Регистратор",СуществующийДокументПриложениеПоАлкоголю);
	Иначе
		Запрос.УстановитьПараметр("Регистратор",ДокументОснование.ДокОснование);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		чКолСписываем = ВыборкаНоменклатура.Количество;
		Выборка = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			чКолТек = МИН(Выборка.КоличествоОстаток,чКолСписываем);
			Если чКолТек > 0 Тогда
				НоваяСтрока = ЭтотОбъект.Состав.Добавить();
				НоваяСтрока.Номенклатура         = Выборка.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения     = Выборка.ЕдиницаИзмерения;
				НоваяСтрока.Коэффициент          = Выборка.Коэффициент;
				НоваяСтрока.ВидАлкогольнойПродукции = Выборка.ВидАлкогольнойПродукции;
				НоваяСтрока.Производитель        = Выборка.Производитель;
				НоваяСтрока.Количество           = чКолТек;
			КонецЕсли; 
			чКолСписываем = чКолСписываем - чКолТек;
			Если чКолСписываем = 0 Тогда
				Прервать;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Функция НайтиПодчиненныйДокументПриложениеПоАлкоголю(ДокументОснование)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ПриложениеПоАлкоголю.Ссылка
		|ИЗ
		|	Документ.ПриложениеПоАлкоголю КАК ПриложениеПоАлкоголю
		|ГДЕ
		|	ПриложениеПоАлкоголю.ДокОснование = &ДокОснование
		|	И ПриложениеПоАлкоголю.Проведен";

	Запрос.УстановитьПараметр("ДокОснование", ДокументОснование);

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) 
	
	УчетАлкоголя = УчетАлкогольнойПродукции.ВестиУчетАлкоголя();
	
	//Если ЭтотОбъект.ЭтоНовый() Тогда
	//	СуществующийДокументПриложениеПоАлкоголю = НайтиПодчиненныйДокументПриложениеПоАлкоголю(ДанныеЗаполнения);
	//	Если ЗначениеЗаполнено(СуществующийДокументПриложениеПоАлкоголю) Тогда
	//		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//		НСтр("ru='На основании документа %1 уже был введен %2'"),
	//		ДанныеЗаполнения,
	//		СуществующийДокументПриложениеПоАлкоголю);
	//		ВызватьИсключение ТекстСообщения;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если НЕ УчетАлкоголя Тогда
		ТекстСообщения = НСтр("ru='Для данной структурной единицы не настроено ведение учета алкоголя по производителям. Ввод документа невозможен.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если НЕ ДанныеЗаполнения.Проведен Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Документ %1 не проведен.  Ввод на основании невозможен.'"),
		ДанныеЗаполнения);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
	Иначе
		
		ЗаполнитьПоДокументу(ДанныеЗаполнения);
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		ЗаполнитьПоПриходнойНакладной(ДанныеЗаполнения);	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		ЗаполнитьПоКорректировкеПоступления(ДанныеЗаполнения);			
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратнаяНакладнаяОтПокупателя") Тогда
		ЗаполнитьПоВозвратнойНакладнойОтПокупателя(ДанныеЗаполнения);	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КоррекцияЗапасов") Тогда
		ЗаполнитьПоКоррекцииЗапасов(ДанныеЗаполнения);		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВводОстатков") Тогда
		ЗаполнитьПоВводуОстатков(ДанныеЗаполнения);	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		ЗаполнитьПоРасходномуДокументу(ДанныеЗаполнения);	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ЗаполнитьПоРасходномуДокументу(ДанныеЗаполнения);	
	КонецЕсли;	
	ИнициализироватьДокумент();
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	УчетАлкоголя = УчетАлкогольнойПродукции.ВестиУчетАлкоголя();
	Если УчетАлкоголя Тогда
		Если ТипЗнч(ЭтотОбъект.ДокОснование) = Тип("ДокументСсылка.РасходнаяНакладная") 
			ИЛИ (ТипЗнч(ЭтотОбъект.ДокОснование) = Тип("ДокументСсылка.КоррекцияЗапасов") И НЕ ЭтотОбъект.ДокОснование.Оприходование)
			ИЛИ ТипЗнч(ЭтотОбъект.ДокОснование) = Тип("ДокументСсылка.КорректировкаРеализации") 
			Тогда
			Отказ = УчетАлкогольнойПродукции.ПровестиПриложениеПоАлкоголюРасход(ЭтотОбъект,РежимПроведения);
		Иначе
			Отказ = УчетАлкогольнойПродукции.ПровестиПриложениеПоАлкоголюПриход(ЭтотОбъект,РежимПроведения);
		КонецЕсли;
	Иначе
		УчетАлкогольнойПродукции.ОчиститьДвиженияПоУчетуАлкоголя(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры
