
//{ СИТЕК БрыляковЕЮ 2014-10-08  
Функция СоздатьОписаниеТипов(Знач ТипЗначения)
	
	Если ТипЗнч(ТипЗначения) = Тип("ОписаниеТипов") Тогда
		Возврат ТипЗначения;
	ИначеЕсли ТипЗнч(ТипЗначения) = Тип("Тип") Тогда
		Возврат Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипЗначения));
	ИначеЕсли ТипЗнч(ТипЗначения) = Тип("Строка") Тогда
		Возврат Izh_ОбщегоНазначенияКлиентСервер.ОписаниеТипаИзСтроки(ТипЗначения);
	ИначеЕсли ТипЗначения = Неопределено Тогда
		Возврат Новый ОписаниеТипов("Неопределено");
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

// Создает несуществующие колонки, имена которых указаны в ключах структуры Колонки и заполняет их значенями,
// указанными в значениях структуры Колонки
Процедура ДобавитьИЗаполнитьКолонки(Таблица, Знач Колонки) Экспорт 
	
	ТипыКолонок = Новый Структура();
	Для каждого Колонка Из Колонки Цикл
		ТипыКолонок.Вставить(Колонка.Ключ, ТипЗнч(Колонка.Значение));
	КонецЦикла;
	ДобавитьКолонки(Таблица, ТипыКолонок);
	
	Если ТипЗнч(Таблица) = Тип("ДеревоЗначений") Тогда
		ЗаполнитьКолонкиДерева(Таблица, Колонки);
	Иначе
		Для каждого Колонка Из Колонки Цикл
			Таблица.ЗаполнитьЗначения(Колонка.Значение, Колонка.Ключ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКолонки(Таблица, Знач Колонки, Знач Замещать = Ложь) Экспорт 
	
	Если ТипЗнч(Колонки) = Тип("Строка") Тогда
		Колонки = Новый Структура(Колонки);
	КонецЕсли;
	
	Для каждого Колонка Из Колонки Цикл
		
		ТипКолонки = СоздатьОписаниеТипов(Колонка.Значение);
		КолонкаТаблицы = Таблица.Колонки.Найти(Колонка.Ключ);
		
		Если КолонкаТаблицы = Неопределено Тогда
			
			Таблица.Колонки.Добавить(Колонка.Ключ, ТипКолонки);
			
		ИначеЕсли ТипЗнч(Таблица) = Тип("ДеревоЗначений") Тогда
			
			Продолжить;
			
		ИначеЕсли КолонкаТаблицы <> Неопределено И ТипКолонки <> КолонкаТаблицы.ТипЗначения Тогда
			
			НовыйТип = Izh_ОбщегоНазначенияКлиентСервер.ДобавитьТип(КолонкаТаблицы.ТипЗначения, ТипКолонки);
			
			СменитьТипКолонки(Таблица, Колонка.Ключ, НовыйТип);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СменитьТипКолонки(Таблица, Знач Колонка, Знач НовыйТип) Экспорт 
	
	НовыйТип = СоздатьОписаниеТипов(НовыйТип);
	Если НовыйТип = Таблица.Колонки[Колонка].ТипЗначения Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияВКолонке = Таблица.ВыгрузитьКолонку(Колонка);
	Таблица.Колонки.Удалить(Колонка);
	Таблица.Колонки.Добавить(Колонка, НовыйТип);
	Таблица.ЗагрузитьКолонку(ЗначенияВКолонке, Колонка);
	
КонецПроцедуры

Процедура УдалитьСтрокиТаблицы(Таблица, Знач СтрокиТаблицы) Экспорт 
	
	Если ТипЗнч(СтрокиТаблицы) = Тип("Структура") ИЛИ ТипЗнч(СтрокиТаблицы) = Тип("ФиксированнаяСтруктура") Тогда
		СтрокиТаблицы = Таблица.НайтиСтроки(СтрокиТаблицы);
	КонецЕсли;
	
	Для каждого СтрокаТЗ Из СтрокиТаблицы Цикл
		Таблица.Удалить(СтрокаТЗ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияСОтбором(Таблица, Знач СтрокиТаблицы, Знач Значение, Знач Колонки = "") Экспорт 
	
	Если ТипЗнч(СтрокиТаблицы) = Тип("Структура") ИЛИ ТипЗнч(СтрокиТаблицы) = Тип("ФиксированнаяСтруктура") Тогда
		СтрокиТаблицы = Таблица.НайтиСтроки(СтрокиТаблицы);
	КонецЕсли;
	
	Если ПустаяСтрока(Колонки) Тогда
		Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
			КолонкиТаблицы = Таблица.Колонки;
		Иначе
			КолонкиТаблицы = Таблица.ВыгрузитьКолонки().Колонки;
			КолонкиТаблицы.Удалить("НомерСтроки");
		КонецЕсли;
		Колонки = Новый Структура();
		Для каждого Колонка Из КолонкиТаблицы Цикл
			Колонки.Вставить(Колонка.Имя);
		КонецЦикла;
	Иначе
		Колонки = Новый Структура(Колонки);
	КонецЕсли;
	
	Для каждого СтрокаТЗ Из СтрокиТаблицы Цикл
		Для каждого Колонка Из Колонки Цикл
			СтрокаТЗ[Колонка.Ключ] = Значение;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


Процедура ЗаполнитьКолонкиДерева(Дерево, Знач Колонки)
	
	Для каждого СтрокаДерева Из Дерево.Строки Цикл
		ЗаполнитьЗначенияСвойств(СтрокаДерева, Колонки);
		ЗаполнитьКолонкиДерева(СтрокаДерева, Колонки);
	КонецЦикла;
	
КонецПроцедуры

Процедура СкопироватьПодчиненныеСтроки(Приемник, Знач Источник) Экспорт 
	
	Для каждого СтрокаИсточник Из Источник.Строки Цикл
		СтрокаПриемник = Приемник.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаИсточник);
		СкопироватьПодчиненныеСтроки(СтрокаПриемник, СтрокаИсточник);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПеренестиПодчиненныеСтроки(Приемник, Знач Источник, Знач УдалитьИсточник = Ложь) Экспорт 
	
	СкопироватьПодчиненныеСтроки(Приемник, Источник);
	
	Источник.Строки.Очистить();
	Если УдалитьИсточник Тогда
		Если Источник.Родитель = Неопределено Тогда
			Источник.Владелец().Строки.Удалить(Источник);
		Иначе
			Источник.Родитель.Строки.Удалить(Источник);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
// СИТЕК БрыляковЕЮ 2014-10-08 }
