
Процедура ПодобратьЦеныДляПерепродажи(Источник) Экспорт 
	
	// !!!! efim
	#Если _ Тогда
		Источник = Документы.ПередачаТоваровМеждуФирмами.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	Если Источник.ТипДоговора <> Перечисления.ТипыДоговоров.Комиссия Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
	Запрос.УстановитьПараметр("СЕ", Источник.СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("Номенклатура", Источник.Состав.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Ссылка,
		|	ЦеныНоменклатурыСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&ДатаСреза,
		|			СтруктурнаяЕдиница = &СЕ
		|				И Номенклатура В (&Номенклатура)) КАК ЦеныНоменклатурыСрезПоследних";
	ЦеныНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	Для каждого Номенклатура Из ЦеныНоменклатуры Цикл
		Отбор = Новый Структура("Номенклатура", Номенклатура.Ссылка);
		Для каждого СтрокаТЧ Из Источник.Состав.НайтиСтроки(Отбор) Цикл
			СтрокаТЧ.Цена = Номенклатура.Цена;
			Izh_ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодобратьЦеныДляРасходнойНакладной(Источник) Экспорт 
	
	// !!!! efim
	#Если _ Тогда
		Источник = Документы.РасходнаяНакладная.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	//++Минин 0000143578 2015-10-28
	КонтрагентОбщепит = ОпределениеКонтрагентаОбщепита(Источник.Контрагент);
	//--Минин 0000143578 2015-10-28

	//++Минин 0000143578 2015-10-28
	//Если ТипЗнч(Источник.Контрагент) <> Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
	Если ТипЗнч(Источник.Контрагент) <> Тип("СправочникСсылка.СтруктурныеЕдиницы") тогда
		Если Не КонтрагентОбщепит Тогда
	//--Минин 0000143578 2015-10-28
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СтруктурнаяЕдиница = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница, "РежимРаботы, ТипСтруктурнойЕдиницы");
	
	// !!!! efim
	#Если _ Тогда
		СтруктурнаяЕдиница = Источник.СтруктурнаяЕдиница;
	#КонецЕсли
	// !!!!
	
	Если СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы <> Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		Возврат;
	КонецЕсли;
	
	//++Минин 0000143578 2015-10-28
	//СЕПолучатель = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Контрагент, "РежимРаботы, Организация, Код");
	Если ТипЗнч(Источник.Контрагент) <> Тип("СправочникСсылка.СтруктурныеЕдиницы") тогда
		СЕПолучатель = Источник.Контрагент;
	Иначе 
		СЕПолучатель = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Контрагент, "РежимРаботы, Организация, Код");
	КонецЕсли;
	//--Минин 0000143578 2015-10-28
	АлкоФирма = Izh_УправлениеСвойствамиОбъектов.ЗначениеСвойстваОбъекта(
		Источник.Контрагент,
		//++БИТ БВО 2015-06-16		
		//ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.СвойствоГрузополучательАлко)
		ПланыВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.НайтиПоКоду(
			Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(
				ПланыВидовХарактеристик.СлужебныеЗначения.СвойствоГрузополучательАлко))
		//--БИТ БВО 2015-06-16
	);
	//++БИТ БВО 2015-06-16
	//ГруппаАлко = ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.ГруппаНоменклатурыАлкоголь);
	ГруппаАлко = Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.ГруппаНоменклатурыАлкоголь));
	//--БИТ БВО 2015-06-16
	
	// !!!! efim
	#Если _ Тогда
		СЕПолучатель = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	#КонецЕсли
	// !!!!
	
	//++Минин 0000143574 2015-10-28
	Если Не ЗначениеЗаполнено(ГруппаАлко) Тогда 
		Возврат; 
	КонецЕсли;
	
	СписокНоменклатуры = Источник.Состав.ВыгрузитьКолонку("Номенклатура");

	//Если СЕПолучатель.РежимРаботы <> Перечисления.РежимРаботыСЕ.Продуктив 
	//	ИЛИ НЕ ЗначениеЗаполнено(ГруппаАлко) Тогда
	//	Возврат;
	//КонецЕсли;
	//--Минин 0000143574 2015-10-28
	
	//++Минин 0000143578 2015-10-28
	КонтрагентОбщепит = ОпределениеКонтрагентаОбщепита(Источник.Контрагент);
	Если КонтрагентОбщепит Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номенклатура",СписокНоменклатуры);
		Запрос.УстановитьПараметр("Склад", Источник.Склад);
		Запрос.УстановитьПараметр("ФирмаОтправитель", Источник.Фирма);
		Запрос.УстановитьПараметр(
		"ДатаСреза", 
		?(ЗначениеЗаполнено(Источник.Дата), Источник.Дата, ТекущаяДата())
		);
		Запрос.Текст = "ВЫБРАТЬ
		|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура,
		|	ЕСТЬNULL(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена, 0) КАК ЦенаЗакуп
		|ПОМЕСТИТЬ ВТЦеныЗакупочные
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
		|			&ДатаСреза,
		|			Номенклатура В (&Номенклатура)
		|				И Фирма = &ФирмаОтправитель
		|				И Цена <> 0) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(НоменклатураКонтрагента.Цена, 0) КАК ЦенаПротокола,
		|	НоменклатураКонтрагента.Номенклатура,
		|	НоменклатураКонтрагента.ЕдиницаЗаказа
		|ПОМЕСТИТЬ ВТЦеныПротокола
		|ИЗ
		|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|ГДЕ
		|	НоменклатураКонтрагента.ОсновнойПоставщик
		|	И (НоменклатураКонтрагента.ДатаПрекращенияПоставок > &ДатаСреза
		|			ИЛИ НоменклатураКонтрагента.ДатаПрекращенияПоставок = ДАТАВРЕМЯ(1, 1, 1))
		|	И НоменклатураКонтрагента.Номенклатура В(&Номенклатура)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (ОстаткиНоменклатурыОстатки.СуммаУпрОстаток - ОстаткиНоменклатурыОстатки.СуммаНДСУпрОстаток) / ОстаткиНоменклатурыОстатки.КоличествоОстаток
		|	КОНЕЦ КАК ЦенаУпр
		|ПОМЕСТИТЬ ВТЦеныУпр
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&ДатаСреза,
		|			Номенклатура В (&Номенклатура)
		|				И Фирма = &ФирмаОтправитель
		|				И МестоХранения = &Склад) КАК ОстаткиНоменклатурыОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка,
		|	ВЫБОР
		|		КОГДА ВТЦеныУпр.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТЦеныЗакупочные.ЦенаЗакуп
		|	КОНЕЦ КАК ЦенаЗакуп,
		|	ВЫБОР
		|		КОГДА ВТЦеныУпр.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТЦеныПротокола.ЦенаПротокола
		|	КОНЕЦ КАК ЦенаПротокола,
		|	ВЫБОР
		|		КОГДА ВТЦеныУпр.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТЦеныУпр.ЦенаУпр
		|	КОНЕЦ КАК ЦенаУпр,
		|	СпрНоменклатура.Код
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦеныЗакупочные КАК ВТЦеныЗакупочные
		|		ПО (ВТЦеныЗакупочные.Номенклатура = СпрНоменклатура.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦеныПротокола КАК ВТЦеныПротокола
		|		ПО (ВТЦеныПротокола.Номенклатура = СпрНоменклатура.Ссылка)
		|			И (ВТЦеныПротокола.ЕдиницаЗаказа = СпрНоменклатура.БазоваяЕдиницаИзмерения)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦеныУпр КАК ВТЦеныУпр
		|		ПО (ВТЦеныУпр.Номенклатура = СпрНоменклатура.Ссылка)
		|ГДЕ
		|	СпрНоменклатура.Ссылка В(&Номенклатура)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Ссылка,
		|	ВТ_Данные.Код,
		|	ВЫБОР
		|		КОГДА ВТ_Данные.ЦенаЗакуп > 0
		|			ТОГДА ВТ_Данные.ЦенаЗакуп
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_Данные.ЦенаПротокола > 0
		|					ТОГДА ВТ_Данные.ЦенаПротокола
		|				ИНАЧЕ ВТ_Данные.ЦенаУпр
		|			КОНЕЦ
		|	КОНЕЦ КАК Цена,
		|	ЛОЖЬ КАК ПолучитьИзРМС,
		|	ВЫБОР
		|		КОГДА ВТ_Данные.ЦенаЗакуп > 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_Данные.ЦенаПротокола > 0
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|	КОНЕЦ КАК ВключаетНДС
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные";
	//--Минин 0000143578 2015-10-28
	//++Минин 0000143574 2015-10-28
	ИначеЕсли СЕПолучатель.РежимРаботы <> Перечисления.РежимРаботыСЕ.Продуктив Тогда 
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номенклатура",СписокНоменклатуры);
		Запрос.УстановитьПараметр("Склад", Источник.Склад);
		Запрос.УстановитьПараметр("ФирмаОтправитель", Источник.Фирма);
		Запрос.УстановитьПараметр("ФирмаПолучатель", СЕПолучатель.Организация);
		Запрос.УстановитьПараметр("АлкоФирма", АлкоФирма);
		Запрос.УстановитьПараметр("ГруппаАлко", ГруппаАлко);
		Запрос.УстановитьПараметр("Материалы", Справочники.Номенклатура.НайтиПоКоду("1:3910"));
		Запрос.УстановитьПараметр(
		"ДатаСреза", 
		?(ЗначениеЗаполнено(Источник.Дата), Источник.Дата, ТекущаяДата())
		);
		Запрос.Текст = "ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА СпрНоменклатура.Ссылка В ИЕРАРХИИ (&ГруппаАлко)
		|			ТОГДА &АлкоФирма
		|		ИНАЧЕ &ФирмаПолучатель
		|	КОНЕЦ КАК ФирмаПолучатель,
		|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
		|				&ДатаСреза,
		|				Номенклатура В (&Номенклатура)
		|					И Фирма = &ФирмаОтправитель
		|					И Цена <> 0) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
		|		ПО СпрНоменклатура.Ссылка = ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&ДатаСреза,
		|				Номенклатура В (&Номенклатура)
		|					И МестоХранения = &Склад
		|					И Фирма = &ФирмаОтправитель) КАК ОстаткиНоменклатурыОстатки
		|		ПО СпрНоменклатура.Ссылка = ОстаткиНоменклатурыОстатки.Номенклатура
		|ГДЕ
		|	СпрНоменклатура.Ссылка В(&Номенклатура)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Номенклатура КАК Ссылка,
		|	ВТ_Данные.Цена КАК Цена,
		|	ВЫБОР
		|		КОГДА ВТ_Данные.ФирмаПолучатель = &ФирмаОтправитель
		|				ИЛИ ВТ_Данные.Номенклатура В ИЕРАРХИИ (&Материалы)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПолучитьИзРМС,
		|	ВЫБОР
		|		КОГДА ВТ_Данные.ФирмаПолучатель = &ФирмаОтправитель
		|				ИЛИ ВТ_Данные.Номенклатура В ИЕРАРХИИ (&Материалы)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключаетНДС,
		|	ВТ_Данные.Номенклатура.Код КАК Код
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные";
	Иначе
	//--Минин 0000143574 2015-10-28
		//СписокНоменклатуры = Источник.Состав.ВыгрузитьКолонку("Номенклатура");
		ВТ = Новый МенеджерВременныхТаблиц();
		
		РегистрыСведений.Перепродажа.СоздатьВТПравилаПерепродажи(ВТ, СписокНоменклатуры, Источник.Контрагент, Источник.Фирма, Источник.Дата);
		
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = ВТ;
		Запрос.УстановитьПараметр(
		"ДатаСреза", 
		?(ЗначениеЗаполнено(Источник.Дата), Источник.Дата, ТекущаяДата())
		);
		Запрос.УстановитьПараметр("Склад", Источник.Склад);
		Запрос.УстановитьПараметр("ФирмаОтправитель", Источник.Фирма);
		Запрос.УстановитьПараметр("ФирмаПолучатель", СЕПолучатель.Организация);
		Запрос.УстановитьПараметр("АлкоФирма", АлкоФирма);
		Запрос.УстановитьПараметр("ГруппаАлко", ГруппаАлко);
		Запрос.УстановитьПараметр("Номенклатура", СписокНоменклатуры);
		Запрос.УстановитьПараметр("КупляПродажа", Перечисления.ТипыДоговоров.КупляПродажа);
		Запрос.УстановитьПараметр("Комиссия", Перечисления.ТипыДоговоров.Комиссия);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ОстаткиНоменклатурыОстатки.СуммаУпрОстаток - ОстаткиНоменклатурыОстатки.СуммаНДСУпрОстаток КАК Сумма,
		|	ВЫБОР
		|		КОГДА СпрНоменклатура.Ссылка В ИЕРАРХИИ (&ГруппаАлко)
		|			ТОГДА &АлкоФирма
		|		ИНАЧЕ &ФирмаПолучатель
		|	КОНЕЦ КАК ФирмаПолучатель
		|ПОМЕСТИТЬ ВТ_Себестоимость
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&ДатаСреза,
		|				Номенклатура В (&Номенклатура)
		|					И МестоХранения = &Склад
		|					И Фирма = &ФирмаОтправитель) КАК ОстаткиНоменклатурыОстатки
		|		ПО СпрНоменклатура.Ссылка = ОстаткиНоменклатурыОстатки.Номенклатура
		|ГДЕ
		|	СпрНоменклатура.Ссылка В(&Номенклатура)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПравилаПерепродажи.Номенклатура КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ВТ_Себестоимость.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_ПравилаПерепродажи.ТипДоговора = &КупляПродажа
		|					ТОГДА ВТ_Себестоимость.Сумма * (100 + ВТ_ПравилаПерепродажи.ПроцентПрибыли) / (ВТ_Себестоимость.Количество * 100)
		|			КОНЕЦ
		|	КОНЕЦ КАК Цена,
		|	ВЫБОР
		|		КОГДА ВТ_ПравилаПерепродажи.ТипДоговора = &Комиссия
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПолучитьИзРМС,
		|	ВЫБОР
		|		КОГДА ВТ_ПравилаПерепродажи.ТипДоговора = &Комиссия
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключаетНДС,
		|	ВТ_ПравилаПерепродажи.Номенклатура.Код КАК Код
		|ИЗ
		|	ВТ_ПравилаПерепродажи КАК ВТ_ПравилаПерепродажи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Себестоимость КАК ВТ_Себестоимость
		|		ПО ВТ_ПравилаПерепродажи.Номенклатура = ВТ_Себестоимость.Номенклатура
		|ГДЕ
		|	ВТ_Себестоимость.ФирмаПолучатель <> &ФирмаОтправитель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Себестоимость.Номенклатура,
		|	ВЫБОР
		|		КОГДА ВТ_Себестоимость.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТ_Себестоимость.Сумма / ВТ_Себестоимость.Количество
		|	КОНЕЦ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	NULL
		|ИЗ
		|	ВТ_Себестоимость КАК ВТ_Себестоимость
		|ГДЕ
		|	ВТ_Себестоимость.ФирмаПолучатель = &ФирмаОтправитель";
	КонецЕсли;
	НовыеЦены = Запрос.Выполнить().Выгрузить();
	
	//Izh_ОбработкаКоллекций.ДобавитьКолонки(НовыеЦены, "ВключаетНДС");
	//НовыеЦены.ЗагрузитьКолонку(НовыеЦены.ВыгрузитьКолонку("ПолучитьИзРМС"), "ВключаетНДС");
	
	СессияРМС = Неопределено;
	
	КолСтрок = НовыеЦены.Количество();
	Для Сч = 1 По КолСтрок Цикл
		Номенклатура = НовыеЦены[КолСтрок - Сч];
		Если Номенклатура.ПолучитьИзРМС Тогда
			Номенклатура.Цена = СтоимостьИзРМС(СессияРМС, Номенклатура.Код, СЕПолучатель.Код);
		ИначеЕсли Номенклатура.Цена = Null Тогда
			НовыеЦены.Удалить(Номенклатура);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Номенклатура Из НовыеЦены Цикл
		Отбор = Новый Структура("Номенклатура", Номенклатура.Ссылка);
		Для каждого СтрокаТЧ Из Источник.Состав.НайтиСтроки(Отбор) Цикл
			СтрокаТЧ.Цена = ?(Номенклатура.ВключаетНДС, 
			Номенклатура.Цена, 
			Номенклатура.Цена * (100 + СтрокаТЧ.СтавкаНДС.Ставка) / 100
			);
			Izh_ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ПодключитьсяКРМС()
	
	login = "VIATCHINNIN";
	password = "VIATCHINNIN32";
	
	OraSession = Новый COMОбъект("OracleInProcServer.XOraSession");
	OraDatabase = OraSession.OpenDatabase("RMS_PROD", login + "/" + password, 0);
	OraDatabase.ExecuteSQL("ALTER SESSION SET NLS_NUMERIC_CHARACTERS = '.,'");
	OraDatabase.Parameters.Add("p_item", "",		1, 1);
	OraDatabase.Parameters.Add("p_Loc", "",			1, 2);
	OraDatabase.Parameters.Add("p_Type", "",		1, 1);
	OraDatabase.Parameters.Add("p_costType", "",	1, 1);
	OraDatabase.Parameters.Add("p_amount", 1,		1, 2);
	OraDatabase.Parameters.Add("result", 0,			2, 2);
	
	Возврат OraDatabase;
	
КонецФункции

Функция СтоимостьИзРМС(OraDatabase = Неопределено, КодТовара, НомерМагазина) 
	
	Если OraDatabase = Неопределено Тогда
		OraDatabase = ПодключитьсяКРМС();
	КонецЕсли;
	
	Параметры = Новый Структура(
		"p_item, p_Loc, p_Type, p_costType, p_amount",
		СокрЛП(КодТовара), НомерМагазина, "S", "RETAIL", 1
	);
	
	Для каждого Param Из Параметры Цикл
		OraDatabase.Parameters(Param.Key).Value = Param.Value;
	КонецЦикла;
	
	sql_p = 
	"begin
	|	:result := rms13.reports_sql.get_cost_and_retails(:p_item, :p_Loc, :p_Type, :p_amount, :p_costType); 
	|end;";
	OraDatabase.ExecuteSQL(sql_p);
	
	Результат = OraDatabase.Parameters("result").Value;
	Если Результат = Null Тогда
		Результат = 0;
	КонецЕсли;
	
	Возврат Число(Результат);
	
КонецФункции


Процедура Izh_ЦенообразованиеПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	// !!!! efim
	#Если _ Тогда
		Источник = Документы.РасходнаяНакладная.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РасходнаяНакладная") Тогда
		Если ЭтоДокументОснованиеЗаказВнешний(Источник.ДокОснование) тогда
			ПровестиДокументПеремещение(Источник);
		КонецЕсли;
		ПодобратьЦеныДляРасходнойНакладной(Источник);
	КонецЕсли;
КонецПроцедуры

Функция ЭтоДокументОснованиеЗаказВнешний(ДокументОснование)
	Возврат ЗначениеЗаполнено(ДокументОснование) И ТипЗнч(ДокументОснование)=Тип("ДокументСсылка.ЗаказВнешний") И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование,"Проведен");
КонецФункции

Процедура ПровестиДокументПеремещение(ОбъектДокумент) Экспорт
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбщегоНазначенияСервер.ПолучитьТекущуюСтруктурнуюЕдиницу(),"ТипСтруктурнойЕдиницы") = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		СтруктураКонстант = Разработка_Ижтрейдинг_Сервер.ПолучитьЗначениеКонстанты("ЗагрузкаЗаказаПоставщика",);
		Если СтруктураКонстант.Свойство("СкладРезерва") ТОГДА
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	СтруктураПодчиненности.Ссылка
			|ИЗ
			|	КритерийОтбора.СтруктураПодчиненности(&ЗаказСсылка) КАК СтруктураПодчиненности
			|ГДЕ
			|	СтруктураПодчиненности.Ссылка ССЫЛКА Документ.Перемещение
			|	И ВЫРАЗИТЬ(СтруктураПодчиненности.Ссылка КАК Документ.Перемещение).Склад = &СкладРезерва
			|	И НЕ СтруктураПодчиненности.Ссылка.Проведен");
			Запрос.УстановитьПараметр("ЗаказСсылка",ОбъектДокумент.ДокОснование);
			Запрос.УстановитьПараметр("СкладРезерва",СтруктураКонстант.СкладРезерва);
			РезультатЗапроса = Запрос.Выполнить();
			Если НЕ РезультатЗапроса.Пустой() Тогда
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();
				ОбъектДок = Выборка.Ссылка.ПолучитьОбъект();
				ОбъектДок.Дата = ОбъектДокумент.Дата-5;
				ОбъектДок.ДополнительныеСвойства.вставить("НеМенятьВремя",Истина);
				ОбъектДок.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Izh_ЦенообразованиеСозданиеНаОснованииОбработкаЗаполнения(Источник, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	// !!!! efim
	#Если _ Тогда
		Источник = Документы.РасходнаяНакладная.СоздатьДокумент();
		ДанныеЗаполнения = Документы.ЗаказВнешний.ПустаяСсылка();
	#КонецЕсли
	// !!!!
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказВнешний") Тогда
		
		// АПМ "забыли" заполнить склад
		Если НЕ ЗначениеЗаполнено(Источник.Склад) Тогда
			Источник.Склад = ДанныеЗаполнения.Склад;
		КонецЕсли;
		
		ПодобратьЦеныДляРасходнойНакладной(Источник);
		
	КонецЕсли;
	
КонецПроцедуры

//++Минин 0000143578 2015-10-28
Функция ОпределениеКонтрагентаОбщепита (Контрагент)
	ГруппаКонтрагентовОбщепит = Справочники.Контрагенты.НайтиПоКоду(Число(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.ГруппаКонтрагентовОбщепит)));
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГруппаКонтрагентовОбщепит",ГруппаКонтрагентовОбщепит);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Контрагенты.Ссылка В ИЕРАРХИИ (&ГруппаКонтрагентовОбщепит)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтрагентОбщепит
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат ?(Выборка.КонтрагентОбщепит=Неопределено,Ложь,Выборка.КонтрагентОбщепит);
КонецФункции
//Минин 0000143578 2015-10-28
