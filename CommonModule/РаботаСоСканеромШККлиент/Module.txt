// Устанавливает компоненту сканирования
Процедура УстановитьКомпоненту() Экспорт

	Если КомпонентаСканераШК = Неопределено Тогда
		КодВозврата = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСканераШК", "ScannerNative", ТипВнешнейКомпоненты.Native);
		
		Если КодВозврата Тогда
			Состояние(НСтр("ru = 'Компонента сканирования уже установлена!'"));
		Иначе
			УстановитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСканераШК");
			КодВозврата = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСканераШК", "ScannerNative", ТипВнешнейКомпоненты.Native);
			
			Если КодВозврата Тогда
				ОбновитьПовторноИспользуемыеЗначения();
				Оповестить("КомпонентаСканированияУстановлена");
			КонецЕсли;
		КонецЕсли;

		КомпонентаСканераШК = Новый("AddIn.ScannerNative.ScannerNative");	
		//ВосстановитьПараметры();
	Иначе
		Состояние(НСтр("ru = 'Компонента сканирования уже установлена!'"));
	КонецЕсли;
	
КонецПроцедуры

// Проинициализировать компоненту сканирования
Функция ПроинициализироватьКомпоненту() Экспорт
	Если КомпонентаСканераШК = Неопределено Тогда
		КодВозврата = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСканераШК", "ScannerNative", ТипВнешнейКомпоненты.Native);
		
		Если Не КодВозврата Тогда
			Возврат Ложь;
		КонецЕсли;

		КомпонентаСканераШК = Новый("AddIn.ScannerNative.ScannerNative");
		ВосстановитьПараметры();
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

// Вернет версию компоненты сканирования
Функция ВерсияКомпоненты() Экспорт

	Если Не ПроинициализироватьКомпоненту() Тогда
		Возврат НСтр("ru= 'Компонента сканирования не установлена'");
	КонецЕсли;
	
	Возврат КомпонентаСканераШК.Версия;
КонецФункции // ВерсияКомпонентыСканирования()

 
Процедура СохранитьВНастройкахПараметры(Включен, Порт) Экспорт
	
	МассивСтруктур = Новый Массив;
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиСканированияШК/Включен");
	Элемент.Вставить("Настройка", ИдентификаторКлиента);
	Элемент.Вставить("Значение", Включен);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиСканированияШК/Порт");
	Элемент.Вставить("Настройка", ИдентификаторКлиента);
	Элемент.Вставить("Значение", Порт);
	МассивСтруктур.Добавить(Элемент);
	
	РаботаСФайлами.ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур);
	
КонецПроцедуры	

Процедура ВосстановитьПараметры() Экспорт
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
	
	
	On = РаботаСФайлами.ХранилищеОбщихНастроекЗагрузить("НастройкиСканированияШК/Включен", ИдентификаторКлиента);
	Порт =  РаботаСФайлами.ХранилищеОбщихНастроекЗагрузить("НастройкиСканированияШК/Порт", ИдентификаторКлиента);
	КомпонентаСканераШК.On = ?(ТипЗнч(On)<>Тип("Булево"),Истина,On);
	КомпонентаСканераШК.Порт =  ?(ЗначениеЗаполнено(Порт),Порт,"");
КонецПроцедуры	

Функция ОбработкаШтрихКодаВДокументах(ЭтаФорма,Объект,ТабличнаяЧастьКакЭлемент,ШК,СтруктураПодбора) Экспорт 
	
	Если ТабличнаяЧастьКакЭлемент.ТолькоПросмотр Тогда
		Возврат Неопределено;
	КонецЕсли;
	//ВесовыеПрефиксы = Новый СписокЗначений;
	//ВесовыеПрефиксы.Добавить("22");
	//
	//Весовой = ?(ВесовыеПрефиксы.НайтиПоЗначению(Лев(ШК,2)) = Неопределено,Ложь,Истина);
	//Если Весовой Тогда
	//	ШтрихКод = Лев(ШК,7);
	//	НачальныйНомер = 8;
	//	Попытка
	//		Количество = Число(Сред(ШК,НачальныйНомер,13 - НачальныйНомер)) / 1000;
	//	Исключение
	//		Количество = 0;
	//	КонецПопытки;	
	//Иначе  
	//	ШтрихКод = ШК;
	//	Количество = 1;
	//КонецЕсли;	
	СтрокаСообщения = "";
	Результат = РаботаСоСканеромШКСервер.ПолучитьНоменклатуру(ШК,СтруктураПодбора,СтрокаСообщения);
	
	Если Результат = Неопределено Тогда
		Если Не ПустаяСтрока(СтрокаСообщения) Тогда
			СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1%", ШК);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		КонецЕсли;
		Возврат Неопределено;
	Иначе
		Количество = 1;
		//МассивТоваров = ПолучитьИзВременногоХранилища(Результат);
		МассивТоваров = Результат.мНоменклатура;
		Если МассивТоваров.Количество()=1 Тогда
			//НовыйТовар = МассивТоваров.Получить(0);
			сткНоменклатура = Новый Структура("Номенклатура", МассивТоваров[0]);
			Вес = Результат.мВес[0];
			Если Вес > 0 Тогда
				Количество = Вес;
			КонецЕсли;
		Иначе
			СписокВыбора = Новый СписокЗначений;
			СписокВыбора.ЗагрузитьЗначения(МассивТоваров);
			ЗначениеВыбора = СписокВыбора.ВыбратьЭлемент("Найдено в ""ложных"" штрих-кодах");
			Если ЗначениеВыбора = Неопределено Тогда
				Возврат Неопределено;
			Иначе	
				//НовыйТовар = ЗначениеВыбора.Значение;
				сткНоменклатура = Новый Структура("Номенклатура", ЗначениеВыбора.Значение);
				инд = МассивТоваров.Найти(ЗначениеВыбора.Значение);
				Если Не инд = Неопределено Тогда
					Вес = Результат.мВес[инд];
					Если Вес > 0 Тогда
						Количество = Вес;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;	
		НоваяСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,сткНоменклатура,ТабличнаяЧастьКакЭлемент,Ложь, Количество);	
		ТабличнаяЧастьКакЭлемент.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		Возврат НоваяСтрока;
	КонецЕсли;
КонецФункции

Процедура ОбработкаШтрихКодаВСпискеНоменклатуры(ШК,Элемент) Экспорт
	
	СтрокаСообщения = "";
	Результат = РаботаСоСканеромШКСервер.ПолучитьНоменклатуру(ШК,Неопределено,СтрокаСообщения);
	
	Если Результат = Неопределено Тогда
		//СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1%", ШтрихКод);
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
	Иначе
		//МассивТоваров = ПолучитьИзВременногоХранилища(Результат);
		МассивТоваров = Результат.мНоменклатура;
		Элемент.Отбор.Элементы.Очистить();
		Отбор = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.Использование = Истина;
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		Отбор.ПравоеЗначение = МассивТоваров;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаШтрихКодаВЖурналах(Данные,Элемент) Экспорт
	ЗначениеОтбора = Элемент.Значение.Отбор;
	СтрокаСообщения = "";
	Результат= РаботаСоСканеромШКСервер.ПолучитьДокумент(ЗначениеОтбора,Элемент,СтрокаСообщения);
	Если Результат = Неопределено тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	КонецЕсли;
	Документ = Результат.ПолучитьИзВременногоХранилища();
	Если Элемент.Значение.Отбор.Дата.Использование Тогда
		Если Элемент.СтандартныйПериод.ДатаНачала > Документ.Дата Тогда
			Элемент.Значение.Отбор.Дата.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;			
			Элемент.Значение.Отбор.Дата.ЗначениеС = Документ.Дата;			
			Элемент.Значение.Отбор.Дата.ЗначениеПо = Элемент.СтандартныйПериод.ДатаОкончания;
			Элемент.Значение.Отбор.Дата.Использование = Истина;
		ИначеЕсли Элемент.СтандартныйПериод.ДатаОкончания < Документ.Дата Тогда
			Элемент.Значение.Отбор.Дата.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;			
			Элемент.Значение.Отбор.Дата.ЗначениеС = Элемент.СтандартныйПериод.ДатаНачала;			
			Элемент.Значение.Отбор.Дата.ЗначениеПо = Документ.Дата;
			Элемент.Значение.Отбор.Дата.Использование = Истина;
		КонецЕсли;	
	КонецЕсли;	
	Элемент.ТекущаяСтрока =Документ.ПолучитьИдентификатор();
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Предупреждение("У Вас отсутствуют права для просмотра данного документа!", 3);
	КонецЕсли;	
КонецПроцедуры //ОбработкаШтрихКодаВЖурналах

