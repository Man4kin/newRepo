///////////////////////////Общее///////////////////////

Функция ПолучитьGLN(Контрагент,EDIПровайдер) Экспорт
	Если ЗначениеЗаполнено(Контрагент.GLN) Тогда
		Возврат Контрагент.GLN;
	Иначе	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	EDIПровайдерыПоставщиков.GLN
		|ИЗ
		|	РегистрСведений.EDIПровайдерыПоставщиков КАК EDIПровайдерыПоставщиков
		|ГДЕ
		|	EDIПровайдерыПоставщиков.Контрагент = &Контрагент
		|	И EDIПровайдерыПоставщиков.EDIПровайдер = &EDIПровайдер
		|	И EDIПровайдерыПоставщиков.Основной
		|	И EDIПровайдерыПоставщиков.EDIПровайдер.Активный";
		Если ПараметрыСеанса.ИспользоватьПодразделенияПоставщиков Тогда
			Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
				Запрос.УстановитьПараметр("Контрагент", Контрагент.Родитель);
			Иначе
				Запрос.УстановитьПараметр("Контрагент", Контрагент);
			КонецЕсли;	
		Иначе
			Запрос.УстановитьПараметр("Контрагент", Контрагент);
		КонецЕсли;		
		Запрос.УстановитьПараметр("EDIПровайдер", EDIПровайдер);

		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			Возврат Неопределено;
		КонецЕсли;	

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		ВыборкаДетальныеЗаписи.Следующий();
		Возврат СокрЛП(ВыборкаДетальныеЗаписи.GLN);
	КонецЕсли;	
КонецФункции	


Функция ПолучитьОбъектПоGLN(GLN,EDIПровайдер) Экспорт
   	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.GLN = &GLN";
	Запрос.УстановитьПараметр("GLN", GLN);

	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;	

   	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтруктурныеЕдиницы.Ссылка
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.GLN = &GLN";
	Запрос.УстановитьПараметр("GLN", GLN);

	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;	

   	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.GLN = &GLN";
	Запрос.УстановитьПараметр("GLN", GLN);

	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	EDIПровайдерыПоставщиков.Контрагент
	|ИЗ
	|	РегистрСведений.EDIПровайдерыПоставщиков КАК EDIПровайдерыПоставщиков
	|ГДЕ
	|	EDIПровайдерыПоставщиков.EDIПровайдер = &EDIПровайдер
	|	И EDIПровайдерыПоставщиков.GLN = &GLN
	|	И EDIПровайдерыПоставщиков.Основной";
	Запрос.УстановитьПараметр("GLN", GLN);
	Запрос.УстановитьПараметр("EDIПровайдер", EDIПровайдер);

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;	

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	Возврат ВыборкаДетальныеЗаписи.Контрагент;
КонецФункции	

Функция ПолучитьШК(Номенклатура,Код=NULL) Экспорт
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		Если Номенклатура.ТипКода.Код = "EAN13" ИЛИ Номенклатура.ТипКода.Код = "EAN8" Тогда
			Возврат СокрЛП(Номенклатура.Код);
		Иначе
			Если Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Весовой Тогда
				Если Код=NULL Тогда
					НоменклатураКод = Номенклатура.Код;
				Иначе	
					НоменклатураКод = Код;
				КонецЕсли;
				Префикс = "20";
				ШК=Префикс+ДобавитьСлева(СокрЛП(НоменклатураКод),10,"0");
				КонтрольнаяЦифраШтрихКода(ШК);
			Иначе
				Если Код=NULL Тогда
					НоменклатураКод = Номенклатура.Код;
					Префикс = "20";
					ШК=Префикс+ДобавитьСлева(СокрЛП(НоменклатураКод),10,"0");
					КонтрольнаяЦифраШтрихКода(ШК);
				Иначе	
					ШК = Код;
				КонецЕсли;
			КонецЕсли;	
			Возврат ШК;
		КонецЕсли;
	Иначе
		Префикс = "20";
		ШК=Префикс+ДобавитьСлева(СокрЛП(Код),10,"0");
		КонтрольнаяЦифраШтрихКода(ШК);
		Возврат ШК;
	КонецЕсли;	
КонецФункции	

Функция ДобавитьСлева(Строка1,Длина,Строка2)
	Строка0 = Строка1;
	Пока СтрДлина( Строка0 ) < Длина Цикл
		Строка0 = Строка2 + Строка0;
	КонецЦикла;
	Строка0 = Прав( Строка0, Длина );
	Возврат Строка0;
КонецФункции

Процедура КонтрольнаяЦифраШтрихКода(ШтрКод)
	Если СтрДлина(ШтрКод)<>12 Тогда
		Возврат;
	КонецЕсли;	
	Четн = 0;
	Для Индекс = 1 По 6 Цикл
		Четн = Четн + Число(Сред(ШтрКод,2*Индекс,1));
	КонецЦикла;
	Четн = Четн * 3;
	Нечетн = 0;
	Для Индекс = 1 По 6 Цикл
		Нечетн = Нечетн + Число(Сред(ШтрКод,2*Индекс-1,1));
	КонецЦикла;
	КонтЦифра=(Четн+Нечетн)/10-Цел((Четн+Нечетн)/10);
	КонтЦифра=10-Цел(КонтЦифра*10);
	Если КонтЦифра = 10 Тогда
		КонтЦифра = 0;
	КонецЕсли;
	ШтрКод = ШтрКод + Строка(КонтЦифра);
КонецПроцедуры



///////////////////////////EDIКлиент///////////////////


Процедура ОбменДаннымиEDIКлиентОтправка(Ссылка) Экспорт
	Если Константы.ФлагЗапретаТовародвижения.Получить() Тогда
		Возврат;
	КонецЕсли;	
	ФорматОбмена = Ссылка.EDIПровайдер.ФорматEDI;
	Если ФорматОбмена = Перечисления.ФорматEDI.Exite Тогда
		ОбменДаннымиEDIExite.ОбменДаннымиEDIКлиентОтправка(Ссылка);
	Иначе
		
	КонецЕсли;	
КонецПроцедуры


Процедура ОбменДаннымиEDIКлиентПолучение(Ссылка) Экспорт
	Если Константы.ФлагЗапретаТовародвижения.Получить() Тогда
		Возврат;
	КонецЕсли;	
	ФорматОбмена = Ссылка.EDIПровайдер.ФорматEDI;
	Если ФорматОбмена = Перечисления.ФорматEDI.Exite Тогда
		ОбменДаннымиEDIExite.ОбменДаннымиEDIКлиентПолучение(Ссылка);
	Иначе
		
	КонецЕсли;	
КонецПроцедуры





Функция ПолучитьУзелРегистрацииEDIКлиент(Контрагент) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОбменEDIКлиент.Ссылка
		|ИЗ
		|	РегистрСведений.EDIПровайдерыПоставщиков КАК EDIПровайдерыПоставщиков
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланОбмена.ОбменEDIКлиент КАК ОбменEDIКлиент
		|		ПО EDIПровайдерыПоставщиков.EDIПровайдер = ОбменEDIКлиент.EDIПровайдер
		|ГДЕ
		|	EDIПровайдерыПоставщиков.Контрагент = &Контрагент
		|	И EDIПровайдерыПоставщиков.EDIПровайдер.Активный
		|	И EDIПровайдерыПоставщиков.Основной
		|	И НЕ ОбменEDIКлиент.Ссылка Есть NULL";

	Если ПараметрыСеанса.ИспользоватьПодразделенияПоставщиков Тогда
		Запрос.УстановитьПараметр("Контрагент", Контрагент.Родитель);
	Иначе
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
	КонецЕсли;		

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;	

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	Возврат ВыборкаДетальныеЗаписи.Ссылка;
КонецФункции	

Функция ПолучитьУзелРегистрацииEDIКлиентПоПровайдеру(EDIПровайдер) Экспорт
	Если НЕ ЗначениеЗаполнено(EDIПровайдер) Тогда
		Возврат Неопределено;
	КонецЕсли;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОбменEDIКлиент.Ссылка
		|ИЗ
		|	ПланОбмена.ОбменEDIКлиент КАК ОбменEDIКлиент
		|ГДЕ
		|	ОбменEDIКлиент.EDIПровайдер = &EDIПровайдер";

	Запрос.УстановитьПараметр("EDIПровайдер", EDIПровайдер);

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	Возврат ВыборкаДетальныеЗаписи.Ссылка;
КонецФункции	

Функция ЗапрещеноРедактироватьEDI(Узел,Ссылка,ЭтаФорма = Неопределено) экспорт
	Если Ссылка.Проведен = Ложь Тогда
		Возврат Ложь;
	КонецЕсли;	
	ТолькоПросмотр = ОбъектОтправленПоEDI(Ссылка,Узел);
	Если ТолькоПросмотр Тогда
		Если ЭтаФорма = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Запрещено изменение! Объект уже отправлен в другие системы!'"),Ссылка);
		Иначе	
			ЭтаФорма.Заголовок = "Запрещено изменение!";
		КонецЕсли;
	КонецЕсли;
	Возврат ТолькоПросмотр;
КонецФункции	

Функция ОбъектОтправленПоEDI(Объект,Узел) 
	Если Объект.Пустая() Тогда
		Возврат ложь;
	КонецЕсли;
	ИмяОбъекта = Объект.Метаданные().ПолноеИмя();
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТаблицаИзменений.Узел
	                      |ИЗ
	                      |	"+ИмяОбъекта+".Изменения КАК ТаблицаИзменений
	                      |ГДЕ
	                      |	ТаблицаИзменений.Ссылка = &Ссылка и ТаблицаИзменений.Узел = &Узел");
	Запрос.УстановитьПараметр("Ссылка",Объект);
	Запрос.УстановитьПараметр("Узел",Узел);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;	
	Возврат Ложь;
КонецФункции


///////////////////////////EDIПоставщик///////////////////


Процедура ОбменДаннымиEDIПоставщикОтправка(Ссылка) Экспорт
	Если Константы.ФлагЗапретаТовародвижения.Получить() Тогда
		Возврат;
	КонецЕсли;	
	ФорматОбмена = Ссылка.EDIПровайдер.ФорматEDI;
	Если ФорматОбмена = Перечисления.ФорматEDI.Exite Тогда
		ОбменДаннымиEDIExite.ОбменДаннымиEDIПоставщикОтправка(Ссылка);
	Иначе
		
	КонецЕсли;	
КонецПроцедуры


Процедура ОбменДаннымиEDIПоставщикПолучение(Ссылка) Экспорт
	Если Константы.ФлагЗапретаТовародвижения.Получить() Тогда
		Возврат;
	КонецЕсли;	
	ФорматОбмена = Ссылка.EDIПровайдер.ФорматEDI;
	Если ФорматОбмена = Перечисления.ФорматEDI.Exite Тогда
		ОбменДаннымиEDIExite.ОбменДаннымиEDIПоставщикПолучение(Ссылка);
	Иначе
		
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьУзелРегистрацииEDIПоставщик(EDIПровайдер) Экспорт
	Если НЕ ЗначениеЗаполнено(EDIПровайдер) Тогда
		Возврат Неопределено;
	КонецЕсли;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОбменEDIПоставщик.Ссылка
		|ИЗ
		|	ПланОбмена.ОбменEDIПоставщик КАК ОбменEDIПоставщик
		|ГДЕ
		|	ОбменEDIПоставщик.EDIПровайдер = &EDIПровайдер";

	Запрос.УстановитьПараметр("EDIПровайдер", EDIПровайдер);

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	Возврат ВыборкаДетальныеЗаписи.Ссылка;
КонецФункции	

Функция ПолучитьНоменклатуруПоШК(Код,Артикул,Контрагент,СтрНенайденныхКодовТоваров = "") Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура1
	               |		ПО (Номенклатура.Ссылка = Номенклатура1.Родитель
	               |				ИЛИ Номенклатура.Ссылка = Номенклатура1.Родитель.Родитель)
	               |ГДЕ
	               |	Номенклатура.Транзакционный
	               |	И Номенклатура1.Код = &Код";
	Запрос.УстановитьПараметр("Код",Код);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	НоменклатураКонтрагента.Номенклатура
		               |ИЗ
		               |	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		               |ГДЕ
		               |	НоменклатураКонтрагента.Контрагент = &Контрагент
		               |	И НоменклатураКонтрагента.Артикул = &Артикул";
		Запрос.УстановитьПараметр("Контрагент",Контрагент);
		Запрос.УстановитьПараметр("Артикул",Артикул);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			СтрНенайденныхКодовТоваров = СтрНенайденныхКодовТоваров + ", " + СокрЛП(Артикул); 
			Возврат Неопределено;
		КонецЕсли;
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Номенклатура;
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	Номенклатура.Ссылка
		               |ИЗ
		               |	Справочник.Номенклатура КАК Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура1
		               |		ПО (Номенклатура.Ссылка = Номенклатура1.Ссылка
		               |		ИЛИ Номенклатура.Ссылка = Номенклатура1.Родитель
		               |				ИЛИ Номенклатура.Ссылка = Номенклатура1.Родитель.Родитель)
		               |ГДЕ
		               |	Номенклатура.Транзакционный
		               |	И Номенклатура1.Код = &Код";
		Запрос.УстановитьПараметр("Код",Артикул);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			СтрНенайденныхКодовТоваров = СтрНенайденныхКодовТоваров + ", " + СокрЛП(Артикул); 
			Возврат Неопределено;
		КонецЕсли;
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;	
КонецФункции

Функция ПолучитьЦенуНоменклатуры(Номенклатура,Док,Цена) Экспорт
	Если ЗначениеЗаполнено(Док.Фирма.Контрагент) И ТипЗнч(Док.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВЫБОР
		|		КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
		|			ТОГДА НоменклатураКонтрагента.Цена
		|		ИНАЧЕ ВЫРАЗИТЬ(НоменклатураКонтрагента.Цена * (100 + НоменклатураКонтрагента.Номенклатура.СтавкаНДС.Ставка) / 100 КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Цена
		|ИЗ
		|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента,
		|	Константа.ВключатьНДСВЦеныКонтрагентов КАК ВключатьНДСВЦеныКонтрагентов
		|ГДЕ
		|	НоменклатураКонтрагента.Контрагент = &Контрагент
		|	И НоменклатураКонтрагента.Номенклатура = &Номенклатура";
		
		Запрос.УстановитьПараметр("Контрагент", Док.Фирма.Контрагент);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Возврат 0;
		КонецЕсли;
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Цена;
	Иначе
		Возврат Цена;
	КонецЕсли;
КонецФункции



