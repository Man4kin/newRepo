
Функция ПолучитьМоментВремени(Ссылка,Дата,Режим) экспорт
	
	Возврат ?(Режим=РежимПроведенияДокумента.Неоперативный,Новый МоментВремени(Дата,Ссылка),Неопределено);
	
КонецФункции

Функция ПровестиСписаниеПоПартиям(Параметры) экспорт
	
	спрПустойКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
	
	прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;
	
	Объект = Параметры.Объект;
	КодОперации = Параметры.КодОперации;
	Запрос = Параметры.Запрос;
	тзОстаткиНоменклатуры = Параметры.тзОстаткиНоменклатуры;
	тзРеализация = Параметры.тзРеализация;
	РежимПроведения = Параметры.РежимПроведения;
	Фирма = Параметры.Фирма;
	
	Запрос.УстановитьПараметр("Момент",ПроведениеДокументов.ПолучитьМоментВремени(Объект.Ссылка,Объект.Дата,РежимПроведения));
	флФильтрКомитент = Ложь;
	мсвСтатусы = Новый СписокЗначений;
	Если КодОперации = Перечисления.КодыОпераций.ВозвратПоставщику Тогда
		мсвСтатусы.Добавить(Параметры.ТипДоговора);
		Если Параметры.ТипДоговора = Перечисления.ТипыДоговоров.Комиссия 
			И ЗначениеЗаполнено(Параметры.Комитент) Тогда 
			
			Запрос.УстановитьПараметр("Комитент",Параметры.Комитент);
			флФильтрКомитент = Истина;
		КонецЕсли;
	ИначеЕсли КодОперации = Перечисления.КодыОпераций.ПередачаНаКомплектацию ИЛИ КодОперации = Перечисления.КодыОпераций.ПередачаВПроизводство Тогда	
		мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.КупляПродажа);
	Иначе	
		мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.Комиссия);
		мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.КупляПродажа);
	КонецЕсли;
	
	//++БИТ БВО №0000129900 - Теперь статус есть у каждой строки документа (в случае распределения процедурой Izh_ОбщегоНазначенияСервер.ПерераспределитьСоставПоОстаткам())
	Попытка
		КопияТЧСостав = Объект.Состав.Выгрузить();
		КопияТЧСостав.Свернуть("ТипРеализацииТовара");
		МассивСтатусовИзТЧСостава = КопияТЧСостав.ВыгрузитьКолонку("ТипРеализацииТовара");
		Если МассивСтатусовИзТЧСостава.Количество() > 0 Тогда
			мсвСтатусы = МассивСтатусовИзТЧСостава;
		КонецЕсли;
	Исключение
		Ошибка = ОписаниеОшибки();
	КонецПопытки;
	//--БИТ БВО №0000129900
	
	Попытка
		Запрос.Текст="УНИЧТОЖИТЬ ЗакупочныеЦены; УНИЧТОЖИТЬ СтавкиНДС; УНИЧТОЖИТЬ СтавкиНДСНоменклатуры; УНИЧТОЖИТЬ ЦеныОсновногоПоставщика";
		Запрос.Выполнить();
	Исключение
	КонецПопытки;
	
	Запрос.УстановитьПараметр("Статусы",мсвСтатусы);
	Запрос.УстановитьПараметр("Фирма",Фирма);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Параметры.Объект.СтруктурнаяЕдиница);
	
	ЭтоZОтчет = ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.ZОтчет");
	ЭтоИнвентаризация = ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.Инвентаризация");
	ЭтоКорректировкаРеализации = ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.КорректировкаРеализации");
	
	Если ЭтоКорректировкаРеализации Тогда
		ДокументРеализации = Параметры.Объект.ДокументРеализации;
		МассивДокументов = УчетНДС.ПолучитьЦепочкуДокументовКорректировкиРеализации(ДокументРеализации);
		Запрос.УстановитьПараметр("ДокРеализация",МассивДокументов);
	КонецЕсли;
	
	//++БИТ БВО - Список документов в ТЧ которых есть реквизит "ТипРеализацииТовара"
	СпециальноеПроведение = ЭтоZОтчет 
		ИЛИ ЭтоИнвентаризация 
		ИЛИ ЭтоКорректировкаРеализации
		ИЛИ ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.РасходнаяНакладная")
		ИЛИ ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.ПередачаТоваровМеждуФирмами")
		ИЛИ ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.КоррекцияЗапасов")
		ИЛИ ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.ВозвратнаяНакладнаяОтПокупателя")
		ИЛИ ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.Комплектация");
	//--БИТ БВО
	
	Запрос.Текст="
	|ВЫБРАТЬ
	|	Цены.Номенклатура,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена),0) КАК Цена,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС),0) КАК СуммаНДС,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.ЦенаУпр),0) КАК ЦенаУпр,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДСУпр),0) КАК СуммаНДСУпр
	|ПОМЕСТИТЬ ЗакупочныеЦены
	|ИЗ (
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена) КАК Цена,
	|	МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДС) КАК СуммаНДС,
	|	0 КАК ЦенаУпр,
	|	0 КАК СуммаНДСУпр
	|ИЗ 
	|	РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
	|			&Момент, СтруктурнаяЕдиница = &СтруктурнаяЕдиница И
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					с.Номенклатура
	|				ИЗ
	|					врСостав КАК с) и Фирма=&Фирма) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	|ГДЕ
	|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура.БазоваяЕдиницаИзмерения = ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура,
	|	0,
	|	0,
	|	МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.ЦенаУпр),
	|	МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДСУпр)
	|ИЗ 
	|	РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
	|			&Момент, СтруктурнаяЕдиница = &СтруктурнаяЕдиница И
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					с.Номенклатура
	|				ИЗ
	|					врСостав КАК с)) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	|ГДЕ
	|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура.БазоваяЕдиницаИзмерения = ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура ) КАК Цены
	|СГРУППИРОВАТЬ ПО
	|	Цены.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНДС.Ссылка,
	|	СтавкиНДС.Ставка
	|ПОМЕСТИТЬ СтавкиНДС
	|ИЗ
	|	Справочник.СтавкиНДС КАК СтавкиНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ЕСТЬNULL(СтавкиНДС.Ставка, 0) КАК Ставка
	|ПОМЕСТИТЬ СтавкиНДСНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО Номенклатура.СтавкаНДС = СтавкиНДС.Ссылка
	|ГДЕ
	|	Номенклатура.Ссылка В
	|				(ВЫБРАТЬ
	|					с.Номенклатура
	|				ИЗ
	|					врСостав КАК с)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Цены.Номенклатура,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена), 0) КАК Цена,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС), 0) КАК СуммаНДС,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена), 0) КАК ЦенаУпр,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС), 0) КАК СуммаНДСУпр
	|ПОМЕСТИТЬ ЦеныОсновногоПоставщика
	|ИЗ
	|	(ВЫБРАТЬ
	|		НоменклатураКонтрагента.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
	|				ТОГДА НоменклатураКонтрагента.Цена
	|			ИНАЧЕ ВЫРАЗИТЬ(НоменклатураКонтрагента.Цена * (100 + СтавкиНДСНоменклатуры.Ставка) / 100 КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА НоменклатураКонтрагента.Контрагент.НеПлательщикНДС
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
	|						ТОГДА ВЫРАЗИТЬ(СтавкиНДСНоменклатуры.Ставка * НоменклатураКонтрагента.Цена / (100 + СтавкиНДСНоменклатуры.Ставка) КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВЫРАЗИТЬ(НоменклатураКонтрагента.Цена * СтавкиНДСНоменклатуры.Ставка / 100 КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		КОНЕЦ КАК СуммаНДС
	|	ИЗ
	|		РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
	|			ПО НоменклатураКонтрагента.Номенклатура = СтавкиНДСНоменклатуры.Ссылка,
	|		Константа.ВключатьНДСВЦеныКонтрагентов КАК ВключатьНДСВЦеныКонтрагентов
	|	ГДЕ
	|		НоменклатураКонтрагента.Номенклатура В
	|				(ВЫБРАТЬ
	|					с.Номенклатура
	|				ИЗ
	|					врСостав КАК с)
	|		И НоменклатураКонтрагента.ОсновнойПоставщик) КАК Цены
	|
	|СГРУППИРОВАТЬ ПО
	|	Цены.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врСостав.Номенклатура КАК Номенклатура,
	|	врСостав.СтавкаНДС КАК СтавкаНДС,
	|	врСостав.МестоХранения КАК МестоХранения,
	|	врСостав.Фирма КАК Фирма,
	|	врСостав.Количество КАК Количество,
	//++БИТ БВО 15.08.2015  - Для корректного контроля количества из ТЧ документа
	|	врСостав.Количество КАК КоличествоВДокументе,
	//--БИТ БВО 15.08.2015  - Для корректного контроля количества из ТЧ документа
	|	врСостав.Сумма КАК Сумма,
	|	врСостав.СуммаНДС КАК СуммаНДС,
	|	//КолонкаСтатусТабличнойЧасти
	|	ВЫБОР
	|		КОГДА о.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ о.Комитент = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ о.Комитент
	|	КОНЕЦ  КАК Комитент,"
	///////////////////////////////////////////////////////////////////////////////////////////
	//если это инвентаризация - то можно списывать отрицательные значения ресурсов
	+?(ЭтоИнвентаризация,
	"
	|	ЕСТЬNULL(о.КоличествоОстаток, 0)  КАК КоличествоОстаток,
	|	ЕСТЬNULL(о.СуммаОстаток, 0)       КАК СуммаОстаток,
	|	ЕСТЬNULL(о.СуммаНДСОстаток, 0)    КАК СуммаНДСОстаток,
	|	ЕСТЬNULL(о.СуммаУпрОстаток, 0)    КАК СуммаУпрОстаток,
	|	ЕСТЬNULL(о.СуммаНДСУпрОстаток, 0) КАК СуммаНДСУпрОстаток,"
	,
	//если нет - нельзя
	"
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.КоличествоОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.КоличествоОстаток
	|		КОНЕЦ, 0) КАК КоличествоОстаток,"
	///////////////////////////////////////////////////////////////////////////////////////////
	+?(ЭтоКорректировкаРеализации,
	"
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.КоличествоОстатокДок < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.КоличествоОстатокДок
	|		КОНЕЦ, 0) КАК КоличествоОстатокДок,"
	,
	"
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.КоличествоОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.КоличествоОстаток
	|		КОНЕЦ, 0) КАК КоличествоОстатокДок,")
	///////////////////////////////////////////////////////////////////////////////////////////
	+
	"
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаОстаток
	|		КОНЕЦ, 0) КАК СуммаОстаток,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСОстаток
	|		КОНЕЦ, 0) КАК СуммаНДСОстаток,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаУпрОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаУпрОстаток
	|		КОНЕЦ, 0) КАК СуммаУпрОстаток,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСУпрОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСУпрОстаток
	|		КОНЕЦ, 0) КАК СуммаНДСУпрОстаток,")
	///////////////////////////////////////////////////////////////////////////////////////////
	+?(ЭтоКорректировкаРеализации,
	"	
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаОстатокДок < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаОстатокДок
	|		КОНЕЦ, 0) КАК СуммаОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСОстатокДок < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСОстатокДок
	|		КОНЕЦ, 0) КАК СуммаНДСОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаУпрОстатокДок < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаУпрОстатокДок
	|		КОНЕЦ, 0) КАК СуммаУпрОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСУпрОстатокДок < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСУпрОстатокДок
	|		КОНЕЦ, 0) КАК СуммаНДСУпрОстатокДок,"
	,
	"
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаОстаток
	|		КОНЕЦ, 0) КАК СуммаОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСОстаток
	|		КОНЕЦ, 0) КАК СуммаНДСОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаУпрОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаУпрОстаток
	|		КОНЕЦ, 0) КАК СуммаУпрОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСУпрОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСУпрОстаток
	|		КОНЕЦ, 0) КАК СуммаНДСУпрОстатокДок,")
	///////////////////////////////////////////////////////////////////////////////////////////
	+
	"
	|	ЕСТЬNULL(ЗакупочныеЦены.Цена, 0) КАК ЦенаПоследнейЗакупки,
	|	ЕСТЬNULL(ЗакупочныеЦены.СуммаНДС, 0) КАК СуммаНДСПоследнейЗакупки,
	|	ЕСТЬNULL(ЗакупочныеЦены.ЦенаУпр, 0) КАК ЦенаУпрПоследнейЗакупки,
	|	ЕСТЬNULL(ЗакупочныеЦены.СуммаНДСУпр, 0) КАК СуммаНДСУпрПоследнейЗакупки,
	|	ЕСТЬNULL(ЦеныОсновногоПоставщика.Цена, 0) КАК ЦенаОсновногоПоставщика,
	|	ЕСТЬNULL(ЦеныОсновногоПоставщика.СуммаНДС, 0) КАК СуммаНДСОсновногоПоставщика,
	|	ЕСТЬNULL(ЦеныОсновногоПоставщика.ЦенаУпр, 0) КАК ЦенаУпрОсновногоПоставщика,
	|	ЕСТЬNULL(ЦеныОсновногоПоставщика.СуммаНДСУпр, 0) КАК СуммаНДСУпрОсновногоПоставщика,	
	|	Склады.ОтрицательныеОстатки КАК ОтрицательныеОстатки	
	|ИЗ
	|	врСостав КАК врСостав"
	///////////////////////////////////////////////////////////////////////////////////////////
	//если документ - корректировка реализации - то берем суммы для движений по регистрам
	//в движениях самого документа реализации, который корректируем
	+?(НЕ ЭтоКорректировкаРеализации,
	"
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
    |			ОстаткиНоменклтуры.Номенклатура КАК Номенклатура,
    |			ОстаткиНоменклтуры.МестоХранения КАК МестоХранения,
    |			ОстаткиНоменклтуры.Фирма КАК Фирма,
    |			ВЫБОР
    |				КОГДА ОстаткиНоменклтуры.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
    |						ИЛИ ОстаткиНоменклтуры.Комитент = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
    |					ТОГДА НЕОПРЕДЕЛЕНО
    |				ИНАЧЕ ОстаткиНоменклтуры.Комитент
    |			КОНЕЦ КАК Комитент,
    |			ОстаткиНоменклтуры.Статус КАК Статус,
    |			СУММА(ОстаткиНоменклтуры.КоличествоОстаток) КАК КоличествоОстаток,
    |			СУММА(ОстаткиНоменклтуры.СуммаОстаток) КАК СуммаОстаток,
    |			СУММА(ОстаткиНоменклтуры.СуммаУпрОстаток) КАК СуммаУпрОстаток,
    |			СУММА(ОстаткиНоменклтуры.СуммаНДСОстаток) КАК СуммаНДСОстаток,
    |			СУММА(ОстаткиНоменклтуры.СуммаНДСУпрОстаток) КАК СуммаНДСУпрОстаток
    |		ИЗ
    |			РегистрНакопления.ОстаткиНоменклатуры.Остатки(
    |					&Момент,
    |					(Фирма, МестоХранения, Номенклатура) В
    |							(ВЫБРАТЬ
    |								с.Фирма,
    |								с.МестоХранения,
    |								с.Номенклатура
    |							ИЗ
    |								врСостав КАК с
    |							ГДЕ
    |								с.Фирма = &Фирма)
	//++БИТ БВО 2015-10-13
    //|						И Статус В (&Статусы) "+?(флФильтрКомитент,"И Комитент = &Комитент","")+") КАК ОстаткиНоменклтуры
	|						"+?(флФильтрКомитент,"И Комитент = &Комитент","")+") КАК ОстаткиНоменклтуры
	//++БИТ БВО 2015-10-13
	//++БИТ БВО №0000129900
	|		ГДЕ
	|			ОстаткиНоменклтуры.КоличествоОстаток <> 0
	//--БИТ БВО №0000129900
    |		
    |		СГРУППИРОВАТЬ ПО
    |			ОстаткиНоменклтуры.Номенклатура,
    |			ОстаткиНоменклтуры.МестоХранения,
    |			ОстаткиНоменклтуры.Фирма,
    |			ВЫБОР
    |				КОГДА ОстаткиНоменклтуры.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
    |						ИЛИ ОстаткиНоменклтуры.Комитент = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
    |					ТОГДА НЕОПРЕДЕЛЕНО
    |				ИНАЧЕ ОстаткиНоменклтуры.Комитент
    |			КОНЕЦ,
    |			ОстаткиНоменклтуры.Статус) КАК о
	|		ПО врСостав.Номенклатура = о.Номенклатура	
	|		//СоединениеПоСтатусу
	|"
	,
	"
	|ЛЕВОЕ СОЕДИНЕНИЕ(
	
	|ВЫБРАТЬ
	|	ТТТ.Номенклатура,
	|	ТТТ.МестоХранения,
	|	ТТТ.Фирма,
	|	ТТТ.Комитент,
	|	ТТТ.Статус,
	|	СУММА(ТТТ.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ТТТ.СуммаОстаток)  КАК СуммаОстаток,
	|	СУММА(ТТТ.СуммаУпрОстаток) КАК СуммаУпрОстаток,
	|	СУММА(ТТТ.СуммаНДСОстаток)  КАК СуммаНДСОстаток,
	|	СУММА(ТТТ.СуммаНДСУпрОстаток)  КАК СуммаНДСУпрОстаток,
	|	СУММА(ТТТ.КоличествоОстатокДок) КАК КоличествоОстатокДок,
	|	СУММА(ТТТ.СуммаОстатокДок) КАК СуммаОстатокДок,
	|	СУММА(ТТТ.СуммаУпрОстатокДок) КАК СуммаУпрОстатокДок,
	|	СУММА(ТТТ.СуммаНДСОстатокДок) КАК СуммаНДСОстатокДок,
	|	СУММА(ТТТ.СуммаНДСУпрОстатокДок) КАК СуммаНДСУпрОстатокДок
	|ИЗ
	|(ВЫБРАТЬ
	|	оо.Номенклатура,
	|	оо.МестоХранения,
	|	оо.Фирма,
	|	ВЫБОР
	|		КОГДА оо.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ оо.Комитент = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ оо.Комитент
	|	КОНЕЦ  КАК Комитент,
	|	оо.Статус,
	|	оо.КоличествоОстаток КАК КоличествоОстаток,
	|	оо.СуммаОстаток  КАК СуммаОстаток,
	|	оо.СуммаУпрОстаток КАК СуммаУпрОстаток,
	|	оо.СуммаНДСОстаток  КАК СуммаНДСОстаток,
	|	оо.СуммаНДСУпрОстаток  КАК СуммаНДСУпрОстаток,
	|	0 КАК КоличествоОстатокДок,
	|	0 КАК СуммаОстатокДок,
	|	0 КАК СуммаУпрОстатокДок,
	|	0 КАК СуммаНДСОстатокДок,
	|	0 КАК СуммаНДСУпрОстатокДок
	|ИЗ
	|   РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				&Момент,
	|				(Фирма, МестоХранения, Номенклатура) В
	|						(ВЫБРАТЬ
	|							с.Фирма,
	|							с.МестоХранения,
	|							с.Номенклатура
	|						ИЗ
	|							врСостав КАК с
	|						ГДЕ
	|							с.Фирма = &Фирма)
	|					И Статус В (&Статусы)
	|					"+?(флФильтрКомитент,"И Комитент = &Комитент","")+") КАК оо
	//++БИТ БВО №0000129900
	|ГДЕ
	|	оо.КоличествоОстаток <> 0
	//--БИТ БВО №0000129900
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Т.Номенклатура,
	|	Т.МестоХранения,
	|	Т.Фирма,
	|	ВЫБОР
	|		КОГДА Т.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ Т.Комитент = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Т.Комитент
	|	КОНЕЦ  КАК Комитент,
	|	Т.Статус,
	|	0 КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток,
	|	0 КАК СуммаУпрОстаток,
	|	0 КАК СуммаНДСОстаток,
	|	0 КАК СуммаНДСУпрОстаток,
	|	Т.КоличествоРасход КАК КоличествоОстатокДок,
	|	Т.СуммаРасход КАК СуммаОстатокДок,
	|	Т.СуммаУпрРасход КАК СуммаУпрОстатокДок,
	|	Т.СуммаНДСРасход КАК СуммаНДСОстатокДок,
	|	Т.СуммаНДСУпрРасход КАК СуммаНДСУпрОстатокДок	
	|ИЗ
	|РегистрНакопления.ОстаткиНоменклатуры.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			(Фирма, МестоХранения, Номенклатура) В
	|						(ВЫБРАТЬ
	|							с.Фирма,
	|							с.МестоХранения,
	|							с.Номенклатура
	|						ИЗ
	|							врСостав КАК с
	|						ГДЕ
	|							с.Фирма = &Фирма)
	//++БИТ БВО 2015-10-13
	//|					И Статус В (&Статусы)"+?(флФильтрКомитент,"И Комитент = &Комитент","")+") КАК Т
	|					"+?(флФильтрКомитент,"И Комитент = &Комитент","")+") КАК Т
	//--БИТ БВО 2015-10-13
	|ГДЕ
	|	Т.Регистратор В (&ДокРеализация)) КАК ТТТ
	|СГРУППИРОВАТЬ ПО 
	|	ТТТ.Номенклатура,
	|	ТТТ.МестоХранения,
	|	ТТТ.Фирма,
	|	ТТТ.Комитент,
	|	ТТТ.Статус) КАК о
	|		ПО врСостав.Номенклатура = о.Номенклатура	
	|		//СоединениеПоСтатусу")
	///////////////////////////////////////////////////////////////////////////////////////////
	+"
	|			И врСостав.Фирма = о.Фирма
	|			И врСостав.МестоХранения = о.МестоХранения	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗакупочныеЦены КАК ЗакупочныеЦены
	|		ПО врСостав.Номенклатура = ЗакупочныеЦены.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныОсновногоПоставщика КАК ЦеныОсновногоПоставщика
	|		ПО врСостав.Номенклатура = ЦеныОсновногоПоставщика.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО врСостав.МестоХранения = Склады.Ссылка
	|ГДЕ
	|	врСостав.Фирма = &Фирма
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	МестоХранения,
	|	Фирма,
	|	КоличествоОстаток УБЫВ
	|ИТОГИ	
	//++БИТ БВО №0000129900
	//|	МАКСИМУМ(Количество),
	//|	МАКСИМУМ(Сумма),
	//|	МАКСИМУМ(СуммаНДС),
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	//--БИТ БВО №0000129900
	//++БИТ БВО 15.08.2015 - Для корректного контроля количества из ТЧ документа
	|	МАКСИМУМ(КоличествоВДокументе),
	//--БИТ БВО 15.08.2015 - Для корректного контроля количества из ТЧ документа
	|	МАКСИМУМ(СтавкаНДС),	
	|	СУММА(КоличествоОстаток),
	|	СУММА(СуммаОстаток),
	|	СУММА(СуммаНДСОстаток),
	|	СУММА(СуммаУпрОстаток),
	|	СУММА(СуммаНДСУпрОстаток),
	|	МАКСИМУМ(ЦенаПоследнейЗакупки),
	|	МАКСИМУМ(СуммаНДСПоследнейЗакупки),
	|	МАКСИМУМ(ЦенаУпрПоследнейЗакупки),
	|	МАКСИМУМ(СуммаНДСУпрПоследнейЗакупки),
	|	МАКСИМУМ(ЦенаОсновногоПоставщика),
	|	МАКСИМУМ(СуммаНДСОсновногоПоставщика),
	|	МАКСИМУМ(ЦенаУпрОсновногоПоставщика),
	|	МАКСИМУМ(СуммаНДСУпрОсновногоПоставщика),
	|	МАКСИМУМ(ОтрицательныеОстатки)
	|ПО
	|	Фирма,
	|	МестоХранения,
	|	Номенклатура";
	
	ЕстьКолонкаСтатус = Ложь;
	ТЗСостава = Izh_ОбщегоНазначенияСервер.ПолучитьСодержимоеВТ(Запрос.МенеджерВременныхТаблиц, "врСостав");
	Если ТипЗнч(ТЗСостава) = Тип("ТаблицаЗначений") Тогда
		ЕстьКолонкаСтатус = ТЗСостава.Колонки.Найти("Статус") <> Неопределено;
	КонецЕсли;
	Если ЕстьКолонкаСтатус Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//КолонкаСтатусТабличнойЧасти", "врСостав.Статус КАК Статус,");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//КолонкаСтатусТабличнойЧасти", "ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа) КАК Статус,");
	КонецЕсли;		
		
	Если СпециальноеПроведение Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//СоединениеПоСтатусу", "И врСостав.Статус = о.Статус");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//СоединениеПоСтатусу", "И ИСТИНА");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	вф=РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//++БИТ БВО №0000129900 Отладка
	//Izh_ОбщегоНазначенияСервер.ПолучитьСодержимоеВТ(Запрос.МенеджерВременныхТаблиц, "врСостав");	
	//--БИТ БВО №0000129900
	
	флПревышениеОстатка = Ложь;
	флПревышениеОстаткаПоТовару = Ложь;
	флЗапрещеныОтрицательныеОстатки = Ложь;
	
	ЭлемТоварОбщепита	= Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыПроизводство));
	ЭлемТараОбщепита	= Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыТараПроизводство));

	ТекстОшибкиПроведения = "";
	
	Пока вф.Следующий() Цикл
		вм=вф.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока вм.Следующий() Цикл
			Если НЕ вм.ОтрицательныеОстатки Тогда
				 флЗапрещеныОтрицательныеОстатки = Истина;
			 КонецЕсли;
			 
			ТекстОшибкиПроведения = ТекстОшибкиПроведения 
			+"Недостаточно остатка на складе """+вм.МестоХранения+""" по:";
			
			вн=вм.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока вн.Следующий() Цикл
				
				//контроль отрицательных остатков
				//++БИТ БВО 15.08.2015 - Для корректного контроля количества из ТЧ документа
				//Если вн.Количество > вн.КоличествоОстаток Тогда
				Если вн.КоличествоВДокументе > вн.КоличествоОстаток Тогда
				//--БИТ БВО 15.08.2015 - Для корректного контроля количества из ТЧ документа
					
					ТекстОшибкиПроведения = ТекстОшибкиПроведения 
					+Символы.ПС+""""+вн.Номенклатура+""""+"(Код:"+СокрЛП(вн.Номенклатура.Код)+")"
					+Символы.ПС+"   По документу: "+вн.Количество
					+Символы.ПС+"   На остатке: "+вн.КоличествоОстаток
					+Символы.ПС+"   Не хватает: "+Строка(вн.Количество-вн.КоличествоОстаток);
					
					Если флФильтрКомитент Тогда
						//++Минин 2015-05-14 0000127980
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиПроведения,Объект.Ссылка);
						//--Минин 2015-05-14 0000127980
						Возврат Истина;
					Иначе	
						флПревышениеОстатка         = Истина;
						флПревышениеОстаткаПоТовару = Истина;
					КонецЕсли;	
					
				КонецЕсли;	
				
				чЦенаПродажи    = ?(вн.Количество = 0, 0, вн.Сумма / вн.Количество);
				чЦенаНДСПродажи = ?(вн.Количество = 0, 0, вн.СуммаНДС / вн.Количество);
				
				чСуммаПродажи          = 0;
				чСуммаНДСПродажи       = 0;
				
				чЦенаОтрицПартии       = 0;
				чЦенаНДСОтрицПартии    = 0;
				чЦенаУпрОтрицПартии    = 0;
				чЦенаНДСУпрОтрицПартии = 0;
				
				чЦенаПоследнейЗакупки           = вн.ЦенаПоследнейЗакупки;
				чСуммаНДСПоследнейЗакупки       = вн.СуммаНДСПоследнейЗакупки;
				чЦенаУпрПоследнейЗакупки        = вн.ЦенаУпрПоследнейЗакупки;
				чСуммаНДСУпрПоследнейЗакупки    = вн.СуммаНДСУпрПоследнейЗакупки;
				
				чЦенаОсновногоПоставщика        = вн.ЦенаОсновногоПоставщика;
				чСуммаНДСОсновногоПоставщика    = вн.СуммаНДСОсновногоПоставщика;
				чЦенаУпрОсновногоПоставщика     = вн.ЦенаУпрОсновногоПоставщика;
				чСуммаНДСУпрОсновногоПоставщика = вн.СуммаНДСУпрОсновногоПоставщика;
				
				вд = вн.Выбрать();
				чОсталосьСписать=вн.Количество;
				Пока вд.Следующий() Цикл //И чОсталосьСписать <> 0 Цикл  //dps+ 15,10,22  проведение корректировки, когда меняется только сумма	
					//dps+ 15,10,22  проведение корректировки, когда меняется только сумма	
					Если чОсталосьСписать <> 0 Тогда 
						//++БИТ БВО №0000129900
						Если НЕ ЭтоZОтчет Тогда
							чОсталосьСписать= вд.Количество;
						КонецЕсли;
						чЦенаПродажи    = ?(вд.Количество = 0, 0, вд.Сумма / вд.Количество);
						чЦенаНДСПродажи = ?(вд.Количество = 0, 0, вд.СуммаНДС / вд.Количество);
						//--БИТ БВО №0000129900
						
						чКолТек       = МИН(вд.КоличествоОстаток,чОсталосьСписать);
						
						//dps+ 15,10,22  когда на остатках 0, и корректируют с меньшую сторону, сумма должна быть.
						Если ЭтоКорректировкаРеализации И вд.КоличествоОстатокДок = 0 И чОсталосьСписать < 0 Тогда
							чСуммаТек        = вд.Сумма; 
							чСуммаНДСТек     = вд.СуммаНДС;
							чСуммаУпрТек     = вд.Сумма; 
							чСуммаНДСУпрТек  = вд.СуммаНДС;
						//dps- 15,10,22  когда на остатках 0, и корректируют с меньшую сторону, сумма должна быть.
						ИначеЕсли ЭтоКорректировкаРеализации И чКолТек < 0 Тогда
							к = ?(вд.КоличествоОстатокДок = 0,0,чКолТек / вд.КоличествоОстатокДок);
							чСуммаТек        = Окр(вд.СуммаОстатокДок       * к,2); 
							чСуммаНДСТек     = Окр(вд.СуммаНДСОстатокДок    * к,2);
							чСуммаУпрТек     = Окр(вд.СуммаУпрОстатокДок    * к,2); 
							чСуммаНДСУпрТек  = Окр(вд.СуммаНДСУпрОстатокДок * к,2);
						Иначе
							к = ?(вд.КоличествоОстаток = 0,0,чКолТек / вд.КоличествоОстаток);
							чСуммаТек        = Окр(вд.СуммаОстаток       * к,2); 
							чСуммаНДСТек     = Окр(вд.СуммаНДСОстаток    * к,2);
							чСуммаУпрТек     = Окр(вд.СуммаУпрОстаток    * к,2); 
							чСуммаНДСУпрТек  = Окр(вд.СуммаНДСУпрОстаток * к,2);
						КонецЕсли;
						
						Если вд.Статус=прчКупляПродажа Тогда
							чЦенаОтрицПартии       = ?(чКолТек = 0, 0, чСуммаТек / чКолТек);
							чЦенаНДСОтрицПартии    = ?(чКолТек = 0, 0, чСуммаНДСТек / чКолТек);
							чЦенаУпрОтрицПартии    = ?(чКолТек = 0, 0, чСуммаУпрТек / чКолТек);
							чЦенаНДСУпрОтрицПартии = ?(чКолТек = 0, 0, чСуммаНДСУпрТек / чКолТек);
						КонецЕсли;
						
						Если ЭтоZОтчет И чКолТек < 0 И вд.КоличествоОстаток = 0 Тогда
							Если чЦенаОтрицПартии = 0 Тогда
								чЦенаОтрицПартии    = чЦенаПоследнейЗакупки;
								чЦенаНДСОтрицПартии = чСуммаНДСПоследнейЗакупки;
							КонецЕсли;
							
							Если чЦенаУпрОтрицПартии = 0 Тогда
								чЦенаУпрОтрицПартии    = чЦенаУпрПоследнейЗакупки;
								чЦенаНДСУпрОтрицПартии = чСуммаНДСУпрПоследнейЗакупки;
							КонецЕсли;
							
							Если чЦенаОтрицПартии = 0 И чЦенаУпрОтрицПартии = 0 Тогда
								чЦенаОтрицПартии       = чЦенаОсновногоПоставщика;
								чЦенаНДСОтрицПартии    = чСуммаНДСОсновногоПоставщика;
								чЦенаУпрОтрицПартии    = чЦенаУпрОсновногоПоставщика;
								чЦенаНДСУпрОтрицПартии = чСуммаНДСУпрОсновногоПоставщика;
							КонецЕсли;
							
							чСуммаТек        = Окр(чЦенаОтрицПартии       * чКолТек,2); 
							чСуммаНДСТек     = Окр(чЦенаНДСОтрицПартии    * чКолТек,2);
							чСуммаУпрТек     = Окр(чЦенаУпрОтрицПартии    * чКолТек,2); 
							чСуммаНДСУпрТек  = Окр(чЦенаНДСУпрОтрицПартии * чКолТек,2);
						КонецЕсли;
						
						//++БИТ БВО №0000129900
						Если ТипЗнч(Параметры.Объект) = Тип("ДокументОбъект.КоррекцияЗапасов") Тогда
							ЗапросУП = Новый Запрос;
							ЗапросУП.Текст = "ВЫБРАТЬ
							|	УчетнаяПолитикаНалоговыйУчетСрезПоследних.Izh_ПлательщикНДС КАК ПлательщикНДС
							|ИЗ
							|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&НаДату, Организация = &Организация) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних";
							ЗапросУП.УстановитьПараметр("НаДату"		, Объект.Дата);
							ЗапросУП.УстановитьПараметр("Организация"	, вд.Комитент);
							РезультатЗапросаУП = ЗапросУП.Выполнить();
							КомитентПлательщикНДС = Ложь;
							Если НЕ РезультатЗапросаУП.Пустой() Тогда
								Выборка = РезультатЗапросаУП.Выбрать();
								Если Выборка.Следующий() Тогда
									КомитентПлательщикНДС = Выборка.ПлательщикНДС;
								КонецЕсли;
							КонецЕсли;
							СтавкаНДСЧислом = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(вд.СтавкаНДС);
							Если КомитентПлательщикНДС Тогда
								чСуммаНДСТек = чСуммаТек * СтавкаНДСЧислом / 100;
								чСуммаНДСУпрТек = чСуммаНДСТек;
							КонецЕсли;
						КонецЕсли;					
						//--БИТ БВО №0000129900
						
						д = тзОстаткиНоменклатуры.Добавить();
						д.Период          = Объект.Дата;
						д.Активность      = Истина;
						д.ВидДвижения     = ВидДвиженияНакопления.Расход;
						д.Регистратор     = Объект.Ссылка;
						д.Фирма           = вд.Фирма;
						д.МестоХранения   = вд.МестоХранения;
						д.Номенклатура    = вд.Номенклатура;
						д.СтавкаНДС       = вд.СтавкаНДС;
						д.Статус          = вд.Статус;
						д.Комитент        = вд.Комитент;
						д.Количество      = чКолТек;
						д.Сумма           = чСуммаТек;
						д.СуммаНДС        = чСуммаНДСТек;
						д.СуммаУпр        = чСуммаУпрТек;
						д.СуммаНДСУпр     = чСуммаНДСУпрТек;
						д.КодОперации     = КодОперации;
						
						д.СуммаПродажи    = Окр(чЦенаПродажи    * чКолТек,2);
						д.СуммаНДСПродажи = Окр(чЦенаНДСПродажи * чКолТек,2);
						
						чСуммаПродажи     = чСуммаПродажи    + д.СуммаПродажи;
						чСуммаНДСПродажи  = чСуммаНДСПродажи + д.СуммаНДСПродажи;
						
						чОсталосьСписать  = чОсталосьСписать - чКолТек;					
						
						//++БИТ БВО №0000129900
						Если д.Статус <> Перечисления.ТипыДоговоров.Комиссия Тогда
							д.Комитент = Неопределено;
						КонецЕсли;					
						//--БИТ БВО №0000129900
						
						Если вд.Статус = прчКомиссия и тзРеализация <> Неопределено Тогда
							//товары комитента
							др = тзРеализация.Добавить();
							др.Активность      = Истина;
							др.Период          = Объект.Дата;
							др.ВидДвижения     = ВидДвиженияНакопления.Приход;
							др.Регистратор     = Объект.Ссылка;
							др.Фирма           = вд.Фирма;
							др.Номенклатура    = вд.Номенклатура;
							др.Комитент        = вд.Комитент;
							др.ПоДокументу     = Объект.Ссылка;
							др.Количество      = чКолТек;
							др.Сумма           = чСуммаТек;
							др.СуммаПродажи    = д.СуммаПродажи;
							др.СуммаНДСПродажи = д.СуммаНДСПродажи;
						КонецЕсли;
					//dps+ 15,10,22  проведение корректировки, когда меняется только сумма	
					ИначеЕсли чОсталосьСписать = 0 и вд.Сумма <> 0 И ЭтоКорректировкаРеализации Тогда 
						Сумма = вд.Сумма;
						СуммаНДС = вд.СуммаНДС;
						д = тзОстаткиНоменклатуры.Добавить();
						д.Период          = Объект.Дата;
						д.Активность      = Истина;
						д.ВидДвижения     = ВидДвиженияНакопления.Расход;
						д.Регистратор     = Объект.Ссылка;
						д.Фирма           = вд.Фирма;
						д.МестоХранения   = вд.МестоХранения;
						д.Номенклатура    = вд.Номенклатура;
						д.СтавкаНДС       = вд.СтавкаНДС;
						д.Статус          = вд.Статус;
						д.Комитент        = вд.Комитент;
						д.Количество      = 0;
						д.Сумма           = Сумма;
						д.СуммаНДС        = СуммаНДС;
						д.СуммаУпр        = Сумма;
						д.СуммаНДСУпр     = СуммаНДС;
						д.КодОперации     = КодОперации;
						
						чСуммаПродажи     = чСуммаПродажи + Сумма;
						чСуммаНДСПродажи  = чСуммаНДСПродажи + СуммаНДС;
					КонецЕсли;
					//dps+ 15,10,22  проведение корректировки, когда меняется только сумма	
				КонецЦикла;	
				
				//движения по отрицательному остатку
				Если флПревышениеОстаткаПоТовару И не флЗапрещеныОтрицательныеОстатки Тогда
					чКолТек = вн.Количество - вн.КоличествоОстаток;
					
					Если чЦенаОтрицПартии = 0 Тогда
						чЦенаОтрицПартии    = чЦенаПоследнейЗакупки;
						чЦенаНДСОтрицПартии = чСуммаНДСПоследнейЗакупки;
					КонецЕсли;
					
					Если чЦенаУпрОтрицПартии = 0 Тогда
						чЦенаУпрОтрицПартии    = чЦенаУпрПоследнейЗакупки;
						чЦенаНДСУпрОтрицПартии = чСуммаНДСУпрПоследнейЗакупки;
					КонецЕсли;
					
					Если чЦенаОтрицПартии = 0 И чЦенаУпрОтрицПартии = 0 Тогда
						чЦенаОтрицПартии       = чЦенаОсновногоПоставщика;
						чЦенаНДСОтрицПартии    = чСуммаНДСОсновногоПоставщика;
						чЦенаУпрОтрицПартии    = чЦенаУпрОсновногоПоставщика;
						чЦенаНДСУпрОтрицПартии = чСуммаНДСУпрОсновногоПоставщика;
					КонецЕсли;
					
					чСуммаТек        = Окр(чКолТек * чЦенаОтрицПартии,2); 
					чСуммаНДСТек     = Окр(чКолТек * чЦенаНДСОтрицПартии,2);
					чСуммаУпрТек     = Окр(чКолТек * чЦенаУпрОтрицПартии,2); 
					чСуммаНДСУпрТек  = Окр(чКолТек * чЦенаНДСУпрОтрицПартии,2);
					
					д = тзОстаткиНоменклатуры.Добавить();
					д.Активность      = Истина;
					д.Период          = Объект.Дата;
					д.ВидДвижения     = ВидДвиженияНакопления.Расход;
					д.Регистратор     = Объект.Ссылка;
					д.Фирма           = вн.Фирма;
					д.МестоХранения   = вн.МестоХранения;
					д.Номенклатура    = вн.Номенклатура;
					д.СтавкаНДС       = вн.СтавкаНДС;
					д.Статус          = прчКупляПродажа;
					д.Количество      = чКолТек;
					д.Сумма           = чСуммаТек;
					д.СуммаНДС        = чСуммаНДСТек;
					д.СуммаУпр        = чСуммаУпрТек;
					д.СуммаНДСУпр     = чСуммаНДСУпрТек;
					
					д.СуммаПродажи    = Окр(чЦенаПродажи    * чКолТек,2);
					д.СуммаНДСПродажи = Окр(чЦенаНДСПродажи * чКолТек,2);
					
					чСуммаПродажи     = чСуммаПродажи + д.СуммаПродажи;
					чСуммаНДСПродажи  = чСуммаНДСПродажи + д.СуммаНДСПродажи;
					
					д.КодОперации     = КодОперации;
					д.Комитент        = Неопределено;
					
					//++БИТ БВО Проведение Z-отчета без отатков на складе
					Если ЭтоZОтчет Тогда
						НаДату	= Новый МоментВремени(Параметры.Объект.Дата, Параметры.Объект.Ссылка);
						ТЗ		= Izh_ОбщегоНазначенияСервер.ТаблицаРодителей(вн.Номенклатура);
						РезультатЗапроса = Izh_ОбщегоНазначенияСервер.ПолучитьАктуальныеПравилаПерепродажиПоНоменклатуреИерархически(НаДату, ТЗ);
						
						ТипДоговора = Перечисления.ТипыДоговоров.КупляПродажа;
						Комитент	= Неопределено;
						Если НЕ РезультатЗапроса.Пустой() Тогда //Есть правила перепродажи					
							Выборка = РезультатЗапроса.Выбрать();
							Пока Выборка.Следующий() Цикл
								ТипДоговора = ?(ЗначениеЗаполнено(Выборка.ТипДоговора), Выборка.ТипДоговора, ТипДоговора);								
								Комитент	= ?(ЗначениеЗаполнено(Выборка.ФирмаПокупки), Выборка.ФирмаПокупки, Комитент);
							КонецЦикла;
						КонецЕсли;
						
						д.Статус	= ТипДоговора;						
						д.Комитент	= ?(д.Статус = Перечисления.ТипыДоговоров.Комиссия, Комитент, Неопределено);						
						
						Если ТипДоговора = Перечисления.ТипыДоговоров.КупляПродажа Тогда							
							д.Фирма			= Параметры.Объект.Фирма;
							д.Сумма			= чКолТек * ?(вн.ЦенаПоследнейЗакупки = 0, вн.ЦенаОсновногоПоставщика, вн.ЦенаПоследнейЗакупки);
							д.СуммаУпр		= д.Сумма;
							д.СуммаНДС		= д.Сумма * ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(вн.СтавкаНДС) / 100;
							д.СуммаНДСУпр	= д.СуммаНДС;
						Иначе							
							Если ЗначениеЗаполнено(ЭлемТоварОбщепита) И ЗначениеЗаполнено(ЭлемТараОбщепита) Тогда
								Номенклатура = вн.Номенклатура;
								НоменклатураЯвляетсяТоваромОбщепита = Номенклатура.ПринадлежитЭлементу(ЭлемТоварОбщепита) 
														ИЛИ Номенклатура.ПринадлежитЭлементу(ЭлемТараОбщепита);
								Если НоменклатураЯвляетсяТоваромОбщепита Тогда //Значит, товар общепита
									Запрос = Новый Запрос;
									Запрос.Текст = "ВЫБРАТЬ
									|	НоменклатураКонтрагента.Контрагент
									|ИЗ
									|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
									|ГДЕ
									|	НоменклатураКонтрагента.ОсновнойПоставщик = ИСТИНА
									|	И НоменклатураКонтрагента.Номенклатура = &Номенклатура";
									Запрос.УстановитьПараметр("Номенклатура", вн.Номенклатура);
									Выборка = Запрос.Выполнить().Выбрать();
									Если Выборка.Следующий() Тогда
										д.Комитент = Выборка.Контрагент;  //////
									КонецЕсли;																
								КонецЕсли;
								д.Сумма			= чКолТек * ?(вн.ЦенаПоследнейЗакупки = 0, вн.ЦенаОсновногоПоставщика, вн.ЦенаПоследнейЗакупки);
								д.СуммаУпр		= д.Сумма;
								д.СуммаНДС		= д.Сумма * ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(вн.СтавкаНДС) / 100;
								д.СуммаНДСУпр	= д.СуммаНДС;
							КонецЕсли;												
						КонецЕсли;
								
					КонецЕсли;
					//--БИТ БВО										
				КонецЕсли;
				
				чРазница = вн.Сумма - чСуммаПродажи;
				Если чРазница <> 0 и д <> Неопределено Тогда
					д.СуммаПродажи = д.СуммаПродажи + чРазница;
				КонецЕсли;
				
				чРазницаНДС = вн.СуммаНДС - чСуммаНДСПродажи;
				Если чРазницаНДС <> 0 и д <> Неопределено Тогда
					д.СуммаНДСПродажи = д.СуммаНДСПродажи + чРазницаНДС;
				КонецЕсли;
				
				флПревышениеОстаткаПоТовару = Ложь;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Количество",      0);
	ПараметрыОтбора.Вставить("Сумма",           0);
	ПараметрыОтбора.Вставить("СуммаНДС",        0);
	ПараметрыОтбора.Вставить("СуммаУпр",        0);
	ПараметрыОтбора.Вставить("СуммаНДСУпр",     0);
	ПараметрыОтбора.Вставить("СуммаПродажи",    0);
	ПараметрыОтбора.Вставить("СуммаНДСПродажи", 0);
	
	НайденныеСтроки = тзОстаткиНоменклатуры.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого ТекСтрока Из НайденныеСтроки Цикл
		тзОстаткиНоменклатуры.Удалить(ТекСтрока);
	КонецЦикла;
	
	Если флПревышениеОстатка Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиПроведения,Объект.Ссылка);
	КонецЕсли;
	
	Возврат флПревышениеОстатка И флЗапрещеныОтрицательныеОстатки;

КонецФункции	

//{Ситек ДойниковПВ 2015-10-20

Функция ПолучитьТекстЗапросаДляПроведенияZОтчета()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Цены.Номенклатура,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена), 0) КАК Цена,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС), 0) КАК СуммаНДС,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.ЦенаУпр), 0) КАК ЦенаУпр,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДСУпр), 0) КАК СуммаНДСУпр
	|ПОМЕСТИТЬ ЗакупочныеЦены
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура КАК Номенклатура,
	|		МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена) КАК Цена,
	|		МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДС) КАК СуммаНДС,
	|		0 КАК ЦенаУпр,
	|		0 КАК СуммаНДСУпр
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
	|				&Момент,
	|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							с.Номенклатура
	|						ИЗ
	|							врСостав КАК с)
	|					И Фирма = &Фирма) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	|	ГДЕ
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура.БазоваяЕдиницаИзмерения = ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура,
	|		0,
	|		0,
	|		МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.ЦенаУпр),
	|		МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДСУпр)
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
	|				&Момент,
	|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							с.Номенклатура
	|						ИЗ
	|							врСостав КАК с)) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	|	ГДЕ
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура.БазоваяЕдиницаИзмерения = ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура) КАК Цены
	|
	|СГРУППИРОВАТЬ ПО
	|	Цены.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНДС.Ссылка,
	|	СтавкиНДС.Ставка
	|ПОМЕСТИТЬ СтавкиНДС
	|ИЗ
	|	Справочник.СтавкиНДС КАК СтавкиНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ЕСТЬNULL(СтавкиНДС.Ставка, 0) КАК Ставка
	|ПОМЕСТИТЬ СтавкиНДСНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО Номенклатура.СтавкаНДС = СтавкиНДС.Ссылка
	|ГДЕ
	|	Номенклатура.Ссылка В
	|			(ВЫБРАТЬ
	|				с.Номенклатура
	|			ИЗ
	|				врСостав КАК с)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Цены.Номенклатура,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена), 0) КАК Цена,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС), 0) КАК СуммаНДС,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена), 0) КАК ЦенаУпр,
	|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС), 0) КАК СуммаНДСУпр
	|ПОМЕСТИТЬ ЦеныОсновногоПоставщика
	|ИЗ
	|	(ВЫБРАТЬ
	|		НоменклатураКонтрагента.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
	|				ТОГДА НоменклатураКонтрагента.Цена
	|			ИНАЧЕ ВЫРАЗИТЬ(НоменклатураКонтрагента.Цена * (100 + СтавкиНДСНоменклатуры.Ставка) / 100 КАК ЧИСЛО(15, 2))
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА НоменклатураКонтрагента.Контрагент.НеПлательщикНДС
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
	|						ТОГДА ВЫРАЗИТЬ(СтавкиНДСНоменклатуры.Ставка * НоменклатураКонтрагента.Цена / (100 + СтавкиНДСНоменклатуры.Ставка) КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВЫРАЗИТЬ(НоменклатураКонтрагента.Цена * СтавкиНДСНоменклатуры.Ставка / 100 КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		КОНЕЦ КАК СуммаНДС
	|	ИЗ
	|		РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
	|			ПО НоменклатураКонтрагента.Номенклатура = СтавкиНДСНоменклатуры.Ссылка,
	|		Константа.ВключатьНДСВЦеныКонтрагентов КАК ВключатьНДСВЦеныКонтрагентов
	|	ГДЕ
	|		НоменклатураКонтрагента.Номенклатура В
	|				(ВЫБРАТЬ
	|					с.Номенклатура
	|				ИЗ
	|					врСостав КАК с)
	|		И НоменклатураКонтрагента.ОсновнойПоставщик) КАК Цены
	|
	|СГРУППИРОВАТЬ ПО
	|	Цены.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врСостав.Номенклатура КАК Номенклатура,
	|	врСостав.СтавкаНДС КАК СтавкаНДС,
	|	врСостав.МестоХранения КАК МестоХранения,
	|	врСостав.Фирма КАК Фирма,
	|	врСостав.Количество КАК Количество,
	|	врСостав.Сумма КАК Сумма,
	|	врСостав.СуммаНДС КАК СуммаНДС,
	|	врСостав.Статус КАК Статус,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.КоличествоОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.КоличествоОстаток
	|		КОНЕЦ, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.КоличествоОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.КоличествоОстаток
	|		КОНЕЦ, 0) КАК КоличествоОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаОстаток
	|		КОНЕЦ, 0) КАК СуммаОстаток,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСОстаток
	|		КОНЕЦ, 0) КАК СуммаНДСОстаток,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаУпрОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаУпрОстаток
	|		КОНЕЦ, 0) КАК СуммаУпрОстаток,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСУпрОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСУпрОстаток
	|		КОНЕЦ, 0) КАК СуммаНДСУпрОстаток,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаОстаток
	|		КОНЕЦ, 0) КАК СуммаОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСОстаток
	|		КОНЕЦ, 0) КАК СуммаНДСОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаУпрОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаУпрОстаток
	|		КОНЕЦ, 0) КАК СуммаУпрОстатокДок,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА о.СуммаНДСУпрОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ о.СуммаНДСУпрОстаток
	|		КОНЕЦ, 0) КАК СуммаНДСУпрОстатокДок,
	|	ЕСТЬNULL(ЗакупочныеЦены.Цена, 0) КАК СуммаПоследнейЗакупки,
	|	ЕСТЬNULL(ЗакупочныеЦены.СуммаНДС, 0) КАК СуммаНДСПоследнейЗакупки,
	|	ЕСТЬNULL(ЗакупочныеЦены.ЦенаУпр, 0) КАК СуммаУпрПоследнейЗакупки,
	|	ЕСТЬNULL(ЗакупочныеЦены.СуммаНДСУпр, 0) КАК СуммаНДСУпрПоследнейЗакупки,
	|	ЕСТЬNULL(ЦеныОсновногоПоставщика.Цена, 0) КАК СуммаОсновногоПоставщика,
	|	ЕСТЬNULL(ЦеныОсновногоПоставщика.СуммаНДС, 0) КАК СуммаНДСОсновногоПоставщика,
	|	ЕСТЬNULL(ЦеныОсновногоПоставщика.ЦенаУпр, 0) КАК СуммаУпрОсновногоПоставщика,
	|	ЕСТЬNULL(ЦеныОсновногоПоставщика.СуммаНДСУпр, 0) КАК СуммаНДСУпрОсновногоПоставщика,
	|	Склады.ОтрицательныеОстатки КАК ОтрицательныеОстатки
	|ИЗ
	|	врСостав КАК врСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОстаткиНоменклтуры.Номенклатура КАК Номенклатура,
	|			ОстаткиНоменклтуры.МестоХранения КАК МестоХранения,
	|			ОстаткиНоменклтуры.Фирма КАК Фирма,
	|			ОстаткиНоменклтуры.Статус КАК Статус,
	|			СУММА(ОстаткиНоменклтуры.КоличествоОстаток) КАК КоличествоОстаток,
	|			СУММА(ОстаткиНоменклтуры.СуммаОстаток) КАК СуммаОстаток,
	|			СУММА(ОстаткиНоменклтуры.СуммаУпрОстаток) КАК СуммаУпрОстаток,
	|			СУММА(ОстаткиНоменклтуры.СуммаНДСОстаток) КАК СуммаНДСОстаток,
	|			СУММА(ОстаткиНоменклтуры.СуммаНДСУпрОстаток) КАК СуммаНДСУпрОстаток
	|		ИЗ
	|			РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|					&Момент,
	|					(Фирма, МестоХранения, Номенклатура) В
	|							(ВЫБРАТЬ
	|								с.Фирма,
	|								с.МестоХранения,
	|								с.Номенклатура
	|							ИЗ
	|								врСостав КАК с
	|							ГДЕ
	|								с.Фирма = &Фирма)
	|						И Статус В (&Статусы)) КАК ОстаткиНоменклтуры
	|		ГДЕ
	|			ОстаткиНоменклтуры.КоличествоОстаток > 0
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОстаткиНоменклтуры.Номенклатура,
	|			ОстаткиНоменклтуры.МестоХранения,
	|			ОстаткиНоменклтуры.Фирма,
	|			ОстаткиНоменклтуры.Статус) КАК о
	|		ПО врСостав.Номенклатура = о.Номенклатура
	|			И врСостав.Статус = о.Статус
	|			И врСостав.Фирма = о.Фирма
	|			И врСостав.МестоХранения = о.МестоХранения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗакупочныеЦены КАК ЗакупочныеЦены
	|		ПО врСостав.Номенклатура = ЗакупочныеЦены.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныОсновногоПоставщика КАК ЦеныОсновногоПоставщика
	|		ПО врСостав.Номенклатура = ЦеныОсновногоПоставщика.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО врСостав.МестоХранения = Склады.Ссылка
	|ГДЕ
	|	врСостав.Фирма = &Фирма
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	МестоХранения,
	|	Фирма,
	|	КоличествоОстаток УБЫВ
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	МАКСИМУМ(КоличествоОстаток),
	|	МАКСИМУМ(СуммаОстаток),
	|	МАКСИМУМ(СуммаНДСОстаток),
	|	МАКСИМУМ(СуммаУпрОстаток),
	|	МАКСИМУМ(СуммаНДСУпрОстаток),
	|	МАКСИМУМ(СуммаПоследнейЗакупки),
	|	МАКСИМУМ(СуммаНДСПоследнейЗакупки),
	|	МАКСИМУМ(СуммаУпрПоследнейЗакупки),
	|	МАКСИМУМ(СуммаНДСУпрПоследнейЗакупки),
	|	МАКСИМУМ(СуммаОсновногоПоставщика),
	|	МАКСИМУМ(СуммаНДСОсновногоПоставщика),
	|	МАКСИМУМ(СуммаУпрОсновногоПоставщика),
	|	МАКСИМУМ(СуммаНДСУпрОсновногоПоставщика),
	|	МАКСИМУМ(ОтрицательныеОстатки)
	|ПО
	|	Фирма,
	|	МестоХранения,
	|	Номенклатура,
	|	Статус,
	|	СтавкаНДС";
	//--БИТ БВО 2015-10-09
;
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаДляПроведенияZОтчета()

Функция ПолучитьТекстОшибкиКонтрольОстатков(ВыборкаНоменклатура)

	ТекстОшибки = Символы.ПС+""""+ВыборкаНоменклатура.Номенклатура + """" + "(Код:" + СокрЛП(ВыборкаНоменклатура.Номенклатура.Код) + ")"
					+Символы.ПС+"   По документу: " + ВыборкаНоменклатура.Количество
					+Символы.ПС+"   На остатке: " + ВыборкаНоменклатура.КоличествоОстаток
					+Символы.ПС+"   Не хватает: " + Строка(ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоОстаток);
					
	Возврат ТекстОшибки;

КонецФункции // ПолучитьТекстОшибкиКонтрольОстатков()

Функция ПолучитьПриходыПоТовару(ВыборкаСтатус, ДатаДокумента)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНоменклатурыОбороты.СуммаПриход,
	|	ОстаткиНоменклатурыОбороты.Комитент,
	|	ОстаткиНоменклатурыОбороты.Регистратор КАК Регистратор,
	|	ОстаткиНоменклатурыОбороты.КоличествоПриход КАК Количество,
	|	ОстаткиНоменклатурыОбороты.Регистратор.Дата КАК РегистраторДата
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Обороты(
	|			,
	|			&ДатаОкончания,
	|			Запись,
	|			Номенклатура = &Номенклатура
	|				И МестоХранения = &МестоХранения
	|				И Статус = &Статус
	|				И Фирма = &Фирма) КАК ОстаткиНоменклатурыОбороты
	|ГДЕ
	|	ОстаткиНоменклатурыОбороты.КоличествоОборот > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистраторДата УБЫВ";
	
	Запрос.УстановитьПараметр("Номенклатура", ВыборкаСтатус.Номенклатура);
	Запрос.УстановитьПараметр("Фирма", ВыборкаСтатус.Фирма);
	Запрос.УстановитьПараметр("МестоХранения", ВыборкаСтатус.МестоХранения);
	Запрос.УстановитьПараметр("Статус", ВыборкаСтатус.Статус);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаДокумента);
	
	Результат 			= Запрос.Выполнить().Выгрузить();
	ДокументыНаОстатках = Результат.Скопировать();
	ДокументыНаОстатках.Очистить();
	
	Остаток = ВыборкаСтатус.КоличествоОстаток;
	
	Если Остаток = 0 Тогда
		Возврат ДокументыНаОстатках;
	КонецЕсли; 
	
	Для каждого СтрокаРезультат Из Результат Цикл
		
		Если СтрокаРезультат.Количество < Остаток Тогда
			НоваяСтрока = ДокументыНаОстатках.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультат);
			Остаток = Остаток - СтрокаРезультат.Количество;
		Иначе
			
			Если Остаток > 0 Тогда
				НоваяСтрока = ДокументыНаОстатках.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультат);
				НоваяСтрока.Количество = Остаток; 
			КонецЕсли;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументыНаОстатках.Количество() > 0 Тогда
		ДокументыНаОстатках.Сортировать("РегистраторДата Возр");
	КонецЕсли; 
	
	Возврат ДокументыНаОстатках;
	
КонецФункции // ПолучитьПриходыПоТовару()

Функция СоздатьНовуюСтрокуОстаткиНоменклатуры(тзОстаткиНоменклатуры, Объект, ДетальныеЗаписи, ВидДвижения, КодОперации)
	
	НоваяСтрокаОстаткиНоменклатуры = тзОстаткиНоменклатуры.Добавить();
	НоваяСтрокаОстаткиНоменклатуры.Период          = Объект.Дата;
	НоваяСтрокаОстаткиНоменклатуры.Активность      = Истина;
	НоваяСтрокаОстаткиНоменклатуры.ВидДвижения     = ВидДвижения;
	НоваяСтрокаОстаткиНоменклатуры.Регистратор     = Объект.Ссылка;
	НоваяСтрокаОстаткиНоменклатуры.Фирма           = ДетальныеЗаписи.Фирма;
	НоваяСтрокаОстаткиНоменклатуры.МестоХранения   = ДетальныеЗаписи.МестоХранения;
	НоваяСтрокаОстаткиНоменклатуры.Номенклатура    = ДетальныеЗаписи.Номенклатура;
	НоваяСтрокаОстаткиНоменклатуры.СтавкаНДС       = ДетальныеЗаписи.СтавкаНДС;
	НоваяСтрокаОстаткиНоменклатуры.Статус          = ДетальныеЗаписи.Статус;
	НоваяСтрокаОстаткиНоменклатуры.КодОперации     = КодОперации;
	
	Возврат НоваяСтрокаОстаткиНоменклатуры;
	
КонецФункции // СоздатьНовуюСтрокуОстаткиНоменклатуры()

Функция ПолучитьСебестоимостьНоменклатуры(ВыборкаСтатус)
	
	Себестоимость = Новый Структура("Сумма, СуммаНДС, СуммаУпр, СуммаНДСУпр", 0, 0, 0, 0);
	
	Для каждого Ресурс Из Себестоимость Цикл
		
		Если ВыборкаСтатус.КоличествоОстаток <> 0 Тогда
			Себестоимость[Ресурс.Ключ] = ВыборкаСтатус[Ресурс.Ключ + "Остаток"] / ВыборкаСтатус.КоличествоОстаток;
		КонецЕсли;
		
		Если Себестоимость[Ресурс.Ключ] = 0 Тогда
			Себестоимость[Ресурс.Ключ] = ВыборкаСтатус[Ресурс.Ключ + "ПоследнейЗакупки"];
		КонецЕсли;
		
		Если Себестоимость[Ресурс.Ключ] = 0 Тогда
			Себестоимость[Ресурс.Ключ] = ВыборкаСтатус[Ресурс.Ключ + "ОсновногоПоставщика"]
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат Себестоимость;
	
КонецФункции // ()

//{Ситек ДойниковПВ 2015-10-23

Функция ПоулчитьТаблицуПравилПерепродажи(Фирма, СтруктурнаяЕдиница, НаДату)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерепродажаСрезПоследних.Период КАК Период,
	|	ПерепродажаСрезПоследних.СтруктурнаяЕдиница,
	|	ПерепродажаСрезПоследних.ФирмаПокупки КАК Комитент,
	|	ПерепродажаСрезПоследних.ГруппаНоменклатуры КАК ГруппаНоменклатурыКод,
	|	ПерепродажаСрезПоследних.ПроцентПрибыли,
	|	ПерепродажаСрезПоследних.ТипДоговора,
	|	ПерепродажаСрезПоследних.ФирмаПродажи,
	|	Номенклатура.Ссылка КАК ГруппаНоменклатуры
	|ИЗ
	|	РегистрСведений.Перепродажа.СрезПоследних(
	|			&НаДату,
	|			ФирмаПродажи = &Фирма
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ПерепродажаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ПерепродажаСрезПоследних.ГруппаНоменклатуры = Номенклатура.Код
	|ГДЕ
	|	ПерепродажаСрезПоследних.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаНоменклатурыКод УБЫВ,
	|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("Фирма", Фирма);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции // ()

Функция ПолучитьТаблицуОсновныхПоставщиков(МассивНоменклатуры, СтруктурнаяЕдиница);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыНоменклатуры.Номенклатура,
	|	СтатусыНоменклатуры.СтруктурнаяЕдиница,
	|	СтатусыНоменклатуры.Статус,
	|	СтатусыНоменклатуры.ДатаДобавления,
	|	СтатусыНоменклатуры.ОсновнойПоставщик КАК Комитент
	|ИЗ
	|	РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	|ГДЕ
	|	СтатусыНоменклатуры.Номенклатура В(&МассивНоменклатуры)
	|	И СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
	
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
		
КонецФункции

Функция УстановитьТипДоговораИКомитента(НоваяСтрока, ВыборкаСтатус, Объект, НоменклатураЯвляетсяТоваромОбщепита, ПравилаПерепродажи, ОсновныеПоставщики)
	
	Номенклатура 	= ВыборкаСтатус.Номенклатура;
	Комитент 		= Неопределено;
	ТипДоговора 	= Перечисления.ТипыДоговоров.КупляПродажа;
	
	Для каждого СтрокаПравил Из ПравилаПерепродажи Цикл
		Если Номенклатура.ПринадлежитЭлементу(СтрокаПравил.ГруппаНоменклатуры) И СтрокаПравил.ТипДоговора = Перечисления.ТипыДоговоров.Комиссия Тогда
			Комитент 	= СтрокаПравил.Комитент;
			ТипДоговора = СтрокаПравил.ТипДоговора;
			Прервать;
		КонецЕсли; 
	КонецЦикла;  
	
	Если ТипДоговора = Перечисления.ТипыДоговоров.Комиссия И НоменклатураЯвляетсяТоваромОбщепита Тогда
		СтрокаОсновнойПоставщик = ОсновныеПоставщики.Найти(Номенклатура, "Номенклатура");
		Комитент = СтрокаОсновнойПоставщик.Комитент;
	КонецЕсли; 
	
	НоваяСтрока.Комитент 	= Комитент;
	НоваяСтрока.Статус 		= ТипДоговора;
	
КонецФункции // ПолучитьКомитента()

//}Ситек ДойниковПВ 2015-10-23

//Функция служит для формирования таблицы списания только для zОтчета
Функция ПровестиСписаниеПоПартиямСоСтатусом(Параметры) экспорт
	
	Объект 					= Параметры.Объект;
	Запрос 					= Параметры.Запрос;
	тзОстаткиНоменклатуры 	= Параметры.тзОстаткиНоменклатуры;
	тзРеализация 			= Параметры.тзРеализация;
	
	мсвСтатусы = Новый СписокЗначений;
	мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.Комиссия);
	мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.КупляПродажа);
	
	врСостав = Izh_ОбщегоНазначенияСервер.ПолучитьСодержимоеВТ(Запрос.МенеджерВременныхТаблиц, "врСостав");	
	врСостав.Свернуть("Номенклатура");
	МассивНоменклатуры = врСостав.ВыгрузитьКолонку("Номенклатура");

	МоментПроведения 	= ПроведениеДокументов.ПолучитьМоментВремени(Объект.Ссылка, Объект.Дата, Параметры.РежимПроведения);
	ПравилаПерепродажи 	= ПоулчитьТаблицуПравилПерепродажи(Объект.Фирма, Объект.СтруктурнаяЕдиница, МоментПроведения);
	ОсновныеПоставщики 	= ПолучитьТаблицуОсновныхПоставщиков(МассивНоменклатуры, Объект.СтруктурнаяЕдиница);
	
	Запрос.УстановитьПараметр("Момент", МоментПроведения);
	Запрос.УстановитьПараметр("Статусы", мсвСтатусы);
	Запрос.УстановитьПараметр("Фирма", Параметры.Фирма);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Параметры.Объект.СтруктурнаяЕдиница);
	
	Запрос.Текст 		= ПолучитьТекстЗапросаДляПроведенияZОтчета(); 
	РезультатЗапроса 	= Запрос.Выполнить();
	ВыборкаФирма 		= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПревышениеОстатка 				= Ложь;
	ПревышениеОстаткаПоТовару 		= Ложь;
	ЗапрещеныОтрицательныеОстатки 	= Ложь;
	ТекстОшибкиПроведения 			= "";
	ЭлемТоварОбщепита				= Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыПроизводство));
	ЭлемТараОбщепита				= Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыТараПроизводство));
	
	Пока ВыборкаФирма.Следующий() Цикл  //Фирма
		
		ВыборкаМестоХранения = ВыборкаФирма.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //МестоХранения
		Пока ВыборкаМестоХранения.Следующий() Цикл
			
			Если НЕ ВыборкаМестоХранения.ОтрицательныеОстатки Тогда
				 ЗапрещеныОтрицательныеОстатки = Истина;
			 КонецЕсли;
			 
			ТекстОшибкиПроведения = ТекстОшибкиПроведения + "Недостаточно остатка на складе """ + ВыборкаМестоХранения.МестоХранения + """ по:";
			
			ВыборкаНоменклатура = ВыборкаМестоХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //Номенклатура
			Пока ВыборкаНоменклатура.Следующий() Цикл
				
				Номенклатура = ВыборкаНоменклатура.Номенклатура;
				НоменклатураЯвляетсяТоваромОбщепита = Номенклатура.ПринадлежитЭлементу(ЭлемТоварОбщепита) 
														ИЛИ Номенклатура.ПринадлежитЭлементу(ЭлемТараОбщепита);
				
				//контроль отрицательных остатков
				Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда
					ТекстОшибкиПроведения = ТекстОшибкиПроведения + ПолучитьТекстОшибкиКонтрольОстатков(ВыборкаНоменклатура);
					ПревышениеОстатка         = Истина;
					ПревышениеОстаткаПоТовару = Истина;
				КонецЕсли;	
				
				ВыборкаСтатус = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	//Статус			
				Пока ВыборкаСтатус.Следующий() Цикл
					
					ВыборкаНДС = ВыборкаСтатус.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаНДС.Следующий() Цикл
						
						ПриходныеДокументы = ПолучитьПриходыПоТовару(ВыборкаСтатус, МоментПроведения);
						
						СебестоимостьЕдиницыНоменклатуры = ПолучитьСебестоимостьНоменклатуры(ВыборкаСтатус);
						
						ДетальныеЗаписи = ВыборкаНДС.Выбрать(); //Детальные записи
						Пока ДетальныеЗаписи.Следующий() Цикл
							
							ОсталосьСписать = ДетальныеЗаписи.Количество;
							ОсталосьСуммаПродажи = ДетальныеЗаписи.Сумма; //Возникает разница в копейках при делении на несколько строк по разным комитентам. Сумма контро
							ОсталосьНДСПродажи = ДетальныеЗаписи.СуммаНДС;
							
							Пока ОсталосьСписать <> 0 Цикл
								
								НоваяСтрокаОстаткиНоменклатуры = СоздатьНовуюСтрокуОстаткиНоменклатуры(тзОстаткиНоменклатуры, Объект,ДетальныеЗаписи, ВидДвиженияНакопления.Расход, Параметры.КодОперации);
								
								Если ПриходныеДокументы.Количество() > 0 Тогда
									СтрокаПриходныеДокументы = ПриходныеДокументы[0];
									НоваяСтрокаОстаткиНоменклатуры.Комитент 	= СтрокаПриходныеДокументы.Комитент;
									НоваяСтрокаОстаткиНоменклатуры.Количество 	= Мин(СтрокаПриходныеДокументы.Количество, ОсталосьСписать);
									ПриходныеДокументы.Удалить(СтрокаПриходныеДокументы);
								Иначе
									НоваяСтрокаОстаткиНоменклатуры.Количество 	= ОсталосьСписать;
									УстановитьТипДоговораИКомитента(НоваяСтрокаОстаткиНоменклатуры, ВыборкаСтатус, Параметры.Объект, НоменклатураЯвляетсяТоваромОбщепита, ПравилаПерепродажи, ОсновныеПоставщики);
								КонецЕсли; 
								
								
								Коэффициент		= ?(НоваяСтрокаОстаткиНоменклатуры.Количество = 0, 0, ДетальныеЗаписи.КоличествоОстаток / НоваяСтрокаОстаткиНоменклатуры.Количество);
								
								//ЦенаПродажи 	= ?(ДетальныеЗаписи.Количество = 0, 0, ДетальныеЗаписи.Сумма / ДетальныеЗаписи.Количество);
								//ЦенаНДСПродажи 	= ?(ДетальныеЗаписи.Количество = 0, 0, ДетальныеЗаписи.СуммаНДС / ДетальныеЗаписи.Количество);
								
								НоваяСтрокаОстаткиНоменклатуры.Сумма 		= Окр(СебестоимостьЕдиницыНоменклатуры.Сумма * НоваяСтрокаОстаткиНоменклатуры.Количество, 2);
								НоваяСтрокаОстаткиНоменклатуры.СуммаНДС 	= Окр(СебестоимостьЕдиницыНоменклатуры.СуммаНДС    * НоваяСтрокаОстаткиНоменклатуры.Количество, 2);
								НоваяСтрокаОстаткиНоменклатуры.СуммаУпр 	= Окр(СебестоимостьЕдиницыНоменклатуры.СуммаУпр    * НоваяСтрокаОстаткиНоменклатуры.Количество, 2);
								НоваяСтрокаОстаткиНоменклатуры.СуммаНДСУпр 	= Окр(СебестоимостьЕдиницыНоменклатуры.СуммаНДСУпр * НоваяСтрокаОстаткиНоменклатуры.Количество, 2);
								
								ЦенаПродажи 	= ?(ДетальныеЗаписи.Количество = 0, ОсталосьСуммаПродажи, ОсталосьСуммаПродажи / ОсталосьСписать);
								ЦенаНДСПродажи 	= ?(ДетальныеЗаписи.Количество = 0, ОсталосьНДСПродажи, ОсталосьНДСПродажи / ОсталосьСписать);
								
								НоваяСтрокаОстаткиНоменклатуры.СуммаПродажи = Окр(ЦенаПродажи * НоваяСтрокаОстаткиНоменклатуры.Количество, 2);
								НоваяСтрокаОстаткиНоменклатуры.СуммаНДСПродажи 	= Окр(ЦенаНДСПродажи * НоваяСтрокаОстаткиНоменклатуры.Количество, 2);
								
								ОсталосьСписать 		= ОсталосьСписать - НоваяСтрокаОстаткиНоменклатуры.Количество;
								ОсталосьСуммаПродажи 	= ОсталосьСуммаПродажи - НоваяСтрокаОстаткиНоменклатуры.СуммаПродажи;
								ОсталосьНДСПродажи      = ОсталосьНДСПродажи - НоваяСтрокаОстаткиНоменклатуры.СуммаНДСПродажи;
								
								Если НоваяСтрокаОстаткиНоменклатуры.Статус = Перечисления.ТипыДоговоров.Комиссия 
									И тзРеализация <> Неопределено 
									И ЗначениеЗаполнено(НоваяСтрокаОстаткиНоменклатуры.Комитент) Тогда
									
									НоваяСтрокаРеализация = тзРеализация.Добавить();
									НоваяСтрокаРеализация.Активность 		= Истина;
									НоваяСтрокаРеализация.Период 			= Объект.Дата;
									НоваяСтрокаРеализация.ВидДвижения 		= ВидДвиженияНакопления.Приход;
									НоваяСтрокаРеализация.Регистратор 		= Объект.Ссылка;
									НоваяСтрокаРеализация.Фирма 			= ДетальныеЗаписи.Фирма;
									НоваяСтрокаРеализация.Номенклатура 		= ДетальныеЗаписи.Номенклатура;
									НоваяСтрокаРеализация.ПоДокументу 		= Объект.Ссылка;
									ЗаполнитьЗначенияСвойств(НоваяСтрокаРеализация, НоваяСтрокаОстаткиНоменклатуры, "Комитент, Количество, Сумма, СуммаПродажи, СуммаНДСПродажи");
									
								КонецЕсли;
								
							КонецЦикла; 
							
						КонецЦикла;	
						
					КонецЦикла;	
					
				КонецЦикла;
				
				ПревышениеОстаткаПоТовару = Ложь;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Количество",      0);
	ПараметрыОтбора.Вставить("Сумма",           0);
	ПараметрыОтбора.Вставить("СуммаНДС",        0);
	ПараметрыОтбора.Вставить("СуммаУпр",        0);
	ПараметрыОтбора.Вставить("СуммаНДСУпр",     0);
	ПараметрыОтбора.Вставить("СуммаПродажи",    0);
	ПараметрыОтбора.Вставить("СуммаНДСПродажи", 0);
	
	НайденныеСтроки = тзОстаткиНоменклатуры.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого ТекСтрока Из НайденныеСтроки Цикл
		тзОстаткиНоменклатуры.Удалить(ТекСтрока);
	КонецЦикла;
	
	тзОстаткиНоменклатуры.Свернуть("Активность, ВидДвижения, КодОперации, Комитент, МестоХранения, МоментВремени, Номенклатура, НомерСтроки, Период, Продукция, Регистратор, СтавкаНДС, Статус, Фирма",
									"Количество, Сумма, СуммаНДС, СуммаНДСПродажи, СуммаНДСУпр, СуммаПродажи, СуммаУпр");
	
	Если ПревышениеОстатка Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиПроведения,Объект.Ссылка);
	КонецЕсли;
	
	Возврат ПревышениеОстатка И ЗапрещеныОтрицательныеОстатки;

КонецФункции	

//}Ситек ДойниковПВ 2015-10-20
	
Процедура ПровестиСписаниеПоТоварыПереданныеНаКомиссию(Параметры) экспорт
	
	Запрос = Параметры.Запрос;
	тзТоварыПереданныеНаКомиссию = Параметры.тзТоварыПереданныеНаКомиссию;	
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТоварыПереданныеНаКомиссиюОстатки.Номенклатура,
		|	естьnull(ТоварыПереданныеНаКомиссиюОстатки.КоличествоОстаток,0) КАК КоличествоОстаток,
		|	ТоварыПереданныеНаКомиссиюОстатки.СуммаОстаток,
		|	ТоварыПереданныеНаКомиссиюОстатки.СуммаУпрОстаток,
		|	ТоварыПереданныеНаКомиссиюОстатки.СуммаНДСОстаток,
		|	ТоварыПереданныеНаКомиссиюОстатки.СуммаНДСУпрОстаток,
		|	Состав.Количество КАК Количество,
		|	ТоварыПереданныеНаКомиссиюОстатки.СуммаПродажиОстаток,
		|	ТоварыПереданныеНаКомиссиюОстатки.СуммаНДСПродажиОстаток
		|ИЗ
		|	врСостав КАК Состав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(
		|				&Дата,
		|				Фирма = &фирма
		|					И Комиссионер = &Контрагент
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							Состав.Номенклатура
		|						ИЗ
		|							врСостав КАК Состав)) КАК ТоварыПереданныеНаКомиссиюОстатки
		|		ПО Состав.Номенклатура = ТоварыПереданныеНаКомиссиюОстатки.Номенклатура";
		Запрос.УстановитьПараметр("Контрагент",Параметры.Контрагент);
		Запрос.УстановитьПараметр("Фирма",Параметры.Фирма);
		Запрос.УстановитьПараметр("Дата",Параметры.Объект.Дата);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.КоличествоОстаток=0 Тогда
				Продолжить;
			КонецЕсли;	
			
			к = Выборка.Количество / Выборка.КоличествоОстаток;
			к=?(к>1,1,к);
			чКолТек = МИН(Выборка.Количество,Выборка.КоличествоОстаток);
			
			Движение = тзТоварыПереданныеНаКомиссию.Добавить();
			Движение.Активность = Истина;
			Движение.Регистратор = Параметры.Объект.Ссылка;
			Движение.Период = Параметры.Объект.Дата;
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Фирма = Параметры.Фирма;
			Движение.Комиссионер = Параметры.Контрагент;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Количество  = чКолТек;
			Движение.Сумма = Окр(Выборка.СуммаОстаток * к,2);
			Движение.СуммаУпр = Окр(Выборка.СуммаУпрОстаток * к,2);
			Движение.СуммаНДС = Окр(Выборка.СуммаНДСОстаток * к,2);
			Движение.СуммаНДСУпр = Окр(Выборка.СуммаНДСУпрОстаток * к,2);
			Движение.СуммаПродажи = Окр(Выборка.СуммаПродажиОстаток * к,2);
			Движение.СуммаНДСПродажи = Окр(Выборка.СуммаНДСПродажиОстаток * к,2);
		КонецЦикла;

	
	
	КонецПроцедуры	
	
Функция ПреобразоватьНаборы(Параметры) экспорт
	//по наборам необходимо получить распределение суммы между составляющими
	тзНаборы = Новый ТаблицаЗначений;
	тзНаборы.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	тзНаборы.Колонки.Добавить("СтавкаНДС"	, Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС"));
	тзНаборы.Колонки.Добавить("Количество"	, Новый ОписаниеТипов("Число"));
	тзНаборы.Колонки.Добавить("Сумма"		, Новый ОписаниеТипов("Число"));
	тзНаборы.Колонки.Добавить("СуммаНДС"	, Новый ОписаниеТипов("Число"));
	тзНаборы.Колонки.Добавить("Склад"		, Новый ОписаниеТипов("СправочникСсылка.Склады"));
	//++БИТ БВО №0000129900
	тзНаборы.Колонки.Добавить("Статус"		, Новый ОписаниеТипов("ПеречислениеСсылка.ТипыДоговоров"));
	//--БИТ БВО №0000129900
	стрИмяДокумента=Параметры.Ссылка.Метаданные().Имя;
	//popn+
	Если нрег(стрИмяДокумента) = "корректировкареализации" Тогда
		стрПолеСклад = ".Ссылка.ДокументРеализации";
		//popn-
	ИначеЕсли нрег(стрИмяДокумента) = "zотчет" Тогда
		стрПолеСклад = "";
	Иначе	
		стрПолеСклад = ".Ссылка";
	КонецЕсли;	
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	СУММА(Состав.СуммаНДС) КАК СуммаНДС,
	|	Состав.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(Состав.Сумма) КАК Сумма,
	|	//ПолеСтатус КАК Статус,
	|	Состав"+стрПолеСклад+".Склад КАК Склад
	|ПОМЕСТИТЬ Наборы
	|ИЗ
	|	Документ."+стрИмяДокумента+".Состав КАК Состав
	|ГДЕ
	|	Состав.Номенклатура.ВидТовара = Значение(Перечисление.ВидыТоваров.Набор)
	|	И Состав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Состав.Номенклатура,
	|	Состав"+стрПолеСклад+".Склад,
	|	//ПолеСтатус,
	|	Состав.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураСоставНабора.Компонент,
	|	НоменклатураСоставНабора.Количество,
	|	НоменклатураСоставНабора.Ссылка
	|ПОМЕСТИТЬ Компоненты
	|ИЗ
	|	Справочник.Номенклатура.СоставНабора КАК НоменклатураСоставНабора
	|ГДЕ
	|	НоменклатураСоставНабора.Ссылка В
	|			(ВЫБРАТЬ
	|				т.Номенклатура
	|			ИЗ
	|				Наборы КАК т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Компоненты.Компонент,
	|	Компоненты.Количество,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 1) КАК ЦенаРозничная,
	|	Наборы.СуммаНДС КАК СуммаНДС,
	|	Наборы.СтавкаНДС КАК СтавкаНДС,
	|	Наборы.Сумма КАК Сумма,
	|	Наборы.Номенклатура КАК Номенклатура,
	|	Наборы.Склад КАК Склад,
	|	Наборы.Статус КАК Статус
	|ИЗ
	|	Наборы КАК Наборы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Компоненты КАК Компоненты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&Дата, СтруктурнаяЕдиница = &СтруктурнаяЕдиница И
	|					Номенклатура В
	|						(ВЫБРАТЬ
	|							т.Компонент
	|						ИЗ
	|							Компоненты КАК т)) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО Компоненты.Компонент = ЦеныНоменклатурыСрезПоследних.Номенклатура И ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
	|		ПО Наборы.Номенклатура = Компоненты.Ссылка
	|ИТОГИ
	|	СУММА(ЦенаРозничная),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(Сумма)
	|ПО
	|	Склад,
	|	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка",Параметры.Ссылка);
	Запрос.УстановитьПараметр("Дата",Параметры.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Параметры.Ссылка.СтруктурнаяЕдиница);
	
	МетаданныеДокумента = Параметры.Ссылка.Метаданные();
	Если МетаданныеДокумента.ТабличныеЧасти.Найти("Состав") <> Неопределено Тогда
		Если МетаданныеДокумента.ТабличныеЧасти.Состав.Реквизиты.Найти("ТипРеализацииТовара") <> Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПолеСтатус", "Состав.ТипРеализацииТовара");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПолеСтатус", "ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)");
		КонецЕсли;
	КонецЕсли;
	
	ВыборкаСклад = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСклад.Следующий() Цикл

		ВыборкаНабор = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНабор.Следующий() Цикл
			
			чСуммаРаспределили    = 0;
			чСуммаНДСРаспределили = 0;
			
			Выборка = ВыборкаНабор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Выборка.Следующий() Цикл
				
				к = Выборка.ЦенаРозничная / ВыборкаНабор.ЦенаРозничная;
				чСумма    = Окр(к * ВыборкаНабор.Сумма,2);
				чСуммаНДС = Окр(к * ВыборкаНабор.СуммаНДС,2);
				
				
				с_тзНаборы = тзНаборы.Добавить();
				с_тзНаборы.Номенклатура = Выборка.Компонент;
				с_тзНаборы.СтавкаНДС    = Выборка.СтавкаНДС;
				с_тзНаборы.Количество   = Выборка.Количество;
				с_тзНаборы.Сумма        = чСумма;
				с_тзНаборы.СуммаНДС     = чСуммаНДС;
				с_тзНаборы.Склад        = ВыборкаСклад.Склад;
				//++БИТ БВО №0000129900
				с_тзНаборы.Статус       = ВыборкаСклад.Статус;
				//--БИТ БВО №0000129900
				
				чСуммаРаспределили    = чСуммаРаспределили + чСумма;
				чСуммаНДСРаспределили = чСуммаНДСРаспределили + чСуммаНДС;
				
			КонецЦикла;
			
			чРазницаСумма = ВыборкаНабор.Сумма - чСуммаРаспределили;
			Если  чРазницаСумма <> 0 Тогда
				с_тзНаборы.Сумма = с_тзНаборы.Сумма - чРазницаСумма;
			КонецЕсли;	
			
			чРазницаСуммаНДС = ВыборкаНабор.СуммаНДС - чСуммаНДСРаспределили;
			Если  чРазницаСуммаНДС <> 0 Тогда
				с_тзНаборы.СуммаНДС = с_тзНаборы.СуммаНДС - чРазницаСуммаНДС;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;			
		
	Возврат тзНаборы; 	
КонецФункции	

Процедура ВосстановлениеТоварнойПоследовательности() экспорт	
	//{++ ВетровИА 03.04.2015 Наряд №000146452}
	ТекСЕ = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	МассивСЕ = Новый Массив;
	Если ТекСЕ.ЭтоГруппа Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		|		СтруктурныеЕдиницы.Ссылка КАК Ссылка
		|	ИЗ
		|		Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|	ГДЕ
		|		СтруктурныеЕдиницы.Родитель = &Ссылка");
		
		//{БредовЮГ 2015-06-04 Наряд 000152636 от 04.06.2015 16:31:53
		Запрос.УстановитьПараметр("Ссылка",ТекСЕ);
		//БредовЮГ  2015-06-04 Наряд 000152636 от 04.06.2015 16:31:53 } 		
		тзРезультат	= Запрос.Выполнить().Выгрузить();
		МассивСЕ	= тзРезультат.ВыгрузитьКолонку("Ссылка");	
	Иначе
		МассивСЕ.Добавить(ТекСЕ);	
	КонецЕсли;
		
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	Склады.ОтрицательныеОстатки КАК ОтрицательныеОстатки
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	НЕ Склады.ОтрицательныеОстатки И Склады.Владелец В (&СписокСЕ)");
	Запрос.УстановитьПараметр("СписокСЕ", МассивСЕ);
	тзРезультат = Запрос.Выполнить().Выгрузить();	
	Для Каждого СтрокаТЗ из тзРезультат Цикл
		СкладОбъект = СтрокаТЗ.Склад.ПолучитьОбъект();
		СкладОбъект.ОтрицательныеОстатки = Истина;
		СкладОбъект.ДополнительныеСвойства.Вставить("НеРегистрироватьОбменТД6",Истина);
		СкладОбъект.Записать();	
	КонецЦикла;

	Последовательности.Товары.Восстановить();
	
	Для Каждого СтрокаТЗ из тзРезультат Цикл
		СкладОбъект = СтрокаТЗ.Склад.ПолучитьОбъект();
		СкладОбъект.ОтрицательныеОстатки = СтрокаТЗ.ОтрицательныеОстатки;
		СкладОбъект.ДополнительныеСвойства.Вставить("НеРегистрироватьОбменТД6",Истина);
		СкладОбъект.Записать();		
	КонецЦикла;;
	//{-- ВетровИА 03.04.2015 Наряд №000146452}
КонецПроцедуры	

Процедура ПриПроведенииПроверкаДатыЗапретаРедактирования(Объект, Отказ, Режим) Экспорт
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	Если Объект.ДополнительныеСвойства.Свойство("БылПроведен") И НЕ Объект.ДополнительныеСвойства.БылПроведен Тогда
		КоличествоДней = ПараметрыСеанса.КоличествоДнейРедактированияДокументов;
		Если КоличествоДней > 0 Тогда
			Если Объект.Дата < ТекущаяДата()-КоличествоДней*3600*24 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Запрещено изменение! Установлена дата запрета редактирования'"),Объект.Ссылка);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//popn+
Функция ПолучитьДвиженияДокументаПоРегистру(Объект, ИмяРегистра) Экспорт
	
	Объект.Движения[ИмяРегистра].Прочитать();
	тзДвиженийРегистра = Объект.Движения[ИмяРегистра].Выгрузить();
	тзДвиженийРегистра.Колонки.Удалить("МоментВремени");
	тзДвиженийРегистра.Колонки.Удалить("НомерСтроки");
	
	Возврат тзДвиженийРегистра;
	
КонецФункции

Функция ТаблицыНаборовЗаписейОдинаковые(ТаблицаЗначений1, ТаблицаЗначений2) Экспорт
	
	Если ТипЗнч(ТаблицаЗначений1) <> Тип("ТаблицаЗначений") ИЛИ ТипЗнч(ТаблицаЗначений2) <> Тип("ТаблицаЗначений") Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Если ТаблицаЗначений1.Количество() <> ТаблицаЗначений2.Количество() Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Если ТаблицаЗначений1.Колонки.Количество() <> ТаблицаЗначений2.Колонки.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Проверим поля
	Для каждого Колонка Из ТаблицаЗначений1.Колонки Цикл
		Если ТаблицаЗначений2.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла; 
	Для каждого Колонка Из ТаблицаЗначений2.Колонки Цикл
		Если ТаблицаЗначений1.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла; 
	
	// Проверим записи
	Для каждого СтрокаТаблицы Из ТаблицаЗначений1 Цикл
		СтруктураПоиска = Новый Структура;
		Для каждого Колонка Из ТаблицаЗначений1.Колонки Цикл
			СтруктураПоиска.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]);
		КонецЦикла;
		СтрокиТаблицы2 = ТаблицаЗначений2.НайтиСтроки(СтруктураПоиска);
		Если СтрокиТаблицы2.Количество() <> 1 Тогда
			Возврат Ложь;
		КонецЕсли; 
	КонецЦикла;
	Для каждого СтрокаТаблицы Из ТаблицаЗначений2 Цикл
		СтруктураПоиска = Новый Структура;
		Для каждого Колонка Из ТаблицаЗначений2.Колонки Цикл
			СтруктураПоиска.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]);
		КонецЦикла;
		СтрокиТаблицы1 = ТаблицаЗначений1.НайтиСтроки(СтруктураПоиска);
		Если СтрокиТаблицы1.Количество() <> 1 Тогда
			Возврат Ложь;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // СравнитьТаблицыЗначений()

Процедура ПодготовитьТаблицыДляСравнения(ВидДокумента, ТаблицаДвижений, ТаблицаДвиженийИсходная) Экспорт
	
	Если ТаблицаДвижений.Количество() = 0 
		ИЛИ ТаблицаДвиженийИсходная.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидДокумента = "РасходнаяНакладная" 
		ИЛИ ВидДокумента = "КорректировкаРеализации"
		ИЛИ ВидДокумента = "ПередачаТоваровМеждуФирмами"
		ИЛИ ВидДокумента = "Zотчет"
		Тогда
		
		ТаблицаДвиженийИсходная.Колонки.Удалить("Продукция");
		ТаблицаДвижений.Колонки.Удалить("Контрагент");
		ТаблицаДвижений.Колонки.Удалить("СтавкаНДС");
		ТаблицаДвижений.Колонки.Удалить("СуммаПродажи");
		ТаблицаДвижений.Колонки.Удалить("СуммаНДСПродажи");
		
	ИначеЕсли ВидДокумента = "Перемещение" 
		ИЛИ ВидДокумента = "КоррекцияЗапасов"
		ИЛИ ВидДокумента = "Комплектация"
		ИЛИ ВидДокумента = "ПриходнаяНакладнаяПеремещение"
		Тогда
		
		ТаблицаДвиженийИсходная.Колонки.Удалить("Продукция");
		
	ИначеЕсли ВидДокумента = "ВводОстатков" Тогда 
		
		ТаблицаДвиженийИсходная.Колонки.Удалить("Комитент");
		ТаблицаДвиженийИсходная.Колонки.Удалить("Продукция");
		
	ИначеЕсли ВидДокумента = "ГотоваяПродукцияПриготовление" Тогда
		
		ТаблицаДвиженийИсходная.Колонки.Удалить("Комитент");
		
	ИначеЕсли ВидДокумента = "Инвентаризация" Тогда
		
		ТаблицаДвиженийИсходная.Колонки.Удалить("Продукция");
		ТаблицаДвижений.Колонки.Удалить("СуммаПродажи");
		ТаблицаДвижений.Колонки.Удалить("СуммаНДСПродажи");
		
	ИначеЕсли ВидДокумента = "ВозвратнаяНакладнаяОтПокупателя" 
		ИЛИ  ВидДокумента = "ПриходнаяНакладнаяВозвратОтНашейФирмы"
		Тогда
		
		ТаблицаДвижений.Колонки.Удалить("МоментВремени");
		ТаблицаДвижений.Колонки.Удалить("НомерСтроки");
		ТаблицаДвижений.Колонки.Удалить("Контрагент");
		ТаблицаДвижений.Колонки.Удалить("СтавкаНДС");
		ТаблицаДвижений.Колонки.Удалить("СуммаПродажи");
		ТаблицаДвижений.Колонки.Удалить("СуммаНДСПродажи");
		
	ИначеЕсли ВидДокумента = "КорректировкаПоступления" 
		Тогда
		
		ТаблицаДвижений.Колонки.Удалить("Контрагент");
		ТаблицаДвиженийИсходная.Колонки.Удалить("Продукция");
		ТаблицаДвижений.Колонки.Удалить("СтоимостьУслуг");
		
	ИначеЕсли ВидДокумента = "ПриходнаяНакладнаяОтПоставщика" 
		Тогда
		
		ТаблицаДвижений.Колонки.Удалить("Контрагент");
		ТаблицаДвиженийИсходная.Колонки.Удалить("Продукция");
		ТаблицаДвижений.Колонки.Удалить("СтоимостьУслуг");
		ТаблицаДвижений.Колонки.Удалить("СтавкаНДС");
		
	ИначеЕсли ВидДокумента = "ПриходнаяНакладнаяОтНашейФирмы" 
		Тогда
		
		ТаблицаДвижений.Колонки.Удалить("Контрагент");
		ТаблицаДвиженийИсходная.Колонки.Удалить("Продукция");
		ТаблицаДвижений.Колонки.Удалить("СтавкаНДС");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДвиженияДокументаПоРегиструЗапросом(Объект, ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрОбороты.*
		|ИЗ
		|	РегистрНакопления."+ИмяРегистра+".Обороты(, , Регистратор, ) КАК РегистрОбороты
		|ГДЕ
		|	РегистрОбороты.Регистратор = &Регистратор";

	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции
//popn-

//dps+ 15.11.05 144216 восстановление алко последовательности
Процедура ВосстановлениеАлкогольнойПоследовательности() Экспорт                       
	Последовательности.АлкогольнаяПродукция.Восстановить();
КонецПроцедуры
//dps- 15.11.05 144216