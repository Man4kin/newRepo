
Процедура СформироватьРасходПоУчетуАлкоголя(Объект,КодОперации) Экспорт
	
	//{ СИТЕК БрыляковЕЮ 2015-05-08  
	Возврат;
	// СИТЕК БрыляковЕЮ 2015-05-08 }
	
	ЭтоКорректировкаРеализации = ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации");
	ЭтоГотоваяПродукция = ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ГотоваяПродукция");
	
	Если ЭтоКорректировкаРеализации Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	времТаблицаСостав.Номенклатура,
		|	времТаблицаСостав.Количество - времТаблицаСостав.КоличествоДоИзменения КАК Количество
		|ПОМЕСТИТЬ ВремТЗ
		|ИЗ
		|	&ТаблицаСостав КАК времТаблицаСостав
		|;
		|ВЫБРАТЬ ВремТЗ.*
		|ИЗ
		|	ВремТЗ КАК ВремТЗ");
		Запрос.УстановитьПараметр("ТаблицаСостав",Объект.Состав.Выгрузить(,"Номенклатура,Количество,КоличествоДоИзменения"));
		СоставДокумента = Запрос.Выполнить().Выгрузить();
	ИначеЕсли ЭтоГотоваяПродукция Тогда
		Если Объект.ВидПроизводства = Перечисления.ВидыПроизводства.Приготовление Тогда
			СоставДокумента = Объект.Состав;
		Иначе 
			СоставДокумента = Объект.Продукция;
		КонецЕсли;
	Иначе
		СоставДокумента = Объект.Состав;
	КонецЕсли;
	
	ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьСвернутуюТаблицуАлкоголя(СоставДокумента);
	
	ТаблицаАлкоголя.Колонки.Добавить("СтруктурнаяЕдиница",Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТаблицаАлкоголя.ЗаполнитьЗначения(Объект.СтруктурнаяЕдиница,"СтруктурнаяЕдиница");
	
	ТаблицаАлкоголя.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаАлкоголя.ЗаполнитьЗначения(Объект.Фирма,"Фирма");
	
	тзУчетАлкоголяПоПроизводителямИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"УчетАлкоголяПоПроизводителям");
	
	Объект.Движения.УчетАлкоголяПоПроизводителям.Очистить();
	тзУчетАлкоголяПоПроизводителям = Объект.Движения.УчетАлкоголяПоПроизводителям.Выгрузить();
	тзУчетАлкоголяПоПроизводителям.Колонки.Удалить("МоментВремени");
	тзУчетАлкоголяПоПроизводителям.Колонки.Удалить("НомерСтроки");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаАлкоголя.*
	|ПОМЕСТИТЬ времТаблицаАлкоголя
	|ИЗ
	|	&ТаблицаАлкоголя КАК времТаблицаАлкоголя
	|;
	|ВЫБРАТЬ 
	|	времТаблицаАлкоголя.Номенклатура,
	|	времТаблицаАлкоголя.Фирма,
	|	времТаблицаАлкоголя.СтруктурнаяЕдиница,
	|   времТаблицаАлкоголя.Количество,
	|	ЕСТЬNULL(ТабОбъемов.Значение, 0) КАК ОбъемШтуки,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ОстаткиАлкоголя.КоличествоОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ ОстаткиАлкоголя.КоличествоОстаток
	|		КОНЕЦ, 0) КАК КоличествоОстаток,
	|   ОстаткиАлкоголя.ВидАлкогольнойПродукции,
	|   ОстаткиАлкоголя.Производитель
	|ИЗ	
	|	времТаблицаАлкоголя КАК времТаблицаАлкоголя
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетАлкоголяПоПроизводителям.Остатки(
	|				&МоментВремени,
	|				(Фирма, СтруктурнаяЕдиница, Номенклатура) В
	|						(ВЫБРАТЬ
	|							с.Фирма,
	|							с.СтруктурнаяЕдиница,
	|							с.Номенклатура
	|						ИЗ
	|							времТаблицаАлкоголя КАК с
	|						ГДЕ
	|							с.Фирма = &Фирма)) КАК ОстаткиАлкоголя
	|		ПО времТаблицаАлкоголя.Номенклатура = ОстаткиАлкоголя.Номенклатура
	|	    И времТаблицаАлкоголя.СтруктурнаяЕдиница = ОстаткиАлкоголя.СтруктурнаяЕдиница
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|			МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение) КАК Значение
	|		ИЗ
	|			Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеЗначения КАК СлужебныеЗначения
	|				ПО (СлужебныеЗначения.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СлужебныеЗначения.КодРеквизитаЛитраж))
	|					И (СлужебныеЗначения.Значение = НоменклатураДополнительныеРеквизиты.Свойство.Код)
	|		ГДЕ
	|			НЕ СлужебныеЗначения.Значение ЕСТЬ NULL 
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НоменклатураДополнительныеРеквизиты.Ссылка) КАК ТабОбъемов
	|		ПО времТаблицаАлкоголя.Номенклатура = ТабОбъемов.Ссылка
	|ГДЕ
	|	времТаблицаАлкоголя.Фирма = &Фирма
	|УПОРЯДОЧИТЬ ПО
	|	Производитель
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(Производитель),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	времТаблицаАлкоголя.СтруктурнаяЕдиница,
	|	времТаблицаАлкоголя.Номенклатура");
	
	Запрос.УстановитьПараметр("ТаблицаАлкоголя",ТаблицаАлкоголя);
	Запрос.УстановитьПараметр("МоментВремени",Объект.МоментВремени());
	Запрос.УстановитьПараметр("Фирма",Объект.Фирма);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСтруктурнаяЕдиница = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтруктурнаяЕдиница.Следующий() Цикл
		
		ВыборкаНоменклатура = ВыборкаСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			чКолСписываем = ВыборкаНоменклатура.Количество;
			
			ВыборкаРегистраторДата = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаРегистраторДата.Следующий() Цикл
				Попытка
					ОбъемШтуки = Число(ВыборкаРегистраторДата.ОбъемШтуки.Наименование);
				Исключение
					ОбъемШтуки = 0;
				КонецПопытки;
				чКолТек = МИН(ВыборкаРегистраторДата.КоличествоОстаток,чКолСписываем);
				Если чКолТек > 0 Тогда
					Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
					Движение.ВидДвижения          = ВидДвиженияНакопления.Расход;
					Движение.Период               = Объект.Дата;
					Движение.Активность           = ИСТИНА;
					Движение.Регистратор          = Объект.Ссылка;
					Движение.Фирма                = Объект.Фирма;
					Движение.СтруктурнаяЕдиница        = ВыборкаРегистраторДата.СтруктурнаяЕдиница;
					Движение.Номенклатура         = ВыборкаРегистраторДата.Номенклатура;
					Движение.ВидАлкогольнойПродукции = ВыборкаРегистраторДата.ВидАлкогольнойПродукции;
					Движение.Производитель        = ВыборкаРегистраторДата.Производитель;
					Движение.Количество           = чКолТек;
					Движение.КоличествоДекалитров = чКолТек * ОбъемШтуки / 10;
					Движение.КодОперации          = КодОперации;
					
					Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.Перемещение") Тогда
						Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
						Движение.ВидДвижения          = ВидДвиженияНакопления.Приход;
						Движение.Период               = Объект.Дата;
						Движение.Активность           = ИСТИНА;
						Движение.Регистратор          = Объект.Ссылка;
						Движение.Фирма                = Объект.Фирма;
						Движение.СтруктурнаяЕдиница        = Объект.СтруктурнаяЕдиница;
						Движение.Номенклатура         = ВыборкаРегистраторДата.Номенклатура;
						Движение.ВидАлкогольнойПродукции = ВыборкаРегистраторДата.ВидАлкогольнойПродукции;
						Движение.Производитель        = ВыборкаРегистраторДата.Производитель;
						Движение.Количество           = чКолТек;
						Движение.КоличествоДекалитров = чКолТек * ОбъемШтуки / 10;
						Движение.КодОперации          = Перечисления.КодыОпераций.ПеремещениеПриход;
					ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПередачаТоваровМеждуФирмами") Тогда
						Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
						Движение.ВидДвижения          = ВидДвиженияНакопления.Приход;
						Движение.Период               = Объект.Дата;
						Движение.Активность           = ИСТИНА;
						Движение.Регистратор          = Объект.Ссылка;
						Движение.Фирма                = Объект.ФирмаПолучатель;
						Движение.СтруктурнаяЕдиница   = Объект.СтруктурнаяЕдиница;
						Движение.Номенклатура         = ВыборкаРегистраторДата.Номенклатура;
						Движение.ВидАлкогольнойПродукции = ВыборкаРегистраторДата.ВидАлкогольнойПродукции;
						Движение.Производитель        = ВыборкаРегистраторДата.Производитель;
						Движение.Количество           = чКолТек;
						Движение.КоличествоДекалитров = чКолТек * ОбъемШтуки / 10;
						Движение.КодОперации          = Перечисления.КодыОпераций.ПерепродажаПоступлениеТоваров;
					КонецЕсли;
					
				ИначеЕсли чКолТек < 0 И ЭтоКорректировкаРеализации Тогда
					
					ЗапросСторноРеализации = Новый Запрос;
					ЗапросСторноРеализации.Текст =
					"ВЫБРАТЬ
					|	УчетАлкоголяПоПроизводителям.Номенклатура,
					|	УчетАлкоголяПоПроизводителям.СтруктурнаяЕдиница,
					|	УчетАлкоголяПоПроизводителям.ВидАлкогольнойПродукции,
					|	УчетАлкоголяПоПроизводителям.Производитель,
					|	СУММА(УчетАлкоголяПоПроизводителям.Количество) КАК Количество
					|ИЗ
					|	РегистрНакопления.УчетАлкоголяПоПроизводителям КАК УчетАлкоголяПоПроизводителям
					|ГДЕ
					|	(УчетАлкоголяПоПроизводителям.Регистратор = &Документ)
					|
					|СГРУППИРОВАТЬ ПО
					|	УчетАлкоголяПоПроизводителям.Номенклатура,
					|	УчетАлкоголяПоПроизводителям.СтруктурнаяЕдиница,
					|	УчетАлкоголяПоПроизводителям.ВидАлкогольнойПродукции,
					|	УчетАлкоголяПоПроизводителям.Производитель";
					ЗапросСторноРеализации.УстановитьПараметр("Документ",Объект.ДокументРеализации);
					ВыборкаСторноРеализации = ЗапросСторноРеализации.Выполнить().Выбрать();
					
					чКолНадоСторнировать = -чКолТек;
					
					Пока ВыборкаСторноРеализации.Следующий() Цикл
						
						чКолМожноСторнировать = ВыборкаСторноРеализации.Количество;
						чКолСторно = МИН(чКолНадоСторнировать, чКолМожноСторнировать);
						
						Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
						Движение.ВидДвижения          = ВидДвиженияНакопления.Расход;
						Движение.Активность           = ИСТИНА;
						Движение.Период               = Объект.Дата;
						Движение.Регистратор          = Объект.Ссылка;
						Движение.Фирма                = Объект.Фирма;
						Движение.СтруктурнаяЕдиница   = ВыборкаСторноРеализации.СтруктурнаяЕдиница;
						Движение.Номенклатура         = ВыборкаСторноРеализации.Номенклатура;
						Движение.ВидАлкогольнойПродукции = ВыборкаСторноРеализации.ВидАлкогольнойПродукции;
						Движение.Производитель        = ВыборкаСторноРеализации.Производитель;
						Движение.Количество           = -чКолСторно;
						Движение.КоличествоДекалитров = -чКолСторно * ОбъемШтуки / 10;
						Движение.КодОперации          = КодОперации;
						
						чКолНадоСторнировать = чКолНадоСторнировать - чКолСторно;
						
						Если чКолНадоСторнировать = 0 Тогда
							Прервать;
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли; 
				чКолСписываем = чКолСписываем - чКолТек;
				Если чКолСписываем = 0 Тогда
					//все списали
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			
			Если чКолСписываем <> 0 Тогда
				Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
				Движение.ВидДвижения          = ВидДвиженияНакопления.Расход;
				Движение.Период               = Объект.Дата;
				Движение.Активность           = ИСТИНА;
				Движение.Регистратор          = Объект.Ссылка;
				Движение.Фирма                = Объект.Фирма;
				Движение.СтруктурнаяЕдиница   = ВыборкаНоменклатура.СтруктурнаяЕдиница;
				Движение.Номенклатура         = ВыборкаНоменклатура.Номенклатура;
				Движение.ВидАлкогольнойПродукции = ОсновнойВидАлкогольнойПродукции(ВыборкаНоменклатура.Номенклатура);
				Движение.Производитель        = ОсновнойПроизводительАлкогольнойПродукции(ВыборкаНоменклатура.Номенклатура);
				Движение.Количество           = чКолСписываем;
				Движение.КоличествоДекалитров = чКолСписываем * ОбъемШтуки / 10;
				Движение.КодОперации          = КодОперации;
				
				Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.Перемещение") Тогда
					Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
					Движение.ВидДвижения          = ВидДвиженияНакопления.Приход;
					Движение.Период               = Объект.Дата;
					Движение.Активность           = ИСТИНА;
					Движение.Регистратор          = Объект.Ссылка;
					Движение.Фирма                = Объект.Фирма;
					Движение.СтруктурнаяЕдиница   = Объект.СтруктурнаяЕдиница;
					Движение.Номенклатура         = ВыборкаНоменклатура.Номенклатура;
					Движение.ВидАлкогольнойПродукции = ОсновнойВидАлкогольнойПродукции(ВыборкаНоменклатура.Номенклатура);
					Движение.Производитель        = ОсновнойПроизводительАлкогольнойПродукции(ВыборкаНоменклатура.Номенклатура);
					Движение.Количество           = чКолСписываем;
					Движение.КоличествоДекалитров = чКолСписываем * ОбъемШтуки / 10;
					Движение.КодОперации          = Перечисления.КодыОпераций.ПеремещениеПриход;
				ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПередачаТоваровМеждуФирмами") Тогда
					Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
					Движение.ВидДвижения          = ВидДвиженияНакопления.Приход;
					Движение.Период               = Объект.Дата;
					Движение.Активность           = ИСТИНА;
					Движение.Регистратор          = Объект.Ссылка;
					Движение.Фирма                = Объект.ФирмаПолучатель;
					Движение.СтруктурнаяЕдиница   = Объект.СтруктурнаяЕдиница;
					Движение.Номенклатура         = ВыборкаНоменклатура.Номенклатура;
					Движение.ВидАлкогольнойПродукции = ОсновнойВидАлкогольнойПродукции(ВыборкаНоменклатура.Номенклатура);
					Движение.Производитель        = ОсновнойПроизводительАлкогольнойПродукции(ВыборкаНоменклатура.Номенклатура);
					Движение.Количество           = чКолСписываем;
					Движение.КоличествоДекалитров = чКолСписываем * ОбъемШтуки / 10;
					Движение.КодОперации          = Перечисления.КодыОпераций.ПерепродажаПоступлениеТоваров;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если ЭтоГотоваяПродукция Тогда
		Если Объект.ВидПроизводства = Перечисления.ВидыПроизводства.Приготовление Тогда
			СоставДокументаПриход = Объект.Продукция;
		Иначе 
			СоставДокументаПриход = Объект.Состав;
		КонецЕсли;
		
		ТаблицаАлкоголяПриход = УчетАлкогольнойПродукции.ВернутьСвернутуюТаблицуАлкоголя(СоставДокументаПриход);
		
		Для Каждого СтрокаТаблицыАлкоголяПриход Из ТаблицаАлкоголяПриход Цикл
			Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
			Движение.ВидДвижения          = ВидДвиженияНакопления.Приход;
			Движение.Период               = Объект.Дата;
			Движение.Активность           = ИСТИНА;
			Движение.Регистратор          = Объект.Ссылка;
			Движение.Фирма                = Объект.Фирма;
			Движение.СтруктурнаяЕдиница   = Объект.СтруктурнаяЕдиница;
			Движение.Номенклатура         = СтрокаТаблицыАлкоголяПриход.Номенклатура;
			Движение.ВидАлкогольнойПродукции = ОсновнойВидАлкогольнойПродукции(СтрокаТаблицыАлкоголяПриход.Номенклатура); 
			Движение.Производитель        = ОсновнойПроизводительАлкогольнойПродукции(СтрокаТаблицыАлкоголяПриход.Номенклатура);
			Движение.Количество           = СтрокаТаблицыАлкоголяПриход.Количество;
			ОбъемШтуки = ОбъемАлкогольнойПродукции(СтрокаТаблицыАлкоголяПриход.Номенклатура);
			Движение.КоличествоДекалитров = СтрокаТаблицыАлкоголяПриход.Количество * ОбъемШтуки / 10;
			Движение.КодОперации          = Перечисления.КодыОпераций.ПередачаИзПроизводства;
		КонецЦикла;
	КонецЕсли;
	
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзУчетАлкоголяПоПроизводителям,тзУчетАлкоголяПоПроизводителямИсходная);
	
	Объект.Движения.УчетАлкоголяПоПроизводителям.Загрузить(тзУчетАлкоголяПоПроизводителям);
	Объект.Движения.УчетАлкоголяПоПроизводителям.Записывать = НЕ НеБылоИзменений;
	
КонецПроцедуры

Процедура ОчиститьДвиженияПоУчетуАлкоголя(Объект) Экспорт
	
	Объект.Движения.УчетАлкоголяПоПроизводителям.Очистить();
	Объект.Движения.УчетАлкоголяПоПроизводителям.Записывать = ИСТИНА;
	
КонецПроцедуры

Функция ПровестиПриложениеПоАлкоголюПриход(Объект,Режим) Экспорт
	
	флВозврата = Ложь;
	
	Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ВводОстатков") Тогда
		Если Объект.ДокОснование.ТипОстатков = Перечисления.ТипыОстатков.КупленныеТовары Тогда
			ТабличнаяЧастьСостав = Объект.ДокОснование.КупленныеТовары;
		ИначеЕсли Объект.ДокОснование.ТипОстатков = Перечисления.ТипыОстатков.КомиссионныеТовары Тогда
			ТабличнаяЧастьСостав = Объект.ДокОснование.КомиссионныеТовары;
		ИначеЕсли Объект.ДокОснование.ТипОстатков = Перечисления.ТипыОстатков.ХранимыеТовары Тогда
			ТабличнаяЧастьСостав = Объект.ДокОснование.ХранимыеТовары;
		КонецЕсли;
	Иначе
		ТабличнаяЧастьСостав = Объект.ДокОснование.Состав;
	КонецЕсли;
	
	Если НЕ (ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.КорректировкаПоступления")
		ИЛИ ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.КорректировкаРеализации")) 
		Тогда
		ТаблицаАлкоголяДокумента          = ВернутьСвернутуюТаблицуАлкоголя(Объект.Состав);
		ТаблицаАлкоголяДокументаОснования = ВернутьСвернутуюТаблицуАлкоголя(ТабличнаяЧастьСостав);
		ТаблицаРасхожденийТаблицАлкоголя = ВернутьТаблицуРасхожденийТаблицАлкоголя(ТаблицаАлкоголяДокумента,ТаблицаАлкоголяДокументаОснования);
		Для Каждого СтрокаТаблицыРасхожденийТаблицАлкоголя Из ТаблицаРасхожденийТаблицАлкоголя Цикл
			Если СтрокаТаблицыРасхожденийТаблицАлкоголя.Количество <> 0 Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Количество номенклатуры %1 не соответствует количеству в документе %2'"),
				СтрокаТаблицыРасхожденийТаблицАлкоголя.Номенклатура,
				Объект.ДокОснование);
				Сообщить(ТекстСообщения);
				флВозврата = ИСТИНА;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		ТекущийКодОперации = Перечисления.КодыОпераций.ПоступлениеТоваров;
	ИначеЕсли ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.КоррекцияЗапасов") Тогда
		ТекущийКодОперации = Перечисления.КодыОпераций.ОприходованиеИзлишков;
	ИначеЕсли ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		ТекущийКодОперации = Перечисления.КодыОпераций.КорректировкаПоступления;
	ИначеЕсли ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ВозвратнаяНакладнаяОтПокупателя") Тогда
		ТекущийКодОперации = Перечисления.КодыОпераций.ВозвратОтПокупателя;
	ИначеЕсли ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ВводОстатков") Тогда
		ТекущийКодОперации = Перечисления.КодыОпераций.ВводОстатков;
	КонецЕсли;	
	
	тзУчетАлкоголяПоПроизводителямИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"УчетАлкоголяПоПроизводителям");
	
	Объект.Движения.УчетАлкоголяПоПроизводителям.Очистить();
	
	Запрос=Новый Запрос();
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ПриложениеПоАлкоголюСостав.Ссылка КАК Регистратор,
	|	ПриложениеПоАлкоголюСостав.Ссылка.Дата КАК Период,
	|	&ВидДвиженияПриход КАК ВидДвижения,
	|	ПриложениеПоАлкоголюСостав.Номенклатура,
	|	ПриложениеПоАлкоголюСостав.ВидАлкогольнойПродукции,
	|	ПриложениеПоАлкоголюСостав.Производитель,
	|	ИСТИНА КАК Активность,
	|	ПриложениеПоАлкоголюСостав.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПриложениеПоАлкоголюСостав.Ссылка.Фирма КАК Фирма,
	|	&КодОперации КАК КодОперации,
	|	СУММА(ВЫРАЗИТЬ(ПриложениеПоАлкоголюСостав.Количество * ПриложениеПоАлкоголюСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	|	ЕСТЬNULL(ТабОбъемов.Значение, 0) КАК ОбъемШтуки
	|ИЗ
	|	Документ.ПриложениеПоАлкоголю.Состав КАК ПриложениеПоАлкоголюСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|			МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение) КАК Значение
	|		ИЗ
	|			Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеЗначения КАК СлужебныеЗначения
	|				ПО (СлужебныеЗначения.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СлужебныеЗначения.КодРеквизитаЛитраж))
	|					И (СлужебныеЗначения.Значение = НоменклатураДополнительныеРеквизиты.Свойство.Код)
	|		ГДЕ
	|			НЕ СлужебныеЗначения.Значение ЕСТЬ NULL 
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НоменклатураДополнительныеРеквизиты.Ссылка) КАК ТабОбъемов
	|		ПО ПриложениеПоАлкоголюСостав.Номенклатура = ТабОбъемов.Ссылка
	|ГДЕ
	|	ПриложениеПоАлкоголюСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриложениеПоАлкоголюСостав.Ссылка,
	|	ПриложениеПоАлкоголюСостав.Ссылка.Дата,
	|	ПриложениеПоАлкоголюСостав.Номенклатура,
	|	ПриложениеПоАлкоголюСостав.ВидАлкогольнойПродукции,
	|	ПриложениеПоАлкоголюСостав.Производитель,
	|	ПриложениеПоАлкоголюСостав.Ссылка.СтруктурнаяЕдиница,
	|	ПриложениеПоАлкоголюСостав.Ссылка.Фирма,
	|	ТабОбъемов.Значение";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("КодОперации",ТекущийКодОперации);
	
	//тзУчетАлкоголяПоПроизводителям=Запрос.Выполнить().Выгрузить();
	тзУчетАлкоголяПоПроизводителям = Объект.Движения.УчетАлкоголяПоПроизводителям.Выгрузить();
 	тзУчетАлкоголяПоПроизводителям.Очистить();
	
	ВыборкаУчетАлкоголяПоПроизводителям = Запрос.Выполнить().Выбрать();
	Пока ВыборкаУчетАлкоголяПоПроизводителям.Следующий() Цикл
		НоваяСтрокатзУчетАлкоголяПоПроизводителям = тзУчетАлкоголяПоПроизводителям.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокатзУчетАлкоголяПоПроизводителям,ВыборкаУчетАлкоголяПоПроизводителям);
		Попытка
			ОбъемШтуки = Число(ВыборкаУчетАлкоголяПоПроизводителям.ОбъемШтуки.Наименование);
		Исключение
			ОбъемШтуки = 0;
		КонецПопытки;
		НоваяСтрокатзУчетАлкоголяПоПроизводителям.КоличествоДекалитров = ВыборкаУчетАлкоголяПоПроизводителям.Количество * ОбъемШтуки / 10;
	КонецЦикла;
	
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзУчетАлкоголяПоПроизводителям,тзУчетАлкоголяПоПроизводителямИсходная);
	
	Объект.Движения.УчетАлкоголяПоПроизводителям.Загрузить(тзУчетАлкоголяПоПроизводителям);
	Объект.Движения.УчетАлкоголяПоПроизводителям.Записывать=НЕ НеБылоИзменений;
	
	Возврат флВозврата;
	
КонецФункции

Функция ПровестиПриложениеПоАлкоголюРасход(Объект,Режим) Экспорт
	
	флВозврата = Ложь;
	
	ТабличнаяЧастьСостав = Объект.ДокОснование.Состав;
	
	Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.РасходнаяНакладная")
		ИЛИ (ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.КоррекцияЗапасов") И НЕ Объект.ДокОснование.Оприходование) Тогда
		ТаблицаАлкоголяДокумента          = ВернутьСвернутуюТаблицуАлкоголя(Объект.Состав);
		ТаблицаАлкоголяДокументаОснования = ВернутьСвернутуюТаблицуАлкоголя(ТабличнаяЧастьСостав);
		ТаблицаРасхожденийТаблицАлкоголя = ВернутьТаблицуРасхожденийТаблицАлкоголя(ТаблицаАлкоголяДокумента,ТаблицаАлкоголяДокументаОснования);
		Для Каждого СтрокаТаблицыРасхожденийТаблицАлкоголя Из ТаблицаРасхожденийТаблицАлкоголя Цикл
			Если СтрокаТаблицыРасхожденийТаблицАлкоголя.Количество <> 0 Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Количество номенклатуры %1 не соответствует количеству в документе %2'"),
				СтрокаТаблицыРасхожденийТаблицАлкоголя.Номенклатура,
				Объект.ДокОснование);
				Сообщить(ТекстСообщения);
				флВозврата = ИСТИНА;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		
		Если ТипЗнч(Объект.ДокОснование.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда 
			Если ЗначениеЗаполнено(Объект.ДокОснование.Контрагент.Организация) Тогда
				Если Объект.ДокОснование.Контрагент.Организация = Объект.Фирма Тогда
					флПеремещения = ИСТИНА;
					флПерепродажи = ЛОЖЬ;
				Иначе
					флПеремещения = ЛОЖЬ;
					флПерепродажи = ИСТИНА;
				КонецЕсли;
			Иначе
				флПеремещения = ИСТИНА;
				флПерепродажи = ЛОЖЬ;
			КонецЕсли;
		Иначе
			флПеремещения = ЛОЖЬ;
			флПерепродажи = ЛОЖЬ;
		КонецЕсли;
		
		Если флПеремещения Тогда
			КодОперации = Перечисления.КодыОпераций.ПеремещениеРасход;
		Иначе
			Если Объект.ДокОснование.Возврат Тогда
				КодОперации = Перечисления.КодыОпераций.ВозвратПоставщику;
			Иначе
				Если Объект.ДокОснование.ТипДоговора = Перечисления.ТипыДоговоров.Комиссия Тогда
					КодОперации = ?(флПерепродажи,Перечисления.КодыОпераций.ПерепродажаПередачаНаРеализацию,Перечисления.КодыОпераций.ПередачаНаРеализацию);
				Иначе
					КодОперации = ?(флПерепродажи,Перечисления.КодыОпераций.ПерепродажаПродажаОпт,Перечисления.КодыОпераций.ПродажаОпт);
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		ИсходныйДокументРеализации = УчетНДС.ПолучитьИсправляемыйДокументРеализации(Объект.ДокОснование.ДокументРеализации, Истина);
		
		Если ТипЗнч(ИсходныйДокументРеализации.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда 
			Если ЗначениеЗаполнено(ИсходныйДокументРеализации.Контрагент.Организация) Тогда
				Если ИсходныйДокументРеализации.Контрагент.Организация = ИсходныйДокументРеализации.Фирма Тогда
					флПеремещения = ИСТИНА;
					флПерепродажи = ЛОЖЬ;
				Иначе
					флПеремещения = ЛОЖЬ;
					флПерепродажи = ИСТИНА;
				КонецЕсли;
			Иначе
				флПеремещения = ИСТИНА;
				флПерепродажи = ЛОЖЬ;
			КонецЕсли;
		Иначе
			флПеремещения = ЛОЖЬ;
			флПерепродажи = ЛОЖЬ;
		КонецЕсли;
		
		прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
		прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;
		
		Если флПеремещения Тогда
			КодОперации = Перечисления.КодыОпераций.ПеремещениеРасход;
		Иначе
			Если ИсходныйДокументРеализации.Возврат Тогда
				КодОперации = Перечисления.КодыОпераций.ВозвратПоставщику;
			Иначе
				Если ИсходныйДокументРеализации.ТипДоговора = прчКомиссия Тогда
					КодОперации = ?(флПерепродажи,Перечисления.КодыОпераций.ПерепродажаПередачаНаРеализацию,Перечисления.КодыОпераций.ПередачаНаРеализацию);
				Иначе
					КодОперации = ?(флПерепродажи,Перечисления.КодыОпераций.ПерепродажаПродажаОпт,Перечисления.КодыОпераций.ПродажаОпт);
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		
	ИначеЕсли ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.КоррекцияЗапасов") Тогда
		
		КодОперации = Перечисления.КодыОпераций.Списание;
		
	КонецЕсли;	
	//новый блок
	тзУчетАлкоголяПоПроизводителямИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"УчетАлкоголяПоПроизводителям");
	Объект.Движения.УчетАлкоголяПоПроизводителям.Очистить();
	
	тзУчетАлкоголяПоПроизводителям = Объект.Движения.УчетАлкоголяПоПроизводителям.Выгрузить();
	
	ТаблицаАлкоголя = УчетАлкогольнойПродукции.ВернутьСвернутуюТаблицуАлкоголяСПроизводителями(Объект.Состав);
	ТаблицаАлкоголя.Колонки.Добавить("СтруктурнаяЕдиница",Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
 	ТаблицаАлкоголя.ЗаполнитьЗначения(Объект.СтруктурнаяЕдиница,"СтруктурнаяЕдиница");
	ТаблицаАлкоголя.Колонки.Добавить("Фирма",Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаАлкоголя.ЗаполнитьЗначения(Объект.Фирма,"Фирма");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаАлкоголя.*
	|ПОМЕСТИТЬ времТаблицаАлкоголя
	|ИЗ
	|	&ТаблицаАлкоголя КАК времТаблицаАлкоголя
	|;
	|ВЫБРАТЬ 
	|	времТаблицаАлкоголя.Номенклатура,
	|	времТаблицаАлкоголя.Фирма,
	|	времТаблицаАлкоголя.СтруктурнаяЕдиница,
	|   времТаблицаАлкоголя.Количество,
	|	ЕСТЬNULL(ТабОбъемов.Значение, 0) КАК ОбъемШтуки,
	|   времТаблицаАлкоголя.Производитель,
	|   времТаблицаАлкоголя.ВидАлкогольнойПродукции,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ОстаткиАлкоголя.КоличествоОстаток < 0
	|				ТОГДА 0
	|			ИНАЧЕ ОстаткиАлкоголя.КоличествоОстаток
	|		КОНЕЦ, 0) КАК КоличествоОстаток
	|ИЗ	
	|	времТаблицаАлкоголя КАК времТаблицаАлкоголя
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетАлкоголяПоПроизводителям.Остатки(
	|				&МоментВремени,
	|				(Фирма, СтруктурнаяЕдиница, Номенклатура, Производитель, ВидАлкогольнойПродукции) В
	|						(ВЫБРАТЬ
	|							с.Фирма,
	|							с.СтруктурнаяЕдиница,
	|							с.Номенклатура,
	|							с.Производитель,
	|							с.ВидАлкогольнойПродукции
	|						ИЗ
	|							времТаблицаАлкоголя КАК с
	|						ГДЕ
	|							с.Фирма = &Фирма)) КАК ОстаткиАлкоголя
	|		ПО времТаблицаАлкоголя.Номенклатура = ОстаткиАлкоголя.Номенклатура
	|	    И времТаблицаАлкоголя.СтруктурнаяЕдиница = ОстаткиАлкоголя.СтруктурнаяЕдиница
	|	    И времТаблицаАлкоголя.Производитель = ОстаткиАлкоголя.Производитель
	|	    И времТаблицаАлкоголя.ВидАлкогольнойПродукции = ОстаткиАлкоголя.ВидАлкогольнойПродукции
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|			МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение) КАК Значение
	|		ИЗ
	|			Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеЗначения КАК СлужебныеЗначения
	|				ПО (СлужебныеЗначения.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СлужебныеЗначения.КодРеквизитаЛитраж))
	|					И (СлужебныеЗначения.Значение = НоменклатураДополнительныеРеквизиты.Свойство.Код)
	|		ГДЕ
	|			НЕ СлужебныеЗначения.Значение ЕСТЬ NULL 
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НоменклатураДополнительныеРеквизиты.Ссылка) КАК ТабОбъемов
	|		ПО времТаблицаАлкоголя.Номенклатура = ТабОбъемов.Ссылка
	|ГДЕ
	|	времТаблицаАлкоголя.Фирма = &Фирма
	|ИТОГИ
	|	СУММА(Количество),
	|	МАКСИМУМ(времТаблицаАлкоголя.Производитель),
	|	МАКСИМУМ(времТаблицаАлкоголя.ВидАлкогольнойПродукции),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	времТаблицаАлкоголя.СтруктурнаяЕдиница,
	|	времТаблицаАлкоголя.Номенклатура");
	
	Запрос.УстановитьПараметр("ТаблицаАлкоголя",ТаблицаАлкоголя);
	Запрос.УстановитьПараметр("МоментВремени",Объект.МоментВремени());
	Запрос.УстановитьПараметр("Фирма",Объект.Фирма);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТекстОшибкиПроведения = "";
	флПревышениеОстатка = ЛОЖЬ;
	
	ВыборкаСтруктурнаяЕдиница = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтруктурнаяЕдиница.Следующий() Цикл
		ТекстОшибкиПроведения = ТекстОшибкиПроведения 
		+"Учет алкоголя по производителям. Недостаточно остатка по структурной единице"""+ВыборкаСтруктурнаяЕдиница.СтруктурнаяЕдиница+""" по:";
		ВыборкаНоменклатура = ВыборкаСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл
			ВыборкаРегистраторДата = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаРегистраторДата.Следующий() Цикл
				КолСписать = ВыборкаРегистраторДата.Количество;
				КолОстаток = ВыборкаРегистраторДата.КоличествоОстаток;
				Если КолСписать <= КолОстаток Тогда
					Движение = тзУчетАлкоголяПоПроизводителям.Добавить();
					Движение.ВидДвижения          = ВидДвиженияНакопления.Расход;
					Движение.Период               = Объект.Дата;
					Движение.Активность           = ИСТИНА;
					Движение.Регистратор          = Объект.Ссылка;
					Движение.Фирма                = Объект.Фирма;
					Движение.СтруктурнаяЕдиница   = ВыборкаРегистраторДата.СтруктурнаяЕдиница;
					Движение.Номенклатура         = ВыборкаРегистраторДата.Номенклатура;
					Движение.ВидАлкогольнойПродукции = ВыборкаРегистраторДата.ВидАлкогольнойПродукции;
					Движение.Производитель        = ВыборкаРегистраторДата.Производитель;
					Движение.Количество           = КолСписать;
					Попытка
						ОбъемШтуки = Число(ВыборкаРегистраторДата.ОбъемШтуки.Наименование);
					Исключение
						ОбъемШтуки = 0;
					КонецПопытки;
					Движение.КоличествоДекалитров = ВыборкаРегистраторДата.Количество * ОбъемШтуки / 10;
					Движение.КодОперации          = КодОперации;
				Иначе
					ТекстОшибкиПроведения = ТекстОшибкиПроведения 
					+Символы.ПС+""""+ВыборкаНоменклатура.Номенклатура+""""+"(Код:"+СокрЛП(ВыборкаНоменклатура.Номенклатура.Код)+")"
					+Символы.ПС+"Производитель: "+СокрЛП(ВыборкаНоменклатура.Производитель)
					+Символы.ПС+"Вид алкогольной продукции: "+СокрЛП(ВыборкаНоменклатура.ВидАлкогольнойПродукции)
					+Символы.ПС+"   По документу: "+Формат(КолСписать,"ЧЦ=15; ЧДЦ=3; ЧН=")
					+Символы.ПС+"   На остатке: "+Формат(КолОстаток,"ЧЦ=15; ЧДЦ=3; ЧН=")
					+Символы.ПС+"   Не хватает: "+Формат(КолСписать - КолОстаток,"ЧЦ=15; ЧДЦ=3");
					флВозврата = ИСТИНА;
					флПревышениеОстатка = ИСТИНА;
				КонецЕсли; 
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если флПревышениеОстатка Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиПроведения,Объект.Ссылка);
	КонецЕсли;
	
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзУчетАлкоголяПоПроизводителям,тзУчетАлкоголяПоПроизводителямИсходная);
	
	Объект.Движения.УчетАлкоголяПоПроизводителям.Загрузить(тзУчетАлкоголяПоПроизводителям);
	Объект.Движения.УчетАлкоголяПоПроизводителям.Записывать = НЕ НеБылоИзменений;
	
	Возврат флВозврата;
	
КонецФункции

Функция ПроверитьКорректностьИнвентаризацииПоАлкоголю(Объект) 
	
	Запрос=Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияПоАлкоголюСостав.Номенклатура,
	|	ИнвентаризацияПоАлкоголюСостав.Количество КАК КоличествоИтого,
	|	ЕСТЬNULL(Производители.Количество,0) КАК КоличествоПоПроизводителямИтого
	|ИЗ
	|	Документ.ИнвентаризацияПоАлкоголю.Состав КАК ИнвентаризацияПоАлкоголюСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИнвентаризацияПоАлкоголюСоставПоПроизводителям.Номенклатура КАК Номенклатура,
	|			СУММА(ИнвентаризацияПоАлкоголюСоставПоПроизводителям.Количество) КАК Количество
	|		ИЗ
	|			Документ.ИнвентаризацияПоАлкоголю.СоставПоПроизводителям КАК ИнвентаризацияПоАлкоголюСоставПоПроизводителям
	|		ГДЕ
	|			ИнвентаризацияПоАлкоголюСоставПоПроизводителям.Ссылка = &Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИнвентаризацияПоАлкоголюСоставПоПроизводителям.Номенклатура) КАК Производители
	|		ПО (Производители.Номенклатура = ИнвентаризацияПоАлкоголюСостав.Номенклатура)
	|ГДЕ
	|	ИнвентаризацияПоАлкоголюСостав.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	БылаОшибка = ЛОЖЬ;
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоИтого <> Выборка.КоличествоПоПроизводителямИтого Тогда
			Текст = "Количество номенклатуры "+Строка(Выборка.Номенклатура)+" в табличной части ""Состав"" (" + Строка(Выборка.КоличествоИтого) + ") не равно количеству в табличной части ""Состав по производителям"" (" + Строка(Выборка.КоличествоПоПроизводителямИтого)+")";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Объект.Ссылка);
            БылаОшибка = ИСТИНА;
		КонецЕсли;
	КонецЦикла;
	
	Возврат БылаОшибка;
	
КонецФункции

Функция ПровестиИнвентаризациюПоАлкоголю(Объект,Режим) Экспорт
	
	флВозврата = ПроверитьКорректностьИнвентаризацииПоАлкоголю(Объект);

	тзУчетАлкоголяПоПроизводителямИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"УчетАлкоголяПоПроизводителям");
	Объект.Движения.УчетАлкоголяПоПроизводителям.Очистить();
	
	Запрос=Новый Запрос();
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ИнвентаризацияСостав.Ссылка КАК Регистратор,
	|	ИСТИНА КАК Активность,
	|	ИнвентаризацияСостав.Ссылка.Дата КАК Период,
	|	&ВидДвиженияПриход КАК ВидДвижения,
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ИнвентаризацияСостав.Ссылка.Фирма КАК Фирма,
	|	ИнвентаризацияСостав.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции,
	|	ИнвентаризацияСостав.Производитель КАК Производитель,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ОприходованиеИзлишков) КАК КодОперации,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	СУММА(ИнвентаризацияСостав.Количество - ИнвентаризацияСостав.КоличествоУчет) КАК Количество,
	|	ЕСТЬNULL(ТабОбъемов.Значение, 0) КАК ОбъемШтуки
	|ИЗ
	|	Документ.ИнвентаризацияПоАлкоголю.СоставПоПроизводителям КАК ИнвентаризацияСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|			МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение) КАК Значение
	|		ИЗ
	|			Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеЗначения КАК СлужебныеЗначения
	|				ПО (СлужебныеЗначения.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СлужебныеЗначения.КодРеквизитаЛитраж))
	|					И (СлужебныеЗначения.Значение = НоменклатураДополнительныеРеквизиты.Свойство.Код)
	|		ГДЕ
	|			НЕ СлужебныеЗначения.Значение ЕСТЬ NULL 
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НоменклатураДополнительныеРеквизиты.Ссылка) КАК ТабОбъемов
	|		ПО ИнвентаризацияСостав.Номенклатура = ТабОбъемов.Ссылка
	|ГДЕ
	|	ИнвентаризацияСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияСостав.Ссылка,
	|	ИнвентаризацияСостав.Ссылка.Дата,
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.ВидАлкогольнойПродукции,
	|	ИнвентаризацияСостав.Производитель,
	|	ИнвентаризацияСостав.Ссылка.СтруктурнаяЕдиница,
	|	ИнвентаризацияСостав.Ссылка.Фирма,
	|   ТабОбъемов.Значение
	|
	|ИМЕЮЩИЕ
	|	СУММА(ИнвентаризацияСостав.Количество - ИнвентаризацияСостав.КоличествоУчет) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИнвентаризацияСостав.Ссылка,
	|	ИСТИНА,
	|	ИнвентаризацияСостав.Ссылка.Дата,
	|	&ВидДвиженияРасход,
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.Ссылка.СтруктурнаяЕдиница,
	|	ИнвентаризацияСостав.Ссылка.Фирма,
	|	ИнвентаризацияСостав.ВидАлкогольнойПродукции,
	|	ИнвентаризацияСостав.Производитель,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.Инвентаризация),
	|	НЕОПРЕДЕЛЕНО,
	|	СУММА(ИнвентаризацияСостав.КоличествоУчет - ИнвентаризацияСостав.Количество),
	|	ЕСТЬNULL(ТабОбъемов.Значение, 0) КАК ОбъемШтуки
	|ИЗ
	|	Документ.ИнвентаризацияПоАлкоголю.СоставПоПроизводителям КАК ИнвентаризацияСостав
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|			МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение) КАК Значение
	|		ИЗ
	|			Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеЗначения КАК СлужебныеЗначения
	|				ПО (СлужебныеЗначения.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СлужебныеЗначения.КодРеквизитаЛитраж))
	|					И (СлужебныеЗначения.Значение = НоменклатураДополнительныеРеквизиты.Свойство.Код)
	|		ГДЕ
	|			НЕ СлужебныеЗначения.Значение ЕСТЬ NULL 
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НоменклатураДополнительныеРеквизиты.Ссылка) КАК ТабОбъемов
	|		ПО ИнвентаризацияСостав.Номенклатура = ТабОбъемов.Ссылка
	|ГДЕ
	|	ИнвентаризацияСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияСостав.Ссылка,
	|	ИнвентаризацияСостав.Ссылка.Дата,
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.ВидАлкогольнойПродукции,
	|	ИнвентаризацияСостав.Производитель,
	|	ИнвентаризацияСостав.Ссылка.СтруктурнаяЕдиница,
	|	ИнвентаризацияСостав.Ссылка.Фирма,
	|   ТабОбъемов.Значение
	|
	|ИМЕЮЩИЕ
	|	СУММА(ИнвентаризацияСостав.Количество - ИнвентаризацияСостав.КоличествоУчет) < 0";

	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ВидДвиженияРасход",ВидДвиженияНакопления.Расход);
	
	//тзУчетАлкоголяПоПроизводителям=Запрос.Выполнить().Выгрузить();
	тзУчетАлкоголяПоПроизводителям = Объект.Движения.УчетАлкоголяПоПроизводителям.Выгрузить();
 	тзУчетАлкоголяПоПроизводителям.Очистить();
	
	ВыборкаУчетАлкоголяПоПроизводителям = Запрос.Выполнить().Выбрать();
	Пока ВыборкаУчетАлкоголяПоПроизводителям.Следующий() Цикл
		НоваяСтрокатзУчетАлкоголяПоПроизводителям = тзУчетАлкоголяПоПроизводителям.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокатзУчетАлкоголяПоПроизводителям,ВыборкаУчетАлкоголяПоПроизводителям);
		Попытка
			ОбъемШтуки = Число(ВыборкаУчетАлкоголяПоПроизводителям.ОбъемШтуки.Наименование);
		Исключение
			ОбъемШтуки = 0;
		КонецПопытки;
		НоваяСтрокатзУчетАлкоголяПоПроизводителям.КоличествоДекалитров = ВыборкаУчетАлкоголяПоПроизводителям.Количество * ОбъемШтуки / 10;
	КонецЦикла;
	
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзУчетАлкоголяПоПроизводителям,тзУчетАлкоголяПоПроизводителямИсходная);
	
	Объект.Движения.УчетАлкоголяПоПроизводителям.Загрузить(тзУчетАлкоголяПоПроизводителям);
	Объект.Движения.УчетАлкоголяПоПроизводителям.Записывать=НЕ НеБылоИзменений;
	
	Возврат флВозврата;
	
КонецФункции

Функция ВернутьТаблицуАлкоголя(ТаблицаНоменклатуры) Экспорт
	
	МассивНоменклатуры = ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаНоменклатуры.*
	|ПОМЕСТИТЬ времТаблицаНоменклатуры
	|ИЗ
	|	&ТаблицаНоменклатуры КАК времТаблицаНоменклатуры
	|;
	|ВЫБРАТЬ 
	|	времТаблицаНоменклатуры.*,
	|   ТабВидАлкогольнойПродукции.Значение КАК ВидАлкогольнойПродукции,
	|   ТабПроизводитель.Значение КАК Производитель
	|ИЗ	
	|	времТаблицаНоменклатуры КАК времТаблицаНоменклатуры
	|   ЛЕВОЕ СОЕДИНЕНИЕ(ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка,
	|	НоменклатураДополнительныеРеквизиты.Значение
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В (&МассивНоменклатуры)
	|	И НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоВидАлкогольнойПродукции) КАК ТабВидАлкогольнойПродукции
	|   ПО времТаблицаНоменклатуры.Номенклатура = ТабВидАлкогольнойПродукции.Ссылка
	|   ЛЕВОЕ СОЕДИНЕНИЕ(ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка,
	|	НоменклатураДополнительныеРеквизиты.Значение
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В (&МассивНоменклатуры)
	|	И НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоПроизводитель) КАК ТабПроизводитель
	|   ПО времТаблицаНоменклатуры.Номенклатура = ТабПроизводитель.Ссылка
	|ГДЕ 
	|	НЕ ТабВидАлкогольнойПродукции.Значение ЕСТЬ NULL");

	Запрос.УстановитьПараметр("МассивНоменклатуры",МассивНоменклатуры);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры",ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("СвойствоВидАлкогольнойПродукции",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаВидАлкогольнойПродукции)));
	Запрос.УстановитьПараметр("СвойствоПроизводитель",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаПроизводитель)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ВернутьСвернутуюТаблицуАлкоголя(ТаблицаНоменклатуры) Экспорт
	
	МассивНоменклатуры = ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаНоменклатуры.*
	|ПОМЕСТИТЬ времТаблицаНоменклатуры
	|ИЗ
	|	&ТаблицаНоменклатуры КАК времТаблицаНоменклатуры
	|;
	|ВЫБРАТЬ 
	|	времТаблицаНоменклатуры.Номенклатура,
	|   СУММА(времТаблицаНоменклатуры.Количество)
	|ИЗ	
	|	времТаблицаНоменклатуры КАК времТаблицаНоменклатуры
	|   ЛЕВОЕ СОЕДИНЕНИЕ(ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка,
	|	НоменклатураДополнительныеРеквизиты.Значение
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В (&МассивНоменклатуры)
	|	И НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоВидАлкогольнойПродукции) КАК ТабВидАлкогольнойПродукции
	|   ПО времТаблицаНоменклатуры.Номенклатура = ТабВидАлкогольнойПродукции.Ссылка
	|ГДЕ 
	|	НЕ ТабВидАлкогольнойПродукции.Значение ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО 
	|   времТаблицаНоменклатуры.Номенклатура");
	
	Запрос.УстановитьПараметр("МассивНоменклатуры",МассивНоменклатуры);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры",ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("СвойствоВидАлкогольнойПродукции",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаВидАлкогольнойПродукции)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ВернутьСвернутуюТаблицуАлкоголяСПроизводителями(ТаблицаНоменклатуры) Экспорт
	
	МассивНоменклатуры = ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаНоменклатуры.*
	|ПОМЕСТИТЬ времТаблицаНоменклатуры
	|ИЗ
	|	&ТаблицаНоменклатуры КАК времТаблицаНоменклатуры
	|;
	|ВЫБРАТЬ 
	|	времТаблицаНоменклатуры.Номенклатура,
	|	времТаблицаНоменклатуры.Производитель КАК Производитель,
	|	времТаблицаНоменклатуры.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции,
	|	СУММА(времТаблицаНоменклатуры.Количество)
	|ИЗ	
	|	времТаблицаНоменклатуры КАК времТаблицаНоменклатуры
	|   ЛЕВОЕ СОЕДИНЕНИЕ(ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка,
	|	НоменклатураДополнительныеРеквизиты.Значение
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В (&МассивНоменклатуры)
	|	И НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоВидАлкогольнойПродукции) КАК ТабВидАлкогольнойПродукции
	|   ПО времТаблицаНоменклатуры.Номенклатура = ТабВидАлкогольнойПродукции.Ссылка
	|ГДЕ 
	|	НЕ ТабВидАлкогольнойПродукции.Значение ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО 
	|   времТаблицаНоменклатуры.Номенклатура,
	|   времТаблицаНоменклатуры.Производитель,
	|   времТаблицаНоменклатуры.ВидАлкогольнойПродукции");
	
	Запрос.УстановитьПараметр("МассивНоменклатуры",МассивНоменклатуры);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры",ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("СвойствоВидАлкогольнойПродукции",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаВидАлкогольнойПродукции)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ВернутьСвернутуюТаблицуАлкоголяСЕдиницами(ТаблицаНоменклатуры) Экспорт
	
	МассивНоменклатуры = ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаНоменклатуры.*
	|ПОМЕСТИТЬ времТаблицаНоменклатуры
	|ИЗ
	|	&ТаблицаНоменклатуры КАК времТаблицаНоменклатуры
	|;
	|ВЫБРАТЬ 
	|	времТаблицаНоменклатуры.Номенклатура,
	|	времТаблицаНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	времТаблицаНоменклатуры.Коэффициент КАК Коэффициент,
	|	СУММА(времТаблицаНоменклатуры.Количество)
	|ИЗ	
	|	времТаблицаНоменклатуры КАК времТаблицаНоменклатуры
	|   ЛЕВОЕ СОЕДИНЕНИЕ(ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка,
	|	НоменклатураДополнительныеРеквизиты.Значение
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В (&МассивНоменклатуры)
	|	И НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоВидАлкогольнойПродукции) КАК ТабВидАлкогольнойПродукции
	|   ПО времТаблицаНоменклатуры.Номенклатура = ТабВидАлкогольнойПродукции.Ссылка
	|ГДЕ 
	|	НЕ ТабВидАлкогольнойПродукции.Значение ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО 
	|   времТаблицаНоменклатуры.Номенклатура,
	|   времТаблицаНоменклатуры.ЕдиницаИзмерения,
	|   времТаблицаНоменклатуры.Коэффициент");
	
	Запрос.УстановитьПараметр("МассивНоменклатуры",МассивНоменклатуры);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры",ТаблицаНоменклатуры);
	Запрос.УстановитьПараметр("СвойствоВидАлкогольнойПродукции",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаВидАлкогольнойПродукции)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ВернутьТаблицуРасхожденийТаблицАлкоголя(ТаблицаАлкоголя1, ТаблицаАлкоголя2) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	времТаблицаАлкоголя1.*
	|ПОМЕСТИТЬ времТаблицаАлкоголя1
	|ИЗ
	|	&ТаблицаАлкоголя1 КАК времТаблицаАлкоголя1
	|;
	|ВЫБРАТЬ
	|	времТаблицаАлкоголя2.*
	|ПОМЕСТИТЬ времТаблицаАлкоголя2
	|ИЗ
	|	&ТаблицаАлкоголя2 КАК времТаблицаАлкоголя2
	|;
	|ВЫБРАТЬ
	|  СвернутаяТаблица.Номенклатура,
	|  СУММА(СвернутаяТаблица.Количество)
	|ИЗ
	|
	|(ВЫБРАТЬ 
	|	времТаблицаАлкоголя1.Номенклатура,
	|	времТаблицаАлкоголя1.Количество
	|ИЗ	
	|	времТаблицаАлкоголя1 КАК времТаблицаАлкоголя1
	|ОБЪЕДИНИТЬ ВСЕ 
	|ВЫБРАТЬ 
	|	времТаблицаАлкоголя2.Номенклатура,
	|	-времТаблицаАлкоголя2.Количество
	|ИЗ	
	|	времТаблицаАлкоголя2 КАК времТаблицаАлкоголя2) КАК СвернутаяТаблица
	|СГРУППИРОВАТЬ ПО 
	|	СвернутаяТаблица.Номенклатура");
	
	Запрос.УстановитьПараметр("ТаблицаАлкоголя1",ТаблицаАлкоголя1);
	Запрос.УстановитьПараметр("ТаблицаАлкоголя2",ТаблицаАлкоголя2);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Функция ВестиУчетАлкоголя() Экспорт
	
	ТекСтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница; //V
	УчетАлкоголя = ПолучитьФункциональнуюОпцию("ВестиУчетАлкоголяВРазрезеПроизводителей",Новый Структура("СтруктурнаяЕдиница,ПараметрСтруктурнойЕдиницы",ТекСтруктурнаяЕдиница,ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВестиУчетАлкоголяВРазрезеПроизводителей));
	Возврат УчетАлкоголя;
	
КонецФункции

Функция ОсновнойПроизводительАлкогольнойПродукции(ТекНоменклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураДополнительныеРеквизиты.Ссылка,
		|	НоменклатураДополнительныеРеквизиты.Свойство,
		|	НоменклатураДополнительныеРеквизиты.Значение
		|ИЗ
		|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|ГДЕ
		|	НоменклатураДополнительныеРеквизиты.Ссылка = &Ссылка
		|	И НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоПроизводитель";

	Запрос.УстановитьПараметр("Ссылка", ТекНоменклатура);
	Запрос.УстановитьПараметр("СвойствоПроизводитель",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаПроизводитель)));

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Значение;
	КонецЕсли;
	
КонецФункции

Функция ОсновнойВидАлкогольнойПродукции(ТекНоменклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураДополнительныеРеквизиты.Ссылка,
		|	НоменклатураДополнительныеРеквизиты.Свойство,
		|	НоменклатураДополнительныеРеквизиты.Значение
		|ИЗ
		|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|ГДЕ
		|	НоменклатураДополнительныеРеквизиты.Ссылка = &Ссылка
		|	И НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоВидАлкогольнойПродукции";

	Запрос.УстановитьПараметр("Ссылка", ТекНоменклатура);
	Запрос.УстановитьПараметр("СвойствоВидАлкогольнойПродукции",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаВидАлкогольнойПродукции)));

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.КлассификаторАлкогольнойПродукции.ПустаяСсылка();
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Значение;
	КонецЕсли;
	
КонецФункции

Функция ОбъемАлкогольнойПродукции(ТекНоменклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураДополнительныеРеквизиты.Ссылка,
		|	НоменклатураДополнительныеРеквизиты.Свойство,
		|	НоменклатураДополнительныеРеквизиты.Значение
		|ИЗ
		|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|ГДЕ
		|	НоменклатураДополнительныеРеквизиты.Ссылка = &Ссылка
		|	И НоменклатураДополнительныеРеквизиты.Свойство = &СвойствоОбъем";

	Запрос.УстановитьПараметр("Ссылка", ТекНоменклатура);
	Запрос.УстановитьПараметр("СвойствоОбъем",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаЛитраж)));

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Попытка
			ОбъемШтуки = Число(Выборка.Значение.Наименование);
		Исключение
			ОбъемШтуки = 0;
		КонецПопытки;
        Возврат ОбъемШтуки;
	КонецЕсли;
	
КонецФункции

//функции и процедуры выгрузки алкогольной декларации

Функция ПолучитьТекстЗапросаДляДекларации()
//Котлячкова++ 5,04,15 Выгрузка в декларант	
	ТекстЗапроса = 
	
	"ВЫБРАТЬ
	|	ОстаткиИОбороты.Фирма,
	|	ОстаткиИОбороты.СтруктурнаяЕдиница,
	|	ОстаткиИОбороты.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции,
	|	ОстаткиИОбороты.КодОперации КАК КодОперации,
	|	ОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ОстаткиИОбороты.Производитель КАК Производитель,
	|	СУММА(ОстаткиИОбороты.НачальныйОстаток) КАК НачальныйОстаток,
	|	СУММА(ОстаткиИОбороты.Количество) КАК Количество,
	|	СУММА(ОстаткиИОбороты.КонечныйОстаток) КАК КонечныйОстаток
	|ПОМЕСТИТЬ времОстаткиИОбороты
	|ИЗ
	|	(ВЫБРАТЬ
	|		УчетАлкоголяПоПроизводителям.Фирма КАК Фирма,
	|		УчетАлкоголяПоПроизводителям.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		УчетАлкоголяПоПроизводителям.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции,
	|		УчетАлкоголяПоПроизводителям.КодОперации КАК КодОперации,
	|		УчетАлкоголяПоПроизводителям.Регистратор КАК Регистратор,
	|		УчетАлкоголяПоПроизводителям.Производитель КАК Производитель,
	|		УчетАлкоголяПоПроизводителям.КоличествоДекалитров КАК Количество,
	|		0 КАК НачальныйОстаток,
	|		0 КАК КонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.УчетАлкоголяПоПроизводителям КАК УчетАлкоголяПоПроизводителям
	|	ГДЕ
	|		УчетАлкоголяПоПроизводителям.Период >= &НачалоПериода
	|		И УчетАлкоголяПоПроизводителям.Период <= &КонецПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УчетАлкоголяПоПроизводителямОстаткиИОбороты.Фирма,
	|		УчетАлкоголяПоПроизводителямОстаткиИОбороты.СтруктурнаяЕдиница,
	|		УчетАлкоголяПоПроизводителямОстаткиИОбороты.ВидАлкогольнойПродукции,
	|		NULL,
	|		NULL,
	|		УчетАлкоголяПоПроизводителямОстаткиИОбороты.Производитель,
	|		0,
	|		УчетАлкоголяПоПроизводителямОстаткиИОбороты.КоличествоДекалитровНачальныйОстаток,
	|		УчетАлкоголяПоПроизводителямОстаткиИОбороты.КоличествоДекалитровКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.УчетАлкоголяПоПроизводителям.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , ) КАК УчетАлкоголяПоПроизводителямОстаткиИОбороты) КАК ОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиИОбороты.Фирма,
	|	ОстаткиИОбороты.СтруктурнаяЕдиница,
	|	ОстаткиИОбороты.ВидАлкогольнойПродукции,
	|	ОстаткиИОбороты.КодОперации,
	|	ОстаткиИОбороты.Регистратор,
	|	ОстаткиИОбороты.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Флаг,
	|	Результат.Фирма КАК Фирма,
	|	КодыПодразделений.КодПодразделения КАК Подразделение,
	|	Результат.ВидАлкогольнойПродукции КАК ВидПродукции,
	|	Результат.ВидАлкогольнойПродукции.Код КАК КодВидаПродукции,
	|	ВЫБОР
	|		КОГДА Результат.ВидАлкогольнойПродукции.Код В (""500"", ""510"", ""520"")
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПиво,
	|	ВЫБОР
	|		КОГДА Результат.Производитель.ПолноеНаименование > """"""""
	|			ТОГДА Результат.Производитель.ПолноеНаименование
	|		ИНАЧЕ Результат.Производитель.Наименование
	|	КОНЕЦ КАК НаименованиеПроизводителя,
	|	Результат.Производитель.ИНН КАК ИННПроизводителя,
	|	Результат.Производитель.КПП КАК КПППроизводителя,
	|	NULL КАК НаименованиеПоставщика,
	|	NULL КАК ИННПоставщика,
	|	NULL КАК КПППоставщика,
	|	NULL КАК ДатаЗакупки,
	|	NULL КАК НомерТТН,
	|	NULL КАК Количество,
	|	NULL КАК ЛицензияСерия,
	|	NULL КАК ЛицензияНомер,
	|	NULL КАК ЛицензияДатаВыдачи,
	|	NULL КАК ЛицензияДатаОкончания,
	|	NULL КАК ЛицензияКемВыдана,
	|	СУММА(Результат.НачальныйОстаток) КАК НачальныйОстаток,
	|	СУММА(Результат.ПоступилоОтПроизводителей) КАК ПоступилоОтПроизводителей,
	|	СУММА(Результат.ПоступилоОтОпта) КАК ПоступилоОтОпта,
	|	СУММА(Результат.ПоступилоПоИмпорту) КАК ПоступилоПоИмпорту,
	|	СУММА(Результат.ВозвратОтПокупателей) КАК ВозвратОтПокупателей,
	|	СУММА(Результат.ПрочиеПоступления) КАК ПрочиеПоступления,
	|	СУММА(Результат.ПродажиРозница) КАК ПродажиРозница,
	|	СУММА(Результат.ПрочийРасход) КАК ПрочийРасход,
	|	СУММА(Результат.ВозвратПоставщику) КАК ВозвратПоставщику,
	|	СУММА(Результат.ПеремещениеПриход) КАК ПеремещениеПриход,
	|	СУММА(Результат.ПеремещениеРасход) КАК ПеремещениеРасход,
	|	СУММА(Результат.КонечныйОстаток) КАК КонечныйОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Движения.Фирма КАК Фирма,
	|		Движения.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		Движения.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции,
	|		Движения.Производитель КАК Производитель,
	|		Движения.НачальныйОстаток КАК НачальныйОстаток,
	|		ВЫБОР
	|			КОГДА Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПоступлениеТоваров)
	|					И НЕ Движения.Регистратор.ДокОснование.БонуснаяПоставка
	|					И Движения.Регистратор.Грузоотправитель.Производитель
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПоступилоОтПроизводителей,
	|		ВЫБОР
	|			КОГДА (Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПоступлениеТоваров)
	|					ИЛИ Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров))
	|					И НЕ Движения.Регистратор.ДокОснование.БонуснаяПоставка
	|					И НЕ Движения.Регистратор.Грузоотправитель.Производитель
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПоступилоОтОпта,
	|		0 КАК ПоступилоПоИмпорту,
	|		ВЫБОР
	|			КОГДА Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВозвратОтПокупателя)
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВозвратОтПокупателей,
	|		ВЫБОР
	|			КОГДА Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПоступлениеТоваров)
	|					И Движения.Регистратор.ДокОснование.БонуснаяПоставка
	|				ТОГДА Движения.Количество
	|			КОГДА Движения.КодОперации В (ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВводОстатков), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВозвратРеализация), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ОприходованиеИзлишков), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаИзПроизводства), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратРеализация), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратОтПокупателя), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаПоступления))
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПрочиеПоступления,
	|		ВЫБОР
	|			КОГДА Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПродажаРозница)
	|					ИЛИ Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПередачаНаРеализацию)
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПродажиРозница,
	|		ВЫБОР
	|			КОГДА Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВозвратПоставщику)
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ВозвратПоставщику,
	|		ВЫБОР
	|			КОГДА Движения.КодОперации В (ЗНАЧЕНИЕ(Перечисление.КодыОпераций.Списание), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПродажаОпт), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаНаРеализацию), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.Инвентаризация), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПродажаОпт), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаВПроизводство), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаОстатков), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратПоставщику), ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаРеализации))
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПрочийРасход,
	|		ВЫБОР
	|			КОГДА Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеПриход)
	|					И НЕ Движения.Регистратор.ДокОснование ССЫЛКА Документ.Перемещение
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПеремещениеПриход,
	|		ВЫБОР
	|			КОГДА Движения.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеРасход)
	|					И НЕ Движения.Регистратор.ДокОснование ССЫЛКА Документ.Перемещение
	|				ТОГДА Движения.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПеремещениеРасход,
	|		Движения.КонечныйОстаток КАК КонечныйОстаток
	|	ИЗ
	|		времОстаткиИОбороты КАК Движения) КАК Результат
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка КАК СтруктурнаяЕдиница,
	|			МАКСИМУМ(СтруктурныеЕдиницыДополнительныеРеквизиты.Значение) КАК КодПодразделения
	|		ИЗ
	|			Справочник.СтруктурныеЕдиницы.ДополнительныеРеквизиты КАК СтруктурныеЕдиницыДополнительныеРеквизиты
	|		ГДЕ
	|			СтруктурныеЕдиницыДополнительныеРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.КодПодразделения)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка) КАК КодыПодразделений
	|		ПО (КодыПодразделений.СтруктурнаяЕдиница = Результат.СтруктурнаяЕдиница)
	|
	|СГРУППИРОВАТЬ ПО
	|	Результат.Фирма,
	|	КодыПодразделений.КодПодразделения,
	|	Результат.ВидАлкогольнойПродукции,
	|	Результат.Производитель,
	|	Результат.ВидАлкогольнойПродукции.Код,
	|	Результат.Производитель.ИНН,
	|	Результат.Производитель.КПП,
	|	ВЫБОР
	|		КОГДА Результат.Производитель.ПолноеНаименование > """"""""
	|			ТОГДА Результат.Производитель.ПолноеНаименование
	|		ИНАЧЕ Результат.Производитель.Наименование
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	УчетАлкоголяПоПроизводителям.Фирма,
	|	КодыПодразделений.КодПодразделения,
	|	УчетАлкоголяПоПроизводителям.ВидАлкогольнойПродукции,
	|	УчетАлкоголяПоПроизводителям.ВидАлкогольнойПродукции.Код,
	|	ВЫБОР
	|		КОГДА УчетАлкоголяПоПроизводителям.ВидАлкогольнойПродукции.Код В (""500"", ""510"", ""520"")
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УчетАлкоголяПоПроизводителям.Производитель.ПолноеНаименование > """"""""
	|			ТОГДА УчетАлкоголяПоПроизводителям.Производитель.ПолноеНаименование
	|		ИНАЧЕ УчетАлкоголяПоПроизводителям.Производитель.Наименование
	|	КОНЕЦ,
	|	УчетАлкоголяПоПроизводителям.Производитель.ИНН,
	|	УчетАлкоголяПоПроизводителям.Производитель.КПП,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуФирмами)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Фирма.Наименование
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.ПолноеНаименование > """"""""
	|					ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.ПолноеНаименование
	|				ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.Наименование
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуФирмами)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Фирма.ИНН
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПриложениеПоАлкоголю)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Грузоотправитель.ИНН
	|		ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.ИНН
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуФирмами)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Фирма.КПП
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПриложениеПоАлкоголю)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Грузоотправитель.КПП
	|		ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.КПП
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.ДатаДокумента = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.ДатаДокумента
	|		ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуФирмами)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Номер
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.НомерДокумента > """"""""
	|					ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.НомерДокумента
	|				ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Номер
	|			КОНЕЦ
	|	КОНЕЦ,
	|	СУММА(УчетАлкоголяПоПроизводителям.КоличествоДекалитров),
	|	АлкогольныеЛицензии.ЛицензияСерия,
	|	АлкогольныеЛицензии.ЛицензияНомер,
	|	АлкогольныеЛицензии.ЛицензияДатаВыдачи,
	|	АлкогольныеЛицензии.ЛицензияДатаОкончания,
	|	АлкогольныеЛицензии.ЛицензияКемВыдана,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.УчетАлкоголяПоПроизводителям КАК УчетАлкоголяПоПроизводителям
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка КАК СтруктурнаяЕдиница,
	|			МАКСИМУМ(СтруктурныеЕдиницыДополнительныеРеквизиты.Значение) КАК КодПодразделения
	|		ИЗ
	|			Справочник.СтруктурныеЕдиницы.ДополнительныеРеквизиты КАК СтруктурныеЕдиницыДополнительныеРеквизиты
	|		ГДЕ
	|			СтруктурныеЕдиницыДополнительныеРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.КодПодразделения)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка) КАК КодыПодразделений
	|		ПО (КодыПодразделений.СтруктурнаяЕдиница = УчетАлкоголяПоПроизводителям.СтруктурнаяЕдиница)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КонтрагентыДополнительныеРеквизиты.Ссылка КАК Контрагент,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА КонтрагентыДополнительныеРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыКонтрагентов.СерияАлкогольнойЛицензии)
	|						ТОГДА КонтрагентыДополнительныеРеквизиты.Значение
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК ЛицензияСерия,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА КонтрагентыДополнительныеРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыКонтрагентов.НомерАлкогольнойЛицензии)
	|						ТОГДА КонтрагентыДополнительныеРеквизиты.Значение
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК ЛицензияНомер,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА КонтрагентыДополнительныеРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыКонтрагентов.ДатаАлкогольнойЛицензии)
	|						ТОГДА КонтрагентыДополнительныеРеквизиты.Значение
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК ЛицензияДатаВыдачи,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА КонтрагентыДополнительныеРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыКонтрагентов.ДатаОкончанияАлкогольнойЛицензии)
	|						ТОГДА КонтрагентыДополнительныеРеквизиты.Значение
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК ЛицензияДатаОкончания,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА КонтрагентыДополнительныеРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыКонтрагентов.КемВыданаАлкогольнаяЛицензия)
	|						ТОГДА КонтрагентыДополнительныеРеквизиты.Значение
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК ЛицензияКемВыдана
	|		ИЗ
	|			Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КонтрагентыДополнительныеРеквизиты.Ссылка) КАК АлкогольныеЛицензии
	|		ПО (АлкогольныеЛицензии.Контрагент = УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент)
	|ГДЕ
	|	(УчетАлкоголяПоПроизводителям.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПоступлениеТоваров)
	|			ИЛИ УчетАлкоголяПоПроизводителям.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров)
	|				И НЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.БонуснаяПоставка
	|				И УчетАлкоголяПоПроизводителям.Период >= &НачалоПериода
	|				И УчетАлкоголяПоПроизводителям.Период <= &КонецПериода)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетАлкоголяПоПроизводителям.Фирма,
	|	КодыПодразделений.КодПодразделения,
	|	УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование,
	|	УчетАлкоголяПоПроизводителям.ВидАлкогольнойПродукции,
	|	АлкогольныеЛицензии.ЛицензияСерия,
	|	АлкогольныеЛицензии.ЛицензияНомер,
	|	АлкогольныеЛицензии.ЛицензияДатаВыдачи,
	|	АлкогольныеЛицензии.ЛицензияДатаОкончания,
	|	АлкогольныеЛицензии.ЛицензияКемВыдана,
	|	ВЫБОР
	|		КОГДА УчетАлкоголяПоПроизводителям.Производитель.ПолноеНаименование > """"""""
	|			ТОГДА УчетАлкоголяПоПроизводителям.Производитель.ПолноеНаименование
	|		ИНАЧЕ УчетАлкоголяПоПроизводителям.Производитель.Наименование
	|	КОНЕЦ,
	|	УчетАлкоголяПоПроизводителям.Производитель.ИНН,
	|	УчетАлкоголяПоПроизводителям.Производитель.КПП,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуФирмами)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Номер
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.НомерДокумента > """"""""
	|					ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.НомерДокумента
	|				ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Номер
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.ДатаДокумента = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.ДатаДокумента
	|		ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Дата
	|	КОНЕЦ,
	|	УчетАлкоголяПоПроизводителям.ВидАлкогольнойПродукции.Код,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуФирмами)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Фирма.Наименование
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.ПолноеНаименование > """"""""
	|					ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.ПолноеНаименование
	|				ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.Наименование
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуФирмами)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Фирма.ИНН
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПриложениеПоАлкоголю)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Грузоотправитель.ИНН
	|		ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.ИНН
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуФирмами)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Фирма.КПП
	|		КОГДА ТИПЗНАЧЕНИЯ(УчетАлкоголяПоПроизводителям.Регистратор) = ТИП(Документ.ПриложениеПоАлкоголю)
	|			ТОГДА УчетАлкоголяПоПроизводителям.Регистратор.Грузоотправитель.КПП
	|		ИНАЧЕ УчетАлкоголяПоПроизводителям.Регистратор.ДокОснование.Контрагент.КПП
	|	КОНЕЦ
	|ИТОГИ ПО
	|	Фирма,
	|	Подразделение";
//Котлячкова-- 5,04,15 Выгрузка в декларант	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ВыгрузкаАлкогольнойДекларации() Экспорт
	
	ДатаКонцаКвартала  = КонецКвартала(ДобавитьМесяц(ТекущаяДата(), -3));
	ДатаНачалаКвартала = НачалоКвартала(ДатаКонцаКвартала);
    ВыгрузкаАлкогольнойДекларацииЗаПериод(ДатаНачалаКвартала,ДатаКонцаКвартала);
	
КонецПроцедуры	

Процедура ВыгрузкаАлкогольнойДекларацииЗаПериод(ДатаНачалаКвартала,ДатаКонцаКвартала) Экспорт
	
	//проверки корректности данных
	
	//1) Проверим границу последовательности "Алкогольная продукция"
	
	//МоментВремениГраницыПоследовательности = Последовательности.АлкогольнаяПродукция.ПолучитьГраницу();
	//ДатаГраницыПоследовательности = МоментВремениГраницыПоследовательности.Дата;
	//
	//Если ДатаГраницыПоследовательности < ДатаКонцаКвартала Тогда
	//	Сообщение = "Дата границы последовательности"
	//	+Символы.ПС+"""Алкогольная продукция"" ("+Строка(ДатаГраницыПоследовательности)+") меньше"
	//	+Символы.ПС+"даты конца периода выгрузки декларации ("+Строка(ДатаКонцаКвартала)+").";
	//	ВызватьИсключение(Сообщение);
	//КонецЕсли;
	
	//2) Проверим наличие расхождений между регистрами "Остатки номенклатуры" и 
	//"Учет алкоголя" по алкогольной продукции
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ВложенныйЗапрос.Фирма,
	//	|	ВложенныйЗапрос.МестоХранения,
	//	|	ВложенныйЗапрос.Номенклатура,
	//	|	СУММА(ВложенныйЗапрос.КоличествоОстаткиНоменклатуры) КАК КоличествоОстаткиНоменклатуры,
	//	|	СУММА(ВложенныйЗапрос.КоличествоУчетАлкоголя) КАК КоличествоУчетАлкоголя,
	//	|	СУММА(ВложенныйЗапрос.КоличествоОстаткиНоменклатуры - ВложенныйЗапрос.КоличествоУчетАлкоголя) КАК Расхождение
	//	|ИЗ
	//	|	(ВЫБРАТЬ
	//	|		ОстаткиНоменклатурыОстатки.Фирма КАК Фирма,
	//	|		ОстаткиНоменклатурыОстатки.МестоХранения КАК МестоХранения,
	//	|		ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	//	|		ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаткиНоменклатуры,
	//	|		0 КАК КоличествоУчетАлкоголя
	//	|	ИЗ
	//	|		РегистрНакопления.ОстаткиНоменклатуры.Остатки(&ДатаОтчета, ) КАК ОстаткиНоменклатурыОстатки
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//	|				НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка,
	//	|				МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение) КАК Значение
	//	|			ИЗ
	//	|				Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	//	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеЗначения КАК СлужебныеЗначения
	//	|					ПО (СлужебныеЗначения.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СлужебныеЗначения.КодРеквизитаВидАлкогольнойПродукции))
	//	|						И (СлужебныеЗначения.Значение = НоменклатураДополнительныеРеквизиты.Свойство.Код)
	//	|			ГДЕ
	//	|				НЕ СлужебныеЗначения.Значение ЕСТЬ NULL 
	//	|			
	//	|			СГРУППИРОВАТЬ ПО
	//	|				НоменклатураДополнительныеРеквизиты.Ссылка) КАК ТабВидАлкогольнойПродукции
	//	|			ПО ОстаткиНоменклатурыОстатки.Номенклатура = ТабВидАлкогольнойПродукции.Ссылка
	//	|	ГДЕ
	//	|		НЕ ТабВидАлкогольнойПродукции.Значение ЕСТЬ NULL 
	//	|	
	//	|	ОБЪЕДИНИТЬ ВСЕ
	//	|	
	//	|	ВЫБРАТЬ
	//	|		УчетАлкоголяПоПроизводителямОстатки.Фирма,
	//	|		УчетАлкоголяПоПроизводителямОстатки.МестоХранения,
	//	|		УчетАлкоголяПоПроизводителямОстатки.Номенклатура,
	//	|		0,
	//	|		УчетАлкоголяПоПроизводителямОстатки.КоличествоОстаток
	//	|	ИЗ
	//	|		РегистрНакопления.УчетАлкоголяПоПроизводителям.Остатки(&ДатаОтчета, ) КАК УчетАлкоголяПоПроизводителямОстатки
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//	|				НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка,
	//	|				МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение) КАК Значение
	//	|			ИЗ
	//	|				Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	//	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СлужебныеЗначения КАК СлужебныеЗначения
	//	|					ПО (СлужебныеЗначения.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СлужебныеЗначения.КодРеквизитаВидАлкогольнойПродукции))
	//	|						И (СлужебныеЗначения.Значение = НоменклатураДополнительныеРеквизиты.Свойство.Код)
	//	|			ГДЕ
	//	|				НЕ СлужебныеЗначения.Значение ЕСТЬ NULL 
	//	|			
	//	|			СГРУППИРОВАТЬ ПО
	//	|				НоменклатураДополнительныеРеквизиты.Ссылка) КАК ТабВидАлкогольнойПродукции
	//	|			ПО УчетАлкоголяПоПроизводителямОстатки.Номенклатура = ТабВидАлкогольнойПродукции.Ссылка
	//	|	ГДЕ
	//	|		НЕ ТабВидАлкогольнойПродукции.Значение ЕСТЬ NULL ) КАК ВложенныйЗапрос
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВложенныйЗапрос.Фирма,
	//	|	ВложенныйЗапрос.МестоХранения,
	//	|	ВложенныйЗапрос.Номенклатура
	//	|
	//	|ИМЕЮЩИЕ
	//	|	СУММА(ВложенныйЗапрос.КоличествоОстаткиНоменклатуры - ВложенныйЗапрос.КоличествоУчетАлкоголя) <> 0";

	// Запрос.УстановитьПараметр("СвойствоВидАлкогольнойПродукции",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаВидАлкогольнойПродукции)));
	//Запрос.УстановитьПараметр("ДатаОтчета",ДатаКонцаКвартала);
	//Результат = Запрос.Выполнить();
	//
	//Если НЕ Результат.Пустой() Тогда
	//	Сообщение = "Обнаружены расхождения между данными регистров" 
	//	+Символы.ПС+"""Остатки номенклатуры"" и ""Учет алкоголя по производителям""."
	//	+Символы.ПС+"Для контроля расхождений используйте отчет ""Расхождения остатков алкогольной продукции"".";
	//	ВызватьИсключение(Сообщение);
	//КонецЕсли;

	ТипАлкогольнаяДекларация = ФабрикаXDTO.Тип("http://apm-consult.ru/alco", "АлкогольнаяДекларация");
	ПакетАлкогольнаяДекларация = ФабрикаXDTO.Создать(ТипАлкогольнаяДекларация);
	ПакетАлкогольнаяДекларация.НачалоПериода = ДатаНачалаКвартала;
	ПакетАлкогольнаяДекларация.КонецПериода  = ДатаКонцаКвартала;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДляДекларации();
	Запрос.УстановитьПараметр("НачалоПериода",ДатаНачалаКвартала);
	Запрос.УстановитьПараметр("КонецПериода",ДатаКонцаКвартала);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТипАлкогольнаяДекларацияПоФирмам = ФабрикаXDTO.Тип("http://apm-consult.ru/alco", "АлкогольнаяДекларация_Фирмы");
	
	ВыборкаФирма = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФирма.Следующий() Цикл
		
		ПакетАлкогольнаяДекларацияПоФирмам = ФабрикаXDTO.Создать(ТипАлкогольнаяДекларацияПоФирмам);
		ПакетАлкогольнаяДекларацияПоФирмам.Фирма = СокрЛП(ВыборкаФирма.Фирма);
		ПакетАлкогольнаяДекларацияПоФирмам.ИНН = СокрЛП(ВыборкаФирма.Фирма.ИНН);
		
		ВыборкаПодразделение = ВыборкаФирма.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПодразделение.Следующий() Цикл
			
			ТипАлкогольнаяДекларацияПоПодразделениям = ФабрикаXDTO.Тип("http://apm-consult.ru/alco", "АлкогольнаяДекларация_Подразделения");
			
			ПакетАлкогольнаяДекларацияПоПодразделениям = ФабрикаXDTO.Создать(ТипАлкогольнаяДекларацияПоПодразделениям);
			ПакетАлкогольнаяДекларацияПоПодразделениям.Подразделение = СокрЛП(ВыборкаПодразделение.Подразделение);
			ТипРаздел1_Состав = ФабрикаXDTO.Тип("http://apm-consult.ru/alco", "Раздел1_Состав");
			ТипРаздел2_Состав = ФабрикаXDTO.Тип("http://apm-consult.ru/alco", "Раздел2_Состав");
			
			ВыборкаЗаписи = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаЗаписи.Следующий() Цикл
				
				Если ВыборкаЗаписи.Флаг = 1 Тогда
					
					ПакетРаздел1_Состав = ФабрикаXDTO.Создать(ТипРаздел1_Состав);
					ПакетРаздел1_Состав.ЭтоПиво                            = ВыборкаЗаписи.ЭтоПиво;
					ПакетРаздел1_Состав.ВидПродукции                       = Строка(ВыборкаЗаписи.ВидПродукции);
					ПакетРаздел1_Состав.КодВидаПродукции                   = Строка(ВыборкаЗаписи.КодВидаПродукции);
					ПакетРаздел1_Состав.НаименованиеПроизводителя          = Строка(ВыборкаЗаписи.НаименованиеПроизводителя);
					ПакетРаздел1_Состав.ИННПроизводителя                   = Строка(ВыборкаЗаписи.ИННПроизводителя);
					ПакетРаздел1_Состав.КПППроизводителя                   = Строка(ВыборкаЗаписи.КПППроизводителя);
					ПакетРаздел1_Состав.НачальныйОстаток                   = ВыборкаЗаписи.НачальныйОстаток;
					ПакетРаздел1_Состав.ПриходОтОрганизацийПроизводителей  = ВыборкаЗаписи.ПоступилоОтПроизводителей;
					ПакетРаздел1_Состав.ПриходОтОрганизацийОптовойТорговли = ВыборкаЗаписи.ПоступилоОтОпта;
					ПакетРаздел1_Состав.ПриходПоИмпорту                    = ВыборкаЗаписи.ПоступилоПоИмпорту;
					ПакетРаздел1_Состав.ВозвратыПокупателей                = ВыборкаЗаписи.ВозвратОтПокупателей;
					ПакетРаздел1_Состав.ПрочиеПоступления                  = ВыборкаЗаписи.ПрочиеПоступления;
					ПакетРаздел1_Состав.ПеремещенияПриход                  = ВыборкаЗаписи.ПеремещениеПриход;
					ПакетРаздел1_Состав.РасходРозничнаяПродажа             = ВыборкаЗаписи.ПродажиРозница;
					ПакетРаздел1_Состав.РасходПрочий                       = ВыборкаЗаписи.ПрочийРасход;
					ПакетРаздел1_Состав.ВозвратыПоставщику                 = ВыборкаЗаписи.ВозвратПоставщику;
					ПакетРаздел1_Состав.ПеремещенияРасход                  = ВыборкаЗаписи.ПеремещениеРасход;
					ПакетРаздел1_Состав.КонечныйОстаток                    = ВыборкаЗаписи.КонечныйОстаток;
					
					ПакетАлкогольнаяДекларацияПоПодразделениям.Раздел1.Добавить(ПакетРаздел1_Состав);
					
				ИначеЕсли ВыборкаЗаписи.Флаг = 2 Тогда	
					
					ПакетРаздел2_Состав = ФабрикаXDTO.Создать(ТипРаздел2_Состав);
					ПакетРаздел2_Состав.ЭтоПиво                   = ВыборкаЗаписи.ЭтоПиво;
					ПакетРаздел2_Состав.ВидПродукции              = Строка(ВыборкаЗаписи.ВидПродукции);
					ПакетРаздел2_Состав.КодВидаПродукции          = Строка(ВыборкаЗаписи.КодВидаПродукции);
					ПакетРаздел2_Состав.НаименованиеПроизводителя = Строка(ВыборкаЗаписи.НаименованиеПроизводителя);
					ПакетРаздел2_Состав.ИННПроизводителя          = Строка(ВыборкаЗаписи.ИННПроизводителя);
					ПакетРаздел2_Состав.КПППроизводителя          = Строка(ВыборкаЗаписи.КПППроизводителя);					
					ПакетРаздел2_Состав.НаименованиеПоставщика    = Строка(ВыборкаЗаписи.НаименованиеПоставщика);
					ПакетРаздел2_Состав.ИННПоставщика             = Строка(ВыборкаЗаписи.ИННПоставщика);
					ПакетРаздел2_Состав.КПППоставщика             = Строка(ВыборкаЗаписи.КПППоставщика);
					ПакетРаздел2_Состав.ЛицензияСерия             = Строка(ВыборкаЗаписи.ЛицензияСерия);
					ПакетРаздел2_Состав.ЛицензияНомер             = Строка(ВыборкаЗаписи.ЛицензияНомер);
					ПакетРаздел2_Состав.ЛицензияДатаВыдачи        = ?(ВыборкаЗаписи.ЛицензияДатаВыдачи    = NULL, Дата(1,1,1), Дата(ВыборкаЗаписи.ЛицензияДатаВыдачи));
					ПакетРаздел2_Состав.ЛицензияДатаОкончания     = ?(ВыборкаЗаписи.ЛицензияДатаОкончания = NULL, Дата(1,1,1), Дата(ВыборкаЗаписи.ЛицензияДатаОкончания));
					ПакетРаздел2_Состав.ЛицензияКемВыдана         = Строка(ВыборкаЗаписи.ЛицензияКемВыдана);
					ПакетРаздел2_Состав.ДатаЗакупки                       = Дата(ВыборкаЗаписи.ДатаЗакупки);
					ПакетРаздел2_Состав.НомерТоварноТранспортнойНакладной = Строка(ВыборкаЗаписи.НомерТТН);
					ПакетРаздел2_Состав.НомерТаможеннойДекларации         = "";
					ПакетРаздел2_Состав.ОбъемЗакупленнойПродукции         = ВыборкаЗаписи.Количество;
					
					ПакетАлкогольнаяДекларацияПоПодразделениям.Раздел2.Добавить(ПакетРаздел2_Состав);
					
				КонецЕсли;
				
			КонецЦикла;
			
			ПакетАлкогольнаяДекларацияПоФирмам.Подразделения.Добавить(ПакетАлкогольнаяДекларацияПоПодразделениям);

		КонецЦикла;
		
		ПакетАлкогольнаяДекларация.Фирмы.Добавить(ПакетАлкогольнаяДекларацияПоФирмам);
		
	КонецЦикла;
	
	//на фтп
	Попытка
		FTP = Константы.FTPAlcoDeclaration.Получить();
		ПроксиСервер = Константы.НастройкаПроксиСервера.Получить().Получить();
		
		Если Найти(FTP.URL,"://") Тогда
			URL = Сред(FTP.URL,Найти(FTP.URL,"://")+3);
		Иначе
			URL = FTP.URL;
		КонецЕсли;	
		
		Соединение = Новый FTPСоединение(URL, FTP.Порт, FTP.Имя, FTP.Пароль, ПроксиСервер, FTP.ПасссивныйРежим, FTP.Таймаут);
		Соединение.УстановитьТекущийКаталог(FTP.ИмяКаталога);
		
		ЗаписьXML = Новый ЗаписьXML;
		
		ИмяФайлаПриемника = "alco_" 
		+ СтрЗаменить(ПредставлениеПериода(ДатаНачалаКвартала, ДатаКонцаКвартала,"Л=en_US")," ","")
		+ "_"
		+ Формат(СтруктурныеЕдиницы.ПолучитьКодТекущейЛокации(),"ЧГ=")+".xml";		
		
		ИмяФайлаДекларации = КаталогВременныхФайлов() + ИмяФайлаПриемника;
		ЗаписьXML.ОткрытьФайл(ИмяФайлаДекларации);
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,ПакетАлкогольнаяДекларация,"AlcoDeclaration");
		ЗаписьXML.Закрыть();
		
		Соединение.Записать(ИмяФайлаДекларации, ИмяФайлаПриемника);
		Соединение = Неопределено;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

// параметры алкогольной лицензии
Функция ВернутьПараметрыАлкогольнойЛицензии(Организация, СтруктурнаяЕдиница) Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	ДатаАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(СтруктурнаяЕдиница,"СтруктурныеЕдиницы",ПланыВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.ДатаАлкогольнойЛицензии);
	Если НЕ ЗначениеЗаполнено(ДатаАлкогольнойЛицензии) Тогда
		ДатаАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(Организация,"Организации",ПланыВидовХарактеристик.ДополнительныеРеквизитыОрганизаций.ДатаАлкогольнойЛицензии);
	КонецЕсли;	
	СтруктураПараметров.Вставить("ДатаАлкогольнойЛицензии", ДатаАлкогольнойЛицензии);
	
	ДатаОкончанияАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(СтруктурнаяЕдиница,"СтруктурныеЕдиницы",ПланыВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.ДатаОкончанияАлкогольнойЛицензии);
	Если НЕ ЗначениеЗаполнено(ДатаОкончанияАлкогольнойЛицензии) Тогда
		ДатаОкончанияАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(Организация,"Организации",ПланыВидовХарактеристик.ДополнительныеРеквизитыОрганизаций.ДатаОкончанияАлкогольнойЛицензии);
	КонецЕсли;	
	СтруктураПараметров.Вставить("ДатаОкончанияАлкогольнойЛицензии", ДатаОкончанияАлкогольнойЛицензии);
	
	КемВыданаАлкогольнаяЛицензия = ЗначениеДополнительногоРеквизита(СтруктурнаяЕдиница,"СтруктурныеЕдиницы",ПланыВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.КемВыданаАлкогольнаяЛицензия);
	Если НЕ ЗначениеЗаполнено(КемВыданаАлкогольнаяЛицензия) Тогда
		КемВыданаАлкогольнаяЛицензия = ЗначениеДополнительногоРеквизита(Организация,"Организации",ПланыВидовХарактеристик.ДополнительныеРеквизитыОрганизаций.КемВыданаАлкогольнаяЛицензия);
	КонецЕсли;	
	СтруктураПараметров.Вставить("КемВыданаАлкогольнаяЛицензия", КемВыданаАлкогольнаяЛицензия);
	
	НомерАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(СтруктурнаяЕдиница,"СтруктурныеЕдиницы",ПланыВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.НомерАлкогольнойЛицензии);
	Если НЕ ЗначениеЗаполнено(НомерАлкогольнойЛицензии) Тогда
		НомерАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(Организация,"Организации",ПланыВидовХарактеристик.ДополнительныеРеквизитыОрганизаций.НомерАлкогольнойЛицензии);
	КонецЕсли;	
	СтруктураПараметров.Вставить("НомерАлкогольнойЛицензии", НомерАлкогольнойЛицензии);
	
	СерияАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(СтруктурнаяЕдиница,"СтруктурныеЕдиницы",ПланыВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.СерияАлкогольнойЛицензии);
	Если НЕ ЗначениеЗаполнено(СерияАлкогольнойЛицензии) Тогда
		СерияАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(Организация,"Организации",ПланыВидовХарактеристик.ДополнительныеРеквизитыОрганизаций.СерияАлкогольнойЛицензии);
	КонецЕсли;	
	СтруктураПараметров.Вставить("СерияАлкогольнойЛицензии", СерияАлкогольнойЛицензии);
	
	СрокДействияАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(СтруктурнаяЕдиница,"СтруктурныеЕдиницы",ПланыВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.СрокДействияАлкогольнойЛицензии);
	Если НЕ ЗначениеЗаполнено(СрокДействияАлкогольнойЛицензии) Тогда
		СрокДействияАлкогольнойЛицензии = ЗначениеДополнительногоРеквизита(Организация,"Организации",ПланыВидовХарактеристик.ДополнительныеРеквизитыОрганизаций.СрокДействияАлкогольнойЛицензии);
	КонецЕсли;	
	СтруктураПараметров.Вставить("СрокДействияАлкогольнойЛицензии", СрокДействияАлкогольнойЛицензии);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ЗначениеДополнительногоРеквизита(Ссылка,ВидСправочника,Реквизит) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДополнительныеРеквизиты.Ссылка,
		|	ДополнительныеРеквизиты.Свойство,
		|	ДополнительныеРеквизиты.Значение
		|ИЗ
		|	Справочник."+ВидСправочника+".ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
		|ГДЕ
		|	ДополнительныеРеквизиты.Ссылка = &Ссылка
		|	И ДополнительныеРеквизиты.Свойство = &Реквизит";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Реквизит",Реквизит);

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат НЕОПРЕДЕЛЕНО;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Значение;
	КонецЕсли;
	
КонецФункции

Функция ВернутьСвойствоВидАлкогольнойПродукции() Экспорт

	Возврат ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаПроизводитель));

КонецФункции
