//модуль не используется

//Получает данные для выгрузки в весы
//Параметры:
//	Весы - весы, для которых формируется данные (СправочникСсылка.Весы)
//	маНоменклатура - массив товаров (СправочникСсылка.Номенклатура)
//Возвращаемое значение:
//	выборка запроса с данными
Функция ПолучитьДанныеДляВыгрузки(Весы, маНоменклатура)
	ТекДата = ТекущаяДата();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НомХар.Код КАК Код,
	|	НомХар.Номенклатура КАК Номенклатура,
	|	НомХар.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	0 КАК СрокХранения,
	|	0 КАК ВесТары,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	|	НомХар.Номенклатура.Код КАК ШтрихКод
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВесовойТовар.Код КАК Код,
	|		ВесовойТовар.Номенклатура КАК Номенклатура
	|	ИЗ
	|		Справочник.Весы КАК СправочникВесы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВесовойТовар КАК ВесовойТовар
	|			ПО (ВЫБОР
	|					КОГДА СправочникВесы.ВыгружатьТоварыТолькоЭтихВесов = ИСТИНА
	|						ТОГДА СправочникВесы.Ссылка = ВесовойТовар.Владелец
	|					ИНАЧЕ СправочникВесы.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ СправочникВесы.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ СправочникВесы.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ СправочникВесы.Родитель.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ СправочникВесы.Родитель.Родитель.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|				КОНЕЦ)
	|	ГДЕ
	|		СправочникВесы.Ссылка = &Весы
	|		И ВесовойТовар.Номенклатура ЕСТЬ НЕ NULL 
	|		И ВесовойТовар.ПометкаУдаления = ЛОЖЬ
	|		И СправочникВесы.ПометкаУдаления = ЛОЖЬ
	|		И ВесовойТовар.Номенклатура В(&Номенклатура)) КАК НомХар
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	|		ПО НомХар.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура И ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Весы", Весы);
	Запрос.УстановитьПараметр("Номенклатура", маНоменклатура);
	
	Запрос.УстановитьПараметр("ПериодСреза", ТекДата);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	
	тзРез = Запрос.Выполнить().Выгрузить();
	
	Возврат тзРез;
	
КонецФункции

//Выгружает товары в весы
//Параметры:
//	маТоварыПоВесам - Массив структур, каждый элемент массива определяет весы и список выгружаемых товаров для них.
//	Элемент массива (Ключ = Значение):
//		Весы = весы (СправочникСсылка.Весы)
//		Номенклатура = массив ссылок на товары (массив СправочникСсылка.Номенклатура)
Функция ЗагрузкаТовараВВесы(маТоварыПоВесам) Экспорт
	
	Попытка
		КомпонентаВесы = Новый COMОбъект("CCScl.LixScaleClient");
	Исключение
		Сообщить("Компонента ""Весы"" не установлена!", СтатусСообщения.Внимание);
		Возврат Ложь;
	КонецПопытки;
	КомпонентаВесы.SetInteractive(0);
	Результат=КомпонентаВесы.Connect();
	Если Результат=0 Тогда
		Сообщить("Весы: Не установлено ни одного соединения!", СтатусСообщения.Внимание);
		Возврат Ложь;			
	ИначеЕсли Результат=3 Тогда
		Сообщить("Весы: Не задано ни одного сервера, не установлено ни одного соединения!",СтатусСообщения.Внимание);
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого стВесы Из маТоварыПоВесам Цикл
		Весы = стВесы.Весы;
		НаименованиеВесов = СокрЛП(Весы.Наименование);
		маНоменклатура = стВесы.Номенклатура;
		табВыборка = ПолучитьДанныеДляВыгрузки(Весы, маНоменклатура);
		КоличествоТоваровВыгрузки = табВыборка.Количество();
		Для каждого Выборка Из табВыборка Цикл			
			КодКлавиши = Выборка.Код;
			Представление = СокрЛП(Выборка.НоменклатураНаименование);
			Представление=Лев(Представление,70);
			ШтрихКод = Выборка.ШтрихКод;
			Если стрДлина(СокрЛП(ШтрихКод))>7 Тогда
				Сообщить("Товар "+Представление+" не выгружен, длинный штрих-код");
				Продолжить;		
			КонецЕсли; 
			Если СокрЛП(ШтрихКод) = "" Тогда
				Сообщить("Товар "+Представление+" не выгружен, нет штрих-кода");
				Продолжить;		
			КонецЕсли; 
			ШтрихКод = Число(ШтрихКод);
			Цена = Выборка.Цена;
			Если НЕ ЗначениеЗаполнено(Цена) ИЛИ Цена>1000000 Тогда
				Цена = 0;
			КонецЕсли;
			Если Цена = 0 Тогда
				Представление = "Товар удален";
			КонецЕсли;
			СрокХранения = Выборка.СрокХранения;
			ВесТары = Цел(Выборка.ВесТары * 1000);
			Результат= КомпонентаВесы.Transmitt(НаименованиеВесов, КодКлавиши, ШтрихКод, Представление, Окр(Цена*100,0), СрокХранения, ВесТары);
			Если Результат = 0 Тогда
				Сообщить("Весы: Сервер не нашел весы с именем - " + СокрЛП(НаименованиеВесов) + "!", СтатусСообщения.Внимание);
				Если Весы = Неопределено Тогда
					Возврат Ложь;
				КонецЕсли;	
			ИначеЕсли Результат = 2 Тогда
				Сообщить("Весы: Соединение с сервером весов не установлено!", СтатусСообщения.Внимание);
				Возврат Ложь;
			ИначеЕсли Результат = 3 Тогда
				Сообщить("Весы: Ошибка при обмене данных с сервером!", СтатусСообщения.Внимание);
				Возврат Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	КомпонентаВесы.Disconnect();
    КомпонентаВесы = "";
	Возврат Истина;
КонецФункции

Функция ЗагрузитьНоменклатуруВоВсеВесы(НоменклатураСсылка) Экспорт

	маТоварыПоВесам = Новый Массив;
	маНоменклатураВесов = Новый Массив(1);	//для универсализации
	маНоменклатураВесов.Добавить(НоменклатураСсылка);
	
	Запрос = Новый Запрос("ВЫБРАТЬ Весы.Ссылка ИЗ Справочник.Весы КАК Весы");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		маТоварыПоВесам.Добавить(Новый Структура("Весы, Номенклатура", Выборка.Ссылка, маНоменклатураВесов));//в структуре два элемента - весы и список выгружаемой номенклатуры для этих весов
	КонецЦикла;

	Если маТоварыПоВесам.Количество() = 0 Тогда
		Рез = Ложь;
	Иначе
		Рез = ЗагрузкаТовараВВесы(маТоварыПоВесам);
	КонецЕсли;
	
	Возврат Рез;
КонецФункции
