
Процедура ПолучитьДанныеОбъектов(СтруктураДанных) Экспорт
	Если СтруктураДанных.Свойство("ЕдиницаИзмерения") Тогда
		Если СтруктураДанных.Свойство("Номенклатура") Тогда
			//Если ЗначениеЗаполнено(СтруктураДанных.Номенклатура) Тогда
			//	СтруктураДанных.ЕдиницаИзмерения = ПолучитьЕдиницуИзмеренияНоменклатурыПоУмолчанию(СтруктураДанных.Номенклатура);
			//	СтруктураДанных.Коэффициент = СтруктураДанных.ЕдиницаИзмерения.Коэффициент;
			//Иначе
			//	СтруктураДанных.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
			//	СтруктураДанных.Коэффициент = 0;
			//КонецЕсли;
		Иначе
			СтруктураДанных.Коэффициент = СтруктураДанных.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	

Процедура УстановитьОтборУДинамическогоСпискаНаРавенство(Отбор,ЛевоеЗначение,правоеЗначение) экспорт
	ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ЛевоеЗначение);
	ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;
	ЭлементОтбора.ВидСравнения = ВИдСравненияКомпоновкиДанных.Равно;
КонеЦпроцедуры

Функция ЗапрещеноРедактировать(Ссылка,ЭтаФорма = Неопределено) экспорт
	
	//{ СИТЕК БрыляковЕЮ 2014-12-28  
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПланируемаяПоставка") Тогда
		Возврат Izh_ОбменEDI.ПланПоставкаОтправленаПолностью(Ссылка);
	КонецЕсли;
	// СИТЕК БрыляковЕЮ 2014-12-28 }
	
	//{БредовЮГ 2013-11-30 Наряд №000134783
	Если ПараметрыСеанса.ЭтоЦентр И ТипЗнч(Ссылка)=Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		Возврат Истина;
	КонецЕсли;
	//БредовЮГ 2013-11-30 Наряд №000134783}
	
	//{ СИТЕК БрыляковЕЮ 2015-04-30  
	// Исходный текст --> 
	//Если Ссылка.Проведен = Истина Тогда
	//	Возврат Истина;
	//КонецЕсли;
	// <-- Исходный текст 
	Если Izh_ОбменДанными.ЗапрещеноИзменение(Ссылка) Тогда
		Возврат Истина;
	КонецЕсли;
	// СИТЕК БрыляковЕЮ 2015-04-30 }
	
	КоличествоДней = ПараметрыСеанса.КоличествоДнейРедактированияДокументов;
	Если КоличествоДней > 0 Тогда
		Если Ссылка.Дата < ТекущаяДата()-КоличествоДней*3600*24 Тогда
			Если ЭтаФорма = Неопределено Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Запрещено изменение! Установлена дата запрета редактирования'"),Ссылка);
			Иначе	
				//ЭтаФорма.АвтоЗаголовок = Ложь;
				ЭтаФорма.Заголовок = "Запрещено изменение!";
			КонецЕсли;
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	//{БредовЮГ 2014-11-24 Наряд №000134783   Закомментарил проверку на отправку в RIB
	//ТолькоПросмотр = ОбменДаннымиRIBСервер.ОбъектОтправлен(Ссылка);
	//Если ТолькоПросмотр Тогда
	//	Если ЭтаФорма = Неопределено Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//		НСтр("ru = 'Запрещено изменение! Объект уже отправлен в другие системы!'"),Ссылка);
	//	Иначе	
	//		//ЭтаФорма.АвтоЗаголовок = Ложь;
	//		ЭтаФорма.Заголовок = "Запрещено изменение!";
	//	КонецЕсли;
	//КонецЕсли;
	//ТолькоПросмотр = РегистрыСведений.Izh_ОтправленныеОбъекты.ОбъектОтправлен(Ссылка);		
	//Если ТолькоПросмотр Тогда
	//	Если ЭтаФорма = Неопределено Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//		НСтр("ru = 'Запрещено изменение! Объект уже отправлен в другие системы!'"),Ссылка);
	//	Иначе	
	//		//ЭтаФорма.АвтоЗаголовок = Ложь;
	//		ЭтаФорма.Заголовок = "Запрещено изменение!";
	//	КонецЕсли;
	//КонецЕсли;
	Возврат Ложь;
	//БредовЮГ 2014-11-24 Наряд №000134783}
КонецФункции	

Функция ПолучитьКоличествоДнейРедактированияДокументов() экспорт
	Возврат ПараметрыСеанса.КоличествоДнейРедактированияДокументов;
КонецФункции


Функция ПолучитьЦеныЗакупки(тз,Дата,Фирма,СтруктурнаяЕдиница) экспорт
	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц =Новый МенеджерВременныхТаблиц;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	&Состав КАК Состав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ц.Номенклатура,
	|	Ц.ЕдиницаИзмерения,
	|	МАКСИМУМ(Ц.Цена) КАК Цена,
	|	МАКСИМУМ(Ц.ЦенаУпр) КАК ЦенаУпр,
	|	МАКСИМУМ(Ц.СуммаНДС) КАК СуммаНДС,
	|	МАКСИМУМ(Ц.СуммаНДСУпр) КАК СуммаНДСУпр
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена КАК Цена,
	|		0 КАК ЦенаУпр,
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДС КАК СуммаНДС,
	|		0 КАК СуммаНДСУпр
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
	|				&Дата,
	|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|					И Регистратор.Контрагент ССЫЛКА Справочник.Контрагенты
	|					И ВЫБОР
	|						КОГДА Регистратор ССЫЛКА Документ.ПриходнаяНакладная
	|							ТОГДА НЕ Регистратор.БонуснаяПоставка
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И Фирма = &Фирма
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							т.Номенклатура
	|						ИЗ
	|							состав КАК т)) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура,
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения,
	|		0,
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.ЦенаУпр,
	|		0,
	|		ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДСУпр
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
	|				&Дата,
	|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|					И Регистратор.Контрагент ССЫЛКА Справочник.Контрагенты
	|					И ВЫБОР
	|						КОГДА Регистратор ССЫЛКА Документ.ПриходнаяНакладная
	|							ТОГДА НЕ Регистратор.БонуснаяПоставка
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							т.Номенклатура
	|						ИЗ
	|							Состав КАК т)) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних) КАК Ц
	|
	|СГРУППИРОВАТЬ ПО
	|	Ц.Номенклатура,
	|	Ц.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Цены.Цена,
	|	Цены.ЦенаУпр,
	|	Цены.СуммаНДС,
	|	Цены.СуммаНДСУпр
	|ИЗ
	|	Состав КАК Состав
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО Состав.Номенклатура = Цены.Номенклатура
	|			И Состав.ЕдиницаИзмерения = Цены.ЕдиницаИзмерения";
	Запрос.УстановитьПараметр("Состав",тз);
	Запрос.УстановитьПараметр("Дата",Дата);
	Запрос.УстановитьПараметр("Фирма",Фирма);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",СтруктурнаяЕдиница);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	


Функция ПолучитьБазовуюЕдиницуИзмерения(Номенклатура) экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕдиницыИзмерения.Ссылка
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Владелец = &Владелец
	|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = ЕдиницыИзмерения.Владелец.БазоваяЕдиницаИзмерения
	|	И (НЕ ЕдиницыИзмерения.ПометкаУдаления)");	
	Запрос.УстановитьПараметр("Владелец",Номенклатура);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
КонецФункции	

Функция ПолучитьЕдиницуИзмеренияНоменклатурыПоКлассификатору(Номенклатура,КлассификаторЕдиницыИзмерения) экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕдиницыИзмерения.Ссылка
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.ПометкаУдаления = ЛОЖЬ
	|	И ЕдиницыИзмерения.Владелец = &Владелец
	|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &КлассификаторЕдиницыИзмерения");
	Запрос.УстановитьПараметр("Владелец",Номенклатура);
	Запрос.УстановитьПараметр("КлассификаторЕдиницыИзмерения",КлассификаторЕдиницыИзмерения);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;	
КонецФункции	

//ФУнкция СохранитьНастройкиПользователяВДокументах(Фирма,Склад,Касса) экспорт
//	Настройки = новый Структура("Фирма,Склад,Касса",Фирма,?(Склад=неопределено,ПолучитьЗначение("Склад"),склад),?(Касса = неопределено,ПолучитьЗначение("Касса"),Касса));
//	НаборЗаписей=РегистрыСведений.ДопНастройкиФорм.СоздатьНаборЗаписей();
//	Наборзаписей.Отбор.Пользователь.установить(параметрыСеанса.ТекущийПользователь);
//	НаборЗаписей.Отбор.объектМД.установить(неопределено);
//	НаборЗаписей.Отбор.Форма.установить(неопределено);
//	наборЗаписей.Прочитать();
//	НАборЗаписей.Очистить();
//	НаборЗаписей.Записать();
//	НоваяЗапись = НаборЗаписей.Добавить();
//	НоваяЗапись.Пользователь = параметрыСеанса.ТекущийПользователь;
//	НоваяЗапись.ОбъектМД = неопределено;                                                  
//	НоваяЗапись.форма = неопределено;
//	НоваяЗапись.настройка= новый ХранилищеЗначения(НАстройки);
//	НаборЗаписей.Записать();
//конецфункции

Функция ПолучитьЗначение(Имя)
	Значение = неопределено;
	Запрос = новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	ДопНастройкиФорм.Настройка
	|ИЗ
	|	РегистрСведений.ДопНастройкиФорм КАК ДопНастройкиФорм
	|ГДЕ
	|	ДопНастройкиФорм.ОбъектМД = &НЕОПРЕДЕЛЕНО
	|	И ДопНастройкиФорм.Форма = &НЕОПРЕДЕЛЕНО
	|	И ДопНастройкиФорм.Пользователь = &Пользователь" ;
	Запрос.установитьПараметр("Пользователь",ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Неопределено","");
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() цикл
		СтрукНастройки =Выборка.Настройка;
		Настройка = СТрукНастройки.получить();
		Настройка.Свойство(Имя,Значение);
	конеццикла;
	возврат Значение;
Конецфункции

//Функция ПОлучитьНастройкиПользователяВДокументах(Объект)     экспорт
//	Настройки = неопределено;
//	Запрос = новый Запрос;
//	Запрос.Текст =  "ВЫБРАТЬ
//	|	ДопНастройкиФорм.Настройка
//	|ИЗ
//	|	РегистрСведений.ДопНастройкиФорм КАК ДопНастройкиФорм
//	|ГДЕ
//	|	ДопНастройкиФорм.ОбъектМД = &НЕОПРЕДЕЛЕНО
//	|	И ДопНастройкиФорм.Форма = &НЕОПРЕДЕЛЕНО
//	|	И ДопНастройкиФорм.Пользователь = &Пользователь" ;
//	Запрос.установитьПараметр("Пользователь",ПараметрыСеанса.ТекущийПользователь);
//	Запрос.УстановитьПараметр("Неопределено","");
//	Рез = Запрос.Выполнить();
//	Выборка = Рез.Выбрать();
//	Пока Выборка.Следующий() цикл
//		СтрукНастройки =Выборка.Настройка;
//		Настройки = СТрукНастройки.получить();
//	конеццикла;
//	ЗагрузитьНАстройкиПОльзователяВДокументах(Объект,Настройки);
//	возврат Настройки;
//Конецфункции

//Процедура ЗагрузитьНастройкиПОльзователяВДокументах(ОБъект,Настройки) экспорт
//	//Если Не ЗначениеЗаполнено(Объект.ссылка) тогда
//		УстановитьНастройку(Объект,Настройки,"Фирма");
//		УстановитьНастройку(Объект,Настройки,"Склад");
//		УстановитьНАстройку(Объект,Настройки,"Касса");
//	//Конецесли;
//конецпроцедуры

//Процедура УстановитьНастройку(Объект,Настройки,Имя)
//	Если настройки = неопределено тогда
//		возврат;
//	Конецесли;
//	значение = неопределено;
//	Настройки.Свойство(Имя,Значение);
//	если Значение<>Неопределено  тогда
//		попытка
//			Если не ЗначениеЗаполнено(Объект[Имя]) тогда
//				Объект[Имя]=Значение;
//			Конецесли;
//		Исключение
//		конецпопытки;
//	конецесли;
//конецпроцедуры


//Процедура СохранитьНастройкиПользователяПрочее(Настройки,ОбъектМД,форма=Неопределено) экспорт
//	НаборЗаписей=РегистрыСведений.ДопНастройкиФорм.СоздатьНаборЗаписей();
//	Наборзаписей.Отбор.Пользователь.установить(параметрыСеанса.ТекущийПользователь);
//	НаборЗаписей.Отбор.объектМД.установить(ОбъектМД);
//	НаборЗаписей.Отбор.Форма.установить(форма);
//	наборЗаписей.Прочитать();
//	НАборЗаписей.Очистить();
//	НаборЗаписей.Записать();
//	НоваяЗапись = НаборЗаписей.Добавить();
//	НоваяЗапись.Пользователь = параметрыСеанса.ТекущийПользователь;
//	НоваяЗапись.ОбъектМД = ОбъектМД;                                                  
//	НоваяЗапись.форма = форма;
//	НоваяЗапись.настройка= новый ХранилищеЗначения(НАстройки);
//	НаборЗаписей.Записать();
//КонецПроцедуры

//Процедура ПОлучитьНастройкиПользователя(Объект,ОбъектМД) экспорт
//	Настройки = неопределено;
//	Запрос = новый Запрос;
//	Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
//					|	ДопНастройкиФорм.Настройка
//					|ИЗ
//					|	РегистрСведений.ДопНастройкиФорм КАК ДопНастройкиФорм
//					|ГДЕ
//					|	ДопНастройкиФорм.ОбъектМД = &ОбъектМД
//					|	И ДопНастройкиФорм.Форма = &НЕОПРЕДЕЛЕНО
//					|	И ДопНастройкиФорм.Пользователь = &Пользователь" ;
//	Запрос.установитьПараметр("Пользователь",ПараметрыСеанса.ТекущийПользователь);
//	Запрос.установитьПараметр("ОбъектМД",ОбъектМД);
//	Запрос.УстановитьПараметр("Неопределено","");
//	Рез = Запрос.Выполнить();
//	Выборка = Рез.Выбрать();
//	Пока Выборка.Следующий() цикл
//		СтрукНастройки =Выборка.Настройка;
//		Настройки = СТрукНастройки.получить();
//	конеццикла;
//	Если ТипЗнч(Настройки) = Тип("Структура") Тогда
//		Для Каждого Строка Из Настройки Цикл
//			УстановитьНастройку(Объект,Настройки,Строка.Ключ);	
//		КонецЦикла;	
//	КонецЕсли;	
//КонецПроцедуры
