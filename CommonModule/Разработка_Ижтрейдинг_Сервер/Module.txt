////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////ОБМЕН ДАННЫМИ С 7.7 //////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/////////////// ПОДПИСКА НА СОБЫТИЕ "ПРИ ЗАПИСИ" ///////////////////////////////
Процедура ЗарегистрироватьВПланахОбмена77(Объект)
	ОбъектМетаданные = Объект.Метаданные();
	Если Метаданные.ПланыОбмена.ОбменБаза77.Состав.Содержит(ОбъектМетаданные) Тогда
		Выборка = ПланыОбмена.ОбменБаза77.Выбрать();
		ЭтотУзел = ПланыОбмена.ОбменБаза77.ЭтотУзел();
		Пока Выборка.Следующий() Цикл
			Узел = Выборка.Ссылка;
			Если Узел = ЭтотУзел Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТЧ = Узел.ТипыДокументов.Найти(ОбъектМетаданные.Имя,"ТипДокумента");
			Если СтрокаТЧ<>Неопределено И НЕ СтрокаТЧ.Использовать Тогда
				Продолжить;
			КонецЕсли;
			//++Минин 17-03-2015 наряд 000144584
			//убрал регистрацию в планах обмена Счет фактуры, если контрагент СЕ и работает в rs.store
			Если ТипЗнч(Объект) = Тип("ДокументОбъект.СчетФактура") И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда 
				Если Не Объект.Контрагент.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив Тогда
					ПланыОбмена.ЗарегистрироватьИзменения(Узел,Объект);	
				КонецЕсли;
			Иначе
				//--Минин 17-03-2015 наряд 000144584
				ПланыОбмена.ЗарегистрироватьИзменения(Узел,Объект);	
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

Процедура ПриУдаленииДокументаРегистрацияПередУдалением(Источник, Отказ) Экспорт
	ЗарегистрироватьВПланахОбмена77(Источник)
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////// ОБМЕН ДАННЫМИ С 7.7 /////////////////////////////////
Процедура ПроизвестиОбменДаннымиПоУзлам77() Экспорт
	Выборка = ПланыОбмена.ОбменБаза77.Выбрать();
	ЭтотУзел = ПланыОбмена.ОбменБаза77.ЭтотУзел();
	Пока Выборка.Следующий() Цикл
		Узел = Выборка.Ссылка;
		Если Узел = ЭтотУзел Тогда
			Продолжить;
		КонецЕсли;
		ОбменДанными(Узел);
	КонецЦикла;	
КонецПроцедуры


Процедура ОбменДанными(Ссылка) Экспорт
	КаталогВыгрузки = Ссылка.Каталог;	
	ВсеОшибки = "";
	КоличествоОшибок = 0;
	КоличествоПакетов = 0;
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Ссылка, Ссылка.НомерОтправленного+1);
	СтруктураКонстант = ПолучитьЗначениеКонстанты("ПараметрыВыгрузкиДанных77");
	ТекстПисьма = "";
	Пока ВыборкаИзменений.Следующий() Цикл
		Ошибка = "";
		Объект = ВыборкаИзменений.Получить();
		ТипОбъекта = ТипЗнч(Объект);
		Ушло = Ложь;
		Попытка
			Если ПараметрыСеанса.ЭтоЦентр Тогда
				//Грузим из магазина
				Ушло = Истина;
			Иначе	
				Если ТипОбъекта = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
					ЕстьНулевыеЦены = ОбменДаннымиЦВДСервер.ЕстьНулевыеЦены(Объект.Ссылка);
					Если ЕстьНулевыеЦены И НЕ Объект.БонуснаяПоставка Тогда
						Ошибка = "Приходная накладная с нулевыми ценами ("+Объект.Ссылка+")";
						Ушло = Ложь;
					Иначе
						Ушло = ОтправитьПриходнуюНакладную(Объект,КаталогВыгрузки,Ошибка); // поправил, протестировать
					КонецЕсли;	
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.РасходнаяНакладная") Тогда
					//{{ШиловМВ 05.12.14 №000135962
					Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") И Объект.Контрагент.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив Тогда
						Ушло = Истина;
						//ШиловМВ 05.12.14 №000135962}}
					Иначе
						Если Объект.Возврат Тогда
							Ушло = ОтправитьВозвратнуюПоставщику(Объект,КаталогВыгрузки,Ошибка);
							//dps+ 12.05.2014   Наряд №115829	
						Иначе
							Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") И Объект.Фирма = Объект.Контрагент.Организация Тогда
								Ушло = ОтправитьПеремещениеТоваров(Объект,КаталогВыгрузки,Ошибка);
							Иначе 						
								//dps- 	
								Ушло = ОтправитьРасходнуюНакладную(Объект,КаталогВыгрузки,Ошибка);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.Инвентаризация") Тогда
					Ушло = ОтправитьИнвентаризацию(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ZОтчет") Тогда
					Ушло = ОтправитьZОтчет(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.КоррекцияЗапасов") Тогда
					Ушло = ОтправитьКоррекциюЗапасов(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ВозвратнаяНакладнаяОтПокупателя") Тогда
					Ушло = ОтправитьВозвратнуюОтПокупателя(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ПередачаТоваровМеждуФирмами") Тогда
					Ушло = ОтправитьПередачуТоваровМеждуФирмами(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.Комплектация") Тогда
					Ушло = ОтправитьКомплектациюРазукомплектацию(Объект,КаталогВыгрузки,Ошибка);                                              
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.СчетФактура") Тогда
					Ушло = ОтправитьСчетФактура(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.Перемещение") Тогда
					Ушло = ОтправитьПеремещениеМеждуВС(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ПриложениеПоАлкоголю") Тогда
					Ушло = ОтправитьПриложениеПоАлкоголю(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.КорректировкаПоступления") Тогда	
					Ушло = ОтправитьКорректировкуПоступления(Объект,КаталогВыгрузки,Ошибка);
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.КорректировкаРеализации") Тогда	
					//{{ШиловМВ 05.12.14 №000135962
					Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") И Объект.Контрагент.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив Тогда
						Ушло = Истина;
						//ШиловМВ 05.12.14 №000135962}}
					Иначе
						Ушло = ОтправитьКорректировкуРеализации(Объект,КаталогВыгрузки,Ошибка);
					КонецЕсли;
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.РегистрацияСчетФактуры") Тогда	
					Ушло = ОтправитьРегистрациюСчетФактуры(Объект,КаталогВыгрузки,Ошибка);
					//dps+ 24.04.2014   Наряд №000114509
				ИначеЕсли ТипОбъекта = Тип("ДокументОбъект.ПланируемаяПоставка") Тогда	
					Ушло = ОтправитьПланируемуюПоставку(Объект,КаталогВыгрузки,Ошибка);
					//dps- 24.04.2014 
				ИначеЕсли ТипОбъекта = Тип("УдалениеОбъекта") Тогда
					Ушло = Истина;  // в базе документы остаются помеченные на удаление
				КонецЕсли;
			КонецЕсли;
			Если Ушло Тогда
				ПланыОбмена.УдалитьРегистрациюИзменений(Ссылка, Объект);
			КонецЕсли; 
			КоличествоПакетов = КоличествоПакетов + 1;
			Если Ошибка <> "" Тогда
				ВсеОшибки = Ошибка;
				КоличествоОшибок = КоличествоОшибок + 1;
			КонецЕсли;	
		Исключение
			ТекстПисьма = ТекстПисьма + ?(ПустаяСтрока(ТекстПисьма),"",Символы.ПС)+Объект+">>> " +ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла; 
	Если НЕ ПустаяСтрока(ТекстПисьма) Тогда
		Если СтруктураКонстант.Свойство("ПочтаАдминистратора") Тогда
			АдресПолучателя = СтруктураКонстант.ПочтаАдминистратора;
		Иначе
			АдресПолучателя = "lag@milan2000.ru";
		КонецЕсли;
		УчетнаяЗапись = ЭлектроннаяПочта.ПолучитьСистемнуюУчетнуюЗапись();
		ПараметрыПисьма = Новый Структура;
		ПараметрыПисьма.Вставить("Тема", "Ошибки при выгрузке данных из RS.WH ");
		ПараметрыПисьма.Вставить("Тело", ТекстПисьма);
		ПараметрыПисьма.Вставить("Кому", АдресПолучателя);
		Попытка
			ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
			ЗаписьЖурналаРегистрации("Обмен данными", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось выгрузить данные в 7.7: "+ТекстПисьма);
		Исключение
			ЗаписьЖурналаРегистрации("Обмен данными", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось отправить письмо на почту: "+АдресПолучателя + " ("+ОписаниеОшибки()+")"+ТекстПисьма);		
		КонецПопытки;
	КонецЕсли;
	Если ВсеОшибки <> "" Тогда
		Сообшение = "Всего ошибок - "+КоличествоОшибок+" из "+КоличествоПакетов+"
		| последняя ошибка:
		|"+ВсеОшибки;
		ВызватьИсключение(Сообшение);
	КонецЕсли;	
КонецПроцедуры

Функция ОтправитьСообщение(Package,КаталогВыгрузки,Имя, ТипХМЛ = "http://1c-astor.ru/Base77")
	ЗаписьXML = Новый ЗаписьXML;
	стрИмяФайла = КаталогВыгрузки+"\"+Имя+"_"+Package.Ref+".xml";
	Результат = Истина;
	Попытка
		ЗаписьXML.ОткрытьФайл(стрИмяФайла);
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,Package,Имя, ТипХМЛ ,,НазначениеТипаXML.Явное);
		ЗаписьXML.Закрыть();
	Исключение
		Package = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке(),"Выгрузка в базу 7.7");
		Результат = Ложь;
	КонецПопытки;
	Возврат Результат;
КонецФункции

Функция ОтправитьПриложениеПоАлкоголю(Объект,КаталогВыгрузки,Ошибка)
	ТипXDTO = "DocumentObject_ПриложениеПоАлкоголю";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.Склад = Строка(Объект.Склад.Код);
	Пакет.ТипАвто= ?(ЗначениеЗаполнено(Объект.ТипАвто),Строка(Объект.ТипАвто),"Грузовой");
	Пакет.ТоннажАвто = Объект.ТоннажАвто;
	Пакет.ГосНомер = Объект.ГосНомер;
	Пакет.Перевозчик = ?(ЗначениеЗаполнено(Объект.Перевозчик),Формат(Объект.Перевозчик.Код,"ЧГ=0"),"");
	Пакет.Водитель = Объект.Водитель;
	Пакет.ЛицСерия = Объект.ЛицСерия;
	Пакет.ЛицНомер = Объект.ЛицНомер;
	Пакет.ЛицКемВыдан = Объект.ЛицКемВыдан;	
	Пакет.ЛицДатаВыдачи = Объект.ЛицДатаВыдачи;
	Пакет.ЛицДатаОкончания = Объект.ЛицДатаОкончания;
	Пакет.Комментарий = Объект.Комментарий;
	Пакет.ДокОснование = ?(Объект.ДокОснование=Неопределено,"",Строка(Объект.ДокОснование.УникальныйИдентификатор()));
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПриложениеПоАлкоголюСостав.НомерСтроки КАК НомерСтрокиТЧ,
	|	ЕСТЬNULL(ПриложениеПоАлкоголюСостав.Номенклатура.Код, """") КАК Номенклатура,
	|	ПриложениеПоАлкоголюСостав.Коэффициент,
	|	ПриложениеПоАлкоголюСостав.Количество,
	|	ПОДСТРОКА(ЕстьNULL(ПриложениеПоАлкоголюСостав.ВидАлкогольнойПродукции.Наименование,""""), 1, 3) КАК ВидАлкогольнойПродукции,
	|	ЕстьNULL(ПриложениеПоАлкоголюСостав.ВидАлкогольнойПродукции.Наименование,"""") КАК НаименованиеКатегории,
	|	ЕСТЬNULL(ПриложениеПоАлкоголюСостав.Производитель.ИНН, """") КАК ИННПроизводитель,
	|	ЕСТЬNULL(ПриложениеПоАлкоголюСостав.Производитель.КПП, """") КАК КПППроизводитель,
	|	ЕстьNULL(ПриложениеПоАлкоголюСостав.Производитель.ПолноеНаименование,"""") КАК НаименованиеПроизводитель
	|ИЗ
	|	Документ.ПриложениеПоАлкоголю.Состав КАК ПриложениеПоАлкоголюСостав
	|ГДЕ
	|	ПриложениеПоАлкоголюСостав.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ПриложениеПоАлкоголю_Состав");
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтрокиТЧ,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.Номенклатура         = Выборка.Номенклатура;
		ПакетСостав.Коэффициент             = Выборка.Коэффициент;
		ПакетСостав.Количество = Выборка.Количество;
		ПакетСостав.ВидАлкогольнойПродукции      = Выборка.ВидАлкогольнойПродукции;
		ПакетСостав.НаименованиеКатегории = Выборка.НаименованиеКатегории;
		ПакетСостав.ИННПроизводитель  = Выборка.ИННПроизводитель;
		ПакетСостав.КПППроизводитель  = Выборка.КПППроизводитель;
		ПакетСостав.НаименованиеПроизводитель = Выборка.НаименованиеПроизводитель;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

Функция ОтправитьПриходнуюНакладную(Объект,КаталогВыгрузки,Ошибка)  // сделано, протестировать
	//Если НЕ Объект.ОбработанЦВД Тогда
	//	Возврат Истина;
	//КонецЕсли;	
	ТипXDTO = "DocumentObject_ПриходнаяНакладная";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.БонуснаяПоставка = Объект.БонуснаяПоставка;
	Пакет.Валюта = Объект.Валюта.Код;
	//Котлячкова  24,07,14
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ТипЗнч(Объект.Грузоотправитель)=Тип("СправочникСсылка.Контрагенты") Тогда 
		Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Объект.Грузоотправитель),Объект.Грузоотправитель.Родитель.Код,"");
	Иначе 
		Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Объект.Грузоотправитель),Объект.Грузоотправитель.Код,"");
	КонецЕсли;
	//Котлячкова
	Пакет.ГрузополучательТип = ?(Объект.Грузополучатель = Неопределено,"",Объект.Грузополучатель.Метаданные().Имя);
	Пакет.Грузополучатель = ?(Объект.Грузополучатель = Неопределено,"",Объект.Грузополучатель.Код);
	Пакет.НомерДокумента = Объект.НомерДокумента;
	Пакет.ДатаДокумента = Объект.ДатаДокумента;
	Пакет.НомерСФ = Объект.НомерСФ;	
	Пакет.ДатаСФ = Объект.ДатаСФ;
	Пакет.КонтрагентТип = Объект.Контрагент.Метаданные().Имя;
	//Котлячкова  24,07,14
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда 
		Пакет.Контрагент = Объект.Контрагент.Родитель.Код;
	Иначе 
		Пакет.Контрагент = Объект.Контрагент.Код;
	КонецЕсли;
	//Котлячкова
	Пакет.КурсВалютыДоговора = Объект.Курс;
	Пакет.Идентификатор77 = Объект.Идентификатор77;
	
	Пакет.Приемщик = Объект.Приемщик.Код;
	Пакет.Склад = Объект.Склад.Код;
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Объект.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Объект.ТипДоговора)).Имя,"");
	Пакет.ИтогоВсего = Объект.СуммаИтого;
	//Пакет.Алко = ОпределитьПрисутствиеАлкоголя(Объект.Ссылка);
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		Пакет.ДокОснование = Пакет.Ref;
	КонецЕсли;	
	Если Объект.Контрагент.Метаданные().Имя= "СтруктурныеЕдиницы" Тогда
		Пакет.ФирмаОсновная = ?(ЗначениеЗаполнено(Объект.Контрагент.Организация),Объект.Контрагент.Организация.Код,"");
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.Сумма) КАК Себестоимость,
	|	ОстаткиНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА ПриходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК ВидНоменклатуры,
	|	ЕстьNULL(ПриходнаяНакладнаяСостав.Номенклатура.Код,"""") КАК Номенклатура,
	|	ПриходнаяНакладнаяСостав.НомерСтроки,
	|	ЕСТЬNULL(ПриходнаяНакладнаяСостав.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	ПриходнаяНакладнаяСостав.Ссылка,
	|	СУММА(ПриходнаяНакладнаяСостав.Количество * ПриходнаяНакладнаяСостав.Коэффициент) КАК Количество,
	|	СУММА(ЕСТЬNULL(ОстаткиНоменклатуры.Себестоимость, 0)) КАК Себестоимость,
	|	СУММА(ПриходнаяНакладнаяСостав.Сумма) КАК Сумма,
	|	СУММА(ПриходнаяНакладнаяСостав.Цена) КАК Цена,
	|	СУММА(ПриходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС,
	|	ЕстьNULL(ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.Коэффициент,1) КАК Коэффициент
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ПО ПриходнаяНакладнаяСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходнаяНакладнаяСостав.Ссылка,
	|	ПриходнаяНакладнаяСостав.Коэффициент,
	|	ПриходнаяНакладнаяСостав.СтавкаНДС.Ставка,
	|	ПриходнаяНакладнаяСостав.Номенклатура.Код,
	|	ПриходнаяНакладнаяСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА ПриходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ,
	|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.Коэффициент");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ПриходнаяНакладная_Состав");
	ТипМатериалы = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ПриходнаяНакладная_Материалы");
	
	
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.СтавкаНДС     = Выборка.СтавкаНДС;
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.Сумма         = Выборка.Себестоимость;
		ПакетСостав.Цена             = Выборка.Цена;
		ПакетСостав.Себестоимость = Выборка.Себестоимость;
		ПакетСостав.СуммаНДС      = Выборка.СуммаНДС;
		ПакетСостав.ВидНоменклатуры  = Выборка.ВидНоменклатуры;
		ПакетСостав.Количество  = Выборка.Количество;
		ПакетСостав.Номенклатура  = Выборка.Номенклатура;
		ПакетСостав.Коэффициент  = Выборка.Коэффициент;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

Функция ОтправитьРегистрациюСчетФактуры(Объект,КаталогВыгрузки,Ошибка)
	ТипXDTO = "DocumentObject_РегистрацияСчетФактуры";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РегистрацияСчетФактуры.Ссылка,
	|	РегистрацияСчетФактуры.ПометкаУдаления КАК DeletionMark,
	|	РегистрацияСчетФактуры.Дата КАК Date,
	|	РегистрацияСчетФактуры.Номер КАК Number,
	|	РегистрацияСчетФактуры.Проведен КАК Posted,
	|	РегистрацияСчетФактуры.ДокументОснование КАК ДокОснование,
	|	РегистрацияСчетФактуры.НомерВходящегоДокумента КАК НомерСФ,
	|	РегистрацияСчетФактуры.ДатаВходящегоДокумента КАК ДатаСФ
	|ИЗ
	|	Документ.РегистрацияСчетФактуры КАК РегистрацияСчетФактуры
	|ГДЕ
	|	РегистрацияСчетФактуры.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	//Если ТипЗнч(Выборка.ДокОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
	//	ДокИсходнаяПриходнаяНакладная = УчетНДС.ПолучитьИсправляемыйДокументПоступления(Выборка.ДокОснование,Истина);
	//	Запрос = Новый Запрос("ВЫБРАТЬ
	//	|	РегистрацияСчетФактуры.Ссылка
	//	|ИЗ
	//	|	Документ.РегистрацияСчетФактуры КАК РегистрацияСчетФактуры
	//	|ГДЕ
	//	|	РегистрацияСчетФактуры.ДокументОснование = &ДокументОснование");
	//	Запрос.УстановитьПараметр("ДокументОснование",ДокИсходнаяПриходнаяНакладная);
	//	Результат = Запрос.Выполнить();
	//	ВыборкаСчФ = Результат.Выбрать();
	//	ВыборкаСчФ.Следующий();
	//	ДокСчетФактураИзначальный = ВыборкаСчФ.Ссылка;
	//	Пакет.Ref = Строка(ДокСчетФактураИзначальный.УникальныйИдентификатор());	
	//Иначе
	Пакет.Ref = Строка(Выборка.Ссылка.УникальныйИдентификатор());	
	//КонецЕсли;
	
	Пакет.DeletionMark = Выборка.DeletionMark;
	Пакет.Date = Выборка.Date;
	Пакет.Number = Выборка.Number;
	Пакет.Posted = Выборка.Posted;
	Если ТипЗнч(Выборка.ДокОснование) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		ДокИсходнаяПриходнаяНакладная = УчетНДС.ПолучитьИсправляемыйДокументПоступления(Выборка.ДокОснование,Истина);	
		Пакет.ДокОснование = Строка(ДокИсходнаяПриходнаяНакладная.УникальныйИдентификатор());
	Иначе
		Пакет.ДокОснование = Строка(Выборка.ДокОснование.УникальныйИдентификатор());
	КонецЕсли;
	
	Пакет.НомерСФ = Выборка.НомерСФ;
	Пакет.ДатаСФ = Выборка.ДатаСФ;
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
	
КонецФункции

Функция ВернутьДанныеПоКорректировкеПоступления(ВходящийОбъект)
	ДокИсходнаяПриходнаяНакладная = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ВходящийОбъект.ДокументПоступления,Истина);
	ДокКорректируемый = ВходящийОбъект.ДокументПоступления;
	
	Если ВходящийОбъект.Проведен Тогда  // если проведен, тогда выгружаем корректировку поступления
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ПриходнаяНакладная.Ссылка КАК Ref,
		|	ПриходнаяНакладная.ПометкаУдаления КАК DeletionMark,
		|	ПриходнаяНакладная.Дата КАК Date,
		|	ПриходнаяНакладная.Номер КАК Number,
		|	ПриходнаяНакладная.Проведен КАК Posted,
		|	КорректировкаПоступления.Фирма,
		|	ПриходнаяНакладная.БонуснаяПоставка,
		|	ПриходнаяНакладная.Валюта,
		|	ПриходнаяНакладная.Грузоотправитель,
		|	ПриходнаяНакладная.Грузополучатель,
		|	КорректировкаПоступления.НомерДокумента,
		|	КорректировкаПоступления.ДатаДокумента,
		|	КорректировкаПоступления.НомерСФ,
		|	КорректировкаПоступления.ДатаСФ,
		|	КорректировкаПоступления.Контрагент,
		|	ПриходнаяНакладная.Курс КАК Курс,
		|	ПриходнаяНакладная.Идентификатор77,
		|	ПриходнаяНакладная.Приемщик,
		|	ПриходнаяНакладная.Склад,
		|	КорректировкаПоступления.СтруктурнаяЕдиница,
		|	ПриходнаяНакладная.ТипДоговора,
		|	КорректировкаПоступления.СуммаИтого КАК ИтогоВсего,
		|	КорректировкаПоступления.Состав.(
		|		СтавкаНДС.Ставка КАК СтавкаНДС,
		|		НомерСтроки КАК НомерСтрокиТЧ,
		|		Сумма,
		|		Цена,
		|		0 КАК Себестоимость,
		|		СуммаНДС,
		|		ВЫБОР
		|			КОГДА КорректировкаПоступления.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
		|					ИЛИ КорректировкаПоступления.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|				ТОГДА КорректировкаПоступления.Состав.Номенклатура.Код
		|			КОГДА КорректировкаПоступления.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
		|				ТОГДА ""п""
		|			ИНАЧЕ ""т""
		|		КОНЕЦ КАК ВидНоменклатуры,
		|		Количество,
		|		Номенклатура.Код КАК Номенклатура,
		|		Коэффициент
		|	)
		|ИЗ
		|	Документ.КорректировкаПоступления КАК КорректировкаПоступления,
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	КорректировкаПоступления.Ссылка = &Корректировка
		|	И ПриходнаяНакладная.Ссылка = &ПриходнаяНакладная");
		Запрос.УстановитьПараметр("ПриходнаяНакладная",ДокИсходнаяПриходнаяНакладная);
		Запрос.УстановитьПараметр("Корректировка",ВходящийОбъект.Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка;
	Иначе
		Если ТипЗнч(ДокКорректируемый) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	ПриходнаяНакладная.Ссылка КАК Ref,
			|	ПриходнаяНакладная.ПометкаУдаления КАК DeletionMark,
			|	ПриходнаяНакладная.Дата КАК Date,
			|	ПриходнаяНакладная.Номер КАК Number,
			|	ПриходнаяНакладная.Проведен КАК Posted,
			|	ПриходнаяНакладная.Фирма,
			|	ПриходнаяНакладная.БонуснаяПоставка,
			|	ПриходнаяНакладная.Валюта,
			|	ПриходнаяНакладная.Грузоотправитель,
			|	ПриходнаяНакладная.Грузополучатель,
			|	ПриходнаяНакладная.НомерДокумента,
			|	ПриходнаяНакладная.ДатаДокумента,
			|	ПриходнаяНакладная.НомерСФ,
			|	ПриходнаяНакладная.ДатаСФ,
			|	ПриходнаяНакладная.Контрагент,
			|	ПриходнаяНакладная.Курс КАК Курс,
			|	ПриходнаяНакладная.Идентификатор77,
			|	ПриходнаяНакладная.Приемщик,
			|	ПриходнаяНакладная.Склад,
			|	ПриходнаяНакладная.СтруктурнаяЕдиница,
			|	ПриходнаяНакладная.ТипДоговора,
			|	ПриходнаяНакладная.СуммаИтого КАК ИтогоВсего,
			|	ПриходнаяНакладная.Состав.(
			|		СтавкаНДС.Ставка КАК СтавкаНДС,
			|		НомерСтроки КАК НомерСтрокиТЧ,
			|		Сумма,
			|		Цена,
			|		0 КАК Себестоимость,
			|		СуммаНДС,
			|		ВЫБОР
			|			КОГДА ПриходнаяНакладная.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
			|					ИЛИ ПриходнаяНакладная.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
			|				ТОГДА ПриходнаяНакладная.Состав.Номенклатура.Код
			|			КОГДА ПриходнаяНакладная.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
			|				ТОГДА ""п""
			|			ИНАЧЕ ""т""
			|		КОНЕЦ КАК ВидНоменклатуры,
			|		Количество,
			|		Номенклатура.Код КАК Номенклатура,
			|		Коэффициент
			|	)
			|ИЗ
			|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
			|ГДЕ
			|	 ПриходнаяНакладная.Ссылка = &ПриходнаяНакладная");
			Запрос.УстановитьПараметр("ПриходнаяНакладная",ДокКорректируемый);
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Возврат Выборка;
		ИначеЕсли ТипЗнч(ДокКорректируемый) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	ПриходнаяНакладная.Ссылка КАК Ref,
			|	ПриходнаяНакладная.ПометкаУдаления КАК DeletionMark,
			|	ПриходнаяНакладная.Дата КАК Date,
			|	ПриходнаяНакладная.Номер КАК Number,
			|	ПриходнаяНакладная.Проведен КАК Posted,
			|	КорректировкаПоступления.Фирма,
			|	ПриходнаяНакладная.БонуснаяПоставка,
			|	ПриходнаяНакладная.Валюта,
			|	ПриходнаяНакладная.Грузоотправитель,
			|	ПриходнаяНакладная.Грузополучатель,
			|	КорректировкаПоступления.НомерДокумента,
			|	КорректировкаПоступления.ДатаДокумента,
			|	КорректировкаПоступления.НомерСФ,
			|	КорректировкаПоступления.ДатаСФ,
			|	КорректировкаПоступления.Контрагент,
			|	ПриходнаяНакладная.Курс КАК Курс,
			|	ПриходнаяНакладная.Идентификатор77,
			|	ПриходнаяНакладная.Приемщик,
			|	ПриходнаяНакладная.Склад,
			|	КорректировкаПоступления.СтруктурнаяЕдиница,
			|	ПриходнаяНакладная.ТипДоговора,
			|	КорректировкаПоступления.СуммаИтого КАК ИтогоВсего,
			|	КорректировкаПоступления.Состав.(
			|		СтавкаНДС.Ставка КАК СтавкаНДС,
			|		НомерСтроки КАК НомерСтрокиТЧ,
			|		Сумма,
			|		Цена,
			|		0 КАК Себестоимость,
			|		СуммаНДС,
			|		ВЫБОР
			|			КОГДА КорректировкаПоступления.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
			|					ИЛИ КорректировкаПоступления.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
			|				ТОГДА КорректировкаПоступления.Состав.Номенклатура.Код
			|			КОГДА КорректировкаПоступления.Состав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
			|				ТОГДА ""п""
			|			ИНАЧЕ ""т""
			|		КОНЕЦ КАК ВидНоменклатуры,
			|		Количество,
			|		Номенклатура.Код КАК Номенклатура,
			|		Коэффициент
			|	)
			|ИЗ
			|	Документ.КорректировкаПоступления КАК КорректировкаПоступления,
			|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
			|ГДЕ
			|	КорректировкаПоступления.Ссылка = &Корректировка
			|	И ПриходнаяНакладная.Ссылка = &ПриходнаяНакладная");
			Запрос.УстановитьПараметр("ПриходнаяНакладная",ДокИсходнаяПриходнаяНакладная);
			Запрос.УстановитьПараметр("Корректировка",ДокКорректируемый);
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Возврат Выборка;
		КонецЕсли;
	КонецЕсли;
КонецФункции

// решил сделать так, возможны 3 случая состояния документа корректировка поступления
//1. просто записан - тогда выгружаются данные шапки и тч исправляемого документа   ( сделал только для приходной накладной)
//2. Помечен на удаление - тогда выгружаются данные шапки и тч исправляемого документа ( сделал только для приходной накладной)
//3. Проведен - только в этом случае выгружаются данные корректировки поступления.
Функция ОтправитьКорректировкуПоступления(Объект,КаталогВыгрузки,Ошибка)  
	
	Выборка = ВернутьДанныеПоКорректировкеПоступления(Объект);
	
	ТипXDTO = "DocumentObject_КорректировкаПоступления";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Выборка.Ref.УникальныйИдентификатор());
	Пакет.DeletionMark = Выборка.DeletionMark;
	Пакет.Date = Выборка.Date;
	Пакет.Number = Выборка.Number;
	Пакет.Posted = Выборка.Posted;
	Пакет.Фирма = Строка(Выборка.Фирма.Код);
	Пакет.БонуснаяПоставка = Выборка.БонуснаяПоставка;
	Пакет.Валюта = Выборка.Валюта.Код;
	//Котлячкова  24,07,14
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ТипЗнч(Выборка.Грузоотправитель)=Тип("СправочникСсылка.Контрагенты")  Тогда 
		Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Выборка.Грузоотправитель),Выборка.Грузоотправитель.Родитель.Код,"");
	Иначе 
		Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Выборка.Грузоотправитель),Выборка.Грузоотправитель.Код,"");
	КонецЕсли;
	//Котлячкова
	Пакет.ГрузополучательТип = ?(Выборка.Грузополучатель = Неопределено,"",Выборка.Грузополучатель.Метаданные().Имя);
	Пакет.Грузополучатель = ?(Выборка.Грузополучатель = Неопределено,"",Выборка.Грузополучатель.Код);
	Пакет.НомерДокумента = Выборка.НомерДокумента;
	Пакет.ДатаДокумента = Выборка.ДатаДокумента;
	Пакет.НомерСФ = Выборка.НомерСФ;	
	Пакет.ДатаСФ = Выборка.ДатаСФ;
	Пакет.КонтрагентТип = Выборка.Контрагент.Метаданные().Имя;
	//Котлячкова  24,07,14
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда 
		Пакет.Контрагент = Объект.Контрагент.Родитель.Код;
	Иначе 
		Пакет.Контрагент = Объект.Контрагент.Код;
	КонецЕсли;
	//Котлячкова
	Пакет.КурсВалютыДоговора = Выборка.Курс;
	Пакет.Идентификатор77 = Выборка.Идентификатор77;
	
	Пакет.Приемщик = Выборка.Приемщик.Код;
	Пакет.Склад = Выборка.Склад.Код;
	Пакет.СтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница.Код;
	Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Выборка.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Выборка.ТипДоговора)).Имя,"");
	Пакет.ИтогоВсего = Выборка.ИтогоВсего;
	Если ТипЗнч(Выборка.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		Пакет.ДокОснование = Выборка.Ref;
	КонецЕсли;	
	Если Объект.Контрагент.Метаданные().Имя= "СтруктурныеЕдиницы" Тогда
		Пакет.ФирмаОсновная = ?(ЗначениеЗаполнено(Выборка.Контрагент.Организация),Выборка.Контрагент.Организация.Код,"");
	КонецЕсли;
	
	тзСостав = Выборка.Состав.Выгрузить();
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_КорректировкаПоступления_Состав");
	
	Для Каждого СтрокаТЗ из тзСостав Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.СуммаНДС      = СтрокаТЗ.СуммаНДС;
		ПакетСостав.Сумма         = СтрокаТЗ.Сумма;
		ПакетСостав.СтавкаНДС     = СтрокаТЗ.СтавкаНДС;
		ПакетСостав.Номенклатура  = СтрокаТЗ.Номенклатура;
		ПакетСостав.Количество  = СтрокаТЗ.Количество;
		ПакетСостав.Цена             = СтрокаТЗ.Цена;
		ПакетСостав.Коэффициент  = СтрокаТЗ.Коэффициент;
		ПакетСостав.НомерСтрокиТЧ     = Формат(СтрокаТЗ.НомерСтрокиТЧ,"ЧЦ=4; ЧВН=; ЧГ=0");
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

//Корректировка реализации
Функция ВернутьДанныеПоКорректировкеРеализации(ВходящийОбъект)
	ДокРасходнаяНакладная = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ВходящийОбъект.ДокументРеализации, Истина);	
	ДокКорректируемый = ВходящийОбъект.ДокументРеализации;
	
	Если ВходящийОбъект.Проведен Тогда  // если проведен, тогда выгружаем корректировку реализации
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	РасходнаяНакладная.Ссылка,
		|	РасходнаяНакладная.ПометкаУдаления,
		|	РасходнаяНакладная.Дата,
		|	РасходнаяНакладная.Номер,
		|	РасходнаяНакладная.Проведен,
		|	КорректировкаРеализации.Фирма,
		|	КорректировкаРеализации.СтруктурнаяЕдиница,
		|	РасходнаяНакладная.Валюта,
		|	РасходнаяНакладная.Курс,
		|	КорректировкаРеализации.Грузоотправитель,
		|	КорректировкаРеализации.Грузополучатель,
		|	РасходнаяНакладная.Склад,
		|	КорректировкаРеализации.Контрагент,
		|	РасходнаяНакладная.ТипДоговора,
		|	КорректировкаРеализации.СуммаИтого,
		|	РасходнаяНакладная.ДокОснование,
		|	РасходнаяНакладная.НомераПаллет,
		|	КорректировкаРеализации.Состав.(
		|		НомерСтроки,
		|		Сумма,
		|		Цена,
		|		СуммаНДС,
		|		0 КАК Себестоимость,
		|		КорректировкаРеализации.Состав.Количество * КорректировкаРеализации.Состав.Коэффициент КАК Количество,
		|		СтавкаНДС.Ставка КАК СтавкаНДС,
		|		Номенклатура.Код КАК Номенклатура,
		|		Номенклатура.ВидТовара КАК ВидНоменклатуры,
		|		Коэффициент
		|	),
		|	РасходнаяНакладная.Грузчики.(
		|		НомерСтроки,
		|		Грузчик
		|	)
		|ИЗ
		|	Документ.КорректировкаРеализации КАК КорректировкаРеализации,
		|	Документ.РасходнаяНакладная КАК РасходнаяНакладная
		|ГДЕ
		|	КорректировкаРеализации.Ссылка = &Корректировка
		|	И РасходнаяНакладная.Ссылка = &ИсходныйДокумент");
		Запрос.УстановитьПараметр("Корректировка",ВходящийОбъект.Ссылка);
		Запрос.УстановитьПараметр("ИсходныйДокумент",ДокРасходнаяНакладная);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка;
	Иначе
		Если ТипЗнч(ДокКорректируемый) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	РасходнаяНакладная.Ссылка,
			|	РасходнаяНакладная.ПометкаУдаления,
			|	РасходнаяНакладная.Дата,
			|	РасходнаяНакладная.Номер,
			|	РасходнаяНакладная.Фирма,
			|	РасходнаяНакладная.Проведен,
			|	РасходнаяНакладная.СтруктурнаяЕдиница,
			|	РасходнаяНакладная.Валюта,
			|	РасходнаяНакладная.Курс,
			|	РасходнаяНакладная.Грузоотправитель,
			|	РасходнаяНакладная.Грузополучатель,
			|	РасходнаяНакладная.Склад,
			|	РасходнаяНакладная.Контрагент,
			|	РасходнаяНакладная.ТипДоговора,
			|	РасходнаяНакладная.СуммаИтого,
			|	РасходнаяНакладная.ДокОснование,
			|	РасходнаяНакладная.НомераПаллет,
			|	РасходнаяНакладная.Состав.(
			|		НомерСтроки,
			|		Сумма,
			|		Цена,
			|		СуммаНДС,
			|		0 КАК Себестоимость,
			|		РасходнаяНакладная.Состав.Количество * РасходнаяНакладная.Состав.Коэффициент КАК Количество,
			|		СтавкаНДС.Ставка КАК СтавкаНДС,
			|		Номенклатура.Код КАК Номенклатура,
			|		Номенклатура.ВидТовара КАК ВидНоменклатуры,
			|		Коэффициент
			|	),
			|	РасходнаяНакладная.Грузчики.(
			|		НомерСтроки,
			|		Грузчик
			|	)
			
			|ИЗ
			|	Документ.РасходнаяНакладная КАК РасходнаяНакладная
			|ГДЕ
			|	РасходнаяНакладная.Ссылка = &ИсходныйДокумент");
			Запрос.УстановитьПараметр("ИсходныйДокумент",ДокКорректируемый);
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Возврат Выборка;
		ИначеЕсли ТипЗнч(ДокКорректируемый) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	РасходнаяНакладная.Ссылка,
			|	РасходнаяНакладная.ПометкаУдаления,
			|	РасходнаяНакладная.Дата,
			|	РасходнаяНакладная.Номер,
			|	РасходнаяНакладная.Проведен,
			|	КорректировкаРеализации.Фирма,
			|	КорректировкаРеализации.СтруктурнаяЕдиница,
			|	РасходнаяНакладная.Валюта,
			|	РасходнаяНакладная.Курс,
			|	КорректировкаРеализации.Грузоотправитель,
			|	КорректировкаРеализации.Грузополучатель,
			|	РасходнаяНакладная.Склад,
			|	КорректировкаРеализации.Контрагент,
			|	РасходнаяНакладная.ТипДоговора,
			|	КорректировкаРеализации.СуммаИтого,
			|	РасходнаяНакладная.ДокОснование,
			|	РасходнаяНакладная.НомераПаллет,
			|	КорректировкаРеализации.Состав.(
			|		НомерСтроки,
			|		Сумма,
			|		Цена,
			|		СуммаНДС,
			|		0 КАК Себестоимость,
			|		КорректировкаРеализации.Состав.Количество * КорректировкаРеализации.Состав.Коэффициент КАК Количество,
			|		СтавкаНДС.Ставка КАК СтавкаНДС,
			|		Номенклатура.Код КАК Номенклатура,
			|		Номенклатура.ВидТовара КАК ВидНоменклатуры,
			|		Коэффициент
			|	),
			|	РасходнаяНакладная.Грузчики.(
			|		НомерСтроки,
			|		Грузчик
			|	)
			|ИЗ
			|	Документ.КорректировкаРеализации КАК КорректировкаРеализации,
			|		Документ.РасходнаяНакладная КАК РасходнаяНакладная
			|ГДЕ
			|	КорректировкаРеализации.Ссылка = &Корректировка
			|	И РасходнаяНакладная.Ссылка = &ИсходныйДокумент");
			Запрос.УстановитьПараметр("Корректировка",ДокКорректируемый);
			Запрос.УстановитьПараметр("ИсходныйДокумент",ДокРасходнаяНакладная);
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Возврат Выборка;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ОтправитьКорректировкуРеализации(Объект,КаталогВыгрузки,Ошибка)  
	
	Выборка = ВернутьДанныеПоКорректировкеРеализации(Объект);
	Если ТипЗнч(Выборка.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") И Выборка.Фирма = Выборка.Контрагент.Организация Тогда
		ТипXDTO = "DocumentObject_КорректировкаРеализацииПеремещениеТоваров";
		ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentObject_ПеремещениеТоваров");
		Пакет = ФабрикаXDTO.Создать(ТипДокумента);
		Пакет.Ref = Строка(Выборка.Ссылка.УникальныйИдентификатор());
		Пакет.DeletionMark = Выборка.ПометкаУдаления;
		Пакет.Date = Выборка.Дата;
		Пакет.Number = Выборка.Номер;
		Пакет.Posted = Выборка.Проведен;
		Пакет.Фирма = Строка(Выборка.Фирма.Код);
		Пакет.СтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница.Код;
		Пакет.Валюта = Выборка.Валюта.Код;
		Пакет.КурсВалютыДоговора = Выборка.Курс;
		Пакет.ГрузоотправительТип = ?(Выборка.Грузоотправитель = Неопределено,"",Выборка.Грузоотправитель.Метаданные().Имя);
		Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Выборка.Грузоотправитель),Выборка.Грузоотправитель.Код,"");
		Пакет.Грузополучатель = ?(ЗначениеЗаполнено(Выборка.Грузополучатель),Выборка.Грузополучатель.Код,"");
		Пакет.АдресДоставки = "";
		Пакет.Склад = Выборка.Склад.Код;
		Пакет.КонтрагентТип = Выборка.Контрагент.Метаданные().Имя;
		Пакет.Контрагент = Выборка.Контрагент.Код;
		Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Выборка.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Выборка.ТипДоговора)).Имя,"");
		Пакет.ИтогоВсего = Выборка.СуммаИтого;
		ДокОснование=УчетНДС.ПолучитьИсправляемыйДокументРеализации(Выборка.Ссылка,Истина);
		Пакет.ДокОснование = ?(ЗначениеЗаполнено(Выборка.ДокОснование),Строка(ДокОснование.УникальныйИдентификатор()),"");
		Пакет.ДокОснованиеТип = ?(ЗначениеЗаполнено(Выборка.ДокОснование),ДокОснование.Метаданные().Имя,"");;
		
		
		тзГрузчики = Выборка.Грузчики.Выгрузить();
		Если тзГрузчики.Количество()>0 Тогда
			Пакет.Наборщик = тзГрузчики[0].Грузчик.Наименование;
		КонецЕсли; 
		Если Выборка.Контрагент.Метаданные().Имя= "СтруктурныеЕдиницы" Тогда
			Пакет.ФирмаПолучатель = ?(ЗначениеЗаполнено(Выборка.Контрагент.Организация),Выборка.Контрагент.Организация.Код,"");
		КонецЕсли;
		
		тзСостав = Выборка.Состав.Выгрузить();
		ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ПеремещениеТоваров_Состав");
		Для Каждого СтрокаТЗ из тзСостав Цикл
			ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
			ПакетСостав.НомерСтрокиТЧ     = Формат(СтрокаТЗ.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
			ПакетСостав.СтавкаНДС     = СтрокаТЗ.СтавкаНДС;
			ПакетСостав.Себестоимость = СтрокаТЗ.Себестоимость;
			ПакетСостав.Сумма         = СтрокаТЗ.Сумма;
			ПакетСостав.Цена             = СтрокаТЗ.Цена;
			ПакетСостав.СуммаНДС      = СтрокаТЗ.СуммаНДС;
			ВидНоменклатуры = "т";
			Если СтрокаТЗ.ВидНоменклатуры = Перечисления.ВидыТоваров.Материал	ИЛИ СтрокаТЗ.ВидНоменклатуры = Перечисления.ВидыТоваров.Услуга Тогда
				ВидНоменклатуры = СтрокаТЗ.Номенклатура;
			ИначеЕсли СтрокаТЗ.ВидНоменклатуры = Перечисления.ВидыТоваров.Продукция Тогда
				ВидНоменклатуры = "п";
			КонецЕсли;
			ПакетСостав.ВидНоменклатуры = ВидНоменклатуры;
			ПакетСостав.Количество = СтрокаТЗ.Количество;
			ПакетСостав.Номенклатура = СтрокаТЗ.Номенклатура;
			ПакетСостав.Коэффициент = СтрокаТЗ.Коэффициент;
			Пакет.Состав.Добавить(ПакетСостав);
		КонецЦикла;
		
		Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
		Ошибка = ?(Результат,"",Пакет);
		Возврат Результат;
	Иначе
		ТипXDTO = "DocumentObject_КорректировкаРеализации";
		ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentObject_КорректировкаРеализации");
		Пакет = ФабрикаXDTO.Создать(ТипДокумента);
		Пакет.Ref = Строка(Выборка.Ссылка.УникальныйИдентификатор());
		Пакет.DeletionMark = Выборка.ПометкаУдаления;
		Пакет.Date = Выборка.Дата;
		Пакет.Number = Выборка.Номер;
		Пакет.Posted = Выборка.Проведен;
		Пакет.Фирма = Строка(Выборка.Фирма.Код);
		Пакет.СтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница.Код;
		Пакет.Валюта = Выборка.Валюта.Код;
		Пакет.КурсВалютыДоговора = Выборка.Курс;
		Пакет.ГрузоотправительТип = ?(Выборка.Грузоотправитель = Неопределено,"",Выборка.Грузоотправитель.Метаданные().Имя);
		Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Выборка.Грузоотправитель),Выборка.Грузоотправитель.Код,"");
		Пакет.Грузополучатель = ?(ЗначениеЗаполнено(Выборка.Грузополучатель),Выборка.Грузополучатель.Код,"");
		Пакет.АдресДоставки = "";
		Пакет.Склад = Выборка.Склад.Код;
		Пакет.КонтрагентТип = Выборка.Контрагент.Метаданные().Имя;
		//{БредовЮГ 2014-07-28 Сайты поставщиков
		Если  Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ЗначениеЗаполнено(Объект.Контрагент)  И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты")  И Объект.Контрагент.Поставщик Тогда
			Пакет.Контрагент = Выборка.Контрагент.Родитель.Код;
		Иначе 
			Пакет.Контрагент = Выборка.Контрагент.Код;
		КонецЕсли;
		//Пакет.Контрагент = Выборка.Контрагент.Код;
		//БредовЮГ 2014-07-28 Сайты поставщиков}
		Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Выборка.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Выборка.ТипДоговора)).Имя,"");
		Пакет.ИтогоВсего = Выборка.СуммаИтого;
		ДокОснование=УчетНДС.ПолучитьИсправляемыйДокументРеализации(Выборка.Ссылка,Истина);
		Пакет.ДокОснование = ?(ЗначениеЗаполнено(Выборка.ДокОснование),Строка(ДокОснование.УникальныйИдентификатор()),"");
		Пакет.ДокОснованиеТип = ?(ЗначениеЗаполнено(Выборка.ДокОснование),ДокОснование.Метаданные().Имя,"");;
		
		Пакет.Паллета = Выборка.НомераПаллет;
		Если Выборка.Контрагент.Метаданные().Имя= "СтруктурныеЕдиницы" Тогда
			Пакет.ФирмаПолучатель = ?(ЗначениеЗаполнено(Выборка.Контрагент.Организация),Выборка.Контрагент.Организация.Код,"");
		КонецЕсли;
		
		тзСостав = Выборка.Состав.Выгрузить();
		ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_КорректировкаРеализации_Состав");
		Для Каждого СтрокаТЗ из тзСостав Цикл
			ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
			ПакетСостав.НомерСтрокиТЧ     = Формат(СтрокаТЗ.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
			ПакетСостав.СтавкаНДС     = СтрокаТЗ.СтавкаНДС;
			ПакетСостав.Себестоимость = СтрокаТЗ.Себестоимость;
			ПакетСостав.Сумма         = СтрокаТЗ.Сумма;
			ПакетСостав.Цена             = СтрокаТЗ.Цена;
			ПакетСостав.СуммаНДС      = СтрокаТЗ.СуммаНДС;
			ПакетСостав.ВидНоменклатуры = "т";
			ПакетСостав.Количество = СтрокаТЗ.Количество;
			ПакетСостав.Номенклатура = СтрокаТЗ.Номенклатура;
			ПакетСостав.Коэффициент = СтрокаТЗ.Коэффициент;
			Пакет.Состав.Добавить(ПакетСостав);
		КонецЦикла;
		
		Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
		Ошибка = ?(Результат,"",Пакет);
		Возврат Результат;
	КонецЕсли;
КонецФункции

Функция ОтправитьZОтчет(Объект,КаталогВыгрузки,Ошибка)       // сделано, но надо протестировать
	ТипXDTO = "DocumentObject_ZОтчет";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.ИтогоВсего = Объект.СуммаИтого;
	Пакет.ИтогоВсегоНал = Объект.СуммаИтого;
	Пакет.СвободнаяСумма = Объект.Выручка.Итог("СвободнаяСумма");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.СуммаУпр) КАК Себестоимость,
	|	ОстаткиНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ZОтчетСостав.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	ZОтчетСостав.Ссылка,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.Себестоимость), 0) КАК Себестоимость,
	|	СУММА(ZОтчетСостав.Сумма) КАК Сумма,
	|	СУММА(ZОтчетСостав.СуммаНДС) КАК СуммаНДС,
	|	ЕстьNULL(ZОтчетСостав.Номенклатура.Код,"""") КАК Номенклатура,
	|	ZОтчетСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ZОтчетСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК ВидНоменклатуры,
	|	СУММА(ZОтчетСостав.Количество) КАК Количество
	|ИЗ
	|	Документ.Zотчет.Состав КАК ZОтчетСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ПО ZОтчетСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	ZОтчетСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ZОтчетСостав.Ссылка,
	|	ZОтчетСостав.СтавкаНДС.Ставка,
	|	ZОтчетСостав.Номенклатура.Код,
	|	ZОтчетСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ZОтчетСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ZОтчет_Состав");
	ТипОстаткиНоменклатуры = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ZОтчет_ОстаткиНоменклатуры");
	
	
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.СтавкаНДС     = Выборка.СтавкаНДС;
		ПакетСостав.Себестоимость = Выборка.Себестоимость;
		ПакетСостав.Сумма         = Выборка.Сумма;
		ПакетСостав.СуммаНДС      = Выборка.СуммаНДС;
		ПакетСостав.ВидНоменклатуры      = Выборка.ВидНоменклатуры;
		ПакетСостав.Номенклатура      = Выборка.Номенклатура;
		ПакетСостав.Количество      = Выборка.Количество;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	ТипКарты = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ZОтчет_Карты");
	Для Каждого Строка Из Объект.Карты Цикл
		ПакетКарты = ФабрикаXDTO.Создать(ТипКарты);
		ПакетКарты.ТипКарты = Строка(Строка.ТипКарты.УникальныйИдентификатор());
		ПакетКарты.Сумма = Строка.Сумма;
		Пакет.Карты.Добавить(ПакетКарты);
	КонецЦикла;
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

функция ОпределитьКонтрагента(Контрагент,Код)
	
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		Возврат СокрЛП(Код);
	Иначе
		Если Контрагент = Неопределено Тогда
			Возврат "";
		Иначе
			Возврат Строка(Контрагент.УникальныйИдентификатор());
		КонецЕсли;	
	КонецЕсли;	
	
КонецФункции	

Функция ОпределитьТипКонтрагента(Контрагент)
	
	
	Если Контрагент=Неопределено ИЛИ Контрагент=NULL  Тогда
		
		Возврат "";
		
	Иначе
		
		Возврат Контрагент.Метаданные().Имя;
		
	КонецЕсли;	
	
КонецФункции	

Функция ОтправитьРасходнуюНакладную(Объект,КаталогВыгрузки,Ошибка) // сделано, но надо протестировать
	ТипXDTO = "DocumentObject_РасходнаяНакладная";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentObject_РасходнаяНакладная");
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.Валюта = Объект.Валюта.Код;
	Пакет.КурсВалютыДоговора = Объект.Курс;
	Пакет.ГрузоотправительТип = ?(Объект.Грузоотправитель = Неопределено,"",Объект.Грузоотправитель.Метаданные().Имя);
	Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Объект.Грузоотправитель),Объект.Грузоотправитель.Код,"");
	Пакет.Грузополучатель = ?(ЗначениеЗаполнено(Объект.Грузополучатель),Объект.Грузополучатель.Код,"");
	Пакет.АдресДоставки = "";
	Пакет.Склад = Объект.Склад.Код;
	Пакет.КонтрагентТип = Объект.Контрагент.Метаданные().Имя;
	//Котлячкова 25.07.14
	Если  Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ЗначениеЗаполнено(Объект.Контрагент)  И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты")  И Объект.Контрагент.Поставщик Тогда
		Пакет.Контрагент = Объект.Контрагент.Родитель.Код;
	Иначе
		Пакет.Контрагент = Объект.Контрагент.Код;
	КонецЕсли;
	//Котлячкова 25.07.14
	Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Объект.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Объект.ТипДоговора)).Имя,"");
	Пакет.ИтогоВсего = Объект.СуммаИтого;
	Пакет.ДокОснование = ?(ЗначениеЗаполнено(Объект.ДокОснование),Строка(Объект.ДокОснование.УникальныйИдентификатор()),"");
	Пакет.ДокОснованиеТип = ?(ЗначениеЗаполнено(Объект.ДокОснование),Объект.ДокОснование.Метаданные().Имя,"");;
	//Пакет.Алко = ОпределитьПрисутствиеАлкоголя(Объект.Ссылка);
	Пакет.Паллета = Объект.НомераПаллет;
	//Шилов М.В. 04.03.14 трансляция Наборщика в 1с Торговля
	Если Объект.Грузчики.Количество()>0 Тогда
		Пакет.Наборщик = Объект.Грузчики[0].Грузчик.Наименование;
	КонецЕсли; //Шилов М.В. 04.03.14
	Если Объект.Контрагент.Метаданные().Имя= "СтруктурныеЕдиницы" Тогда
		Пакет.ФирмаПолучатель = ?(ЗначениеЗаполнено(Объект.Контрагент.Организация),Объект.Контрагент.Организация.Код,"");
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.СуммаУпр) КАК Себестоимость,
	|	ОстаткиНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА РасходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК ВидНоменклатуры,
	|	ЕстьNULL(РасходнаяНакладнаяСостав.Номенклатура.Код,"""") КАК Номенклатура,
	|	РасходнаяНакладнаяСостав.НомерСтроки,
	|	ЕСТЬNULL(РасходнаяНакладнаяСостав.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	РасходнаяНакладнаяСостав.Ссылка,
	|	СУММА(РасходнаяНакладнаяСостав.Количество * РасходнаяНакладнаяСостав.Коэффициент) КАК Количество,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.Себестоимость), 0) КАК Себестоимость,
	|	СУММА(РасходнаяНакладнаяСостав.Сумма) КАК Сумма,
	|	СУММА(РасходнаяНакладнаяСостав.Цена) КАК Цена,
	|	СУММА(РасходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС,
	|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения.Коэффициент КАК Коэффициент
	|ИЗ
	|	Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ПО РасходнаяНакладнаяСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	РасходнаяНакладнаяСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяСостав.Ссылка,
	|	РасходнаяНакладнаяСостав.Коэффициент,
	|	РасходнаяНакладнаяСостав.СтавкаНДС.Ставка,
	|	РасходнаяНакладнаяСостав.Номенклатура.Код,
	|	РасходнаяНакладнаяСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА РасходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ,
	|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения.Коэффициент");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_РасходнаяНакладная_Состав");
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.СтавкаНДС     = Выборка.СтавкаНДС;
		ПакетСостав.Себестоимость = Выборка.Себестоимость;
		ПакетСостав.Сумма         = Выборка.Сумма;
		ПакетСостав.Цена             = Выборка.Цена;
		ПакетСостав.СуммаНДС      = Выборка.СуммаНДС;
		ПакетСостав.ВидНоменклатуры = Выборка.ВидНоменклатуры;
		ПакетСостав.Количество = Выборка.Количество;
		ПакетСостав.Номенклатура = Выборка.Номенклатура;
		ПакетСостав.Коэффициент = Выборка.Коэффициент;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

//dps+ 12.05.2014   Наряд №115829
Функция ОтправитьПеремещениеТоваров(Объект,КаталогВыгрузки,Ошибка) 
	ТипXDTO = "DocumentObject_ПеремещениеТоваров";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentObject_ПеремещениеТоваров");
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.Валюта = Объект.Валюта.Код;
	Пакет.КурсВалютыДоговора = Объект.Курс;
	Пакет.ГрузоотправительТип = ?(Объект.Грузоотправитель = Неопределено,"",Объект.Грузоотправитель.Метаданные().Имя);
	Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Объект.Грузоотправитель),Объект.Грузоотправитель.Код,"");
	Пакет.Грузополучатель = ?(ЗначениеЗаполнено(Объект.Грузополучатель),Объект.Грузополучатель.Код,"");
	Пакет.АдресДоставки = "";
	Пакет.Склад = Объект.Склад.Код;
	Пакет.КонтрагентТип = Объект.Контрагент.Метаданные().Имя;
	Пакет.Контрагент = Объект.Контрагент.Код;
	Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Объект.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Объект.ТипДоговора)).Имя,"");
	Пакет.ИтогоВсего = Объект.СуммаИтого;
	Пакет.ДокОснование = ?(ЗначениеЗаполнено(Объект.ДокОснование),Строка(Объект.ДокОснование.УникальныйИдентификатор()),"");
	Пакет.ДокОснованиеТип = ?(ЗначениеЗаполнено(Объект.ДокОснование),Объект.ДокОснование.Метаданные().Имя,"");;
	Пакет.Паллета = Объект.НомераПаллет;
	Если Объект.Грузчики.Количество()>0 Тогда
		Пакет.Наборщик = Объект.Грузчики[0].Грузчик.Наименование;
	КонецЕсли; 
	Если Объект.Контрагент.Метаданные().Имя= "СтруктурныеЕдиницы" Тогда
		Пакет.ФирмаПолучатель = ?(ЗначениеЗаполнено(Объект.Контрагент.Организация),Объект.Контрагент.Организация.Код,"");
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.СуммаУпр) КАК Себестоимость,
	|	ОстаткиНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА РасходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК ВидНоменклатуры,
	|	ЕстьNULL(РасходнаяНакладнаяСостав.Номенклатура.Код,"""") КАК Номенклатура,
	|	РасходнаяНакладнаяСостав.НомерСтроки,
	|	ЕСТЬNULL(РасходнаяНакладнаяСостав.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	РасходнаяНакладнаяСостав.Ссылка,
	|	СУММА(РасходнаяНакладнаяСостав.Количество * РасходнаяНакладнаяСостав.Коэффициент) КАК Количество,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.Себестоимость), 0) КАК Себестоимость,
	|	СУММА(РасходнаяНакладнаяСостав.Сумма) КАК Сумма,
	|	СУММА(РасходнаяНакладнаяСостав.Цена) КАК Цена,
	|	СУММА(РасходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС,
	|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения.Коэффициент КАК Коэффициент
	|ИЗ
	|	Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ПО РасходнаяНакладнаяСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	РасходнаяНакладнаяСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяСостав.Ссылка,
	|	РасходнаяНакладнаяСостав.Коэффициент,
	|	РасходнаяНакладнаяСостав.СтавкаНДС.Ставка,
	|	РасходнаяНакладнаяСостав.Номенклатура.Код,
	|	РасходнаяНакладнаяСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА РасходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ,
	|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения.Коэффициент");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ПеремещениеТоваров_Состав");
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.СтавкаНДС     = Выборка.СтавкаНДС;
		ПакетСостав.Себестоимость = Выборка.Себестоимость;
		ПакетСостав.Сумма         = Выборка.Сумма;
		ПакетСостав.Цена             = Выборка.Цена;
		ПакетСостав.СуммаНДС      = Выборка.СуммаНДС;
		ПакетСостав.ВидНоменклатуры = Выборка.ВидНоменклатуры;
		ПакетСостав.Количество = Выборка.Количество;
		ПакетСостав.Номенклатура = Выборка.Номенклатура;
		ПакетСостав.Коэффициент = Выборка.Коэффициент;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

//dps- 12.05.2014 

Функция ОтправитьКомплектациюРазукомплектацию(Объект,КаталогВыгрузки,Ошибка) // сделано, но надо протестировать
	ТипXDTO = "DocumentObject_Комплектация";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentObject_Комплектация");
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.ДокОснование = ?(ЗначениеЗаполнено(Объект.ДокОснование),Строка(Объект.ДокОснование.УникальныйИдентификатор()),"");
	Пакет.ДокОснованиеТип = ?(ЗначениеЗаполнено(Объект.ДокОснование),Объект.ДокОснование.Метаданные().Имя,"");;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.Склад = Объект.Склад.Код;
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	
	Пакет.Комплект = Объект.Комплект.Код;
	Пакет.Количество = Объект.Количество;
	Пакет.Коэффициент = Объект.ЕдиницаИзмерения.Коэффициент;
	Пакет.Разукомплектация = Объект.Разукомплектация;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КомплектацияСостав.Номенклатура.Код КАК Номенклатура,
	|	КомплектацияСостав.Количество КАК Количество,
	|	КомплектацияСостав.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|	КомплектацияСостав.Цена КАК Цена,
	|	КомплектацияСостав.Сумма КАК Сумма,
	|	КомплектацияСостав.НомерСтроки
	|ИЗ
	|	Документ.Комплектация.Состав КАК КомплектацияСостав
	|ГДЕ
	|	КомплектацияСостав.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_Комплектация_Состав");
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.Сумма         = Выборка.Сумма;
		ПакетСостав.Цена             = Выборка.Цена;
		ПакетСостав.Количество = Выборка.Количество;
		ПакетСостав.Номенклатура = Выборка.Номенклатура;
		ПакетСостав.Коэффициент = Выборка.Коэффициент;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

Функция ОтправитьПеремещениеМеждуВС(Объект,КаталогВыгрузки,Ошибка) 
	ТипXDTO = "DocumentObject_ПемерещениеМеждуВС";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentObject_ПемерещениеМеждуВС");
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.ДокОснование = ?(ЗначениеЗаполнено(Объект.ДокОснование),Строка(Объект.ДокОснование.УникальныйИдентификатор()),"");
	Пакет.ДокОснованиеТип = ?(ЗначениеЗаполнено(Объект.ДокОснование),Объект.ДокОснование.Метаданные().Имя,"");;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.Склад = Объект.Склад.Код;
	Пакет.СкладПолучатель = Объект.СкладПолучатель.Код;
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеСостав.НомерСтроки,
	|	ЕстьNULL(ПеремещениеСостав.Номенклатура.Код,"""") КАК Номенклатура,
	|	ЕстьNULL(ПеремещениеСостав.ЕдиницаИзмерения.Коэффициент,1) КАК Коэффициент,
	|	ПеремещениеСостав.Количество
	|ИЗ
	|	Документ.Перемещение.Состав КАК ПеремещениеСостав
	|ГДЕ
	|	ПеремещениеСостав.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ПеремещениеМеждуВС_Состав");
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.Номенклатура = Выборка.Номенклатура;
		ПакетСостав.Количество = Выборка.Количество;
		ПакетСостав.Коэффициент = Выборка.Коэффициент;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

Функция ОтправитьИнвентаризацию(Объект,КаталогВыгрузки,Ошибка)  // протестировать инвентаризацию
	//ТипXDTO = "DocumentObject_КоррекцияЗапасов";
	//ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	//ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_КоррекцияЗапасов_Состав");
	//
	//Результат=Истина;
	//
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//					  |	ОстаткиНоменклатуры.Фирма КАК Фирма,
	//					  |	ОстаткиНоменклатуры.МестоХранения КАК МестоХранения,
	//					  |	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура1,
	//					  |	ОстаткиНоменклатуры.СуммаУпр КАК Себестоимость,
	//					  |	ОстаткиНоменклатуры.Сумма,
	//					  |	ОстаткиНоменклатуры.СуммаНДС,
	//					  |	ВЫБОР
	//					  |		КОГДА ОстаткиНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	//					  |				ИЛИ ОстаткиНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	//					  |			ТОГДА ОстаткиНоменклатуры.Номенклатура.Код
	//					  |		КОГДА ОстаткиНоменклатуры.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	//					  |			ТОГДА ""п""
	//					  |		ИНАЧЕ ""т""
	//					  |	КОНЕЦ КАК ВидНоменклатуры,
	//					  |	ОстаткиНоменклатуры.Номенклатура.Код КАК Номенклатура,
	//					  |	ЕСТЬNULL(ИнвентаризацияСостав.ЕдиницаИзмерения.Коэффициент, 1) КАК Коэффициент,
	//					  |	ОстаткиНоменклатуры.Количество,
	//					  |	ОстаткиНоменклатуры.НомерСтроки,
	//					  |	ВЫБОР
	//					  |		КОГДА ОстаткиНоменклатуры.Количество <> 0
	//					  |			ТОГДА ОстаткиНоменклатуры.Сумма / ОстаткиНоменклатуры.Количество
	//					  |		ИНАЧЕ 0
	//					  |	КОНЕЦ КАК Цена,
	//					  |	ВЫБОР
	//					  |		КОГДА ОстаткиНоменклатуры.Сумма - ОстаткиНоменклатуры.СуммаНДС <> 0
	//					  |			ТОГДА ОстаткиНоменклатуры.СуммаНДС / (ОстаткиНоменклатуры.Сумма - ОстаткиНоменклатуры.СуммаНДС)
	//					  |		ИНАЧЕ 0
	//					  |	КОНЕЦ * 100 КАК СтавкаНДС
	//					  |ИЗ
	//					  |	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	//					  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Инвентаризация.Состав КАК ИнвентаризацияСостав
	//					  |		ПО ОстаткиНоменклатуры.Регистратор = ИнвентаризацияСостав.Ссылка
	//					  |			И ОстаткиНоменклатуры.Номенклатура = ИнвентаризацияСостав.Номенклатура
	//					  |ГДЕ
	//					  |	ОстаткиНоменклатуры.Регистратор = &Ссылка
	//					  |	И ОстаткиНоменклатуры.ВидДвижения = &ПриходРасход");
	//Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	//Запрос.УстановитьПараметр("ПриходРасход",ВидДвиженияНакопления.Приход);
	//
	//ВыбЗапр = Запрос.Выполнить().Выбрать();
	//Пока ВыбЗапр.СледующийПоЗначениюПоля("Фирма") Цикл
	//	Пока ВыбЗапр.СледующийПоЗначениюПоля("МестоХранения") Цикл
	//		Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	//		Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	//		Пакет.DeletionMark = Объект.ПометкаУдаления;
	//		Пакет.Date = Объект.Дата;
	//		Пакет.Number = Объект.Номер;
	//		Пакет.Posted = Объект.Проведен;
	//		Пакет.Фирма = Строка(ВыбЗапр.Фирма.Код);
	//		Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	//		Пакет.Склад = ВыбЗапр.МестоХранения.Код;
	//		//Пакет.ВиновноеЛицо = Строка(Объект.ВиновноеЛицо.Код);
	//		Пакет.ВидСписания = Объект.ВидКоррекцииОприходование.Код;
	//		Пакет.Оприходование = Истина;//Объект.ВидКоррекцииОприходование.Код;
	//		Пакет.Основание = Объект.Основание;
	//		
	//		НомерСтроки=0;
	//		Пока ВыбЗапр.Следующий() Цикл
	//			НомерСтроки=НомерСтроки+1;
	//			ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
	//			ПакетСостав.НомерСтрокиТЧ     = Формат(НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
	//			ПакетСостав.Себестоимость = ВыбЗапр.Себестоимость;
	//			ПакетСостав.Сумма         = ВыбЗапр.Сумма;
	//			ПакетСостав.СуммаНДС         = ВыбЗапр.СуммаНДС;
	//			ПакетСостав.СтавкаНДС         = Окр(ВыбЗапр.СтавкаНДС);
	//			ПакетСостав.ВидНоменклатуры = ВыбЗапр.ВидНоменклатуры;
	//			ПакетСостав.Номенклатура = ВыбЗапр.Номенклатура;
	//			ПакетСостав.Цена = Окр(ВыбЗапр.Цена,2);
	//			ПакетСостав.Коэффициент = ВыбЗапр.Коэффициент;
	//			ПакетСостав.Количество = ВыбЗапр.Количество;
	//			Пакет.Состав.Добавить(ПакетСостав);
	//		КонецЦикла;
	//		
	//		Результат = Результат и ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO+"_Прих_"+Строка(ВыбЗапр.Фирма.Код)+"_"+Строка(ВыбЗапр.МестоХранения.Код));
	//		Ошибка = ?(Результат,"",Пакет);
	//	КонецЦикла;
	//КонецЦикла;
	//
	//Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	//Запрос.УстановитьПараметр("ПриходРасход",ВидДвиженияНакопления.Расход);
	//
	//ВыбЗапр = Запрос.Выполнить().Выбрать();
	//Пока ВыбЗапр.СледующийПоЗначениюПоля("Фирма") Цикл
	//	Пока ВыбЗапр.СледующийПоЗначениюПоля("МестоХранения") Цикл
	//		Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	//		Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	//		Пакет.DeletionMark = Объект.ПометкаУдаления;
	//		Пакет.Date = Объект.Дата;
	//		Пакет.Number = Объект.Номер;
	//		Пакет.Posted = Объект.Проведен;
	//		Пакет.Фирма = Строка(ВыбЗапр.Фирма.Код);
	//		Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	//		Пакет.Склад = ВыбЗапр.МестоХранения.Код;
	//		//Пакет.ВиновноеЛицо = Строка(Объект.ВиновноеЛицо.Код);
	//		Пакет.ВидСписания = Объект.ВидКоррекцииСписание.Код;
	//		Пакет.Оприходование = Ложь;//Объект.ВидКоррекцииОприходование.Код;
	//		Пакет.Основание = Объект.Основание;
	//		
	//		НомерСтроки=0;
	//		Пока ВыбЗапр.Следующий() Цикл
	//			НомерСтроки=НомерСтроки+1;
	//			ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
	//			ПакетСостав.НомерСтрокиТЧ     = Формат(НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
	//			ПакетСостав.Себестоимость = ВыбЗапр.Себестоимость;
	//			ПакетСостав.Сумма         = ВыбЗапр.Сумма;
	//			ПакетСостав.СуммаНДС         = ВыбЗапр.СуммаНДС;
	//			ПакетСостав.СтавкаНДС         = Окр(ВыбЗапр.СтавкаНДС);
	//			ПакетСостав.ВидНоменклатуры = ВыбЗапр.ВидНоменклатуры;
	//			ПакетСостав.Номенклатура = ВыбЗапр.Номенклатура;
	//			ПакетСостав.Цена = Окр(ВыбЗапр.Цена,2);
	//			ПакетСостав.Коэффициент = ВыбЗапр.Коэффициент;
	//			ПакетСостав.Количество = ВыбЗапр.Количество;
	//			Пакет.Состав.Добавить(ПакетСостав);
	//		КонецЦикла;
	//		
	//		Результат = Результат и ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO+"_Спис_"+Строка(ВыбЗапр.Фирма.Код)+"_"+Строка(ВыбЗапр.МестоХранения.Код));
	//		Ошибка = ?(Результат,"",Пакет);
	//	КонецЦикла;
	//КонецЦикла;
	//
	//Возврат Результат;
	
	//ШиловМВ 29.04.14
	ТипXDTO = "DocumentObject_Инвентаризация";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.Date = Объект.Дата;
	Пакет.Posted = Объект.Проведен;
	//ШиловМВ 31.07.14 №000123023{{
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Фирма,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Коэффициент,
	|	ВложенныйЗапрос.ВидСписания,
	|	ВложенныйЗапрос.ВидКомментария,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.СтавкаНДС
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИнвентаризацияСоставПоФирмам.Фирма КАК Фирма,
	|		ИнвентаризацияСоставПоФирмам.Склад КАК Склад,
	|		ИнвентаризацияСоставПоФирмам.Номенклатура КАК Номенклатура,
	|		ЕСТЬNULL(ИнвентаризацияСоставПоФирмам.ЕдиницаИзмерения.Коэффициент, 0) КАК Коэффициент,
	|		ВЫБОР
	|			КОГДА ИнвентаризацияСоставПоФирмам.КоличествоУчет < ИнвентаризацияСоставПоФирмам.Количество
	|				ТОГДА ""Оприходование""
	|			КОГДА ИнвентаризацияСоставПоФирмам.КоличествоУчет > ИнвентаризацияСоставПоФирмам.Количество
	|				ТОГДА ""Недостача""
	|		КОНЕЦ КАК ВидСписания,
	|		""Инвентаризация"" КАК ВидКомментария,
	|		ВЫБОР
	|			КОГДА ИнвентаризацияСоставПоФирмам.КоличествоУчет < ИнвентаризацияСоставПоФирмам.Количество
	|				ТОГДА -1
	|			КОГДА ИнвентаризацияСоставПоФирмам.КоличествоУчет > ИнвентаризацияСоставПоФирмам.Количество
	|				ТОГДА 1
	|		КОНЕЦ * (ИнвентаризацияСоставПоФирмам.КоличествоУчет - ИнвентаризацияСоставПоФирмам.Количество) КАК Количество,
	|		ЕСТЬNULL(ИнвентаризацияСоставПоФирмам.Номенклатура.СтавкаНДС.Ставка, 0) КАК СтавкаНДС
	|	ИЗ
	|		Документ.Инвентаризация.СоставПоФирмам КАК ИнвентаризацияСоставПоФирмам
	|	ГДЕ
	|		ИнвентаризацияСоставПоФирмам.Количество <> ИнвентаризацияСоставПоФирмам.КоличествоУчет
	|		И ИнвентаризацияСоставПоФирмам.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИнвентаризацияПересортицаПоФирмам.Фирма,
	|		ИнвентаризацияПересортицаПоФирмам.Склад,
	|		ИнвентаризацияПересортицаПоФирмам.Номенклатура1,
	|		1,
	|		""Недостача"",
	|		""Пересортица"",
	|		ИнвентаризацияПересортицаПоФирмам.Количество,
	|		ЕСТЬNULL(ИнвентаризацияПересортицаПоФирмам.Номенклатура1.СтавкаНДС.Ставка, 0)
	|	ИЗ
	|		Документ.Инвентаризация.ПересортицаПоФирмам КАК ИнвентаризацияПересортицаПоФирмам
	|	ГДЕ
	|		ИнвентаризацияПересортицаПоФирмам.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИнвентаризацияПересортицаПоФирмам.Фирма,
	|		ИнвентаризацияПересортицаПоФирмам.Склад,
	|		ИнвентаризацияПересортицаПоФирмам.Номенклатура2,
	|		1,
	|		""Оприходование"",
	|		""Пересортица"",
	|		ИнвентаризацияПересортицаПоФирмам.Количество,
	|		ЕСТЬNULL(ИнвентаризацияПересортицаПоФирмам.Номенклатура2.СтавкаНДС.Ставка, 0)
	|	ИЗ
	|		Документ.Инвентаризация.ПересортицаПоФирмам КАК ИнвентаризацияПересортицаПоФирмам
	|	ГДЕ
	|		ИнвентаризацияПересортицаПоФирмам.Ссылка = &Ссылка) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.Фирма КАК Фирма,
	|	ВТДанные.Склад КАК Склад,
	|	ВТДанные.Номенклатура.Код КАК Номенклатура,
	|	ВТДанные.Коэффициент,
	|	ВТДанные.ВидСписания КАК ВидСписания,
	|	ВТДанные.ВидКомментария,
	|	ВТДанные.Количество,
	|	ВТДанные.СтавкаНДС,
	|	ЕСТЬNULL(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена, ЕСТЬNULL(НоменклатураКонтрагента.Цена, 0)) КАК Цена,
	|	ЕСТЬNULL(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена, ЕСТЬNULL(НоменклатураКонтрагента.Цена, 0)) * ВТДанные.Количество КАК Сумма
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
	|				&ДатаСреза,
	|				(Фирма, Номенклатура) В
	|					(ВЫБРАТЬ
	|						А.Фирма,
	|						А.Номенклатура
	|					ИЗ
	|						ВТДанные КАК А)) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	|		ПО ВТДанные.Фирма = ЦеныНоменклатурыЗакупочныеСрезПоследних.Фирма
	|			И ВТДанные.Номенклатура = ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО (НоменклатураКонтрагента.ОсновнойПоставщик)
	|			И ВТДанные.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|ИТОГИ ПО
	|	ВидСписания,
	|	Фирма,
	|	Склад");
	//ШиловМВ 31.07.14 №000123023}}
	// переделал запрос, цену берем из закупочных цен, а не из свзяки Товар-Поставщик
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Запрос.УстановитьПараметр("ДатаСреза",Объект.Дата);					  
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	ВыборкаПоВидамДвижения = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоВидамДвижения.Следующий() Цикл
		ВыборкаПоФирме = ВыборкаПоВидамДвижения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоФирме.Следующий() Цикл
			ВыборкаПоСкладу = ВыборкаПоФирме.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоСкладу.Следующий() Цикл
				ТипДокументВетка = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentGUID");
				ДокументВетка = ФабрикаXDTO.Создать(ТипДокументВетка);
				ДокументВетка.Склад = ВыборкаПоСкладу.Склад.Код;
				ДокументВетка.Фирма = ВыборкаПоСкладу.Фирма.Код;
				ДокументВетка.Оприходование = ВыборкаПоВидамДвижения.ВидСписания = "Оприходование";
				ДокументВетка.Комментарий = Строка(Объект);
				ВыборкаПоНоменклатуре = ВыборкаПоСкладу.Выбрать();
				ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentGUIDTabularSectionRow_Инвентаризация_Состав");
				Пока ВыборкаПоНоменклатуре.Следующий() Цикл
					ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
					ПакетСостав.СтавкаНДС     = ВыборкаПоНоменклатуре.СтавкаНДС;
					ПакетСостав.Сумма         = ВыборкаПоНоменклатуре.Сумма;
					ПакетСостав.Цена             = ВыборкаПоНоменклатуре.Цена;
					ПакетСостав.СуммаНДС      = 0;
					ПакетСостав.Количество  = ВыборкаПоНоменклатуре.Количество;
					ПакетСостав.Номенклатура  = ВыборкаПоНоменклатуре.Номенклатура;
					ПакетСостав.Коэффициент  = ВыборкаПоНоменклатуре.Коэффициент;
					ДокументВетка.Состав.Добавить(ПакетСостав);
				КонецЦикла;
				Пакет.Document.Добавить(ДокументВетка);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	//ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_КорректировкаПоступления_Состав");
	
	//Пока Выборка.Следующий() Цикл
	//	ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
	//	ПакетСостав.СтавкаНДС     = Выборка.СтавкаНДС;
	//	ПакетСостав.НомерСтрокиТЧ     = Выборка.НомерСтроки;
	//	ПакетСостав.Сумма         = Выборка.Сумма;
	//	ПакетСостав.Цена             = Выборка.Цена;
	//	ПакетСостав.СуммаНДС      = Выборка.СуммаНДС;
	//	ПакетСостав.Количество  = Выборка.Количество;
	//	ПакетСостав.Номенклатура  = Выборка.Номенклатура;
	//	ПакетСостав.Коэффициент  = Выборка.Коэффициент;
	//	Пакет.Состав.Добавить(ПакетСостав);
	//КонецЦикла;
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
	//ШиловМВ
КонецФункции
//dps+ 24.04.2014   Наряд №000114509
Функция ОтправитьПланируемуюПоставку(Объект,КаталогВыгрузки,Ошибка)
	ТипXDTO = "DocumentObject_ПланируемаяПоставка";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/ExtSystem", "DocumentObject.ПланируемаяПоставка");
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.ДатаПоставкиОт = Объект.ДатаПоставкиОт;
	Пакет.ДатаПоставкиДо = Объект.ДатаПоставкиДо;
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;      
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда 
		Пакет.Контрагент = Объект.Контрагент.Родитель.Код;
		Пакет.Протокол  = Объект.Контрагент.Код;
	Иначе 
		Пакет.Контрагент = Объект.Контрагент.Код;
	КонецЕсли;	
	Пакет.ПромоАкция = Объект.ПромоАкция;
	Пакет.КонтрольКачества = Объект.КонтрольКачества;
	Пакет.Комментарий = Объект.Комментарий;
	Пакет.Валюта = Объект.Валюта.Код;
	Пакет.Курс = Объект.Курс;
	Пакет.Кратность = Объект.Кратность;
	Пакет.СуммаИтого = Объект.СуммаИтого;
	Пакет.СуммаНДСИтого = Объект.СуммаНДСИтого;
	Пакет.ЗаказМагазина = Объект.ЗаказМагазина;
	Пакет.НомерRMS = Объект.НомерRMS;
	Пакет.Статус = "";
	Пакет.АдресДоставки = Объект.АдресДоставки;
	Пакет.Фирма = Объект.Фирма.Код;
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/ExtSystem", "DocumentTabularSectionRow.ПланируемаяПоставка.Состав");
	Для Каждого Строка Из Объект.Состав Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.Номенклатура = Строка.Номенклатура.Код;
		ПакетСостав.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения.Наименование;
		ПакетСостав.Коэффициент = Строка.Коэффициент;
		ПакетСостав.Количество = Строка.Количество;
		ПакетСостав.Цена = Строка.Цена;
		ПакетСостав.Сумма = Строка.Сумма;
		ПакетСостав.СуммаНДС = Строка.СуммаНДС;
		ПакетСостав.СтавкаНДС = Строка.СтавкаНДС.Ставка;
		ПакетСостав.Артикул = Строка.Артикул;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO, "http://1c-astor.ru/ExtSystem");
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции
//dps- 24.04.2014 

Функция ОтправитьВозвратнуюПоставщику(Объект,КаталогВыгрузки,Ошибка)  // сделано, протестировать
	ТипXDTO = "DocumentObject_ВозвратнаяНакладная";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.Валюта = Объект.Валюта.Код;
	Пакет.КурсВалютыДоговора = Объект.Курс;
	Пакет.ГрузоотправительТип = ?(Объект.Грузоотправитель = Неопределено,"",Объект.Грузоотправитель.Метаданные().Имя);
	Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Объект.Грузоотправитель),Объект.Грузоотправитель.Код,"");
	Пакет.ГрузополучательТип = ?(Объект.Грузополучатель = Неопределено,"",Объект.Грузополучатель.Метаданные().Имя);
	
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ТипЗнч(Объект.Грузополучатель)=Тип("СправочникСсылка.Контрагенты") Тогда 
		Пакет.Грузополучатель = Объект.Контрагент.Родитель.Код;
	Иначе 
		Пакет.Грузополучатель = ?(ЗначениеЗаполнено(Объект.Грузополучатель),Объект.Грузополучатель.Код,"");
	КонецЕсли;
	
	Пакет.АдресДоставки = "";
	Пакет.Склад = Объект.Склад.Код;
	
	Если ЗначениеЗаполнено(Объект.ДокОснование) Тогда
		Пакет.ДокОснование = Строка(Объект.ДокОснование.УникальныйИдентификатор());
		Пакет.ДокОснованиеТип = Объект.ДокОснование.Метаданные().Имя;
	КонецЕсли;
	Пакет.КонтрагентТип = Объект.Контрагент.Метаданные().Имя;
	//Котлячкова  24,07,14
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() И ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда 
		Пакет.Контрагент = Объект.Контрагент.Родитель.Код;
	Иначе 
		Пакет.Контрагент = Объект.Контрагент.Код;
	КонецЕсли;
	//Котлячкова
	Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Объект.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Объект.ТипДоговора)).Имя,"");;
	Пакет.ИтогоВсего = Объект.СуммаИтого;
	Пакет.ТипВозврата = "Поставщику";
	//Шилов М.В. 04.03.14 Трансляция Наборщика в 1с Торговля
	Если Объект.Грузчики.Количество()>0 Тогда
		Пакет.Наборщик = Объект.Грузчики[0].Грузчик.Наименование;
	КонецЕсли; //Шилов М.В.
	//Пакет.Алко = ОпределитьПрисутствиеАлкоголя(Объект.Ссылка);
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.СуммаУпр) КАК Себестоимость,
	|	ОстаткиНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА РасходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК ВидНоменклатуры,
	|	ЕстьNULL(РасходнаяНакладнаяСостав.Номенклатура.Код,"""") КАК Номенклатура,
	|	РасходнаяНакладнаяСостав.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(РасходнаяНакладнаяСостав.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	РасходнаяНакладнаяСостав.Ссылка,
	|	СУММА(РасходнаяНакладнаяСостав.Количество * РасходнаяНакладнаяСостав.Коэффициент) КАК Количество,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.Себестоимость), 0) КАК Себестоимость,
	|	СУММА(РасходнаяНакладнаяСостав.Сумма) КАК Сумма,
	|	СУММА(РасходнаяНакладнаяСостав.Цена) КАК Цена,
	|	СУММА(РасходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС,
	|	РасходнаяНакладнаяСостав.Цена КАК Цена1,
	|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения.Коэффициент КАК Коэффициент
	|ИЗ
	|	Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ПО РасходнаяНакладнаяСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	РасходнаяНакладнаяСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяСостав.Ссылка,
	|	РасходнаяНакладнаяСостав.Коэффициент,
	|	РасходнаяНакладнаяСостав.СтавкаНДС.Ставка,
	|	РасходнаяНакладнаяСостав.Номенклатура.Код,
	|	РасходнаяНакладнаяСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА РасходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ,
	|	РасходнаяНакладнаяСостав.Цена,
	|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения.Коэффициент");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ВозвратнаяНакладная_Состав");
	ТипМатериалы = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ВозвратнаяНакладная_Материалы");
	
	
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.СтавкаНДС     = Выборка.СтавкаНДС;
		ПакетСостав.Себестоимость = Выборка.Себестоимость;
		ПакетСостав.Сумма         = Выборка.Сумма;
		ПакетСостав.СуммаНДС      = Выборка.СуммаНДС;
		ПакетСостав.СебестоимостьНДС    = 0;
		ПакетСостав.СебестоимостьНДСУпр = 0;
		ПакетСостав.СебестоимостьУпр    = 0;
		ПакетСостав.ВидНоменклатуры    = Выборка.ВидНоменклатуры;
		ПакетСостав.Номенклатура    = Выборка.Номенклатура;
		ПакетСостав.Количество    = Выборка.Количество;
		ПакетСостав.Цена             = Выборка.Цена;
		ПакетСостав.Коэффициент             = Выборка.Коэффициент;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

Функция ОтправитьВозвратнуюОтПокупателя(Объект,КаталогВыгрузки,Ошибка) // сделано, но надо протестировать
	ТипXDTO = "DocumentObject_ВозвратнаяНакладная";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.Валюта = Объект.Валюта.Код;
	Пакет.КурсВалютыДоговора = Объект.Курс;
	Пакет.ГрузоотправительТип = ?(Объект.Грузоотправитель = Неопределено,"",Объект.Грузоотправитель.Метаданные().Имя);
	Пакет.Грузоотправитель = ?(ЗначениеЗаполнено(Объект.Грузоотправитель),Объект.Грузоотправитель.Код,"");
	Пакет.ГрузополучательТип = ?(Объект.Грузополучатель = Неопределено,"",Объект.Грузополучатель.Метаданные().Имя);
	Пакет.Грузополучатель = ?(ЗначениеЗаполнено(Объект.Грузополучатель),Объект.Грузополучатель.Код,"");;
	Пакет.АдресДоставки = "";
	Пакет.Склад = Объект.Склад.Код;
	Пакет.КонтрагентТип = Объект.Контрагент.Метаданные().Имя;
	//Котлячкова  24,07,14
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() и Объект.Контрагент.Поставщик Тогда 
		Пакет.Контрагент = Объект.Контрагент.Родитель.Код;
	Иначе 
		Пакет.Контрагент = Объект.Контрагент.Код;
	КонецЕсли;
	//Котлячкова
	Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Объект.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Объект.ТипДоговора)).Имя,"");
	Пакет.ИтогоВсего = Объект.СуммаИтого;
	Пакет.ТипВозврата = "ОтПокупателя";
	
	
	//Пакет.Алко = ОпределитьПрисутствиеАлкоголя(Объект.Ссылка);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.Сумма) КАК Себестоимость,
	|	ОстаткиНоменклатуры.Номенклатура,
	|	СУММА(ОстаткиНоменклатуры.СуммаУпр) КАК СебестоимостьУпр,
	|	СУММА(ОстаткиНоменклатуры.СуммаНДС) КАК СебестоимостьНДС,
	|	СУММА(ОстаткиНоменклатуры.СуммаНДСУпр) КАК СебестоимостьНДСУпр
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВозвратнаяНакладнаяОтПокупателяСостав.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.Ссылка,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.Себестоимость), 0) КАК Себестоимость,
	|	СУММА(ВозвратнаяНакладнаяОтПокупателяСостав.Сумма) КАК Сумма,
	|	СУММА(ВозвратнаяНакладнаяОтПокупателяСостав.СуммаНДС) КАК СуммаНДС,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.СебестоимостьУпр), 0) КАК СебестоимостьУпр,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.СебестоимостьНДС), 0) КАК СебестоимостьНДС,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.СебестоимостьНДСУпр), 0) КАК СебестоимостьНДСУпр,
	|	ЕстьNULL(ВозвратнаяНакладнаяОтПокупателяСостав.Номенклатура.Код,"""") КАК Номенклатура,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВозвратнаяНакладнаяОтПокупателяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК ВидНоменклатуры,
	|	СУММА(ВозвратнаяНакладнаяОтПокупателяСостав.Количество) КАК Количество,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.Цена,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.СебестоимостьЦена КАК СебестоимостьЦена
	|ИЗ
	|	Документ.ВозвратнаяНакладнаяОтПокупателя.Состав КАК ВозвратнаяНакладнаяОтПокупателяСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ПО ВозвратнаяНакладнаяОтПокупателяСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	ВозвратнаяНакладнаяОтПокупателяСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратнаяНакладнаяОтПокупателяСостав.Ссылка,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.СтавкаНДС.Ставка,
	|	ОстаткиНоменклатуры.СебестоимостьУпр,
	|	ОстаткиНоменклатуры.СебестоимостьНДС,
	|	ОстаткиНоменклатуры.СебестоимостьНДСУпр,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.Номенклатура.Код,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВозвратнаяНакладнаяОтПокупателяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.ЕдиницаИзмерения.Коэффициент,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.Цена,
	|	ВозвратнаяНакладнаяОтПокупателяСостав.СебестоимостьЦена");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ВозвратнаяНакладная_Состав");
	ТипОстаткиНоменклатуры = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_ВозвратнаяНакладная_ОстаткиНоменклатуры");
	
	
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.СтавкаНДС     = Выборка.СтавкаНДС;
		ПакетСостав.Себестоимость = Выборка.Себестоимость;
		ПакетСостав.Сумма         = Выборка.Сумма;
		ПакетСостав.СуммаНДС      = Выборка.СуммаНДС;
		ПакетСостав.СебестоимостьНДС      = Выборка.СебестоимостьНДС;
		ПакетСостав.СебестоимостьЦена      = Выборка.СебестоимостьЦена;
		ПакетСостав.СебестоимостьУпр      = Выборка.СебестоимостьУпр;
		ПакетСостав.СебестоимостьНДСУпр   = Выборка.СебестоимостьНДСУпр;
		ПакетСостав.ВидНоменклатуры   = Выборка.ВидНоменклатуры;
		ПакетСостав.Номенклатура   = Выборка.Номенклатура;
		ПакетСостав.Количество   = Выборка.Количество;
		ПакетСостав.Цена   = Выборка.Цена;
		ПакетСостав.Коэффициент   = Выборка.Коэффициент;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

Функция ОтправитьКоррекциюЗапасов(Объект,КаталогВыгрузки,Ошибка)
	ТипXDTO = "DocumentObject_КоррекцияЗапасов";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.Склад = Объект.Склад.Код;
	Пакет.ВиновноеЛицо = Строка(Объект.ВиновноеЛицо.Код);
	Пакет.ВидСписания = Объект.ВидСписания.Код;
	Пакет.Оприходование = Объект.Оприходование;
	Пакет.Основание = Объект.Основание;
	//Пакет.Алко = ОпределитьПрисутствиеАлкоголя(Объект.Ссылка);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.СуммаУпр) КАК Себестоимость,
	|	ОстаткиНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КоррекцияЗапасовСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ КоррекцияЗапасовСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА КоррекцияЗапасовСостав.Номенклатура.Код
	|		КОГДА КоррекцияЗапасовСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК ВидНоменклатуры,
	|	ЕСТЬNULL(КоррекцияЗапасовСостав.Номенклатура.Код, """") КАК Номенклатура,
	|	КоррекцияЗапасовСостав.НомерСтроки,
	|	КоррекцияЗапасовСостав.Ссылка,
	|	СУММА(КоррекцияЗапасовСостав.Количество * КоррекцияЗапасовСостав.Коэффициент) КАК Количество,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.Себестоимость), 0) КАК Себестоимость,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА КоррекцияЗапасовСостав.Ссылка.Оприходование = ЛОЖЬ
	|					ТОГДА 
	|						ВЫБОР КОГДА ЕСТЬNULL(ОстаткиНоменклатуры.Себестоимость, 0) = 0 Тогда
	|							ВЫБОР КОГДА ВЫРАЗИТЬ(0.01*КоррекцияЗапасовСостав.Количество КАК Число(15,2)) < 0.1 
	|									ТОГДА 0.1
	|									ИНАЧЕ ВЫРАЗИТЬ(0.01*КоррекцияЗапасовСостав.Количество КАК Число(15,2))
	|									КОНЕЦ	
	|						ИНАЧЕ
	|							ЕСТЬNULL(ОстаткиНоменклатуры.Себестоимость, 0)
	|						КОНЕЦ
	|				ИНАЧЕ КоррекцияЗапасовСостав.Сумма
	|			КОНЕЦ), 0) КАК Сумма,
	|	КоррекцияЗапасовСостав.СуммаНДС,
	|	ЕСТЬNULL(КоррекцияЗапасовСостав.СтавкаНДС.Ставка, 0) КАК СтавкаНДС,
	|	КоррекцияЗапасовСостав.Цена,
	|	КоррекцияЗапасовСостав.ЕдиницаИзмерения.Коэффициент КАК Коэффициент
	|ИЗ
	|	Документ.КоррекцияЗапасов.Состав КАК КоррекцияЗапасовСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ПО КоррекцияЗапасовСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	КоррекцияЗапасовСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	КоррекцияЗапасовСостав.Ссылка,
	|	КоррекцияЗапасовСостав.Коэффициент,
	|	КоррекцияЗапасовСостав.Номенклатура.Код,
	|	КоррекцияЗапасовСостав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА КоррекцияЗапасовСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ КоррекцияЗапасовСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА КоррекцияЗапасовСостав.Номенклатура.Код
	|		КОГДА КоррекцияЗапасовСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ,
	|	КоррекцияЗапасовСостав.СуммаНДС,
	|	КоррекцияЗапасовСостав.СтавкаНДС.Ставка,
	|	КоррекцияЗапасовСостав.Цена,
	|	КоррекцияЗапасовСостав.ЕдиницаИзмерения.Коэффициент");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_КоррекцияЗапасов_Состав");
	ТипМатериалы = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_КоррекцияЗапасов_Материалы");
	
	
	Пока Выборка.Следующий() Цикл
		ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
		ПакетСостав.НомерСтрокиТЧ     = Формат(Выборка.НомерСтроки,"ЧЦ=4; ЧВН=; ЧГ=0");
		ПакетСостав.Себестоимость = Выборка.Себестоимость;
		ПакетСостав.Сумма         = Выборка.Сумма;
		ПакетСостав.СуммаНДС         = Выборка.СуммаНДС;
		ПакетСостав.СтавкаНДС         = Выборка.СтавкаНДС;
		ПакетСостав.ВидНоменклатуры = Выборка.ВидНоменклатуры;
		ПакетСостав.Номенклатура = Выборка.Номенклатура;
		ПакетСостав.Цена = Выборка.Цена;
		ПакетСостав.Коэффициент = Выборка.Коэффициент;
		ПакетСостав.Количество = Выборка.Количество;
		Пакет.Состав.Добавить(ПакетСостав);
	КонецЦикла;
	
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

Функция ОтправитьПередачуТоваровМеждуФирмами(Объект,Прокси,Ошибка)
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentObject_РасходнаяНакладная");
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.Валюта = Объект.Валюта.Код;
	Пакет.КурсВалютыДоговора = Объект.Курс;
	Пакет.ГрузоотправительТип = ?(НЕ ЗначениеЗаполнено(Объект.Грузоотправитель),"",Объект.Грузоотправитель.Метаданные().Имя);
	Пакет.Грузоотправитель = ?(НЕ ЗначениеЗаполнено(Объект.Грузоотправитель),"",Объект.Грузоотправитель.Код);
	Пакет.Грузополучатель = ?(НЕ ЗначениеЗаполнено(Объект.Грузополучатель),"",Объект.Грузополучатель.Код);
	Пакет.АдресДоставки = "";
	Пакет.Склад = Объект.Склад.Код;
	Пакет.КонтрагентТип = Объект.ФирмаПолучатель.Метаданные().Имя;
	Пакет.Контрагент = Объект.ФирмаПолучатель.Код;
	Пакет.ТипДоговора = ?(ЗначениеЗаполнено(Объект.ТипДоговора),Метаданные.Перечисления.ТипыДоговоров.EnumValues.Get(Перечисления.ТипыДоговоров.Индекс(Объект.ТипДоговора)).Имя,"");
	Пакет.ИтогоВсего = Объект.СуммаИтого;
	
	
	//Пакет.Алко = ОпределитьПрисутствиеАлкоголя(Объект.Ссылка);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.СуммаУпр) КАК Себестоимость,
	|	ОстаткиНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА РасходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК Номенклатура,
	|	ЕСТЬNULL(РасходнаяНакладнаяСостав.СтавкаНДС.Ставка,0) КАК СтавкаНДС,
	|	РасходнаяНакладнаяСостав.Ссылка,
	|	СУММА(РасходнаяНакладнаяСостав.Количество * РасходнаяНакладнаяСостав.Коэффициент) КАК Количество,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.Себестоимость), 0) КАК Себестоимость,
	|	СУММА(РасходнаяНакладнаяСостав.Сумма) КАК Сумма,
	|	СУММА(РасходнаяНакладнаяСостав.Цена) КАК Цена,
	|	СУММА(РасходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС
	|ИЗ
	|	Документ.ПередачаТоваровМеждуФирмами.Состав КАК РасходнаяНакладнаяСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ПО РасходнаяНакладнаяСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	РасходнаяНакладнаяСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяСостав.Ссылка,
	|	РасходнаяНакладнаяСостав.Коэффициент,
	|	РасходнаяНакладнаяСостав.СтавкаНДС.Ставка,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|				ИЛИ РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|			ТОГДА РасходнаяНакладнаяСостав.Номенклатура.Код
	|		КОГДА РасходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_РасходнаяНакладная_Состав");
	ТипМатериалы = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_РасходнаяНакладная_Материалы");
	
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Номенклатура = "т" или Выборка.Номенклатура = "п" Тогда
			ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
			ПакетСостав.СтавкаНДС     = Выборка.СтавкаНДС;
			ПакетСостав.Себестоимость = Выборка.Себестоимость;
			ПакетСостав.Сумма         = Выборка.Сумма;
			ПакетСостав.СуммаНДС      = Выборка.СуммаНДС;
			ПакетСостав.ВидНоменклатуры = Выборка.Номенклатура;
			Пакет.Состав.Добавить(ПакетСостав);
		Иначе
			ПакетМатериалы = ФабрикаXDTO.Создать(ТипМатериалы);
			ПакетМатериалы.Номенклатура     = Выборка.Номенклатура;
			ПакетМатериалы.Количество       = Выборка.Количество;
			ПакетМатериалы.СтавкаНДС        = Выборка.СтавкаНДС;
			ПакетМатериалы.Цена             = Выборка.Цена;
			ПакетМатериалы.Сумма            = Выборка.Сумма;
			ПакетМатериалы.СуммаНДС         = Выборка.СуммаНДС;
			Пакет.Материалы.Добавить(ПакетМатериалы);
		КонецЕсли;	
	КонецЦикла;
	
	
	//регистр остатки номенклатуры
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ДвиженияТМЦ.Сумма) КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДвиженияТМЦ.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|			ТОГДА ДвиженияТМЦ.Номенклатура.Код
	|		КОГДА ДвиженияТМЦ.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ КАК Номенклатура,
	|	СУММА(ДвиженияТМЦ.Количество) КАК Количество,
	|	СУММА(ДвиженияТМЦ.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ДвиженияТМЦ.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ДвиженияТМЦ.СуммаНДСУпр) КАК СуммаНДСУпр,
	|	ДвиженияТМЦ.Комитент.Код КАК Комитент,
	|	ДвиженияТМЦ.Статус,
	|	СУММА(ДвиженияТМЦ.СуммаПродажи) КАК СуммаПродажи,
	|	СУММА(ДвиженияТМЦ.СуммаНДСПродажи) КАК СуммаНДСПродажи,
	|	ДвиженияТМЦ.Комитент КАК КомитентГуид,
	|	естьnull(ДвиженияТМЦ.СтавкаНДС.Ставка,0) КАК СтавкаНДС
	|ИЗ
	|	РегистрНакопления.ДвиженияТМЦ КАК ДвиженияТМЦ
	|ГДЕ
	|	ДвиженияТМЦ.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияТМЦ.Статус,
	|	ВЫБОР
	|		КОГДА ДвиженияТМЦ.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Материал)
	|			ТОГДА ДвиженияТМЦ.Номенклатура.Код
	|		КОГДА ДвиженияТМЦ.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	|			ТОГДА ""п""
	|		ИНАЧЕ ""т""
	|	КОНЕЦ,
	|	ДвиженияТМЦ.Комитент.Код,
	|	ДвиженияТМЦ.Комитент,
	|	естьnull(ДвиженияТМЦ.СтавкаНДС.Ставка,0)");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипОстаткиНоменклатуры = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_РасходнаяНакладная_ОстаткиНоменклатуры");
	ТипОстаткиНоменклатурыМатериалы = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_РасходнаяНакладная_ОстаткиНоменклатурыМатериалы");
	
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Номенклатура = "т" или Выборка.Номенклатура = "п" Тогда
			ПакетОстаткиНоменклатуры = ФабрикаXDTO.Создать(ТипОстаткиНоменклатуры);
			ПакетОстаткиНоменклатуры.Статус   = Строка(Выборка.Статус);
			ПакетОстаткиНоменклатуры.Комитент = ОпределитьКонтрагента(Выборка.КомитентГуид,Строка(Выборка.Комитент)); 
			ПакетОстаткиНоменклатуры.КомитентТип = ОпределитьТипКонтрагента(Выборка.Комитент);
			ПакетОстаткиНоменклатуры.Себестоимость         = Выборка.Сумма;
			ПакетОстаткиНоменклатуры.СебестоимостьУпр      = Выборка.СуммаУпр;
			ПакетОстаткиНоменклатуры.СебестоимостьНДС      = Выборка.СуммаНДС;
			ПакетОстаткиНоменклатуры.СебестоимостьНДСУпр   = Выборка.СуммаНДСУпр;
			ПакетОстаткиНоменклатуры.СуммаПродажи          = Выборка.СуммаПродажи;
			ПакетОстаткиНоменклатуры.СуммаНДСПродажи       = Выборка.СуммаНДСПродажи;
			ПакетОстаткиНоменклатуры.ВидНоменклатуры       = Выборка.Номенклатура;
			ПакетОстаткиНоменклатуры.СтавкаНДС             = Выборка.СтавкаНДС;
			Пакет.ОстаткиНоменклатуры.Добавить(ПакетОстаткиНоменклатуры);
		Иначе
			ПакетОстаткиНоменклатурыМатериалы = ФабрикаXDTO.Создать(ТипОстаткиНоменклатурыМатериалы);
			ПакетОстаткиНоменклатурыМатериалы.Номенклатура        = СокрЛП(Выборка.Номенклатура);
			ПакетОстаткиНоменклатурыМатериалы.СтавкаНДС           = Выборка.СтавкаНДС;
			ПакетОстаткиНоменклатурыМатериалы.Количество          = Выборка.Количество;
			ПакетОстаткиНоменклатурыМатериалы.Себестоимость       = Выборка.Сумма;
			ПакетОстаткиНоменклатурыМатериалы.СебестоимостьНДС    = Выборка.СуммаНДС;
			ПакетОстаткиНоменклатурыМатериалы.СебестоимостьУпр    = Выборка.СуммаУпр;
			ПакетОстаткиНоменклатурыМатериалы.СебестоимостьНДСУпр = Выборка.СуммаНДС;
			ПакетОстаткиНоменклатурыМатериалы.СуммаПродажи        = Выборка.СуммаПродажи;
			ПакетОстаткиНоменклатурыМатериалы.СуммаНДСПродажи     = Выборка.СуммаНДСПродажи;
			Пакет.ОстаткиНоменклатурыМатериалы.Добавить(ПакетОстаткиНоменклатурыМатериалы);
		КонецЕсли;	
	КонецЦикла;
	
	RibMessages = ОбменДаннымиRIBСервер.УпаковатьВСообщение(Объект.Дата,Объект.Номер,Пакет,"DocumentObject_РасходнаяНакладная","fin","RS_РасходнаяНакладная");
	Результат = ОтправитьСообщение(RibMessages,Прокси,"RibMessages");
	Ошибка = RibMessages;
	Возврат Результат;
КонецФункции

Функция ОтправитьСчетФактура(Объект,КаталогВыгрузки,Ошибка)  // сделано, но проверить
	ТипXDTO = "DocumentObject_СчетФактура";
	ТипДокумента = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", ТипXDTO);
	Пакет = ФабрикаXDTO.Создать(ТипДокумента);
	Пакет.Ref = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Пакет.DeletionMark = Объект.ПометкаУдаления;
	Пакет.Date = Объект.Дата;
	Пакет.Number = Объект.Номер;
	Пакет.Posted = Объект.Проведен;
	Пакет.Фирма = Строка(Объект.Фирма.Код);
	Пакет.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница.Код;
	Пакет.ГрузоотправительТип = "";//?(Объект.Грузоотправитель = Неопределено,"",Объект.Грузоотправитель.Метаданные().Имя);
	Пакет.Грузоотправитель = "";//?(Объект.Грузоотправитель = Неопределено,"",Объект.Грузоотправитель.Код);
	Пакет.Грузополучатель = "";//Объект.Грузополучатель.Код;
	Пакет.АдресГрузоотправителя = "";//Объект.АдресГрузоотправителя;
	Пакет.АдресГрузополучателя = "";//Объект.АдресГрузополучателя;
	//Котлячкова  24,07,14
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() Тогда 
		Пакет.Контрагент = Объект.Контрагент.Родитель.Код;
	Иначе 
		Пакет.Контрагент = Объект.Контрагент.Код;
	КонецЕсли;
	//Котлячкова
	
	Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ДокИсходнаяРасходнаяНакладная = УчетНДС.ПолучитьИсправляемыйДокументРеализации(Объект.ДокОснование,Истина);	
		Пакет.ДокОснование = Строка(ДокИсходнаяРасходнаяНакладная.УникальныйИдентификатор());
	Иначе
		Пакет.ДокОснование = Строка(Объект.ДокОснование.УникальныйИдентификатор());
	КонецЕсли;
	
	
	Пакет.СуммаИтого = Объект.СуммаДокумента;
	Пакет.СуммаНДСИтого = Объект.СуммаНДСДокумента;
	
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ
	//|	СчетФактураСостав.СтавкаНДС КАК СтавкаНДС,
	//|	СчетФактураСостав.Номенклатура.Код КАК Номенклатура,
	//|	СчетФактураСостав.НомерСтроки,
	//|	СУММА(СчетФактураСостав.Сумма) КАК Сумма,
	//|	СУММА(СчетФактураСостав.СуммаНДС) КАК СуммаНДС,
	//|	СУММА(СчетФактураСостав.Сумма) КАК Себестоимость,
	//|	ВЫБОР
	//|		КОГДА СчетФактураСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	//|			ТОГДА ""п""
	//|		ИНАЧЕ ""т""
	//|	КОНЕЦ КАК ВидНоменклатуры
	//|ИЗ
	//|	Документ.СчетФактура.Состав КАК СчетФактураСостав
	//|ГДЕ
	//|	СчетФактураСостав.Ссылка = &Ссылка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	СчетФактураСостав.Номенклатура.Код,
	//|	СчетФактураСостав.НомерСтроки,
	//|	СчетФактураСостав.СтавкаНДС,
	//|	ВЫБОР
	//|		КОГДА СчетФактураСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Продукция)
	//|			ТОГДА ""п""
	//|		ИНАЧЕ ""т""
	//|	КОНЕЦ");
	//Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);					  
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//ТипСостав = ФабрикаXDTO.Тип("http://1c-astor.ru/Base77", "DocumentTabularSectionRow_СчетФактура_Состав");
	//Пока Выборка.Следующий() Цикл
	//	ПакетСостав = ФабрикаXDTO.Создать(ТипСостав);
	//	ПакетСостав.НомерСтрокиТЧ     = Выборка.НомерСтроки;
	//	ПакетСостав.Себестоимость = Выборка.Себестоимость;
	//	ПакетСостав.ВидНоменклатуры = Выборка.ВидНоменклатуры;
	//	ПакетСостав.Номенклатура = Выборка.Номенклатура;
	//	ПакетСостав.Количество = Выборка.Количество;
	//	ПакетСостав.СтавкаНДС = Выборка.СтавкаНДС.Ставка;
	//	ПакетСостав.Сумма = Выборка.Сумма;
	//	ПакетСостав.СуммаНДС = Выборка.СуммаНДС;
	//	Пакет.Состав.Добавить(ПакетСостав);
	//КонецЦикла;
	Результат = ОтправитьСообщение(Пакет,КаталогВыгрузки,ТипXDTO);
	Ошибка = ?(Результат,"",Пакет);
	Возврат Результат;
КонецФункции

Функция ПривестиТип(Тип,Ссылка)
	Если Тип = "РасходнаяНакладная" Тогда
		Если Ссылка.Возврат Тогда
			Тип = "ВозвратнаяНакладная";
		КонецЕсли;	
	ИначеЕсли Тип = "ВозвратнаяНакладнаяОтПокупателя" Тогда
		Тип = "ВозвратнаяНакладная";
	КонецЕсли;	
	Возврат Тип;
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////
/////////////////ЗАГРУЗКА ЗАКАЗОВ ИЗ МАГАЗИНОВ (*.TXT)/////////////////////////////////////


Функция НайтиНоменклатуру(ВходящийКод,ВходящийКодRMS,СтрНенайденныхКодовТоваров)
	спрНоменклатура = Справочники.Номенклатура.НайтиПоКоду(ВходящийКод);
	Если спрНоменклатура.Пустая() Тогда
		спрНоменклатура = Справочники.Номенклатура.НайтиПоКоду(ВходящийКодRMS);
	КонецЕсли;
	Если спрНоменклатура.Пустая() Тогда
		СтрНенайденныхКодовТоваров = СтрНенайденныхКодовТоваров + ", " + СокрЛП(ВходящийКод)+" ("+ВходящийКодRMS+")"; 
	КонецЕсли;
	Возврат спрНоменклатура;	
КонецФункции

Функция ПолучитьДанныеИзИмениФайла(ВходящаяСтрока)
	соответствияСкладов = Новый Соответствие;
	соответствияСкладов.Вставить("z2",107);
	соответствияСкладов.Вставить("zm",107);
	соответствияСкладов.Вставить("z3",103);
	соответствияСкладов.Вставить("z4",108);
	соответствияСкладов.Вставить("z5",115);
	соответствияСкладов.Вставить("z6",116);
	соответствияСкладов.Вставить("z7",131);
	соответствияСкладов.Вставить("z8",137);
	соответствияСкладов.Вставить("z1",101);
	соответствияСкладов.Вставить("zr",109);
	соответствияСкладов.Вставить("zx",108);
	соответствияСкладов.Вставить("zd",101);
	соответствияСкладов.Вставить("zn",101);
	соответствияСкладов.Вставить("zp",108);
	соответствияСкладов.Вставить("z9",802);
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Фирма",Справочники.Организации.ПустаяСсылка());
	СтруктураВозврата.Вставить("Контрагент",Неопределено);
	СтруктураВозврата.Вставить("ЭтоОбщепит",Ложь);
	// странно как то будем получать дату, известны только число и месяц
	// а год неизвестен, будем считать что текущий год , хотя неверно
	СтруктураВозврата.Вставить("Комментарий","");
	СтруктураВозврата.Вставить("Склад",Справочники.Склады.ПустаяСсылка());
	СтруктураВозврата.Вставить("Фруктовый",Ложь);
	СтруктураВозврата.Вставить("НомерДокумента","");
	СтруктураВозврата.Вставить("ДатаДокумента",Дата('00010101'));    //dps+ 000123563
	СтруктураВозврата.Вставить("ДатаПоставкиОт",Дата('00010101'));
	СтруктураВозврата.Вставить("ДатаПоставкиДо",Дата('00010101'));
	СтруктураВозврата.Вставить("СтрокВДокументе",25);
	Буфер = СтрЗаменить(ВходящаяСтрока,"_",Символы.ПС);
	Строка1 = СтрПолучитьСтроку(Буфер,1);
	Строка2 = СтрПолучитьСтроку(Буфер,2);
	
	
	СтруктураВозврата.ЭтоОбщепит = НРег(Лев(Строка1,1))= "c";
	Если НЕ СтруктураВозврата.ЭтоОбщепит Тогда
		Контрагент = Сред(Строка1,2,2);
		СтруктураВозврата.Контрагент = Справочники.СтруктурныеЕдиницы.НайтиПоКоду(Число(Контрагент));
	КонецЕсли;
	//КотлячковаЕВ++ 31,12,13
	ПолученнаяДата = Дата(Формат(ТекущаяДата(),"ДФ=yyyy")+Прав(Строка2,2)+Лев(Строка2,2));
	ПроверкаНаГод = Sqrt((ТекущаяДата()-ПолученнаяДата)*(ТекущаяДата()-ПолученнаяДата))>=2592000;
	ДатаДокумента = ?(ПроверкаНаГод,Дата(Формат(КонецГода(ТекущаяДата())+1,"ДФ=yyyy")+Прав(Строка2,2)+Лев(Строка2,2)),ПолученнаяДата);
	//КотлячковаЕВ--
	
	//СтруктураВозврата.ДатаДокумента = ДатаДокумента;
	СтруктураВозврата.ДатаДокумента = ТекущаяДата();   //dps+ 000123563
	СтруктураВозврата.ДатаПоставкиОт = ДатаДокумента;
	СтруктураВозврата.ДатаПоставкиДо = ДатаДокумента;
	СтруктураВозврата.НомерДокумента = ВходящаяСтрока;
	КодСклада = СоответствияСкладов[НРег(Сред(Строка1,4,2))];
	СтруктураВозврата.Склад = Справочники.Склады.НайтиПоКоду(КодСклада);
	СтруктураВозврата.Фруктовый = СтруктураВозврата.Склад.ТипСклада = Перечисления.ТипыСкладов.Фруктовый;
	//Переделать:
	СтруктураВозврата.Фирма = Справочники.Организации.НайтиПоКоду(?(КодСклада=115,23,?(КодСклада=131,81,24)));
	//
	СтруктураВозврата.СтрокВДокументе = ?(КодСклада=115,15,25);
	СтруктураВозврата.Комментарий = "Файл : "+ВходящаяСтрока + "(поставка на дату "+Лев(Строка2,2)+"."+Прав(Строка2,2)+"."+Формат(ТекущаяДата(),"ДФ=yyyy")+")";
	Возврат СтруктураВозврата;
КонецФункции

Функция ДополнитьСтроку(ВходящаяСтрока,ЧислоСимволов) Экспорт
	Буфер = ВходящаяСтрока;
	Для ъ=1 По ЧислоСимволов Цикл
		Буфер = Буфер + " ";
	КонецЦикла;	
	Возврат Лев(Буфер,ЧислоСимволов);
КонецФункции

Функция СформироватьТекстДляПисьма(тзВходящая,ВходящийМассив,ВходящаяСтруктура) Экспорт
	ТекстПисьма = "";
	Если ВходящийМассив.Количество()>0 Тогда
		Для Каждого СтрокаМассива из ВходящийМассив Цикл
			ТекстПисьма = ТекстПисьма + "
			|"+СтрокаМассива;
		КонецЦикла;
		ТекстПисьма = "Сформированые документа : "+ТекстПисьма;
	КонецЕсли;
	Если НЕ ВходящаяСтруктура.Фруктовый Тогда
		ТекстПисьма = ТекстПисьма +"
		|Зак. "+ВходящаяСтруктура.НомерДокумента +"("+ВходящаяСтруктура.Контрагент+")
		|Код       Заказ     Испол.    %      Товар
		|--------- --------- --------- ------ -------";
		Для Каждого СтрокаТЗ из тзВходящая Цикл
			ТекстПисьма = ТекстПисьма	+"
			|"+ДополнитьСтроку(СтрокаТЗ.Номенклатура.Код,9)
			+" "+ДополнитьСтроку(Формат(СтрокаТЗ.КоличествоЗаказа,"ЧН=0; ЧГ=0"),9)
			+" "+ДополнитьСтроку(Формат(СтрокаТЗ.Количество,"ЧН=0; ЧГ=0"),9)
			+" "+ДополнитьСтроку(Формат(СтрокаТЗ.ПроцентЗаказа,"ЧН=0; ЧГ=0"),6)
			+" "+СтрокаТЗ.Номенклатура.Наименование;
		КонецЦикла;
		ПроцентВыполненияИтого = Окр(тзВходящая.Итог("ПроцентЗаказа")/тзВходящая.Количество());
		ТекстПисьма = ТекстПисьма +"
		|--------------------------------------------
		|Заказ выполнен на "+ПроцентВыполненияИтого+"%
		|СООБЩЕНИЕ СФОРМИРОВАНО РОБОТОМ. ПРОСЬБА НЕ ОТВЕЧАТЬ НА НЕГО";
	Иначе
		ТекстПисьма = ТекстПисьма+"
		|Зак. "+ВходящаяСтруктура.НомерДокумента +"("+ВходящаяСтруктура.Контрагент+")
		|Ваш заказ принят к исполнению
		|СООБЩЕНИЕ СФОРМИРОВАНО РОБОТОМ. ПРОСЬБА НЕ ОТВЕЧАТЬ НА НЕГО";
	КонецЕсли;	
	Возврат ТекстПисьма;	
КонецФункции

Процедура ЗагрузитьФайлы() Экспорт
	ПутьКаталога = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.КаталогЗагрузкиЗаказов);	
	МассивФайлов = НайтиФайлы(ПутьКаталога,"*.txt");
	КаталогЗагруженных = ПутьКаталога+"\Загруженные";
	СоздатьКаталог(КаталогЗагруженных);
	ТекстФайлЛога = Новый ЗаписьТекста(ПутьКаталога+"\Лог.log",КодировкаТекста.UTF16,,Истина,);
	ТекстФайлОшибок = Новый ЗаписьТекста(ПутьКаталога+"\Ошибки.log",КодировкаТекста.UTF16,,Истина,);
	Для Каждого Файла из МассивФайлов Цикл
		ОшибкиЗагрузки = "";
		Лог = "";
		Если ЗагрузитьФайлЗаказаМагазина(Файла.ПолноеИмя,Истина,Лог,ОшибкиЗагрузки) Тогда
			ПереместитьФайл(Файла.ПолноеИмя,КаталогЗагруженных+"\"+Файла.ИмяБезРасширения+".load");	
		КонецЕсли;
		Если НЕ ПустаяСтрока(Лог) Тогда
			ТекстФайлЛога.ЗаписатьСтроку("---------->"+ Файла.ПолноеИмя);
			ТекстФайлЛога.ЗаписатьСтроку(Лог);
		КонецЕсли;
		Если Не ПустаяСтрока(ОшибкиЗагрузки) Тогда
			ТекстФайлОшибок.ЗаписатьСтроку("---------->"+ Файла.ПолноеИмя);
			ТекстФайлОшибок.ЗаписатьСтроку(ОшибкиЗагрузки);	
		КонецЕсли;
	КонецЦикла;
	ТекстФайлЛога.Закрыть();
	ТекстФайлОшибок.Закрыть();
КонецПроцедуры

// коряво, но хоть как то
//в декабре,январе возможны проблемы с алгоритмом.
Функция ЗаказУжеЗагружен(ВходящиеПараметры)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЗаказВнешний.Ссылка
	|ИЗ
	|	Документ.ЗаказВнешний КАК ЗаказВнешний
	|ГДЕ
	|	ЗаказВнешний.Дата МЕЖДУ &ДатаНачала И &ДатаКонца
	|	И ЗаказВнешний.НомерДокумента = &НомерДокумента
	|	И ЗаказВнешний.ДатаДокумента = &ДатаДокумента");	
	Запрос.УстановитьПараметр("ДатаНачала",НачалоГода(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаКонца",КонецГода(ТекущаяДата()));
	Запрос.УстановитьПараметр("НомерДокумента",ВходящиеПараметры.НомерДокумента);
	Запрос.УстановитьПараметр("ДатаДокумента",ВходящиеПараметры.ДатаДокумента);
	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой();
КонецФункции

Функция НайтиПодразделениеКонтрагентаПротоколРЦ(ВходящийКод)
	Текстусловия = "";
	Запрос = Новый Запрос;
	Если Константы.ИспользоватьПодразделенияПоставщиков.Получить() и ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		СпрКонтрагент = Справочники.Контрагенты.НайтиПоКоду(ВходящийКод);		
		Запрос.УстановитьПараметр("ВходящийПараметр",СпрКонтрагент);
		ТекстУсловия = "	Контрагенты.Ссылка В ИЕРАРХИИ (&ВходящийПараметр)
		|	И Контрагенты.ПротоколРЦ И Контрагенты.Статус ";
	Иначе
		ТекстУсловия = "	Контрагенты.Код = &ВходящийПараметр ";
		Запрос.УстановитьПараметр("ВходящийПараметр",Число(ВходящийКод));
	КонецЕсли;	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	| 	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ "+ТекстУсловия;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	Иначе
		Возврат Результат.Выгрузить()[0].Ссылка;
	КонецЕсли;
КонецФункции

Функция ЗагрузитьФайлЗаказаМагазина(ПутьКФайлу,ФоновоеЗадание=Ложь,ТекстЛог="",Ошибки = "")  Экспорт
	СтрНенайденныхКодовТоваров = "";
	ТекстОтправки =  "";
	Файл = Новый Файл(ПутьКФайлу);
	ИмяФайла = Файл.ИмяБезРасширения;
	ИмяФайлаСоответствуетФормату = Истина;
	//Если СтрЧислоВхождений(ИмяФайла,"_")<>3 тогда
	//	ИмяФайлаСоответствуетФормату = Ложь;
	//КонецЕсли;
	//Если СтрДлина(ИмяФайла)<>19 Тогда
	//	ИмяФайлаСоответствуетФормату = Ложь;
	//КонецЕсли;
	Если НЕ ИмяФайлаСоответствуетФормату Тогда
		Если ФоновоеЗадание Тогда
			Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Формат имени файла: "+ИмяФайла+" не соответствует формату sCCz0_ДДММ_ЧЧММ_bNN";	
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Формат имени файла: "+ИмяФайла+" не соответствует формату sCCz0_ДДММ_ЧЧММ_bNN");
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
	тзТабличнаяЧасть = СоздатьТипизированнуюТЗ();
	
	ТекстовыйДок = Новый ТекстовыйДокумент;
	ТекстовыйДок.Прочитать(ПутьКФайлу);
	КоличествоСтрок = ТекстовыйДок.КоличествоСтрок();
	Если КоличествоСтрок<2 Тогда 
		Если ФоновоеЗадание Тогда
			Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> В файле "+ИмяФайла+" нет данных для загрузки";
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В файле "+ИмяФайла+" нет данных для загрузки");
		КонецЕсли;
		Возврат Ложь; 
	КонецЕсли;
	НомерСтроки = 1;
	СтруктураПараметров = ПолучитьДанныеИзИмениФайла(ИмяФайла);
	Если ЗаказУжеЗагружен(СтруктураПараметров) Тогда
		Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Файл "+ИмяФайла+" уже загружался ранее";
		Возврат Ложь;
	КонецЕсли;
	
	//{{ШиловМВ 02.12.2014 №000134380
	НачВремя=Дата('00010101000000');
	КонВремя=Дата('00010101000000');
	Если ПолучитьВремяЗапретаЗагрузкиЗаказов(СтруктураПараметров.Склад,НачВремя,КонВремя) Тогда
		Если Дата("00010101"+Формат(ТекущаяДата(),"ДФ=""ЧЧммсс""")) >= НачВремя И Дата("00010101"+Формат(ТекущаяДата(),"ДФ=""ЧЧммсс""")) <= КонВремя Тогда
			Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> У заказов склада "+СтруктураПараметров.Склад.Наименование+" установлен запрет на загрузку с "+Час(НачВремя)+":"+Минута(НачВремя)+":"+Секунда(НачВремя)+" по "+Час(КонВремя)+":"+Минута(КонВремя)+":"+Секунда(КонВремя);
			Возврат Ложь;
		КонецЕсли; 
	КонецЕсли;
	//ШиловМВ 02.12.2014 №000134380}}
	
	//{БредовЮГ 2013-09-27 Наряд №000094805 проверяем склад ФРОВ на время
	ТекСклад = СтруктураПараметров.склад;
	ТекДата = ТекущаяДата();
	Если ЗначениеЗаполнено(ТекСклад) И СтруктураПараметров.Фруктовый Тогда
		//Час и минута заданы в секундах, т.е. если время 15:20 = 15*60*60+20*60 МУАХАХАХАХА
		ВремяПредел = ПолучитьЗначениеКонстанты("ЗагрузкаЗаказаМагазина",);	
		ДатаВремяПредела = НачалоДня(ТекДата) + ВремяПредел.ПределВремениФРОВ;
		Если ТекДата > ДатаВремяПредела Тогда
			Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Ваша заявка пыталась загрузиться в "+Формат(ТекДата,"ДЛФ=DDT")+" и была удалена по причине опоздания.";		
			АдресПолучателя = "";
			УчетнаяЗапись = ЭлектроннаяПочта.ПолучитьСистемнуюУчетнуюЗапись();
			Если ТипЗнч(СтруктураПараметров.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
				АдресПолучателя = УправлениеКонтактнойИнформациейСервер.ПолучитьКонтактнуюИнформацияОбъекта(СтруктураПараметров.Контрагент,Справочники.ВидыКонтактнойИнформации.EmailКонтрагента);
			ИначеЕсли ТипЗнч(СтруктураПараметров.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда	
				АдресПолучателя = УправлениеКонтактнойИнформациейСервер.ПолучитьКонтактнуюИнформацияОбъекта(СтруктураПараметров.Контрагент,Справочники.ВидыКонтактнойИнформации.EmailСтруктурнойЕдиницы);
			КонецЕсли;
			Если ПустаяСтрока(АдресПолучателя) Тогда
				Если ФоновоеЗадание Тогда
					Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Не указан e-mail у "+СтруктураПараметров.Контрагент;
				Иначе	
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан e-mail у "+СтруктураПараметров.Контрагент);
				КонецЕсли;
				Возврат Истина;
			КонецЕсли;	
			ПараметрыПисьма = Новый Структура;
			ПараметрыПисьма.Вставить("Тема", НСтр("ru = 'sklad_ВШОтчет: "+СтруктураПараметров.НомерДокумента+"'"));
			ПараметрыПисьма.Вставить("Тело", НСтр("ru = 'Ваша заявка пыталась загрузиться в "+Формат(ТекДата,"ДЛФ=DDT")+" и была удалена по причине опоздания.'"));
			ПараметрыПисьма.Вставить("Кому", АдресПолучателя);
			Попытка
				ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
			Исключение
				Если ФоновоеЗадание Тогда
					Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Не удалось отправить письмо на адрес : "+АдресПолучателя+"("+ОписаниеОшибки()+")";		
				Иначе	
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось отправить письмо на адрес : "+АдресПолучателя);
				КонецЕсли;	
			КонецПопытки;
			Возврат Истина;
			
		КонецЕсли;
	КонецЕсли;	
	//БредовЮГ 2013-09-27 Наряд №000094805 проверяем склад ФРОВ на время}
	
	
	
	
	Для ъ=1 По КоличествоСтрок Цикл
		СтрокаПарсинга = ТекстовыйДок.ПолучитьСтроку(ъ);
		СтрокаПарсинга = СтрЗаменить(СтрокаПарсинга,";",Символы.ПС);
		Если ъ=1 Тогда 
			Если СтруктураПараметров.ЭтоОбщепит Тогда
				КодКонтрагента = СокрЛП(СтрПолучитьСтроку(СтрокаПарсинга,1));	
				//{БредовЮГ 2014-07-25 Включение сайтов поставщиков
				//СтруктураПараметров.Контрагент = Справочники.Контрагенты.НайтиПоКоду(КодКонтрагента);
				СтруктураПараметров.Контрагент = НайтиПодразделениеКонтрагентаПротоколРЦ(КодКонтрагента);
				//БредовЮГ 2014-07-25 Включение сайтов поставщиков}
			КонецЕсли;
			Продолжить; 
		КонецЕсли;
		КодНоменклатуры = СтрПолучитьСтроку(СтрокаПарсинга,1);
		Количество = Число(СтрПолучитьСтроку(СтрокаПарсинга,2));
		ЦенаСтрока = СтрПолучитьСтроку(СтрокаПарсинга,3);
		КодRMS = СтрПолучитьСтроку(СтрокаПарсинга,4);
		Цена = 0;
		Номенклатура = НайтиНоменклатуру(КодНоменклатуры,КодRMS,СтрНенайденныхКодовТоваров);
		
		//КотлячковаЕВ++ 18,11,13 Если  товар штучный ( не весовой) исключить возможность выписки дробного кол-ва
		Если Номенклатура.ТипТовара=Перечисления.ТипыТоваров.Штучный Тогда
			Количество=Окр(Количество,0);
		КонецЕсли;
		//КотлячковаЕВ--
		//{КотлячковаЕВ 2014-05-08 02:08:33 Наряд № 000115681
		Цена = ?(ПустаяСтрока(ЦенаСтрока),0,Число(ЦенаСтрока));
		//КотлячковаЕВ 2014-05-08 02:08:33 }			
		Если Цена = 0 и не СтруктураПараметров.ЭтоОбщепит Тогда
			Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> В заказе "+ПутьКФайлу+" ошибка: Обнаружена нулевая цена";
			ТекстОтправки = ТекстОтправки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС) + "Обнаружена 0 цена по номенклатуре "+Номенклатура+" , код("+КодНоменклатуры+")";
			Продолжить;	
		КонецЕсли;
		
		НоваяСтрока = тзТабличнаяЧасть.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.НомерСтроки = НомерСтроки;
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.Цена = Цена;
		НоваяСтрока.Сумма = НоваяСтрока.Цена*НоваяСтрока.Количество;
		НомерСтроки = НомерСтроки + 1;
		СтруктураДанных = Новый Структура;    	
		СтруктураДанных.Вставить("Номенклатура",	 НоваяСтрока.Номенклатура);
		СтруктураДанных.Вставить("ЕдиницаИзмерения", НоваяСтрока.ЕдиницаИзмерения);
		СтруктураДанных.Вставить("Коэффициент",НоваяСтрока.Коэффициент);
		СтруктураДанных.Вставить("СтавкаНДС", НоваяСтрока.Номенклатура);
		ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
		Если ЗначениеЗаполнено(НоваяСтрока.СтавкаНДС) Тогда
			Ставка = НоваяСтрока.СтавкаНДС.Ставка;
			НоваяСтрока.СуммаНДС = 	(НоваяСтрока.Сумма*Ставка)/(100+Ставка);
		КонецЕсли;
	КонецЦикла;
	//{КотлячковаЕВ 2014-05-08 02:08:33 Наряд № 000115681
	Если СтруктураПараметров.ЭтоОбщепит Тогда
		тзТабличнаяЧасть=ПолучитьЦеныЗакупки(тзТабличнаяЧасть,ТекущаяДата(),СтруктураПараметров.Фирма,СтруктураПараметров.Склад.Владелец);
		тзТабличнаяЧасть=ПолучитьЦеныПоставщика(тзТабличнаяЧасть,ТекущаяДата());
	Иначе
		Если СтруктураПараметров.Фирма=СтруктураПараметров.Контрагент.Организация Тогда     //это действительно СЕ
			тзТабличнаяЧасть=ПолучитьЦеныЗакупки(тзТабличнаяЧасть,ТекущаяДата(),СтруктураПараметров.Фирма,СтруктураПараметров.Склад.Владелец);
			тзТабличнаяЧасть=ПолучитьЦеныПоставщика(тзТабличнаяЧасть,ТекущаяДата());
		КонецЕсли;
	КонецЕсли;
	//КотлячковаЕВ 2014-05-08 03:34:14 }
	Если НЕ ПустаяСтрока(СтрНенайденныхКодовТоваров) Тогда
		Если ФоновоеЗадание Тогда
			Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> В заказе "+ПутьКФайлу+" ошибка: не найдена номенклатура с кодом "+СтрНенайденныхКодовТоваров;	
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В заказе "+ПутьКФайлу+" ошибка: не найдена номенклатура с кодом "+СтрНенайденныхКодовТоваров);
		КонецЕсли;
		Возврат Ложь;	
	КонецЕсли;
	СкладАлкоголь = Справочники.Склады.НайтиПоКоду(115);	
	// проверяем есть ли остатки
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТЗДанные.НомерСтроки,
	|	ТЗДанные.Номенклатура,
	|	ТЗДанные.ЕдиницаИзмерения,
	|	ТЗДанные.Коэффициент,
	|	ТЗДанные.Цена,
	|	ТЗДанные.Количество,
	|	ТЗДанные.СтавкаНДС,
	|	ТЗДанные.СуммаНДС,
	|	ТЗДанные.Сумма
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	&тзДанные КАК ТЗДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.НомерСтроки,
	|	ВТДанные.Номенклатура.Код КАК Код,
	|	ВТДанные.Номенклатура,
	|	ВТДанные.ЕдиницаИзмерения,
	|	ВТДанные.Коэффициент,
	// если общепит и склад для цехов то разделяем продукцию на охлажденку и заморозку иначе 1 
	|   "+?(СтруктураПараметров.ЭтоОбщепит И СтруктураПараметров.Склад = Справочники.Склады.НайтиПоКоду(109),"
	|   ВЫБОР КОГДА (ВЫРАЗИТЬ(ЕстьNULL(ВложенныйЗапрос.Значение,"""") КАК Строка(1)) <> ""З"" И ВЫРАЗИТЬ(ЕстьNULL(ВложенныйЗапрос.Значение,"""") КАК Строка(1)) <> ""О"") ТОГДА ""ПРОЧЕЕ""
	|	ИНАЧЕ ВЫРАЗИТЬ(ЕстьNULL(ВложенныйЗапрос.Значение,"""") КАК Строка(1))  КОНЕЦ" ,"1")+" КАК СортировкаСклада,
	|	ЕстьNULL(ВложенныйЗапрос.Значение,"""") КАК АдресТовара,
	|	ВТДанные.Цена,
	|	ВЫБОР
	|		КОГДА &Фруктовый
	|			ТОГДА ВТДанные.Количество
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТДанные.Количество <= ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0)
	|					ТОГДА ВТДанные.Количество
	|				ИНАЧЕ 
	|					ВЫБОР КОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0)<0 
	|					ТОГДА 0
	|					ИНАЧЕ ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Количество,
	|	ВТДанные.Количество КАК КоличествоЗаказа,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА &Фруктовый
	|			ТОГДА ВТДанные.Количество
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТДанные.Количество <= ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0)
	|					ТОГДА ВТДанные.Количество
	|				ИНАЧЕ 
	|					ВЫБОР КОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0)<0 
	|					ТОГДА 0
	|					ИНАЧЕ ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ *100/ВТДанные.Количество КАК Число(15,1)) КАК ПроцентЗаказа,
	|	ВТДанные.СтавкаНДС,
	|	ВТДанные.СуммаНДС,
	|	ВТДанные.Сумма,
	|	ВЫБОР
	|		КОГДА &Фруктовый
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТДанные.Количество <= ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	КОНЕЦ КАК НехватаетОстатка,
	|	ВЫБОР
	|		КОГДА &Фруктовый
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТДанные.Количество <= ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0)
	|					ТОГДА 0
	|				ИНАЧЕ ВЫБОР КОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0)<0 
	|					  Тогда	ВТДанные.Количество
	|					  ИНАЧЕ ВТДанные.Количество - ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) 
	|					  КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоНехватки
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				,
	|				Фирма = &ВыбФирма
	|					И Номенклатура В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							А.Номенклатура
	|						ИЗ
	|							ВТДанные КАК А)
	|					И МестоХранения = &Склад) КАК ОстаткиНоменклатурыОстатки
	|		ПО ВТДанные.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							ДопРеквизиты.Значение,
	|							ДопРеквизиты.ССылка КАК Номенклатура
	|						ИЗ 
	|							Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДопРеквизиты
	|						ГДЕ 
	|							ДопРеквизиты.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|													А.Номенклатура
	|													ИЗ
	|														ВТДанные КАК А)
	|						И ДопРеквизиты.Свойство = &ПВХАдресТовара ) КАК ВложенныйЗапрос
	|					ПО ВТДанные.Номенклатура = ВложенныйЗапрос.Номенклатура
	|УПОРЯДОЧИТЬ ПО СортировкаСклада,АдресТовара,ВТДанные.НомерСтроки");
	Запрос.УстановитьПараметр("тзДанные",тзТабличнаяЧасть);
	Запрос.УстановитьПараметр("ПВХАдресТовара",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду("1320"));
	Запрос.УстановитьПараметр("ВыбФирма",СтруктураПараметров.Фирма);
	Запрос.УстановитьПараметр("Фруктовый",СтруктураПараметров.Фруктовый); // по фруктам остатки не смотрим
	Запрос.УстановитьПараметр("Склад",СтруктураПараметров.Склад);
	РезультатЗапроса = Запрос.Выполнить();
	тзТабличнаяЧасть = РезультатЗапроса.Выгрузить();
	//{{ШиловМВ 09.12.2014 №000134380 п.2
	тзТабличнаяЧасть.Колонки.Добавить("СортАдрес",Новый ОписаниеТипов("Строка"));
	тзТабличнаяЧасть.Колонки.Добавить("Вес",Новый ОписаниеТипов("Число"));
	ЗаполнитьIzh_АдресаНоменклатуры(тзТабличнаяЧасть);
	ЗаполнитьВесТовара(тзТабличнаяЧасть);
	Если НЕ СтруктураПараметров.Фруктовый Тогда
		тзТабличнаяЧасть.Сортировать("СортировкаСклада,СортАдрес,Вес Убыв,НомерСтроки");
	КонецЕсли;
	//ШиловМВ 09.12.2014 №000134380 п.2}}
	
	МассивСтрокТЗ = тзТабличнаяЧасть.НайтиСтроки(Новый Структура("Количество",0));
	ТекСтрока = 1;
	МассивДокументов = Новый Массив;
	ДокОбъект  = Неопределено;
	//СортАдрес = Неопределено;
	СортировкаСкладов = Неопределено; 
	СтруктураКонстант = ПолучитьЗначениеКонстанты("ЗагрузкаЗаказаПоставщика",);
	
	НачатьТранзакцию();
	Для Каждого СтрокаТЗ из тзТабличнаяЧасть Цикл
		Если СтрокаТЗ.Количество=0 Тогда Продолжить; КонецЕсли;
		
		Если ТекСтрока>СтруктураПараметров.СтрокВДокументе или ДокОбъект = Неопределено ИЛИ СортировкаСкладов <>СтрокаТЗ.СортировкаСклада Тогда
			Если ДокОбъект<>Неопределено Тогда
				ДокОбъект.СуммаИтого = ДокОбъект.Состав.Итог("Сумма");
				ДокОбъект.СуммаНДСИтого = ДокОбъект.Состав.Итог("СуммаНДС");
				Попытка
					ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
					МассивДокументов.Добавить(ДокОбъект);
				Исключение
					Если ФоновоеЗадание Тогда
						Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Документ не сформирован : "+ОписаниеОшибки();	
					Иначе	
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ не сформирован : "+ОписаниеОшибки());
					КонецЕсли;
					ОтменитьТранзакцию();
					Возврат Ложь;	
				КонецПопытки;
				// если документ записался, и склад не фруктовый то формируем перемещение товаров на склад резерва.
				Если НЕ СтруктураПараметров.Фруктовый Тогда
					ДокОбъектПеремещение = Документы.Перемещение.СоздатьДокумент();
					ДокОбъектПеремещение.Дата = ТекущаяДата();
					ДокОбъектПеремещение.Заполнить(ДокОбъект.Ссылка);
					Если СтруктураКонстант<>Неопределено И СтруктураКонстант.Свойство("СкладРезерва") Тогда
						ДокОбъектПеремещение.СкладПолучатель = 	СтруктураКонстант.СкладРезерва;
					КонецЕсли;	
					Попытка
						ДокОбъектПеремещение.Записать(РежимЗаписиДокумента.Проведение);
						МассивДокументов.Добавить(ДокОбъектПеремещение);
					Исключение
						Если ФоновоеЗадание Тогда
							Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Документ перемещение не сформирован : "+ОписаниеОшибки();	
						Иначе	
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ перемещение не сформирован : "+ОписаниеОшибки());
						КонецЕсли;
						ОтменитьТранзакцию();
						Возврат Ложь;	
					КонецПопытки; 
				КонецЕсли;
			КонецЕсли;
			ДокОбъект = Документы.ЗаказВнешний.СоздатьДокумент();
			ДокОбъект.Дата = ТекущаяДата()-1;
			ЗаполнитьЗначенияСвойств(ДокОбъект,СтруктураПараметров);
			ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
			ТекСтрока = 1;
			//СортАдрес = СтрокаТЗ.СортАдрес;
			СортировкаСкладов = СтрокаТЗ.СортировкаСклада;
		КонецЕсли;
		НоваяСтрока = ДокОбъект.Состав.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
		//{Бредов 2013-06-06 Если Алкоголь, то расходную цену магазина уменьшаем на 12 %
		Если  СтруктураПараметров.Склад = СкладАлкоголь Тогда
			НоваяСтрока.Цена = Окр((НоваяСтрока.Цена*100)/112,2);	
		КонецЕсли;
		//Бредов 2013-06-06 Если Алкоголь, то расходную цену магазина уменьшаем на 12 %}
		НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
		//{БредовЮГ 2013-08-19	Добавили количество заказа магазина в документ "Заказ внешний"
		НоваяСтрока.КоличествоЗаказа = СтрокаТЗ.КоличествоЗаказа;
		//БредовЮГ 2013-08-19	Добавили количество заказа магазина в документ "Заказ внешний"}
		Если ЗначениеЗаполнено(НоваяСтрока.СтавкаНДС) Тогда
			Ставка = НоваяСтрока.СтавкаНДС.Ставка;
			НоваяСтрока.СуммаНДС = 	(НоваяСтрока.Сумма*Ставка)/(100+Ставка);
		КонецЕсли;
		ТекСтрока = ТекСтрока +1;
	КонецЦикла;
	Если ДокОбъект<>Неопределено Тогда
		ДокОбъект.СуммаИтого = ДокОбъект.Состав.Итог("Сумма");
		ДокОбъект.СуммаНДСИтого = ДокОбъект.Состав.Итог("СуммаНДС");
		Попытка
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			МассивДокументов.Добавить(ДокОбъект);
		Исключение
			Если ФоновоеЗадание Тогда
				Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Документ не сформирован : "+ОписаниеОшибки();	
			Иначе	
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ не сформирован : "+ОписаниеОшибки());
			КонецЕсли;
			ОтменитьТранзакцию();
			Возврат Ложь;	
		КонецПопытки;
		// если документ записался, и склад не фруктовый то формируем перемещение товаров на склад резерва.
		Если НЕ СтруктураПараметров.Фруктовый Тогда
			ДокОбъектПеремещение = Документы.Перемещение.СоздатьДокумент();
			ДокОбъектПеремещение.Дата = ТекущаяДата();
			ДокОбъектПеремещение.Заполнить(ДокОбъект.Ссылка);
			Если СтруктураКонстант<>Неопределено И СтруктураКонстант.Свойство("СкладРезерва") Тогда
				ДокОбъектПеремещение.СкладПолучатель = 	СтруктураКонстант.СкладРезерва;
			КонецЕсли;	
			Попытка
				ДокОбъектПеремещение.Записать(РежимЗаписиДокумента.Проведение);
				МассивДокументов.Добавить(ДокОбъектПеремещение);
			Исключение
				Если ФоновоеЗадание Тогда
					Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Документ перемещение не сформирован : "+ОписаниеОшибки();	
				Иначе
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ перемещение не сформирован : "+ОписаниеОшибки());
				КонецЕсли;
				ОтменитьТранзакцию();
				Возврат Ложь;	
			КонецПопытки; 
		КонецЕсли;	
	КонецЕсли;
	ЗафиксироватьТранзакцию();
	Для Каждого СтрокаМассива из МассивДокументов Цикл
		Если ФоновоеЗадание Тогда
			ТекстЛог = ТекстЛог + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Сформирован документ "+СтрокаМассива.Ссылка+" ("+ПутьКФайлу+")";	
		Иначе	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сформирован документ "+СтрокаМассива.Ссылка+" ("+ПутьКФайлу+")",СтрокаМассива);
		КонецЕсли;
	КонецЦикла;
	МассивСтрок = тзТабличнаяЧасть.НайтиСтроки(Новый Структура("НехватаетОстатка",Истина));
	Если МассивСтрок.Количество()>0 Тогда
		Для Каждого СтрокаМассива из МассивСтрок Цикл
			ТекстОтправки = ТекстОтправки + ?(ПустаяСтрока(ТекстОтправки),"",Символы.ВК+Символы.ПС)+ "Нехватает товара	"+СтрокаМассива.Номенклатура +" в количестве "+СтрокаМассива.КоличествоНехватки
		КонецЦикла;
		Если ФоновоеЗадание Тогда
			ТекстЛог = ТекстЛог + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> "+ТекстОтправки;
		Иначе	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нехватает "+ТекстОтправки);
		КонецЕсли;
	КонецЕсли;
	ТекстПисьма = СформироватьТекстДляПисьма(тзТабличнаяЧасть,МассивДокументов,СтруктураПараметров);
	
	АдресПолучателя = "";
	УчетнаяЗапись = ЭлектроннаяПочта.ПолучитьСистемнуюУчетнуюЗапись();
	Если ТипЗнч(СтруктураПараметров.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		АдресПолучателя = УправлениеКонтактнойИнформациейСервер.ПолучитьКонтактнуюИнформацияОбъекта(СтруктураПараметров.Контрагент,Справочники.ВидыКонтактнойИнформации.EmailКонтрагента);
	ИначеЕсли ТипЗнч(СтруктураПараметров.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда	
		АдресПолучателя = УправлениеКонтактнойИнформациейСервер.ПолучитьКонтактнуюИнформацияОбъекта(СтруктураПараметров.Контрагент,Справочники.ВидыКонтактнойИнформации.EmailСтруктурнойЕдиницы);
	КонецЕсли;
	Если ПустаяСтрока(АдресПолучателя) Тогда
		Если ФоновоеЗадание Тогда
			Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Не указан e-mail у "+СтруктураПараметров.Контрагент;
		Иначе	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан e-mail у "+СтруктураПараметров.Контрагент);
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;	
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Тема", НСтр("ru = 'sklad_ВШОтчет: "+СтруктураПараметров.НомерДокумента+"'"));
	ПараметрыПисьма.Вставить("Тело", НСтр("ru = '"+ТекстПисьма+"'"));
	ПараметрыПисьма.Вставить("Кому", АдресПолучателя);
	Попытка
		ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
	Исключение
		Если ФоновоеЗадание Тогда
			Ошибки = Ошибки + ?(ПустаяСтрока(Ошибки),"",Символы.ВК+Символы.ПС)+ТекущаяДата()+" >>> Не удалось отправить письмо на адрес : "+АдресПолучателя+"("+ОписаниеОшибки()+")";		
		Иначе	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось отправить письмо на адрес : "+АдресПолучателя);
		КонецЕсли;	
	КонецПопытки;
	Возврат Истина;
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

Функция  ЗаполнитьСтрокуТЧТарой(Номенклатура) Экспорт
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда Возврат Новый Массив; КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 3
	|	Тара.Ссылка КАК Тара,
	|	ВЫБОР
	|		КОГДА Тара.ПометкаУдаления
	|			ТОГДА 3
	|		КОГДА Тара.Актуальный
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	Справочник.Тара КАК Тара
	|ГДЕ
	|	Тара.Владелец = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет");
	Запрос.УстановитьПараметр("Владелец",Номенклатура);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Тара");
КонецФункции

Функция ПолучитьРеквизитаПараметраСЕанса(ИмяПараметра,ИмяРеквизита) экспорт
	Возврат ПараметрыСеанса[ИмяПараметра][ИмяРеквизита];
КонецФункции

Функция ПолучитьЦенуНоменклатуры(Контрагент,Номенклатура) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	НоменклатураКонтрагента.Цена
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ГДЕ
	|	НоменклатураКонтрагента.Контрагент = &Контрагент
	|	И НоменклатураКонтрагента.Номенклатура = &Номенклатура");
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Цена;
КонецФункции
//{КотлячковаЕВ 2014-05-08 02:08:33 Наряд № 000115681
Функция ПолучитьЦеныЗакупки(тзТабличнаяЧасть,Дата,Фирма,СтруктурнаяЕдиница)  Экспорт
	тз = РаботаСФормамиСервер.ПолучитьЦеныЗакупки(тзТабличнаяЧасть,Дата,Фирма,СтруктурнаяЕдиница);
	мсв=Новый Массив();
	Для каждого строкаТЧ из тзТабличнаяЧасть цикл
		мсв = тз.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",строкаТЧ.Номенклатура,строкаТЧ.ЕдиницаИзмерения));
		Если мсв.Количество() > 0 Тогда
			строкаТЗ = мсв[0];
			строкаТЧ.Цена = строкаТЗ.Цена;
		Иначе
			строкаТЧ.Цена = 0;
		КонецЕсли;	
	КонецЦикла;
	Возврат тзТабличнаяЧасть;
КонецФункции

Функция ПолучитьСебестоимость(тзТабличнаяЧасть,Дата,Фирма,Склад)   Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Состав.НомерСтроки,
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Цена
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	&Состав КАК Состав
	|ГДЕ
	|	Состав.Цена = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА Состав.Цена = 0
	|			ТОГДА ОстаткиНоменклатурыОстатки.СуммаОстаток / ОстаткиНоменклатурыОстатки.КоличествоОстаток * ЕдиницыИзмерения.Коэффициент
	|		ИНАЧЕ Состав.Цена
	|	КОНЕЦ КАК Цена,
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения
	|ИЗ
	|	Состав КАК Состав
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				&Период,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							Состав.Номенклатура
	|						ИЗ
	|							Состав КАК Состав)
	|					И МестоХранения = &Склад
	|					И Фирма = &Фирма) КАК ОстаткиНоменклатурыОстатки
	|		ПО Состав.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|			И (&Склад = ОстаткиНоменклатурыОстатки.МестоХранения)
	|			И (&Фирма = ОстаткиНоменклатурыОстатки.Фирма)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО Состав.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток <> 0
	|	И (ОстаткиНоменклатурыОстатки.СуммаОстаток <> 0
	|			ИЛИ ОстаткиНоменклатурыОстатки.СуммаУпрОстаток <> 0)";
	Запрос.УстановитьПараметр("Состав",тзТабличнаяЧасть);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Фирма", Фирма);
	тз = Запрос.Выполнить().Выгрузить();
	мсв=Новый Массив();
	Для каждого строкаТЧ из тзТабличнаяЧасть цикл
		мсв = тз.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",строкаТЧ.Номенклатура,строкаТЧ.ЕдиницаИзмерения));
		Если мсв.Количество() > 0 Тогда
			строкаТЗ = мсв[0];
			строкаТЧ.Цена = строкаТЗ.Цена;
		КонецЕсли;	
	КонецЦикла;                        
	Возврат тзТабличнаяЧасть;
КонецФункции

Функция ПолучитьЦеныПоставщика(тзТабличнаяЧасть,Дата,Рекв="Цена")  Экспорт
	//ШиловМВ 09.06.14 №000118122
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Состав.НомерСтроки,
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав."+Рекв+"
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	&Состав КАК Состав
	|ГДЕ
	|	Состав."+Рекв+" = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.НомерСтроки,
	|	ВЫБОР
	|		КОГДА Состав."+Рекв+" = 0
	|			ТОГДА НоменклатураКонтрагента.Цена
	|		ИНАЧЕ Состав."+Рекв+"
	|	КОНЕЦ КАК Цена,
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения
	|ИЗ
	|	Состав КАК Состав
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО Состав.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)";
	
	Запрос.УстановитьПараметр("Состав", тзТабличнаяЧасть);
	Запрос.УстановитьПараметр("Период", Дата);
	тз = Запрос.Выполнить().Выгрузить();
	мсв=Новый Массив();
	Для каждого строкаТЧ из тзТабличнаяЧасть цикл
		мсв = тз.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",строкаТЧ.Номенклатура,строкаТЧ.ЕдиницаИзмерения));
		Если мсв.Количество() > 0 Тогда
			строкаТЗ = мсв[0];
			строкаТЧ[Рекв] = строкаТЗ.Цена;
		КонецЕсли;	
	КонецЦикла;                        
	Возврат тзТабличнаяЧасть;
	//ШиловМВ 09.06.14
КонецФункции
//КотлячковаЕВ 2014-05-08 03:34:14 }
Функция ПолучитьЗначениеКонстанты(мдИмя=Неопределено,ИмяКонстанты=Неопределено) Экспорт
	СтруктураВозврата = Новый Структура;
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КонстантыОбработок.Константа,
	|	КонстантыОбработок.Значение
	|ИЗ
	|	РегистрСведений.Izh_КонстантыОбработок КАК КонстантыОбработок
	|ГДЕ
	|	Истина=Истина
	|	"+?(ЗначениеЗаполнено(мдИмя)," И КонстантыОбработок.Источник = &мдИмя","")+"
	|	"+?(ЗначениеЗаполнено(ИмяКонстанты),"И КонстантыОбработок.Константа = &ИмяКонстанты",""));
	Запрос.УстановитьПараметр("мдИмя",мдИмя);
	Запрос.УстановитьПараметр("ИмяКонстанты",ИмяКонстанты);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтруктураВозврата;	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураВозврата.Вставить(Выборка.Константа,Выборка.Значение);	
	КонецЦикла;
	Возврат СтруктураВозврата;					  
КонецФункции

Функция СоздатьТипизированнуюТЗ()
	
	тзВозврата = Новый ТаблицаЗначений;
	тзВозврата.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5,0)));
	тзВозврата.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	тзВозврата.Колонки.Добавить("ЕдиницаИзмерения",Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	тзВозврата.Колонки.Добавить("Коэффициент",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	тзВозврата.Колонки.Добавить("Цена",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	тзВозврата.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	тзВозврата.Колонки.Добавить("СтавкаНДС",Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС"));
	тзВозврата.Колонки.Добавить("СуммаНДС",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	тзВозврата.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	Возврат тзВозврата;
КонецФункции

Функция ПолучитьСлужебноеЗначение(Свойство) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СлужебныеЗначения.Значение
	|ИЗ
	|	РегистрСведений.СлужебныеЗначения КАК СлужебныеЗначения
	|ГДЕ
	|	СлужебныеЗначения.Свойство = &Свойство";
	Запрос.УстановитьПараметр("Свойство",Свойство);
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() Тогда  
		Возврат Рез.Значение;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

//{{ШиловМВ 09.12.2014 №000134380 п.2
Процедура ЗаполнитьIzh_АдресаНоменклатуры(ТЗ) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТЗДанные.НомерСтроки,
	|	ТЗДанные.Номенклатура,
	|	ТЗДанные.ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	&тзДанные КАК ТЗДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.НомерСтроки,
	|	ВТДанные.Номенклатура КАК Номенклатура,
	|	ВТДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Izh_АдресаНоменклатуры.Адрес КАК Адрес
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Izh_АдресаНоменклатуры КАК Izh_АдресаНоменклатуры
	|		ПО ВТДанные.Номенклатура = Izh_АдресаНоменклатуры.Номенклатура
	//|ГДЕ
	//|	Izh_АдресаНоменклатуры.Адрес <> NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ЕдиницаИзмерения,
	|	Адрес");
	
	Запрос.УстановитьПараметр("тзДанные",ТЗ);
	табЗапрос=Запрос.Выполнить().Выгрузить();
	
	_Номенкл=Неопределено;
	_ЕдИзм=Неопределено;
	Адрес="";
	Для каждого стрЗапрос Из табЗапрос Цикл
		
		Если стрЗапрос.Номенклатура<>_Номенкл или стрЗапрос.ЕдиницаИзмерения<>_ЕдИзм Тогда
			Если _Номенкл<>Неопределено и _ЕдИзм<>Неопределено Тогда
				с_ТЗ=ТЗ.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",_Номенкл,_ЕдИзм));
				с_ТЗ[0].СортАдрес=Адрес;
			КонецЕсли;
			
			_Номенкл=стрЗапрос.Номенклатура;
			_ЕдИзм=стрЗапрос.ЕдиницаИзмерения;
			Адрес="";
		КонецЕсли;
		
		Если стрЗапрос.Адрес=NULL Тогда
			Адрес=Адрес+?(Адрес="","",";")+"ЯЯЯ";
		Иначе
			Адрес=Адрес+?(Адрес="","",";")+стрЗапрос.Адрес.Код;
		КонецЕсли;
		
	КонецЦикла;
	
	Если _Номенкл<>Неопределено и _ЕдИзм<>Неопределено Тогда
		с_ТЗ=ТЗ.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",_Номенкл,_ЕдИзм));
		с_ТЗ[0].СортАдрес=Адрес;
	КонецЕсли;
	
КонецПроцедуры
//ШиловМВ 09.12.2014 №000134380 п.2}}

//{{ШиловМВ 10.12.2014 №000134380 п.2
Процедура ЗаполнитьВесТовара(ТЗ) ЭКспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТЗДанные.НомерСтроки,
	|	ТЗДанные.Номенклатура,
	|	ТЗДанные.ЕдиницаИзмерения,
	|	ТЗДанные.Количество
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	&тзДанные КАК ТЗДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.НомерСтроки,
	|	ВТДанные.Номенклатура КАК Номенклатура,
	|	ВТДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТДанные.Количество КАК Количество,
	|	ВТДанные.Количество*МассогабаритныеХарактеристики.Брутто*МассогабаритныеХарактеристики.ЕдиницаВеса.Коэффициент КАК Вес
	|	
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МассогабаритныеХарактеристики КАК МассогабаритныеХарактеристики
	|		ПО ВТДанные.Номенклатура = МассогабаритныеХарактеристики.Номенклатура
	|			И (ВТДанные.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = МассогабаритныеХарактеристики.ЕдиницаИзмерения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ЕдиницаИзмерения,
	|	Вес");
	
	
	Запрос.УстановитьПараметр("тзДанные",ТЗ);
	табЗапрос=Запрос.Выполнить().Выгрузить();
	
	_Номенкл=Неопределено;
	_ЕдИзм=Неопределено;
	Вес=0;
	
	Для каждого стрЗапрос Из табЗапрос Цикл
		Если стрЗапрос.Номенклатура<>_Номенкл или стрЗапрос.ЕдиницаИзмерения<>_ЕдИзм Тогда
			Если _Номенкл<>Неопределено и _ЕдИзм<>Неопределено Тогда
				с_ТЗ=ТЗ.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",_Номенкл,_ЕдИзм));
				с_ТЗ[0].Вес=Вес;
			КонецЕсли;
			_Номенкл=стрЗапрос.Номенклатура;
			_ЕдИзм=стрЗапрос.ЕдиницаИзмерения;
			Вес=0;
		КонецЕсли;
		
		//Вес=стрЗапрос.Вес;
		Вес=?(стрЗапрос.Номенклатура.БазоваяЕдиницаИзмерения=Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду(2),стрЗапрос.Количество,стрЗапрос.Вес);
	КонецЦикла;
	
	Если _Номенкл<>Неопределено и _ЕдИзм<>Неопределено Тогда
		с_ТЗ=ТЗ.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",_Номенкл,_ЕдИзм));
		с_ТЗ[0].Вес=Вес;
	КонецЕсли;
	
КонецПроцедуры
//ШиловМВ 10.12.2014 №000134380 п.2}}

//{{ШиловМВ 02.12.2014 №000134380
Функция ПолучитьВремяЗапретаЗагрузкиЗаказов(Склад,НачВремя,КонВремя)
	Запрос=Новый Запрос("ВЫБРАТЬ
	|	Izh_ВремяЗапретаЗагрузкиЗаказов.ВремяНачала,
	|	Izh_ВремяЗапретаЗагрузкиЗаказов.ВремяОкончания
	|ИЗ
	|	РегистрСведений.Izh_ВремяЗапретаЗагрузкиЗаказов КАК Izh_ВремяЗапретаЗагрузкиЗаказов
	|ГДЕ
	|	Izh_ВремяЗапретаЗагрузкиЗаказов.Склад = &Склад");
	
	Запрос.УстановитьПараметр("Склад",Склад);
	рез_т=Запрос.Выполнить();
	Если рез_т.Пустой() Тогда
		Возврат Ложь;
	Иначе
		НачВремя=рез_т.Выгрузить()[0].ВремяНачала;
		КонВремя=рез_т.Выгрузить()[0].ВремяОкончания;
		Возврат Истина;
	КонецЕсли; 
КонецФункции
//ШиловМВ 02.12.2014 №000134380}}

//dps Закрытие просроченных Утверждений потребности
Процедура Izh_ЗавершениеПросроченныхУП() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗадачаИсполнителя.Ссылка,
	|	ЗадачаИсполнителя.БизнесПроцесс.Ссылка КАК БП,
	|	ВЫБОР
	|		КОГДА ЗадачаИсполнителя.ТочкаМаршрута = &ТочкаМаршрута
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоBI
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ                                                                           
	|	ЗадачаИсполнителя.БизнесПроцесс ССЫЛКА БизнесПроцесс.АвтоЗаказ
	|	И НЕ ЗадачаИсполнителя.БизнесПроцесс.Завершен
	|	И ЗадачаИсполнителя.БизнесПроцесс.Стартован
	|	И ЗадачаИсполнителя.Дата < &Дата";
	
	Запрос.УстановитьПараметр("Дата",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТочкаМаршрута",БизнесПроцессы.АвтоЗаказ.ТочкиМаршрута.УтверждениеПотребности);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		БП = Результат.БП.ПолучитьОбъект();
		
		Если Результат.ЭтоBI Тогда 
			Для Каждого Строка Из БП.СоставПоСЕ Цикл
				Строка.Количество = 0;
			КонецЦикла;
			Для Каждого Строка Из БП.Состав Цикл
				Строка.Количество = 0;
			КонецЦикла;
		Иначе
			Для Каждого Строка Из БП.СоставПолный Цикл
				Строка.Утвержден = Ложь;
			КонецЦикла;
		КонецЕсли;
			
		БП.Записать();
		Задача = Результат.Ссылка.ПолучитьОбъект();
		Задача.ЗадачуВыполнил = ПараметрыСеанса.ТекущийПользователь;
		Задача.ДатаВыполненияФакт = ТекущаяДата();
		Задача.ВыполнитьЗадачу();
		Задача.Записать();
	КонецЦикла;
	
КонецПроцедуры

//{{Ветров И.А. 17.04.2015 Наряд №000147189}
Процедура ВыгрузкаФайловОстатков() Экспорт
	
	Если ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		тзДанные = Новый ТаблицаЗначений;
		ГруппыТоваров = Новый ТаблицаЗначений;
		ГруппыТоваров = ЗапросГруппыТоваров();
		тзДанные = ЗапросОстатков();
		Если тзДанные.Количество()=0 Тогда 
			Возврат;
		КонецЕсли;
		//тзДанные.Сортировать("ИмяФайла");
		//тзДанные.Сортировать("Родитель");
		ИмяФайла="";
		Каталог = Константы.ДиректорияВыгрузкиОстатковWH.Получить();
		//Каталог="\\fs-3\O\Temp\Остатки\";
		//Каталог = "\\FileServer\K\1Cv77\Ostatki\";
		
		Для Каждого ЗначениеГруппыТоваров Из ГруппыТоваров Цикл
			Если (тзДанные.Найти(ЗначениеГруппыТоваров.Группа, "ИмяФайла") = Неопределено) 
				И (ЗначениеГруппыТоваров.Группа <> "OstatokX15") И (ЗначениеГруппыТоваров.Группа <> "CehOstX15") Тогда
					Файл = Новый ЗаписьТекста;
					Файл.Открыть(Каталог + ЗначениеГруппыТоваров.Группа + ".txt", КодировкаТекста.ANSI);
					Файл.Закрыть();
			КонецЕсли;	
		КонецЦикла;	
		
		Попытка
			ФайлЗИП = Новый ЗаписьZipФайла(Каталог + "ostatok.zip");
			Для Каждого СтрТЗ из тзДанные Цикл
				Если СтрТЗ.КоличествоОстаток <> NULL Тогда
					Если ИмяФайла<>СтрТЗ.ИмяФайла Тогда 
						Если ИмяФайла="" Тогда 
							ИмяФайла=СтрТЗ.ИмяФайла;
							Файл = Новый ЗаписьТекста;
							Файл.Открыть(Каталог+ИмяФайла+".txt",КодировкаТекста.ANSI);
						Иначе  
							Файл.Закрыть();
							ФайлЗИП.Добавить(Каталог + ИмяФайла + ".txt");
							ИмяФайла=СтрТЗ.ИмяФайла;
							Файл = Новый ЗаписьТекста;
							Файл.Открыть(Каталог+ИмяФайла+".txt",КодировкаТекста.ANSI);
						КонецЕсли;
					КонецЕсли;
					Строка = СокрЛП(СтрТЗ.Код)+";"+СтрЗаменить(СокрЛП(СтрТЗ.ПолноеНаименование),";","")+";"+СтрЗаменить(СокрЛП(СтрТЗ.Родитель),";","")+";";
					Строка = Строка + Строка(Формат(СтрТЗ.КоличествоОстаток/?(ЗначениеЗаполнено(СтрТЗ.Коэффициент),СтрТЗ.Коэффициент,1), "ЧГ=0"))+";"+Строка(Формат(Цел(СтрТЗ.КоличествоОстаток/?(ЗначениеЗаполнено(СтрТЗ.Коэффициент),СтрТЗ.Коэффициент,1)), "ЧГ=0"))+";";
					Строка = Строка + Строка(Формат(СтрТЗ.КоличествоОстаток-Цел(СтрТЗ.КоличествоОстаток/?(ЗначениеЗаполнено(СтрТЗ.Коэффициент),СтрТЗ.Коэффициент,1)), "ЧГ=0"))+";";
					Строка = Строка + ""+";"+Строка(Формат(?(ЗначениеЗаполнено(СтрТЗ.Цена),СтрТЗ.Цена,0), "ЧГ=0; ЧРД=."))+";"+"ib_"+";"+""+"$"+""+"$"+""+"$"+""+"$";
					Файл.ЗаписатьСтроку(Строка);
				КонецЕсли;	
			КонецЦикла;
			Файл.Закрыть();
			ФайлЗИП.Добавить(Каталог + ИмяФайла + ".txt");
			ФайлЗИП.Записать();
			
			//{Ветров И.А. 29.04.2015 Наряд №000149196
			АдресПолучателя1 = "supera@milan2000.ru";
			АдресПолучателя2 = "obschepit@milan2000.ru";
			УчетнаяЗапись = ЭлектроннаяПочта.ПолучитьСистемнуюУчетнуюЗапись();
			ТекстПисьма = "ostatki";
			ПараметрыПисьма = Новый Структура;
			ПараметрыПисьма.Вставить("Тема", "IT_SYS: Остатки_ВШ, " + ТекущаяДата());
			ПараметрыПисьма.Вставить("Тело", ТекстПисьма);
			ПараметрыПисьма.Вставить("Кому", АдресПолучателя1);
			ПараметрыПисьма.Вставить("Копии", АдресПолучателя2);
			ВложеннныйФайл = Новый Соответствие;
			ВложеннныйФайл.Вставить("ostatok.zip", Новый ДвоичныеДанные(Каталог + "ostatok.zip"));
			ПараметрыПисьма.Вставить("Вложения", ВложеннныйФайл);
			Попытка
				ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
				КаталогНаДиске = Новый Файл(Каталог + "\Bak");
				Если НЕ КаталогНаДиске.Существует() Тогда
					СоздатьКаталог(Каталог + "\Bak");
				КонецЕсли;
				ПереместитьФайл(Каталог + "ostatok.zip", Каталог + "\Bak\ostatok.zip");
				ЗаписьЖурналаРегистрации("Рассылка остатков", УровеньЖурналаРегистрации.Информация, , , "Разослан файл остатков по супермаркетам(" + АдресПолучателя1 + ") и цехам(" + АдресПолучателя2 + ")");
			Исключение
				ЗаписьЖурналаРегистрации("Рассылка остатков", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось отправить письмо на почту: " + АдресПолучателя1 + ", " + АдресПолучателя2 +" ("+ОписаниеОшибки()+")"+ТекстПисьма);		
				ВызватьИсключение;	
			КонецПопытки;
		Исключение
			АдресПолучателя = "Support@milan2000.ru";
			УчетнаяЗапись = ЭлектроннаяПочта.ПолучитьСистемнуюУчетнуюЗапись();
			ТекстПисьма = "Остатки не разосланы! " + ТекущаяДата();
			ПараметрыПисьма = Новый Структура;
			ПараметрыПисьма.Вставить("Тема", "Остатки не разосланы! " + ТекущаяДата());
			ПараметрыПисьма.Вставить("Тело", ТекстПисьма);
			ПараметрыПисьма.Вставить("Кому", АдресПолучателя);
			Попытка
				ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
			Исключение
				ЗаписьЖурналаРегистрации("Рассылка остатков", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось отправить письмо на почту: " + АдресПолучателя + " ("+ОписаниеОшибки()+")"+ТекстПисьма);		
			КонецПопытки;
		КонецПопытки
		//Ветров И.А. 29.04.2015 Наряд №000149196}
	Иначе
		Возврат;
	КонецЕсли;	
КонецПроцедуры

Функция ДополнитьОстатокХ()
	ДополнитьOstatokX = Ложь;
	Если День(ТекущаяДата()) <= 15 и (Месяц(ТекущаяДата()) = 1 или	Месяц(ТекущаяДата()) = 4 
		или Месяц(ТекущаяДата()) = 7 или Месяц(ТекущаяДата()) = 10) Тогда
		ДополнитьOstatokX = Истина
	КонецЕсли;
	Возврат ДополнитьOstatokX; 
КонецФункции	

Функция ЗапросОстатковДляЦехов()
	
	ДополнитьOstatokX = ДополнитьОстатокХ(); 
	
	Возврат "ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.Код,
	|	Номенклатура.ПолноеНаименование,
	|	Номенклатура.Родитель,
	|	Номенклатура.БазоваяЕдиницаИзмерения
	|ПОМЕСТИТЬ НоменклатураТоварыДляОбщепита
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры КАК ДополнительныеРеквизитыНоменклатуры
	|			ПО НоменклатураДополнительныеРеквизиты.Свойство = ДополнительныеРеквизитыНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|			ПО НоменклатураДополнительныеРеквизиты.Ссылка = Номенклатура.Ссылка И (НЕ Номенклатура.ПометкаУдаления)
	|ГДЕ
	|	ДополнительныеРеквизитыНоменклатуры.Ссылка = &СсылкаДополнительныеРеквизитыНоменклатура;
	|///////////////////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	""CehOst1"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код КАК Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование КАК ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель КАК Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент КАК Коэффициент,
	|	НоменклатураКонтрагента.Цена КАК Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма КАК Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения КАК Склад,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &FOOD
	|				И Номенклатура В
	|					(ВЫБРАТЬ 
	|						НоменклатураТоварыДляОбщепита.Ссылка 
	|					ИЗ НоменклатураТоварыДляОбщепита)
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""CehOst2"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &ГлубокаяЗаморозка
	|				И Номенклатура В
	|					(ВЫБРАТЬ 
	|						НоменклатураТоварыДляОбщепита.Ссылка 
	|					ИЗ НоменклатураТоварыДляОбщепита)
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""CehOst3"" КАК ИмяФайла,
	|	НоменклатураТоварыДляОбщепита.Код,
	|	НоменклатураТоварыДляОбщепита.ПолноеНаименование,
	|	НоменклатураТоварыДляОбщепита.Родитель,
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент КАК Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	"""" КАК Фирма,
	|	"""" КАК Склад,
	|	НоменклатураТоварыДляОбщепита.Ссылка  КАК НоменклатураОстатки
	|ИЗ НоменклатураТоварыДляОбщепита
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	|			ПО НоменклатураТоварыДляОбщепита.Ссылка = СтатусыНоменклатуры.Номенклатура
	|				И СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|				И СтатусыНоменклатуры.Статус = &СтатусНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО НоменклатураТоварыДляОбщепита.Ссылка = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО НоменклатураТоварыДляОбщепита.Ссылка = ЕдиницыИзмерения.Владелец
	|			И НоменклатураТоварыДляОбщепита.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			Номенклатура В ИЕРАРХИИ
	|				(ВЫБРАТЬ
	|					Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|				ИЗ
	|					РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|				ГДЕ
	|					Izh_ГруппыТоваровДляОстатка.Группа = ""CehOst3"")) КАК ОстаткиНоменклатурыОстатки
	|		ПО (ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураТоварыДляОбщепита.Ссылка)
	|ГДЕ
	|	НоменклатураТоварыДляОбщепита.Ссылка В ИЕРАРХИИ	
	|		(ВЫБРАТЬ
	|			Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|		ИЗ
	|			РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|		ГДЕ
	|			Izh_ГруппыТоваровДляОстатка.Группа = ""CehOst3"")
	|	И НоменклатураКонтрагента.Цена > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""CehOst5"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &Алкоголь
	|				И Номенклатура В
	|					(ВЫБРАТЬ 
	|						НоменклатураТоварыДляОбщепита.Ссылка 
	|					ИЗ НоменклатураТоварыДляОбщепита)
	|				И Фирма = &ВинныйДом) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""CehOst6"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &ОхлажденнаяПродукция
	|				И Номенклатура В
	|					(ВЫБРАТЬ 
	|						НоменклатураТоварыДляОбщепита.Ссылка 
	|					ИЗ НоменклатураТоварыДляОбщепита)
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""CehOst7"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &ТабакПиво
	|				И Номенклатура В 
	|					(ВЫБРАТЬ 
	|						НоменклатураТоварыДляОбщепита.Ссылка 
	|					ИЗ НоменклатураТоварыДляОбщепита)
	|				И Фирма = &Парма) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""CehOstN"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &FOOD
	|				И Номенклатура В
	|					(ВЫБРАТЬ 
	|						НоменклатураТоварыДляОбщепита.Ссылка 
	|					ИЗ НоменклатураТоварыДляОбщепита
	|					ГДЕ НоменклатураТоварыДляОбщепита.Ссылка В ИЕРАРХИИ	
	|						(ВЫБРАТЬ
	|							Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|						ИЗ
	|							РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|						ГДЕ
	|							Izh_ГруппыТоваровДляОстатка.Группа = ""CehOstN""))
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""CehOstR"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &СкладВотШоссеДЦехов
	|				И Номенклатура В
	|					(ВЫБРАТЬ 
	|						НоменклатураТоварыДляОбщепита.Ссылка 
	|					ИЗ НоменклатураТоварыДляОбщепита)
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""CehOstX"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &NONFOOD
	|				И Номенклатура В
	|					(ВЫБРАТЬ 
	|						НоменклатураТоварыДляОбщепита.Ссылка 
	|					ИЗ НоменклатураТоварыДляОбщепита
	|					ГДЕ НоменклатураТоварыДляОбщепита.Ссылка В ИЕРАРХИИ	
	|						(ВЫБРАТЬ
	|							Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|						ИЗ
	|							РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|						ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""CehOstX""
	|							" + ?(ДополнитьOstatokX," ИЛИ Izh_ГруппыТоваровДляОстатка.Группа = ""CehOstX15""", "") + "))
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0";	
КонецФункции	

Функция ЗапросОстатковДляСупермаркетов()
	
	ДополнитьOstatokX = ДополнитьОстатокХ(); 

	Возврат "ВЫБРАТЬ
	|	""Ostatok1"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код КАК Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование КАК ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель КАК Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент КАК Коэффициент,
	|	НоменклатураКонтрагента.Цена КАК Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения КАК Склад,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &FOOD
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok1"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Ostatok2"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &ГлубокаяЗаморозка
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok2"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""OstatokM"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &ГлубокаяЗаморозка
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""OstatokM"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Ostatok3"" КАК ИмяФайла,
	|	спрНоменклатура.Код КАК Код,
	|	спрНоменклатура.ПолноеНаименование КАК ПолноеНаименование,
	|	спрНоменклатура.Родитель КАК Родитель,
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент КАК Коэффициент,
	|	НоменклатураКонтрагента.Цена КАК Цена,
	|	"""" КАК Фирма,
	|	"""" КАК Склад,
	|	спрНоменклатура.Ссылка КАК НоменклатураОстатки
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	|		ПО спрНоменклатура.Ссылка = СтатусыНоменклатуры.Номенклатура
	|			И (СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница)
	|			И (СтатусыНоменклатуры.Статус = &СтатусНоменклатуры)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО спрНоменклатура.Ссылка = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО спрНоменклатура.Ссылка = ЕдиницыИзмерения.Владелец
	|			И спрНоменклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			Номенклатура В ИЕРАРХИИ
	|				(ВЫБРАТЬ
	|					Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|				ИЗ
	|					РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|				ГДЕ
	|					Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok3"")) КАК ОстаткиНоменклатурыОстатки
	|		ПО (ОстаткиНоменклатурыОстатки.Номенклатура = спрНоменклатура.Ссылка)
	|ГДЕ
	|	НЕ спрНоменклатура.ПометкаУдаления
	|	И спрНоменклатура.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ
	|				Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|			ИЗ
	|				РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|			ГДЕ
	|				Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok3"")
	|	И НоменклатураКонтрагента.Цена > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Ostatok4"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура  КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			(МестоХранения = &NONFOOD
	|				ИЛИ МестоХранения = &FOOD)
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok4"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Ostatok5"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &Алкоголь
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok5"")
	|				И Фирма = &ВинныйДом) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Ostatok6"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &ОхлажденнаяПродукция
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok6"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Ostatok7"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &ТабакПиво
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok7"")
	|				И Фирма = &Парма) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Ostatok9"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &Склад11Пойма17а
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""Ostatok9"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""OstatokD"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &FOOD
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""OstatokD"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""OstatokP"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &NONFOOD
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""OstatokP"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""OstatokN"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &FOOD
	|				И Номенклатура В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|					ИЗ
	|						РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|					ГДЕ
	|						Izh_ГруппыТоваровДляОстатка.Группа = ""OstatokN"")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|ГДЕ
	|	НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0 
	|
	| ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""OstatokX"" КАК ИмяФайла,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Код,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.ПолноеНаименование,
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Родитель,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ЕдиницыИзмерения.Коэффициент,
	|	НоменклатураКонтрагента.Цена,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК НоменклатураОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			,
	|			МестоХранения = &NONFOOD
	|				И Номенклатура В ИЕРАРХИИ (ВЫБРАТЬ
	|												Izh_ГруппыТоваровДляОстатка.Номенклатура.Ссылка
	|											ИЗ
	|												РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|											ГДЕ
	|												Izh_ГруппыТоваровДляОстатка.Группа = ""OstatokX""
	|												" + ?(ДополнитьOstatokX," ИЛИ Izh_ГруппыТоваровДляОстатка.Группа = ""OstatokX15""","") + ")
	|				И Фирма = &Пленкин) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И (НЕ ЕдиницыИзмерения.ПометкаУдаления)
	|		ГДЕ
	|			НоменклатураКонтрагента.Цена > 0 И ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0";	
КонецФункции	

Функция ЗапросОстатков()
		
	Запрос = Новый Запрос;
	Запрос.Текст = ЗапросОстатковДляЦехов() + " ОБЪЕДИНИТЬ ВСЕ " + ЗапросОстатковДляСупермаркетов() + " ИТОГИ ПО ИмяФайла, НоменклатураОстатки ТОЛЬКО ИЕРАРХИЯ";	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Пленкин", Справочники.Организации.НайтиПоКоду(24));
	Запрос.УстановитьПараметр("ВинныйДом", Справочники.Организации.НайтиПоКоду(23));
	Запрос.УстановитьПараметр("Парма", Справочники.Организации.НайтиПоКоду(81));
	Запрос.УстановитьПараметр("FOOD", Справочники.Склады.НайтиПоКоду(101));
	Запрос.УстановитьПараметр("ГлубокаяЗаморозка", Справочники.Склады.НайтиПоКоду(107));
	Запрос.УстановитьПараметр("NONFOOD", Справочники.Склады.НайтиПоКоду(108));
	Запрос.УстановитьПараметр("Алкоголь", Справочники.Склады.НайтиПоКоду(115));
	Запрос.УстановитьПараметр("ОхлажденнаяПродукция", Справочники.Склады.НайтиПоКоду(116));
	Запрос.УстановитьПараметр("ТабакПиво", Справочники.Склады.НайтиПоКоду(131));
	Запрос.УстановитьПараметр("Склад11Пойма17а", Справочники.Склады.НайтиПоКоду(802));
	Запрос.УстановитьПараметр("СкладВотШоссеДЦехов", Справочники.Склады.НайтиПоКоду(109));
	// Товары для общепита.
	Запрос.УстановитьПараметр("СсылкаДополнительныеРеквизитыНоменклатура", ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду("1420"));	
	
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Справочники.СтруктурныеЕдиницы.НайтиПоКоду(1));
	Запрос.УстановитьПараметр("СтатусНоменклатуры", Перечисления.СтатусыТоваров.Активный);	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ЗапросОстатков()

Функция ЗапросГруппыТоваров()
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	Izh_ГруппыТоваровДляОстатка.Группа
	|ИЗ
	|	РегистрСведений.Izh_ГруппыТоваровДляОстатка КАК Izh_ГруппыТоваровДляОстатка
	|
	|СГРУППИРОВАТЬ ПО
	|	Izh_ГруппыТоваровДляОстатка.Группа";	
	Возврат Запрос.Выполнить().Выгрузить(); 	
КонецФункции
//Ветров И.А. 17.04.2015 Наряд №000147189}

//{Ветров И.А. 27.10.2015 Наряд №0000136126
Функция ПолучитьОстаткиИОборотыТоваров(НачальнаяДата, КонечнаяДата)
	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ОстаткиНоменклатурыОбороты.Период, ДЕНЬ) КАК НачалоПериода,
	               |	ОстаткиНоменклатурыОбороты.Номенклатура КАК Номенклатура,
	               |	ОстаткиНоменклатурыОбороты.Фирма КАК Фирма,
	               |	ОстаткиНоменклатурыОбороты.КоличествоКонечныйОстаток КАК Остаток
	               |ПОМЕСТИТЬ Остатки
	               |ИЗ
	               |	РегистрНакопления.ОстаткиНоменклатуры.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, День, , ) КАК ОстаткиНоменклатурыОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Остатки.НачалоПериода,
	               |	МИНИМУМ(ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ОстаткиКонец.НачалоПериода, ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1)), СЕКУНДА, -1)) КАК КонецПериода,
	               |	Остатки.Номенклатура,
	               |	Остатки.Фирма,
	               |	Остатки.Остаток
	               |ПОМЕСТИТЬ ОстаткиПоПериодам
	               |ИЗ
	               |	Остатки КАК Остатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК ОстаткиКонец
	               |		ПО Остатки.Номенклатура = ОстаткиКонец.Номенклатура
	               |			И Остатки.НачалоПериода < ОстаткиКонец.НачалоПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Остатки.НачалоПериода,
	               |	Остатки.Номенклатура,
	               |	Остатки.Фирма,
	               |	Остатки.Остаток
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d) КАК Дата
	               |ПОМЕСТИТЬ Даты
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		0 КАК a
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		1
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		2
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		3
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		4
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		5
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		6
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		7
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		8
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		9) КАК aa
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			0 КАК b
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			1
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			2
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			3
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			4
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			5
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			6
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			7
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			8
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			9) КАК bb
	               |		ПО (ИСТИНА)
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			0 КАК c
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			1
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			2
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			3
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			4
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			5
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			6
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			7
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			8
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			9) КАК cc
	               |		ПО (ИСТИНА)
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			0 КАК d
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			1
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			2
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			3
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			4
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			5
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			6
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			7
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			8
	               |		
	               |		ОБЪЕДИНИТЬ
	               |		
	               |		ВЫБРАТЬ
	               |			9) КАК dd
	               |		ПО (ИСТИНА)
	               |ГДЕ
	               |	aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d <= РАЗНОСТЬДАТ(&НачалоПериода, &КонецПериода, ДЕНЬ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОстаткиПоПериодам.Номенклатура,
	               |	Даты.Дата
	               |ПОМЕСТИТЬ НоменклатураДата
	               |ИЗ
	               |	ОстаткиПоПериодам КАК ОстаткиПоПериодам,
	               |	Даты КАК Даты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОстаткиПоПериодам.Номенклатура,
	               |	Даты.Дата
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(НоменклатураДата.Дата, ДЕНЬ) КАК НачалоПериода,
	               |	НоменклатураДата.Номенклатура КАК Номенклатура,
	               |	ОстаткиПоПериодам.Остаток,
	               |	ОстаткиПоПериодам.Фирма
	               |ПОМЕСТИТЬ ВТ_ОстаткиПоДням
	               |ИЗ
	               |	ОстаткиПоПериодам КАК ОстаткиПоПериодам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДата КАК НоменклатураДата
	               |		ПО (НоменклатураДата.Номенклатура = ОстаткиПоПериодам.Номенклатура)
	               |			И (НоменклатураДата.Дата МЕЖДУ ОстаткиПоПериодам.НачалоПериода И ОстаткиПоПериодам.КонецПериода)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ДвиженияТМЦ.Период, ДЕНЬ) КАК НачалоПериода,
	               |	ДвиженияТМЦ.Номенклатура КАК Номенклатура,
	               |	ДвиженияТМЦ.Фирма КАК Фирма,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПродажаРозница)
	               |					ИЛИ ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПродажаОпт)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоПродано,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПродажаРозница)
	               |					ИЛИ ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПродажаОпт)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПродаж,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПоступлениеТоваров)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоЗакуплено,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ОприходованиеИзлишков)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоВнутреннее,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВозвратПоставщику)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоВозвратПоставщику,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВозвратОтПокупателя)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоВозвратОтПокупателя,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.Списание)
	               |					ИЛИ ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.Инвентаризация)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоСписание,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.Регистратор.Контрагент = НЕОПРЕДЕЛЕНО
	               |				ТОГДА ВЫБОР
	               |						КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеРасход)
	               |							ТОГДА -1 * ДвиженияТМЦ.Количество
	               |						КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеПриход)
	               |							ТОГДА ДвиженияТМЦ.Количество
	               |						ИНАЧЕ 0
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПеремещениеСклад,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.Регистратор.Контрагент <> НЕОПРЕДЕЛЕНО
	               |				ТОГДА ВЫБОР
	               |						КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеРасход)
	               |							ТОГДА -1 * ДвиженияТМЦ.Количество
	               |						КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеПриход)
	               |							ТОГДА ДвиженияТМЦ.Количество
	               |						ИНАЧЕ 0
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПеремещениеСЕ,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаНаКомплектацию)
	               |					И НЕ ДвиженияТМЦ.Регистратор.Разукомплектация
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоКомплектацияСписание,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаИзКомплектации)
	               |					И НЕ ДвиженияТМЦ.Регистратор.Разукомплектация
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоКомплектацияПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаНаКомплектацию)
	               |					И ДвиженияТМЦ.Регистратор.Разукомплектация
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоРазукомплектацияСписание,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаИзКомплектации)
	               |					И ДвиженияТМЦ.Регистратор.Разукомплектация
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоРазукомплектацияПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаПоступления)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоКорректировкаПоступления,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаРеализации)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоКорректировкаРеализации,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПродажаОпт)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПерепродажаНаПриходКупляПродажаРасход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	               |					И НЕ &ЭтоСклад
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПерепродажаНаПриходКупляПродажаПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПередачаНаРеализацию)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПерепродажаНаПриходКомиссияРасход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПерепродажаНаПриходКомиссияПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратПоставщику)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПерепродажаНаВозвратКупляПродажаРасход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	               |					И &ЭтоСклад
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПерепродажаНаВозвратКупляПродажаПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратПоставщику)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПерепродажаНаВозвратКомиссияРасход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратРеализация)
	               |				ТОГДА ДвиженияТМЦ.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КолВоПерепродажаНаВозвратКомиссияПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПоступлениеТоваров)
	               |					ИЛИ ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаПоступления)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаЗакуплено,
				   |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ОприходованиеИзлишков)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаВнутреннее,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВозвратПоставщику)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаВозвратПоставщику,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВозвратОтПокупателя)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаВозвратОтПокупателя,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.Списание)
	               |					ИЛИ ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.Инвентаризация)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаСписания,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.Регистратор.Контрагент = НЕОПРЕДЕЛЕНО
	               |				ТОГДА ВЫБОР
	               |						КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеРасход)
	               |							ТОГДА -1 * ДвиженияТМЦ.Сумма
	               |						КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеПриход)
	               |							ТОГДА ДвиженияТМЦ.Сумма
	               |						ИНАЧЕ 0
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПеремещенияСклад,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.Регистратор.Контрагент <> НЕОПРЕДЕЛЕНО
	               |				ТОГДА ВЫБОР
	               |						КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеРасход)
	               |							ТОГДА -1 * ДвиженияТМЦ.Сумма
	               |						КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеПриход)
	               |							ТОГДА ДвиженияТМЦ.Сумма
	               |						ИНАЧЕ 0
	               |					КОНЕЦ
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПеремещенияСЕ,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаНаКомплектацию)
	               |					И НЕ ДвиженияТМЦ.Регистратор.Разукомплектация
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаКомплектацияСписание,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаИзКомплектации)
	               |					И НЕ ДвиженияТМЦ.Регистратор.Разукомплектация
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаКомплектацияПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаНаКомплектацию)
	               |					И ДвиженияТМЦ.Регистратор.Разукомплектация
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаРазукомплектацияСписание,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаИзКомплектации)
	               |					И ДвиженияТМЦ.Регистратор.Разукомплектация
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаРазукомплектацияПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаПоступления)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаКорректировкаПоступления,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаРеализации)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаКорректировкаРеализации,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПродажаОпт)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПерепродажаНаПриходКупляПродажаРасход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	               |					И НЕ &ЭтоСклад
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПерепродажаНаПриходКупляПродажаПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПередачаНаРеализацию)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПерепродажаНаПриходКомиссияРасход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПерепродажаНаПриходКомиссияПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратПоставщику)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПерепродажаНаВозвратКупляПродажаРасход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	               |					И &ЭтоСклад
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПерепродажаНаВозвратКупляПродажаПриход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратПоставщику)
	               |					И ДвиженияТМЦ.Регистратор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПерепродажаНаВозвратКомиссияРасход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ДвиженияТМЦ.КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаВозвратРеализация)
	               |				ТОГДА ДвиженияТМЦ.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПерепродажаНаВозвратКомиссияПриход
	               |ПОМЕСТИТЬ ВТ_ДвиженияТМЦ
	               |ИЗ
	               |	РегистрНакопления.ДвиженияТМЦ КАК ДвиженияТМЦ
	               |ГДЕ
	               |	ДвиженияТМЦ.Период МЕЖДУ &НачалоПериода И КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ)
	               |	И ДвиженияТМЦ.КодОперации <> ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ЗаказМагазина)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НАЧАЛОПЕРИОДА(ДвиженияТМЦ.Период, ДЕНЬ),
	               |	ДвиженияТМЦ.Номенклатура,
	               |	ДвиженияТМЦ.Фирма
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОстаткиПоДням.НачалоПериода КАК День,
	               |	ОстаткиПоДням.Номенклатура.Код КАК КодНоменклатуры,
	               |	&СтруктурнаяЕдиница,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КоличествоПродано, 0) КАК КоличествоПродано,
	               |	ОстаткиПоДням.Остаток КАК Остаток,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПродаж, 0) КАК СуммаПродаж,
	               |	ОстаткиПоДням.Фирма.Код КАК ФирмаКод,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоЗакуплено, 0) КАК КолВоЗакуплено,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоВнутреннее, 0) КАК КолВоВнутреннее,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоВозвратПоставщику, 0) КАК КолВоВозвратПоставщику,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоВозвратОтПокупателя, 0) КАК КолВоВозвратОтПокупателя,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоСписание, 0) КАК КолВоСписание,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПеремещениеСклад, 0) КАК КолВоПеремещениеСклад,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПеремещениеСЕ, 0) КАК КолВоПеремещениеСЕ,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоКомплектацияСписание, 0) КАК КолВоКомплектацияСписание,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоКомплектацияПриход, 0) КАК КолВоКомплектацияПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоРазукомплектацияСписание, 0) КАК КолВоРазукомплектацияСписание,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоРазукомплектацияПриход, 0) КАК КолВоРазукомплектацияПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоКорректировкаПоступления, 0) КАК КолВоКорректировкаПоступления,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоКорректировкаРеализации, 0) КАК КолВоКорректировкаРеализации,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаЗакуплено, 0) КАК СуммаЗакуплено,
				   |	ЕСТЬNULL(ДвиженияТМЦ.СуммаВнутреннее, 0) КАК СуммаВнутреннее,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаВозвратПоставщику, 0) КАК СуммаВозвратПоставщику,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаВозвратОтПокупателя, 0) КАК СуммаВозвратОтПокупателя,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаСписания, 0) КАК СуммаСписания,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПеремещенияСклад, 0) КАК СуммаПеремещенияСклад,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПеремещенияСЕ, 0) КАК СуммаПеремещенияСЕ,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаКомплектацияСписание, 0) КАК СуммаКомплектацияСписание,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаКомплектацияПриход, 0) КАК СуммаКомплектацияПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаРазукомплектацияСписание, 0) КАК СуммаРазукомплектацияСписание,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаРазукомплектацияПриход, 0) КАК СуммаРазукомплектацияПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаКорректировкаПоступления, 0) КАК СуммаКорректировкаПоступления,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаКорректировкаРеализации, 0) КАК СуммаКорректировкаРеализации,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПерепродажаНаПриходКупляПродажаРасход, 0) КАК КолВоПерепродажаНаПриходКупляПродажаРасход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПерепродажаНаПриходКупляПродажаПриход, 0) КАК КолВоПерепродажаНаПриходКупляПродажаПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПерепродажаНаПриходКомиссияРасход, 0) КАК КолВоПерепродажаНаПриходКомиссияРасход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПерепродажаНаПриходКомиссияПриход, 0) КАК КолВоПерепродажаНаПриходКомиссияПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПерепродажаНаВозвратКупляПродажаРасход, 0) КАК КолВоПерепродажаНаВозвратКупляПродажаРасход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПерепродажаНаВозвратКупляПродажаПриход, 0) КАК КолВоПерепродажаНаВозвратКупляПродажаПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПерепродажаНаВозвратКомиссияРасход, 0) КАК КолВоПерепродажаНаВозвратКомиссияРасход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.КолВоПерепродажаНаВозвратКомиссияПриход, 0) КАК КолВоПерепродажаНаВозвратКомиссияПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПерепродажаНаПриходКупляПродажаРасход, 0) КАК СуммаПерепродажаНаПриходКупляПродажаРасход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПерепродажаНаПриходКупляПродажаПриход, 0) КАК СуммаПерепродажаНаПриходКупляПродажаПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПерепродажаНаПриходКомиссияРасход, 0) КАК СуммаПерепродажаНаПриходКомиссияРасход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПерепродажаНаПриходКомиссияПриход, 0) КАК СуммаПерепродажаНаПриходКомиссияПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПерепродажаНаВозвратКупляПродажаРасход, 0) КАК СуммаПерепродажаНаВозвратКупляПродажаРасход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПерепродажаНаВозвратКупляПродажаПриход, 0) КАК СуммаПерепродажаНаВозвратКупляПродажаПриход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПерепродажаНаВозвратКомиссияРасход, 0) КАК СуммаПерепродажаНаВозвратКомиссияРасход,
	               |	ЕСТЬNULL(ДвиженияТМЦ.СуммаПерепродажаНаВозвратКомиссияПриход, 0) КАК СуммаПерепродажаНаВозвратКомиссияПриход
	               |ИЗ
	               |	ВТ_ОстаткиПоДням КАК ОстаткиПоДням
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДвиженияТМЦ КАК ДвиженияТМЦ
	               |		ПО ОстаткиПоДням.НачалоПериода = ДвиженияТМЦ.НачалоПериода
	               |			И ОстаткиПоДням.Номенклатура = ДвиженияТМЦ.Номенклатура
	               |			И ОстаткиПоДням.Фирма = ДвиженияТМЦ.Фирма
	               |ГДЕ
				   |	НЕ ОстаткиПоДням.Номенклатура.ПометкаУдаления
	               |УПОРЯДОЧИТЬ ПО
	               |	День";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачальнаяДата));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонечнаяДата));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Код);
	Запрос.УстановитьПараметр("ЭтоСклад", ?(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Код = 1, Истина, Ложь));
	Возврат Запрос.Выполнить().Выгрузить();			   
КонецФункции	

Процедура ВыгрузкаФайлаОстатковИОборотовДляBI() Экспорт
	ИмяФайла = Строка(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Код) + "_" + Формат((ТекущаяДата() - 86400), "ДФ=ддММгггг") ;	
	ФайлВыгрузки = КаталогВременныхФайлов() + ИмяФайла + ".csv";
	Файл = Новый ЗаписьТекста;
	Файл.Открыть(ФайлВыгрузки, КодировкаТекста.ANSI);
	ТЗОстатки = ПолучитьОстаткиИОборотыТоваров(ТекущаяДата() - 86400, ТекущаяДата() - 86400);
	КолКолонок = ТЗОстатки.Колонки.Количество();
	Строка = "";
	Для Каждого СтрокаТЗОстатки ИЗ ТЗОстатки Цикл
		Если Строка <> "" Тогда
			Файл.ЗаписатьСтроку("");
		КонецЕсли;	
		Строка = "";
		Строка = Строка + Формат(СтрокаТЗОстатки.День, "ДФ=дд.ММ.гггг") + ";";
		Строка = Строка + СокрЛП(СтрокаТЗОстатки.КодНоменклатуры) + ";";
		Для инд = 2 По КолКолонок - 1 Цикл
			Строка = Строка + Формат(СтрокаТЗОстатки[инд], "ЧРД='.'; ЧГ=0; ЧН=") + ";";
		КонецЦикла;	
		Файл.Записать(Строка);	
	КонецЦикла;	
	Файл.Закрыть();
		
	СерверFTP = "217.14.195.129";       
    ПортFTP = 21;
    ИмяПользователяFTP = "DOMAIN/ORDMFiles";
	ПарольПользователяFTP = "ve4%$^H$tb";
    ПассивноеСоединениеFTP = Истина;
	КаталогFTP = "/RS_IN/IN";

    // FTPСоединение(<Сервер>, <Порт>, <ИмяПользователя>, <ПарольПользователя>, <Прокси>, <ПассивноеСоединение>, <Таймаут>) 
	Попытка
		ФТП = Новый FTPСоединение(
	        СерверFTP,
	        ПортFTP,
	        ИмяПользователяFTP,
	        ПарольПользователяFTP,
	        ,
	        ПассивноеСоединениеFTP
	        );

	    ФТП.УстановитьТекущийКаталог(КаталогFTP);
	    ФТП.Записать(ФайлВыгрузки, ИмяФайла + ".csv");
	    ЗаписьЖурналаРегистрации("Рассылка остатков и оборотов в BI", УровеньЖурналаРегистрации.Информация, , , "Отправлен файл остатков и оборотов в BI за " + Формат((ТекущаяДата() - 86400), "ДФ=ддММгггг"));
	Исключение
		ЗаписьЖурналаРегистрации("Рассылка остатков и оборотов в BI", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось отправить файл остатков и оборотов в BI за " + Формат((ТекущаяДата() - 86400), "ДФ=ддММгггг"));
	КонецПопытки;	
	
КонецПроцедуры	
//Ветров И.А. 27.10.2015 Наряд №0000136126}




