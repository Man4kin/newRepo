
// Создать и заполнить дерево значений свойств для редактирования в форме объекта
Функция ЗаполнитьДеревоПараметров(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПараметрыСтруктурныхЕдиниц.Ссылка КАК Свойство,
	               |	Параметры.Значение,
	               |	Параметры.Представление,
	               |	ВЫБОР
	               |		КОГДА ПараметрыСтруктурныхЕдиниц.ЭтоГруппа
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Картинка,
	               |	ПараметрыСтруктурныхЕдиниц.ТипЗначения КАК ТипЗначенияСвойства
	               |ИЗ
	               |	ПланВидовХарактеристик.ПараметрыСтруктурныхЕдиниц КАК ПараметрыСтруктурныхЕдиниц
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыСтруктурныхЕдиниц КАК Параметры
	               |		ПО ПараметрыСтруктурныхЕдиниц.Ссылка = Параметры.Свойство
	               |			И (Параметры.СтруктурнаяЕдиница = &Ссылка)
	               |ГДЕ 
   				   |    ПараметрыСтруктурныхЕдиниц.Ссылка.Предопределенный
	               |УПОРЯДОЧИТЬ ПО
	               |	ПараметрыСтруктурныхЕдиниц.Код ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Возврат Дерево;
КонецФункции

// Из дерева значений свойств на форме заполнить табличную часть объекта значений свойств
Процедура ПеренестиЗначенияСвойств(Ссылка, ДеревоПараметров) Экспорт
	//НаборЗаписей = РегистрыСведений.ПараметрыСтруктурныхЕдиниц.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(Ссылка);
	//НаборЗаписей.Прочитать();
	//НаборЗаписей.Очистить();
	//ЗаполнитьДополнительныеРеквизиты(Ссылка, НаборЗаписей, ДеревоПараметров);
	//НаборЗаписей.Записать();
	
	
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст=
	"ВЫБРАТЬ СтруктурнаяЕдиница,Свойство,Значение,Представление Поместить НаборЗаписей из &НаборЗаписей КАК НЗ";
	НаборЗаписей = РегистрыСведений.ПараметрыСтруктурныхЕдиниц.СоздатьНаборЗаписей();
	ЗаполнитьДополнительныеРеквизиты(Ссылка, НаборЗаписей, ДеревоПараметров);
	Запрос.УстановитьПараметр("НаборЗаписей",НаборЗаписей);
	Запрос.Выполнить();	
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыСтруктурныхЕдиниц.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаСтарая,
		|	ПараметрыСтруктурныхЕдиниц.Свойство КАК СвойствоСтарое,
		|	ПараметрыСтруктурныхЕдиниц.Значение КАК ЗначениеСтарое,
		|	НаборЗаписей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	НаборЗаписей.Свойство,
		|	НаборЗаписей.Значение,
		|	НаборЗаписей.Представление
		|ИЗ
		|	НаборЗаписей КАК НаборЗаписей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыСтруктурныхЕдиниц КАК ПараметрыСтруктурныхЕдиниц
		|		ПО (НаборЗаписей.Свойство = ПараметрыСтруктурныхЕдиниц.Свойство
		|				ИЛИ ПараметрыСтруктурныхЕдиниц.Свойство = &Свойство)
		|			И (ПараметрыСтруктурныхЕдиниц.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|				ИЛИ ПараметрыСтруктурныхЕдиниц.СтруктурнаяЕдиница = &ПустаяСтруктурнаяЕдиница)";
		
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Ссылка);	
	Запрос.УстановитьПараметр("ПустаяСтруктурнаяЕдиница",Справочники.СтруктурныеЕдиницы.ПустаяСсылка());	
	Запрос.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ПустаяСсылка());	

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если (ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Значение) ИЛИ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЗначениеСтарое))
			И (ВыборкаДетальныеЗаписи.Значение <> ВыборкаДетальныеЗаписи.ЗначениеСтарое) Тогда
			Запись = РегистрыСведений.ПараметрыСтруктурныхЕдиниц.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись,ВыборкаДетальныеЗаписи);
			Запись.СтруктурнаяЕдиница = Ссылка;
			Запись.Записать();
			Если ВыборкаДетальныеЗаписи.Свойство = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеВалюты Тогда
				ЗаписьОпции = РегистрыСведений.ЗначенияФункциональныхОпций.СоздатьМенеджерЗаписи();
				ЗаписьОпции.СтруктурнаяЕдиница = Ссылка;
				ЗаписьОпции.Прочитать();
				ЗаписьОпции.СтруктурнаяЕдиница = Ссылка;
				ЗаписьОпции.ИспользованиеВалюты = ВыборкаДетальныеЗаписи.Значение;
				ЗаписьОпции.Записать();
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.Свойство = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеРеквизитовВеса Тогда
				ЗаписьОпции = РегистрыСведений.ЗначенияФункциональныхОпций.СоздатьМенеджерЗаписи();
				ЗаписьОпции.СтруктурнаяЕдиница = Ссылка;
				ЗаписьОпции.Прочитать();
				ЗаписьОпции.СтруктурнаяЕдиница = Ссылка;
				ЗаписьОпции.ИспользованиеРеквизитовВеса = ВыборкаДетальныеЗаписи.Значение;
				ЗаписьОпции.Записать();
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.Свойство = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВестиУчетАлкоголяВРазрезеПроизводителей Тогда
				ЗаписьОпции = РегистрыСведений.ЗначенияФункциональныхОпций.СоздатьМенеджерЗаписи();
				ЗаписьОпции.СтруктурнаяЕдиница = Ссылка;
				ЗаписьОпции.Прочитать();
				ЗаписьОпции.СтруктурнаяЕдиница = Ссылка;
				ЗаписьОпции.ВестиУчетАлкоголяВРазрезеПроизводителей = ВыборкаДетальныеЗаписи.Значение;
				ЗаписьОпции.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеРеквизиты(Ссылка, НаборЗаписей, ДеревоПараметров)
	Для Каждого Стр Из ДеревоПараметров.Строки Цикл
		Если Стр.Картинка = 1 Тогда
        	ЗаполнитьДополнительныеРеквизиты(Ссылка, НаборЗаписей, Стр)
        Иначе
			//Если ЗначениеЗаполнено(Стр.Значение) Тогда
				новСтр = НаборЗаписей.Добавить();
				новСтр.СтруктурнаяЕдиница = Ссылка;
				ЗаполнитьЗначенияСвойств(новСтр,Стр);
			//КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьСвязиПараметровВыбора(Элемент) Экспорт
	Элемент.ТекущийЭлемент.СвязиПараметровВыбора = Новый ФиксированнаяСтруктура("Владелец", "Объект.Ссылка");
КонецПроцедуры

Функция ПолучитьСвойствоПоИмени(Имя) Экспорт
	Возврат ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц[Имя];	
КонецФункции	

Функция ПолучитьЗначениеСвойства(Свойство,СтруктурнаяЕдиница = Неопределено) Экспорт
	Если СтруктурнаяЕдиница = Неопределено Тогда
		СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;  //V
	КонецЕсли;	
	Значение = РегистрыСведений.ПараметрыСтруктурныхЕдиниц.Получить(Новый Структура("СтруктурнаяЕдиница,Свойство",СтруктурнаяЕдиница,Свойство)).Значение;
	Возврат Свойство.ТипЗначения.ПривестиЗначение(Значение);
КонецФункции

Процедура ЗаписатьПараметрРасписания(ИмяМетаданных,Задание,Значение) Экспорт
	Если ИмяМетаданных = "ОтправкаДанныхRIB" Тогда
		Параметр = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РасписаниеОбменаRMSОтправка;
	ИначеЕсли ИмяМетаданных = "ПолучениеДанныхRIB" Тогда
		Параметр = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РасписаниеОбменаRMSПолучение;
	ИначеЕсли ИмяМетаданных = "ПередачаДанныхЦВД" Тогда
		Параметр = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РасписаниеОбменаЦВД;
	ИначеЕсли ИмяМетаданных = "ПередачаДанныхФинансы" Тогда
		Параметр = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РасписаниеОбменаФинансы;
	ИначеЕсли ИмяМетаданных = "ОтправкаДанныхSMS" Тогда
		Параметр = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РасписаниеОбменаSMSОтправка;
	ИначеЕсли ИмяМетаданных = "ПолучениеДанныхSMS" Тогда
		Параметр = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РасписаниеОбменаSMSПолучение;
	ИначеЕсли ИмяМетаданных = "ПолучениеДанныхExtSystem" Тогда
		Параметр = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РасписаниеОбменаExtSystem;
	ИначеЕсли ИмяМетаданных = "ПередачаДанныхORDM" Тогда
		Параметр = ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РасписаниеОбменаORDM;
	Иначе
		Возврат;
	КонецЕсли;
	Если Задание.Использование = Ложь Тогда
		Значение = "";
	КонецЕсли;	
	Запись = РегистрыСведений.ПараметрыСтруктурныхЕдиниц.СоздатьМенеджерЗаписи();
	Запись.СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;  //V
	Запись.Свойство = Параметр;
	Запись.Значение = ЗначениеВСтрокуВнутр(Значение);
	Запись.Представление = Строка(Значение);
	Запись.Записать();
КонецПроцедуры

