Функция ПолучитьЗапросПоОстаткамНоменклатуры(СтруктураПараметров) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	//|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.Комитент,
	|	ОстаткиНоменклатурыОстатки.Статус КАК ТипРеализацииТовара,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК Количество,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаСрезПоследних.Izh_ПлательщикНДС
	|			ТОГДА ОстаткиНоменклатурыОстатки.Номенклатура.СтавкаНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|	КОНЕЦ КАК СтавкаНДС
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&НаДату,
	|			Номенклатура = &Номенклатура
	|				//ОтборПоФирме
	|				//ОтборПоСкладу
	|				И Статус = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&НаДату, ) КАК УчетнаяПолитикаСрезПоследних
	|		ПО ОстаткиНоменклатурыОстатки.Фирма = УчетнаяПолитикаСрезПоследних.Организация
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.Комитент,
	|	ОстаткиНоменклатурыОстатки.Статус,
	|	ВЫБОР
	|		КОГДА УчетнаяПолитикаСрезПоследних.Izh_ПлательщикНДС
	|			ТОГДА ОстаткиНоменклатурыОстатки.Номенклатура.СтавкаНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	//|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.Комитент,
	|	ОстаткиНоменклатурыОстатки.Статус,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА Контрагенты.НеПлательщикНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		ИНАЧЕ ОстаткиНоменклатурыОстатки.Номенклатура.СтавкаНДС
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&НаДату,
	|			Номенклатура = &Номенклатура
	|				//ОтборПоФирме
	|				//ОтборПоСкладу
	|				И Статус = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ОстаткиНоменклатурыОстатки.Комитент = Контрагенты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения,
	|	ЦеныНоменклатурыСрезПоследних.Цена
	|ПОМЕСТИТЬ ВТЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&НаДату,
	|			Номенклатура = &Номенклатура
	|				//ОтборПоСтруктурнойЕдинице
	|						) КАК ЦеныНоменклатурыСрезПоследних
	|УПОРЯДОЧИТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.ID УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОстатки.Номенклатура,
	//|	ВТОстатки.Фирма,
	|	ВТОстатки.Комитент,
	|	ВТОстатки.ТипРеализацииТовара,
	|	СУММА(ВТОстатки.Количество) КАК Количество,
	|	ВТОстатки.СтавкаНДС
	|ПОМЕСТИТЬ ВТОстаткиСвернутые
	|ИЗ
	|	ВТОстатки КАК ВТОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОстатки.Комитент,
	|	ВТОстатки.СтавкаНДС,
	|	ВТОстатки.ТипРеализацииТовара,
	//|	ВТОстатки.Фирма,
	|	ВТОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОстатки.Номенклатура,
	//|	ВТОстатки.Фирма,
	|	ВТОстатки.Комитент,
	|	ВТОстатки.ТипРеализацииТовара,
	|	ВТОстатки.Количество,
	|	ВТОстатки.СтавкаНДС,
	|	ЕСТЬNULL(ВТЦены.Цена, 0) КАК Цена,
	|	СтавкиНДС.Ставка КАК СтавкаНДСЧислом
	|ИЗ
	|	ВТОстатки КАК ВТОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦены
	|		ПО ВТОстатки.Номенклатура = ВТЦены.Номенклатура	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ВТОстатки.СтавкаНДС = СтавкиНДС.Ссылка
	|ГДЕ
	|	ВТОстатки.Количество > 0";
	
	Если СтруктураПараметров.Свойство("Склад") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ОтборПоСкладу", "И МестоХранения = &Склад");
		Запрос.УстановитьПараметр("Склад" , СтруктураПараметров.Склад);
	КонецЕсли;	
	
	Если СтруктураПараметров.Свойство("Фирма") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ОтборПоФирме", "И Фирма = &Фирма");
		Запрос.УстановитьПараметр("Фирма" , СтруктураПараметров.Фирма);
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("СтруктурнаяЕдиница") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ОтборПоСтруктурнойЕдинице", "И СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница"	, СтруктураПараметров.СтруктурнаяЕдиница);
	КонецЕсли;
		
	Запрос.УстановитьПараметр("НаДату"				, СтруктураПараметров.НаДату);
	Запрос.УстановитьПараметр("Номенклатура"		, СтруктураПараметров.Номенклатура);		
	
	Возврат Запрос;
	
КонецФункции

Функция ВерхнийРодитель(Ссылка)
	Возврат ?(Ссылка.Родитель.Пустая(), Ссылка, ВерхнийРодитель(Ссылка.Родитель));
КонецФункции

Процедура ДобавитьВТаблицуРодителей(ТаблицаРодителей, Номенклатура, КодНоменклатуры, Уровень)
	
	НовСтр = ТаблицаРодителей.Добавить();
	НовСтр.Номенклатура		= Номенклатура;
	НовСтр.КодНоменклатуры	= КодНоменклатуры;
	НовСтр.Уровень			= Уровень;
	
КонецПроцедуры

Функция ТаблицаРодителей(Ссылка) Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура"		, Новый ОписаниеТипов(МассивТипов));
	ТЗ.Колонки.Добавить("КодНоменклатуры"	, Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("Уровень"			, Новый ОписаниеТипов("Число"));
	
	ДобавитьВТаблицуРодителей(ТЗ, Ссылка, Ссылка.Код, Ссылка.Уровень());		
	Родитель = Ссылка.Родитель;	
	Пока НЕ Родитель.Пустая() Цикл
		ДобавитьВТаблицуРодителей(ТЗ, Родитель, Родитель.Код, Родитель.Уровень());
		Родитель = Родитель.Родитель; //))
	КонецЦикла;	
	ТЗ.Сортировать("Уровень Возр");
	
	Возврат ТЗ;
	
КонецФункции

Функция ПолучитьАктуальныеПравилаПерепродажиПоНоменклатуреИерархически(НаДату, ТаблицаНоменклатуры) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗ.Номенклатура,
	|	ВЫРАЗИТЬ(ТЗ.КодНоменклатуры КАК СТРОКА(20)) КАК Код,
	|	ВЫРАЗИТЬ(ТЗ.Уровень КАК ЧИСЛО) КАК Уровень
	|ПОМЕСТИТЬ ВТРодителиНоменклатуры
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПерепродажаСрезПоследних.Период,
	|	ПерепродажаСрезПоследних.СтруктурнаяЕдиница,
	|	ПерепродажаСрезПоследних.ФирмаПокупки,
	|	ПерепродажаСрезПоследних.ГруппаНоменклатуры,
	|	ПерепродажаСрезПоследних.ТипДоговора,
	|	ПерепродажаСрезПоследних.ФирмаПродажи,
	|	ПерепродажаСрезПоследних.Izh_НеИспользовать,
	|	ВТРодителиНоменклатуры.Уровень КАК Уровень
	|ИЗ
	|	РегистрСведений.Перепродажа.СрезПоследних(&НаДату, ) КАК ПерепродажаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРодителиНоменклатуры КАК ВТРодителиНоменклатуры
	|		ПО ПерепродажаСрезПоследних.ГруппаНоменклатуры = ВТРодителиНоменклатуры.Код
	|ГДЕ
	|	НЕ ВТРодителиНоменклатуры.Номенклатура ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Уровень";
	//Запрос.УстановитьПараметр("ГруппаНоменклатуры"	, МассивРодителей(ВыборкаНоменклатура.Номенклатура));
	Запрос.УстановитьПараметр("НаДату"	, НаДату);
	Запрос.УстановитьПараметр("ТЗ"		, ТаблицаНоменклатуры);										
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции
	
Процедура ПерераспределитьСоставПоОстаткам(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос();	
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗ.Номенклатура,
	|	ТЗ.Количество		
	|ПОМЕСТИТЬ ВТСостав
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСостав.Номенклатура,
	|	СУММА(ВТСостав.Количество) КАК Количество
	|ИЗ
	|	ВТСостав КАК ВТСостав
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСостав.Номенклатура";
	Запрос.УстановитьПараметр("ТЗ", ДокументОбъект.Состав.Выгрузить());
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РасходнаяНакладная") Тогда
#region РасходнаяНакладная

		НакладнаяНаВозврат = ДокументОбъект.Возврат И ЗначениеЗаполнено(ДокументОбъект.ДокОснование);
		//Если НакладнаяНаВозврат Тогда
		//							   
		//				   
		//				   //|ВЫБРАТЬ
		//				   //|	ПриходнаяНакладнаяСостав.Ссылка.Фирма КАК Фирма,
		//				   //|	ПриходнаяНакладнаяСостав.Ссылка.Склад КАК Склад,
		//				   //|	ПриходнаяНакладнаяСостав.Номенклатура,
		//				   //|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		//				   //|	ПриходнаяНакладнаяСостав.Количество,
		//				   //|	ПриходнаяНакладнаяСостав.Коэффициент,
		//				   //|	ПриходнаяНакладнаяСостав.Цена,
		//				   //|	ПриходнаяНакладнаяСостав.СуммаНДС,
		//				   //|	ПриходнаяНакладнаяСостав.Сумма,
		//				   //|	ПриходнаяНакладнаяСостав.СтавкаНДС,
		//				   //|	ПриходнаяНакладнаяСостав.Вес,
		//				   //|	ПриходнаяНакладнаяСостав.ЕдиницаВеса,
		//				   //|	ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора КАК ТипРеализацииТовара
		//				   //|ПОМЕСТИТЬ ВТСоставПриходнаяНакладная
		//				   //|ИЗ
		//				   //|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		//				   //|ГДЕ
		//				   //|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		//				   //|;
		//				   //|
		//				   //|////////////////////////////////////////////////////////////////////////////////
		//				   //|ВЫБРАТЬ
		//				   //|	СтруктураПодчиненности.Ссылка
		//				   //|ПОМЕСТИТЬ ВТДействующиеПеремещения
		//				   //|ИЗ
		//				   //|	КритерийОтбора.СтруктураПодчиненности(&Ссылка) КАК СтруктураПодчиненности
		//				   //|ГДЕ
		//				   //|	СтруктураПодчиненности.Ссылка ССЫЛКА Документ.ПередачаТоваровМеждуФирмами
		//				   //|	И СтруктураПодчиненности.Ссылка.Проведен = ИСТИНА
		//				   //|;
		//				   //|
		//				   //|////////////////////////////////////////////////////////////////////////////////
		//				   //|ВЫБРАТЬ
		//				   //|	ОстаткиНоменклатуры.Номенклатура,
		//				   //|	ОстаткиНоменклатуры.МестоХранения,
		//				   //|	ОстаткиНоменклатуры.Фирма,
		//				   //|	ОстаткиНоменклатуры.Комитент,
		//				   //|	ОстаткиНоменклатуры.Статус КАК ТипРеализацииТовара,
		//				   //|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
		//				   //|	СУММА(ОстаткиНоменклатуры.Сумма) КАК Сумма
		//				   //|ПОМЕСТИТЬ ВТПереданныеТовары
		//				   //|ИЗ
		//				   //|	ВТДействующиеПеремещения КАК ВТСтруктураПодчиненности
		//				   //|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
		//				   //|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуФирмами.Состав КАК ПередачаТоваровМеждуФирмамиСостав
		//				   //|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
		//				   //|				ПО ПередачаТоваровМеждуФирмамиСостав.СтавкаНДС = СтавкиНДС.Ссылка
		//				   //|			ПО ОстаткиНоменклатуры.Номенклатура = ПередачаТоваровМеждуФирмамиСостав.Номенклатура
		//				   //|				И ОстаткиНоменклатуры.МестоХранения = ПередачаТоваровМеждуФирмамиСостав.Ссылка.Склад
		//				   //|				И ОстаткиНоменклатуры.Фирма = ПередачаТоваровМеждуФирмамиСостав.Ссылка.ФирмаПолучатель
		//				   //|		ПО ВТСтруктураПодчиненности.Ссылка = ОстаткиНоменклатуры.Регистратор
		//				   //|			И (ОстаткиНоменклатуры.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		//				   //|
		//				   //|СГРУППИРОВАТЬ ПО
		//				   //|	ОстаткиНоменклатуры.Номенклатура,
		//				   //|	ОстаткиНоменклатуры.МестоХранения,
		//				   //|	ОстаткиНоменклатуры.Фирма,
		//				   //|	ОстаткиНоменклатуры.Комитент,
		//				   //|	ОстаткиНоменклатуры.Статус
		//				   //|;
		//				   //|
		//				   //|////////////////////////////////////////////////////////////////////////////////
		//				   //|ВЫБРАТЬ
		//				   //|	СтруктураПодчиненности.Ссылка
		//				   //|ПОМЕСТИТЬ ВТДействующиеВозвраты
		//				   //|ИЗ
		//				   //|	КритерийОтбора.СтруктураПодчиненности(&Ссылка) КАК СтруктураПодчиненности
		//				   //|ГДЕ
		//				   //|	СтруктураПодчиненности.Ссылка ССЫЛКА Документ.РасходнаяНакладная
		//				   //|	И СтруктураПодчиненности.Ссылка.Проведен = ИСТИНА
		//				   //|	И СтруктураПодчиненности.Ссылка.Возврат = ИСТИНА
		//				   //|;
		//				   //|
		//				   //|////////////////////////////////////////////////////////////////////////////////
		//				   //|ВЫБРАТЬ
		//				   //|	ОстаткиНоменклатуры.Номенклатура,
		//				   //|	ОстаткиНоменклатуры.МестоХранения КАК Склад,
		//				   //|	ОстаткиНоменклатуры.Фирма,
		//				   //|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
		//				   //|	СУММА(ОстаткиНоменклатуры.Сумма) КАК Сумма
		//				   //|ПОМЕСТИТЬ ВТРанееВозвращенныеТовары
		//				   //|ИЗ
		//				   //|	ВТДействующиеВозвраты КАК ВТСтруктураПодчиненности
		//				   //|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
		//				   //|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
		//				   //|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
		//				   //|				ПО РасходнаяНакладнаяСостав.СтавкаНДС = СтавкиНДС.Ссылка
		//				   //|			ПО ОстаткиНоменклатуры.Номенклатура = РасходнаяНакладнаяСостав.Номенклатура
		//				   //|				И ОстаткиНоменклатуры.МестоХранения = РасходнаяНакладнаяСостав.Ссылка.Склад
		//				   //|				И ОстаткиНоменклатуры.Фирма = РасходнаяНакладнаяСостав.Ссылка.Фирма
		//				   //|		ПО ВТСтруктураПодчиненности.Ссылка = ОстаткиНоменклатуры.Регистратор
		//				   //|			И (ОстаткиНоменклатуры.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		//				   //|
		//				   //|СГРУППИРОВАТЬ ПО
		//				   //|	ОстаткиНоменклатуры.Номенклатура,
		//				   //|	ОстаткиНоменклатуры.МестоХранения,
		//				   //|	ОстаткиНоменклатуры.Фирма
		//				   //|;
		//				   //|
		//				   //|////////////////////////////////////////////////////////////////////////////////
		//				   //|ВЫБРАТЬ
		//				   //|	ВТПереданныеТовары.Номенклатура,
		//				   //|	ВТПереданныеТовары.МестоХранения,
		//				   //|	ВТПереданныеТовары.Фирма,
		//				   //|	ВТПереданныеТовары.Комитент,
		//				   //|	ВТПереданныеТовары.ТипРеализацииТовара,
		//				   //|	ОстаткиНоменклатуры.КоличествоОстаток КАК Количество,
		//				   //|	ОстаткиНоменклатуры.СуммаОстаток КАК Сумма
		//				   //|ПОМЕСТИТЬ ВТОстаткиПереданныхТоваров
		//				   //|ИЗ
		//				   //|	ВТПереданныеТовары КАК ВТПереданныеТовары
		//				   //|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&НаДату, ) КАК ОстаткиНоменклатуры
		//				   //|		ПО ВТПереданныеТовары.Номенклатура = ОстаткиНоменклатуры.Номенклатура
		//				   //|			И ВТПереданныеТовары.МестоХранения = ОстаткиНоменклатуры.МестоХранения
		//				   //|			И ВТПереданныеТовары.Фирма = ОстаткиНоменклатуры.Фирма
		//				   //|			И ВТПереданныеТовары.ТипРеализацииТовара = ОстаткиНоменклатуры.Статус
		//				   //|;
		//				   //|
		//				   //|////////////////////////////////////////////////////////////////////////////////
		//				   //|ВЫБРАТЬ
		//				   //|	ВТСоставПриходнаяНакладная.Номенклатура,
		//				   //|	ВТСоставПриходнаяНакладная.Фирма,
		//				   //|	ВТСоставПриходнаяНакладная.Склад,
		//				   //|	ВЫБОР
		//				   //|		КОГДА ЕСТЬNULL(ВТОстаткиПереданныхТоваров.Количество, ВТСоставПриходнаяНакладная.Количество - ЕСТЬNULL(ВТРанееВозвращенныеТовары.Количество, 0)) > ВТСоставПриходнаяНакладная.Количество - ЕСТЬNULL(ВТРанееВозвращенныеТовары.Количество, 0)
		//				   //|			ТОГДА ВТСоставПриходнаяНакладная.Количество - ЕСТЬNULL(ВТРанееВозвращенныеТовары.Количество, 0)
		//				   //|		ИНАЧЕ ЕСТЬNULL(ВТОстаткиПереданныхТоваров.Количество, ВТСоставПриходнаяНакладная.Количество - ЕСТЬNULL(ВТРанееВозвращенныеТовары.Количество, 0))
		//				   //|	КОНЕЦ КАК Количество,
		//				   //|	ЕСТЬNULL(ВТРанееВозвращенныеТовары.Количество, 0) КАК КоличествоВозвращенных
		//				   //|ПОМЕСТИТЬ ВТИтоговыеОстатки
		//				   //|ИЗ
		//				   //|	ВТСоставПриходнаяНакладная КАК ВТСоставПриходнаяНакладная
		//				   //|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПереданныхТоваров КАК ВТОстаткиПереданныхТоваров
		//				   //|		ПО ВТСоставПриходнаяНакладная.Номенклатура = ВТОстаткиПереданныхТоваров.Номенклатура
		//				   //|			И ВТСоставПриходнаяНакладная.Фирма = ВТОстаткиПереданныхТоваров.Комитент
		//				   //|			И ВТСоставПриходнаяНакладная.Склад = ВТОстаткиПереданныхТоваров.МестоХранения
		//				   //|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРанееВозвращенныеТовары КАК ВТРанееВозвращенныеТовары
		//				   //|		ПО ВТСоставПриходнаяНакладная.Номенклатура = ВТРанееВозвращенныеТовары.Номенклатура
		//				   //|			И ВТСоставПриходнаяНакладная.Фирма = ВТРанееВозвращенныеТовары.Фирма
		//				   //|			И ВТСоставПриходнаяНакладная.Склад = ВТРанееВозвращенныеТовары.Склад
		//				   //|;
		//				   //|
		//				   //|////////////////////////////////////////////////////////////////////////////////
		//				   //|ВЫБРАТЬ
		//				   //|	ВТСоставПриходнаяНакладная.Номенклатура,
		//				   //|	ВТСоставПриходнаяНакладная.ЕдиницаИзмерения,
		//				   //|	ВТИтоговыеОстатки.Количество,
		//				   //|	ВТСоставПриходнаяНакладная.Коэффициент,
		//				   //|	ВТСоставПриходнаяНакладная.Цена,
		//				   //|	ВТИтоговыеОстатки.Количество * ВТСоставПриходнаяНакладная.Цена * СтавкиНДС.Ставка / 100 КАК СуммаНДС,
		//				   //|	ВТИтоговыеОстатки.Количество * ВТСоставПриходнаяНакладная.Цена КАК Сумма,
		//				   //|	ВТСоставПриходнаяНакладная.СтавкаНДС,
		//				   //|	ВТСоставПриходнаяНакладная.Вес,
		//				   //|	ВТСоставПриходнаяНакладная.ЕдиницаВеса,
		//				   //|	ВТСоставПриходнаяНакладная.ТипРеализацииТовара,
		//				   //|	ВТИтоговыеОстатки.КоличествоВозвращенных КАК КоличествоУжеВозвращенных
		//				   //|ИЗ
		//				   //|	ВТСоставПриходнаяНакладная КАК ВТСоставПриходнаяНакладная
		//				   //|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
		//				   //|		ПО ВТСоставПриходнаяНакладная.СтавкаНДС = СтавкиНДС.Ссылка
		//				   //|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоговыеОстатки КАК ВТИтоговыеОстатки
		//				   //|		ПО ВТСоставПриходнаяНакладная.Номенклатура = ВТИтоговыеОстатки.Номенклатура
		//				   //|			И ВТСоставПриходнаяНакладная.Фирма = ВТИтоговыеОстатки.Фирма
		//				   //|			И ВТСоставПриходнаяНакладная.Склад = ВТИтоговыеОстатки.Склад";
		//	//Старые параметры
		//	Запрос.УстановитьПараметр("СоставОснования"		, ДокументОбъект.ДокОснование.Состав.Выгрузить());			
		//	Запрос.УстановитьПараметр("ТипРеализацииТовара"	, ДокументОбъект.ДокОснование.ТипДоговора);
		//	//Новые параметры
		//	Запрос.УстановитьПараметр("ТЗ"		, ДокументОбъект.Состав.Выгрузить());
		//	Запрос.УстановитьПараметр("Ссылка"	, ДокументОбъект.ДокОснование);
		//	Запрос.УстановитьПараметр("НаДату"	, Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
		//	
		//	//Удаление строк из ТЧ состава
		//	ДокументОбъект.Состав.Очистить();	
		//	//Получение распределяемой номенклатуры
		//	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();				
		//	Пока ВыборкаНоменклатура.Следующий() Цикл								
		//		НоваяСтрока = ДокументОбъект.Состав.Добавить();				
		//		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);																			
		//	КонецЦикла;			
		//Иначе						
			Запрос = Новый Запрос();						
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;				
			Запрос.Текст = "ВЫБРАТЬ
			|	ТЗ.НомерСтроки,
			|	ТЗ.Номенклатура,
			|	ТЗ.ЕдиницаИзмерения,
			|	ТЗ.Количество,
			|	ТЗ.Коэффициент,
			|	ТЗ.Цена,
			|	ТЗ.Сумма,
			|	ТЗ.СтавкаНДС,
			|	ТЗ.СуммаНДС,
			|	ТЗ.Вес,
			|	ТЗ.ЕдиницаВеса,
			|	ТЗ.Тара,
			|	ТЗ.КолТара,
			|	ТЗ.Тара1,
			|	ТЗ.КолТара1,
			|	ТЗ.Тара2,
			|	ТЗ.КолТара2,
			|	ТЗ.ВесБрутто,
			|	ТЗ.НПП,
			|	ТЗ.ЦенаБезНДС,
			|	ТЗ.СуммаБезНДС,
			|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа) КАК ТипРеализацииТовара
			|ПОМЕСТИТЬ ВТСостав
			|ИЗ
			|	&ТЗ КАК ТЗ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТСостав.Номенклатура,
			|	ВТСостав.ЕдиницаИзмерения,
			|	ВТСостав.Количество,
			|	ВТСостав.Коэффициент,
			|	ВТСостав.Цена,
			|	ВТСостав.Сумма,
			|	ВТСостав.СтавкаНДС,
			|	ВТСостав.СуммаНДС,
			|	ВТСостав.Вес,
			|	ВТСостав.ЕдиницаВеса,
			|	ВТСостав.Тара,
			|	ВТСостав.КолТара,
			|	ВТСостав.Тара1,
			|	ВТСостав.КолТара1,
			|	ВТСостав.Тара2,
			|	ВТСостав.КолТара2,
			|	ВТСостав.ВесБрутто,
			|	ВТСостав.НПП,
			|	ВТСостав.ЦенаБезНДС,
			|	ВТСостав.СуммаБезНДС,
			|	ВТСостав.ТипРеализацииТовара
			|ИЗ
			|	ВТСостав КАК ВТСостав
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВТСостав.НомерСтроки";
			Запрос.УстановитьПараметр("ТЗ", ДокументОбъект.Состав.Выгрузить());
		
			//Удаление строк из ТЧ состава
			ДокументОбъект.Состав.Очистить();	
				
			Если ЗначениеЗаполнено(ДокументОбъект.ДокОснование) И ТипЗнч(ДокументОбъект.ДокОснование) = Тип("ДокументСсылка.ЗаказВнешний") Тогда								
				//Получение распределяемой номенклатуры				
				ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();				
				Пока ВыборкаНоменклатура.Следующий() Цикл
					НоваяСтрока = ДокументОбъект.Состав.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
				КонецЦикла;
			Иначе										
				//Удаление строк из ТЧ состава
				ДокументОбъект.Состав.Очистить();	
				//Получение распределяемой номенклатуры
				ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();				
				Пока ВыборкаНоменклатура.Следующий() Цикл
					
					СтруктураПараметров = Новый Структура;
					СтруктураПараметров.Вставить("НаДату"				, Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
					СтруктураПараметров.Вставить("Номенклатура"			, ВыборкаНоменклатура.Номенклатура);
					СтруктураПараметров.Вставить("СтруктурнаяЕдиница"	, ДокументОбъект.Склад.Владелец);		
					СтруктураПараметров.Вставить("Фирма"				, ДокументОбъект.Фирма);
					СтруктураПараметров.Вставить("Склад"				, ДокументОбъект.Склад);
					
					ЗапросОстатков	= Izh_ОбщегоНазначенияСервер.ПолучитьЗапросПоОстаткамНоменклатуры(СтруктураПараметров);		
					ОсталосьСписать	= ВыборкаНоменклатура.Количество;		
					
					//Списание из остатков собственных и комиссионных товаров
					ВыборкаОстатков = ЗапросОстатков.Выполнить().Выбрать();
					Пока ВыборкаОстатков.Следующий() И ОсталосьСписать <> 0 Цикл						
						НоваяСтрока = ДокументОбъект.Состав.Добавить();
						КолСписания = Мин(ОсталосьСписать, ВыборкаОстатков.Количество);
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОстатков);
						ОсталосьСписать = ОсталосьСписать - КолСписания;
						
						//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)
						
						СтруктураДанных = Новый Структура;    
						СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
						СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
						СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
						ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
						
						Если ДокументОбъект.Возврат И ТипЗнч(ДокументОбъект.ДокОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
							НоваяСтрока.СтавкаНДС	= ВыборкаНоменклатура.СтавкаНДС;
							СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС);
						Иначе							
							СтавкаНДС = ВыборкаОстатков.СтавкаНДСЧислом;							
						КонецЕсли;
																	
						НоваяСтрока.Количество	= КолСписания;
						НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
						НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
						НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС); //Взято из заполнения документа "Расходная накладная"						
					КонецЦикла;
					
					Если ОсталосьСписать > 0 Тогда
						Сообщить("По фирме: " + СокрЛП(ДокументОбъект.Фирма) + Символы.ПС
						+ "На складе: " + СокрЛП(ДокументОбъект.Склад) + Символы.ПС
						+ "Не хватает " + СокрЛП(ВыборкаНоменклатура.Номенклатура) + " в кол-ве: " + Формат(ОсталосьСписать, "ЧДЦ=3; ЧГ="));
				
						НоваяСтрока = ДокументОбъект.Состав.Добавить();				
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);								
						//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)				
						СтруктураДанных = Новый Структура;    
						СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
						СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
						СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
						ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);			
						
						СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ВыборкаНоменклатура.СтавкаНДС);								
						НоваяСтрока.Количество	= ОсталосьСписать;
						НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
						НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
						НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС);
						НоваяСтрока.ТипРеализацииТовара	= Неопределено;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
		//КонецЕсли;
#endregion
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваровМеждуФирмами") Тогда
#region ПередачаТоваровМеждуФирмами		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;		
		Запрос.Текст = "ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	ТЗ.ЕдиницаИзмерения,
		|	ТЗ.Количество,
		|	ТЗ.Коэффициент,
		|	ТЗ.Цена,
		|	ТЗ.СуммаНДС,
		|	ТЗ.Сумма,
		|	ТЗ.СтавкаНДС,
		|	ТЗ.ТипРеализацииТовара
		|ПОМЕСТИТЬ ВТСостав
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСостав.Номенклатура,
		|	ВТСостав.ЕдиницаИзмерения,
		|	СУММА(ВТСостав.Количество) КАК Количество,
		|	СУММА(ВТСостав.Коэффициент) КАК Коэффициент,
		|	ВТСостав.Цена,
		|	СУММА(ВТСостав.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВТСостав.Сумма) КАК Сумма,
		|	ВТСостав.СтавкаНДС,
		|	ВТСостав.ТипРеализацииТовара
		|ИЗ
		|	ВТСостав КАК ВТСостав
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТСостав.Номенклатура,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Цена,
		|	ВТСостав.ТипРеализацииТовара,
		|	ВТСостав.СтавкаНДС";					
		Запрос.УстановитьПараметр("ТЗ", ДокументОбъект.Состав.Выгрузить());

		//Удаление строк из ТЧ состава
		ДокументОбъект.Состав.Очистить();	
		//Получение распределяемой номенклатуры
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();				
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НаДату"				, Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
			СтруктураПараметров.Вставить("Номенклатура"			, ВыборкаНоменклатура.Номенклатура);
			СтруктураПараметров.Вставить("СтруктурнаяЕдиница"	, ДокументОбъект.Склад.Владелец);		
			СтруктураПараметров.Вставить("Фирма"				, ДокументОбъект.Фирма);
			СтруктураПараметров.Вставить("Склад"				, ДокументОбъект.Склад);
			
			ЗапросОстатков	= Izh_ОбщегоНазначенияСервер.ПолучитьЗапросПоОстаткамНоменклатуры(СтруктураПараметров);		
			ОсталосьСписать	= ВыборкаНоменклатура.Количество;		
			
			//Списание из остатков собственных и комиссионных товаров
			ВыборкаОстатков = ЗапросОстатков.Выполнить().Выбрать();
			Пока ВыборкаОстатков.Следующий() И ОсталосьСписать <> 0 Цикл				
				НоваяСтрока = ДокументОбъект.Состав.Добавить();
				КолСписания = Мин(ОсталосьСписать, ВыборкаОстатков.Количество);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОстатков);
				ОсталосьСписать = ОсталосьСписать - КолСписания;
				
				//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)
				
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
				
				//СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС);
				СтавкаНДС = ВыборкаОстатков.СтавкаНДСЧислом;
				
				НоваяСтрока.Количество	= КолСписания;
				НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС); //Взято из заполнения документа "Расходная накладная"				
			КонецЦикла;
			
			Если ОсталосьСписать > 0 Тогда
				Сообщить("По фирме: " + СокрЛП(ДокументОбъект.Фирма) + Символы.ПС
						+ "На складе: " + СокрЛП(ДокументОбъект.Склад) + Символы.ПС
						+ "Не хватает " + СокрЛП(ВыборкаНоменклатура.Номенклатура) + " в кол-ве: " + Формат(ОсталосьСписать, "ЧДЦ=3; ЧГ="));
				
				НоваяСтрока = ДокументОбъект.Состав.Добавить();				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);								
				//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)				
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);			
				
				СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ВыборкаНоменклатура.СтавкаНДС);								
				НоваяСтрока.Количество	= ОсталосьСписать;
				НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС);								
			КонецЕсли;
			
		КонецЦикла;
#endregion
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.Zотчет") Тогда
#region Zотчет		
		Запрос = Новый Запрос();	
		Запрос.Текст = "ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	ТЗ.Склад,
		|	ТЗ.ЕдиницаИзмерения,
		|	ТЗ.СтавкаНДС,
		|	ТЗ.Коэффициент,
		|	ТЗ.Количество,
		|	ТЗ.Сумма,
		|	ТЗ.СуммаНДС
		|ПОМЕСТИТЬ ВТСостав
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСостав.Номенклатура,
		|	ВТСостав.Склад КАК Склад,
		|	ВТСостав.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(ВТСостав.Количество) КАК Количество,
		|	СУММА(ВТСостав.Сумма) КАК Сумма,
		|	СУММА(ВТСостав.СуммаНДС) КАК СуммаНДС,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Коэффициент
		|ИЗ
		|	ВТСостав КАК ВТСостав
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТСостав.Склад,
		|	ВТСостав.Номенклатура,
		|	ВТСостав.СтавкаНДС,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Коэффициент
		|";				
		Запрос.УстановитьПараметр("ТЗ", ДокументОбъект.Состав.Выгрузить());
		//Удаление строк из ТЧ состава
		ДокументОбъект.Состав.Очистить();	
		//Получение распределяемой номенклатуры
		РезультатЗапроса = Запрос.Выполнить();		
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать();				
		Пока ВыборкаНоменклатура.Следующий() Цикл								
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НаДату"				, Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
			СтруктураПараметров.Вставить("Номенклатура"			, ВыборкаНоменклатура.Номенклатура);
			СтруктураПараметров.Вставить("Фирма"				, ДокументОбъект.Фирма);
			СтруктураПараметров.Вставить("Склад"				, ВыборкаНоменклатура.Склад);
			СтруктураПараметров.Вставить("СтруктурнаяЕдиница"	, ДокументОбъект.СтруктурнаяЕдиница); //Отличие для ZОтчета					
			
			ЗапросОстатков			= Izh_ОбщегоНазначенияСервер.ПолучитьЗапросПоОстаткамНоменклатуры(СтруктураПараметров);		
			ОсталосьСписать			= ВыборкаНоменклатура.Количество;		
			ОсталосьСписатьСумма	= ВыборкаНоменклатура.Сумма;
			Цена = ?(ВыборкаНоменклатура.Количество = 0, 0, ВыборкаНоменклатура.Сумма / ВыборкаНоменклатура.Количество);
			
			//Списание из остатков собственных и комиссионных товаров
			ВыборкаОстатков = ЗапросОстатков.Выполнить().Выбрать();
			Пока ВыборкаОстатков.Следующий() И ОсталосьСписать > 0 Цикл					
				НоваяСтрока = ДокументОбъект.Состав.Добавить();
				КолСписания = Мин(ОсталосьСписать, ВыборкаОстатков.Количество);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОстатков);								
				//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)					
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);								
				СтавкаНДС = ВыборкаОстатков.СтавкаНДСЧислом;
				
				НоваяСтрока.Количество	= КолСписания;				
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * Цена;					
				НоваяСтрока.Склад 		= ВыборкаНоменклатура.Склад;
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС); //Взято из заполнения документа "Расходная накладная"
				
				ОсталосьСписать			= ОсталосьСписать - КолСписания;
				ОсталосьСписатьСумма	= ОсталосьСписатьСумма - НоваяСтрока.Сумма;					
			КонецЦикла;
			//Тип договора (статус) при отрицательном остатке определяется по схеме
			Если ОсталосьСписать <> 0 Тогда					
				НаДату	= Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
				ТЗ		= ТаблицаРодителей(ВыборкаНоменклатура.Номенклатура);
				РезультатЗапроса = ПолучитьАктуальныеПравилаПерепродажиПоНоменклатуреИерархически(НаДату, ТЗ);
				
				ТипДоговора	= Перечисления.ТипыДоговоров.КупляПродажа;				
				Если НЕ РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Если Выборка.Следующий() Тогда
						ТипДоговора = ?(ЗначениеЗаполнено(Выборка.ТипДоговора), Выборка.ТипДоговора, ТипДоговора);
					КонецЕсли;
				КонецЕсли;								
				НоваяСтрока = ДокументОбъект.Состав.Добавить();					
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);										
				
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
				//Для позиций с отрицательным остатком ставку НДС берем из карточки номенклатуры, если фирма является плательщиком НДС.
				СтавкаНДС = ВыборкаНоменклатура.СтавкаНДС;
				СтавкаНДСЧислом = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ВыборкаНоменклатура.СтавкаНДС);
				Если НЕ ЗначениеЗаполнено(СтавкаНДС) Тогда
					СтавкаНДСЧислом = Константы.ОсновнаяСтавкаНДС.Получить();
					СтавкаНДС	= Справочники.СтавкиНДС.НайтиПоРеквизиту("Ставка", СтавкаНДСЧислом);
				КонецЕсли;				
				ЗапросУчетПол = Новый Запрос;
				ЗапросУчетПол.Текст = "ВЫБРАТЬ
				|	УчетнаяПолитикаНалоговыйУчетСрезПоследних.Izh_ПлательщикНДС КАК ПлательщикНДС
				|ИЗ
				|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&НаДату, Организация = &Организация) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних";				
				ЗапросУчетПол.УстановитьПараметр("НаДату"		, ДокументОбъект.Дата);
				ЗапросУчетПол.УстановитьПараметр("Организация"	, ДокументОбъект.Фирма);
				ВыборкаУчетПол = ЗапросУчетПол.Выполнить().Выбрать();
				Если ВыборкаУчетПол.Следующий() Тогда
					Если ВыборкаУчетПол.ПлательщикНДС Тогда
						СтавкаНДС		= НоваяСтрока.Номенклатура.СтавкаНДС;
						СтавкаНДСЧислом	= ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(НоваяСтрока.Номенклатура.СтавкаНДС);
					КонецЕсли;
				КонецЕсли;
				
				НоваяСтрока.Количество	= ОсталосьСписать;
				НоваяСтрока.Сумма 		= ОсталосьСписатьСумма;
				НоваяСтрока.Склад 		= ВыборкаНоменклатура.Склад;
				НоваяСтрока.СтавкаНДС 	= СтавкаНДС;
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДСЧислом);
				НоваяСтрока.ТипРеализацииТовара = ТипДоговора;
				
				Сообщить("По номенклатуре " + ВыборкаНоменклатура.Номенклатура + " нет остатков");
			КонецЕсли;						
		КонецЦикла;
		                                              
		ДокументОбъект.Состав.Свернуть("Номенклатура, ЕдиницаИзмерения, Коэффициент, Склад, СтавкаНДС, ТипРеализацииТовара"
													, "Количество, Сумма, СуммаНДС");
#endregion
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратнаяНакладнаяОтПокупателя") Тогда
#region ВозвратнаяНакладнаяОтПокупателя

		Запрос = Новый Запрос();	
		Запрос.Текст = "ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	ТЗ.ЕдиницаИзмерения,
		|	ТЗ.Коэффициент,
		|	ТЗ.Количество,
		|	ТЗ.СтавкаНДС,
		|	ТЗ.СуммаНДС,
		|	ТЗ.Цена,
		|	ТЗ.Сумма,
		|	ТЗ.ДокОснование,
		|	ТЗ.СебестоимостьЦена,
		|	ТЗ.СебестоимостьСумма,
		|	ТЗ.СебестоимостьНДС,
		|	ТЗ.СебестоимостьЦенаУпр,
		|	ТЗ.СебестоимостьСуммаУпр,
		|	ТЗ.СебестоимостьНДСУпр,
		|	ТЗ.ТипРеализацииТовара
		|ПОМЕСТИТЬ ВТСостав
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСостав.Номенклатура,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Коэффициент,		
		|	ВТСостав.СтавкаНДС,		
		|	ВТСостав.Цена,		
		|	ВТСостав.ДокОснование,
		|	ВТСостав.СебестоимостьЦена,
		|	ВТСостав.СебестоимостьЦенаУпр,
		|	СУММА(ВТСостав.Количество) КАК Количество,
		|	СУММА(ВТСостав.Сумма) КАК Сумма,
		|	СУММА(ВТСостав.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВТСостав.СебестоимостьСумма) КАК СебестоимостьСумма,
		|	СУММА(ВТСостав.СебестоимостьНДС) КАК СебестоимостьНДС,		
		|	СУММА(ВТСостав.СебестоимостьСуммаУпр) КАК СебестоимостьСуммаУпр,
		|	СУММА(ВТСостав.СебестоимостьНДСУпр) КАК СебестоимостьНДСУпр,
		|	ВТСостав.ТипРеализацииТовара
		|ИЗ
		|	ВТСостав КАК ВТСостав
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТСостав.Номенклатура,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Коэффициент,
		|	ВТСостав.СтавкаНДС,
		|	ВТСостав.Цена,
		|	ВТСостав.ДокОснование,
		|	ВТСостав.СебестоимостьЦена,
		|	ВТСостав.ТипРеализацииТовара,
		|	ВТСостав.СебестоимостьЦенаУпр";
		Запрос.УстановитьПараметр("ТЗ", ДокументОбъект.Состав.Выгрузить());
												
		//Удаление строк из ТЧ состава
		ДокументОбъект.Состав.Очистить();	
		//Получение распределяемой номенклатуры
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();				
		Пока ВыборкаНоменклатура.Следующий() Цикл			
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НаДату"				, Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
			СтруктураПараметров.Вставить("Номенклатура"			, ВыборкаНоменклатура.Номенклатура);
			СтруктураПараметров.Вставить("СтруктурнаяЕдиница"	, ДокументОбъект.Склад.Владелец);
			СтруктураПараметров.Вставить("Фирма"				, ДокументОбъект.Фирма);
			СтруктураПараметров.Вставить("Склад"				, ДокументОбъект.Склад);
			
			ЗапросОстатков	= Izh_ОбщегоНазначенияСервер.ПолучитьЗапросПоОстаткамНоменклатуры(СтруктураПараметров);		
			ОсталосьСписать	= ВыборкаНоменклатура.Количество;		
			
			//Списание из остатков собственных и комиссионных товаров
			ВыборкаОстатков = ЗапросОстатков.Выполнить().Выбрать();
			Пока ВыборкаОстатков.Следующий() И ОсталосьСписать <> 0 Цикл				
				НоваяСтрока = ДокументОбъект.Состав.Добавить();
				КолСписания = Мин(ОсталосьСписать, ВыборкаОстатков.Количество);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
				//ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОстатков);
				ОсталосьСписать = ОсталосьСписать - КолСписания;
							
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
				
				СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС);
				//СтавкаНДС = ВыборкаОстатков.СтавкаНДСЧислом;
								
				НоваяСтрока.Количество	= КолСписания;
				НоваяСтрока.Цена		= ?(ЗначениеЗаполнено(ВыборкаНоменклатура.Цена), ВыборкаНоменклатура.Цена, ВыборкаОстатков.Цена);
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС); //Взято из заполнения документа "Расходная накладная"				
			КонецЦикла;
			
			Если ОсталосьСписать > 0 Тогда
				Сообщить("По фирме: " + СокрЛП(ДокументОбъект.Фирма) + Символы.ПС
						+ "Структурное единице: " + СокрЛП(ДокументОбъект.СтруктурнаяЕдиница) + Символы.ПС
						+ "Не хватает " + СокрЛП(ВыборкаНоменклатура.Номенклатура) + " в кол-ве: " + Формат(ОсталосьСписать, "ЧДЦ=3; ЧГ="));
				
				НоваяСтрока = ДокументОбъект.Состав.Добавить();				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);								
				//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)				
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);			
				
				СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ВыборкаНоменклатура.СтавкаНДС);								
				НоваяСтрока.Количество	= ОсталосьСписать;
				НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС);
			КонецЕсли;			
			
		КонецЦикла;
#endregion	
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации") Тогда
#region КорректировкаРеализации

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	КорректировкаРеализацииСостав.Номенклатура,
		|	КорректировкаРеализацииСостав.ЕдиницаИзмерения,
		|	КорректировкаРеализацииСостав.Количество,
		|	КорректировкаРеализацииСостав.КоличествоДоИзменения,
		|	КорректировкаРеализацииСостав.КоличествоДоКорректировки,
		|	КорректировкаРеализацииСостав.Коэффициент,
		|	КорректировкаРеализацииСостав.Цена,
		|	КорректировкаРеализацииСостав.ЦенаДоКорректировки,
		|	КорректировкаРеализацииСостав.ЦенаДоИзменения,
		|	КорректировкаРеализацииСостав.СуммаНДС,
		|	КорректировкаРеализацииСостав.СуммаНДСДоКорректировки,
		|	КорректировкаРеализацииСостав.СуммаНДСДоИзменения,
		|	КорректировкаРеализацииСостав.Сумма,
		|	КорректировкаРеализацииСостав.СуммаДоКорректировки,
		|	КорректировкаРеализацииСостав.СуммаДоИзменения,
		|	КорректировкаРеализацииСостав.СтавкаНДС,
		|	КорректировкаРеализацииСостав.СтавкаНДСДоИзменения,
		|	КорректировкаРеализацииСостав.Вес,
		|	КорректировкаРеализацииСостав.ЕдиницаВеса,
		|	КорректировкаРеализацииСостав.ЕстьВДокументеРеализации,
		|	КорректировкаРеализацииСостав.ТипРеализацииТовара,
		|	КорректировкаРеализацииСостав.ТипРеализацииТовараДоИзменения
		|ПОМЕСТИТЬ ВТСостав
		|ИЗ
		|	&ТЗ КАК КорректировкаРеализацииСостав
		|;
		//++БИТ БВО 2015-09-29 Обращение 0000138017
		|///////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
		|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	РасходнаяНакладнаяСостав.Количество КАК Количество,
		|	РасходнаяНакладнаяСостав.Цена КАК Цена,
		|	РасходнаяНакладнаяСостав.Сумма КАК Сумма,
		|	РасходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДС,
		|	РасходнаяНакладнаяСостав.СуммаНДС КАК СуммаНДС,
		|	ЕСТЬNULL(РасходнаяНакладнаяСостав.ТипРеализацииТовара, ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)) КАК ТипРеализацииТовара
		|ПОМЕСТИТЬ ВТСоставОснования
		|ИЗ		
		|	Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
		|ГДЕ
		|	РасходнаяНакладнаяСостав.Ссылка = &ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КорректировкаРеализацииСостав.Номенклатура КАК Номенклатура,
		|	КорректировкаРеализацииСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	КорректировкаРеализацииСостав.Количество,
		|	КорректировкаРеализацииСостав.Цена,
		|	КорректировкаРеализацииСостав.Сумма,
		|	КорректировкаРеализацииСостав.СтавкаНДС,
		|	КорректировкаРеализацииСостав.СуммаНДС,
		|	ЕСТЬNULL(КорректировкаРеализацииСостав.ТипРеализацииТовара, ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа))		
		|ИЗ		
		|	Документ.КорректировкаРеализации.Состав КАК КорректировкаРеализацииСостав
		|ГДЕ
		|	КорректировкаРеализацииСостав.Ссылка = &ДокументОснование
		|;
		//--БИТ БВО Обращение 0000138017
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСостав.Номенклатура,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Количество,
		|	ВТСостав.КоличествоДоИзменения,
		|	ВТСостав.КоличествоДоКорректировки,
		|	ВТСостав.Коэффициент,
		|	ВТСостав.Цена,
		|	ВТСостав.ЦенаДоКорректировки,
		|	ВТСостав.ЦенаДоИзменения,
		|	ВТСостав.СуммаНДС,
		|	ВТСостав.СуммаНДСДоКорректировки,
		|	ВТСостав.СуммаНДСДоИзменения,
		|	ВТСостав.Сумма,
		|	ВТСостав.СуммаДоКорректировки,
		|	ВТСостав.СуммаДоИзменения,
		|	ВТСостав.СтавкаНДС,
		|	ВТСостав.СтавкаНДСДоИзменения,
		|	ВТСостав.Вес,
		|	ВТСостав.ЕдиницаВеса,
		|	ВЫБОР КОГДА РасходнаяНакладнаяСостав.Номенклатура ЕСТЬ NULL 
		| 		ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА		
		|	КОНЕЦ КАК ЕстьВДокументеРеализации,
		|	ВТСостав.ТипРеализацииТовара,
		|	ВТСостав.ТипРеализацииТовараДоИзменения,
		|	ЕСТЬNULL(РасходнаяНакладнаяСостав.Количество, 0) КАК КоличествоИзОснования,
		|	ЕСТЬNULL(РасходнаяНакладнаяСостав.Цена, 0) КАК ЦенаИзОснования,
		|	ЕСТЬNULL(РасходнаяНакладнаяСостав.Сумма, 0) КАК СуммаИзОснования,
		|	РасходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДСИзОснования,
		|	ЕСТЬNULL(РасходнаяНакладнаяСостав.СуммаНДС, 0) КАК СуммаНДСИзОснования,
		|	ЕСТЬNULL(РасходнаяНакладнаяСостав.ТипРеализацииТовара, ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)) КАК ТипРеализацииТовараИзОснования
		|ИЗ		
		|	ВТСостав КАК ВТСостав
		//++БИТ БВО Обращение 0000138017
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоставОснования КАК РасходнаяНакладнаяСостав
		//--БИТ БВО Обращение 0000138017
		|		ПО ВТСостав.Номенклатура = РасходнаяНакладнаяСостав.Номенклатура
		|			И ВТСостав.КоличествоДоИзменения = РасходнаяНакладнаяСостав.Количество
		|			И ВТСостав.ЕдиницаИзмерения = РасходнаяНакладнаяСостав.ЕдиницаИзмерения
		|			И ВТСостав.СтавкаНДСДоИзменения = РасходнаяНакладнаяСостав.СтавкаНДС";		
		Запрос.УстановитьПараметр("ТЗ", ДокументОбъект.Состав.Выгрузить());
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументРеализации);
		
		//Удаление строк из ТЧ состава
		ДокументОбъект.Состав.Очистить();	
		//Получение распределяемой номенклатуры
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();				
		Пока ВыборкаНоменклатура.Следующий() Цикл
			//Не меняем ставку НДС и тип договора у позиций, присутствующих в документе основании, меняем только у новых позиций.
			Если ВыборкаНоменклатура.ЕстьВДокументеРеализации Тогда
				НоваяСтрока = ДокументОбъект.Состав.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
				Если НЕ ЗначениеЗаполнено(НоваяСтрока.ТипРеализацииТовараДоИзменения) 
					ИЛИ (НоваяСтрока.ТипРеализацииТовараДоИзменения <> ВыборкаНоменклатура.ТипРеализацииТовараИзОснования) Тогда
					НоваяСтрока.ТипРеализацииТовараДоИзменения = ВыборкаНоменклатура.ТипРеализацииТовараИзОснования;
				КонецЕсли;								
			Иначе //Если позиция добавляется в расходную накладную
				СтруктураПараметров = Новый Структура;
				СтруктураПараметров.Вставить("НаДату"				, Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
				СтруктураПараметров.Вставить("Номенклатура"			, ВыборкаНоменклатура.Номенклатура);
				СтруктураПараметров.Вставить("СтруктурнаяЕдиница"	, ДокументОбъект.СтруктурнаяЕдиница);
				СтруктураПараметров.Вставить("Фирма"				, ДокументОбъект.Фирма);			
				
				ЗапросОстатков	= Izh_ОбщегоНазначенияСервер.ПолучитьЗапросПоОстаткамНоменклатуры(СтруктураПараметров);		
				ОсталосьСписать	= ВыборкаНоменклатура.Количество;		
				
				//Списание из остатков собственных и комиссионных товаров
				ВыборкаОстатков = ЗапросОстатков.Выполнить().Выбрать();
				Пока ВыборкаОстатков.Следующий() И ОсталосьСписать <> 0 Цикл					
					НоваяСтрока = ДокументОбъект.Состав.Добавить();
					КолСписания = Мин(ОсталосьСписать, ВыборкаОстатков.Количество);
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОстатков);
					ОсталосьСписать = ОсталосьСписать - КолСписания;
					
					//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)
					
					СтруктураДанных = Новый Структура;    
					СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
					СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
					СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
					ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
					
					//СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС);
					СтавкаНДС = ВыборкаОстатков.СтавкаНДСЧислом;
					
					НоваяСтрока.Количество	= КолСписания;
					НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
					НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
					НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС); //Взято из заполнения документа "Расходная накладная"					
				КонецЦикла;
				
				Если ОсталосьСписать > 0 Тогда
					Сообщить("По фирме: " + СокрЛП(ДокументОбъект.Фирма) + Символы.ПС
						+ "Структурное единице: " + СокрЛП(ДокументОбъект.СтруктурнаяЕдиница) + Символы.ПС
						+ "Не хватает " + СокрЛП(ВыборкаНоменклатура.Номенклатура) + " в кол-ве: " + Формат(ОсталосьСписать, "ЧДЦ=3; ЧГ="));
				
					НоваяСтрока = ДокументОбъект.Состав.Добавить();				
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);								
					//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)				
					СтруктураДанных = Новый Структура;    
					СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
					СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
					СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
					ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);			
					
					СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ВыборкаНоменклатура.СтавкаНДС);								
					НоваяСтрока.Количество	= ОсталосьСписать;
					НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
					НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
					НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС);
				КонецЕсли;			
			КонецЕсли;
		КонецЦикла;
#endregion	
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.Комплектация") Тогда
#region Комплектация
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	ТЗ.Количество,
		|	ТЗ.ЕдиницаИзмерения,
		|	ТЗ.Коэффициент,
		|	ТЗ.Цена,
		|	ТЗ.Сумма,
		|	ТЗ.ЦенаНДС,
		|	ТЗ.СуммаНДС,
		|	ТЗ.ЦенаУпр,
		|	ТЗ.СуммаУпр,
		|	ТЗ.ЦенаНДСУпр,
		|	ТЗ.СуммаНДСУпр,
		|	ТЗ.ТипРеализацииТовара
		|ПОМЕСТИТЬ ВТСостав
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСостав.Номенклатура,
		|	ВТСостав.Количество,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Коэффициент,
		|	ВТСостав.Цена,
		|	ВТСостав.Сумма,
		|	ВТСостав.ЦенаНДС,
		|	ВТСостав.СуммаНДС,
		|	ВТСостав.ЦенаУпр,
		|	ВТСостав.СуммаУпр,
		|	ВТСостав.ЦенаНДСУпр,
		|	ВТСостав.СуммаНДСУпр,
		|	ВТСостав.ТипРеализацииТовара
		|ИЗ
		|	ВТСостав КАК ВТСостав";		
		Запрос.УстановитьПараметр("ТЗ", ДокументОбъект.Состав.Выгрузить());
		//Удаление строк из ТЧ состава
		ДокументОбъект.Состав.Очистить();	
		//Получение распределяемой номенклатуры
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();				
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НаДату"				, Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
			СтруктураПараметров.Вставить("Номенклатура"			, ВыборкаНоменклатура.Номенклатура);
			СтруктураПараметров.Вставить("СтруктурнаяЕдиница"	, ДокументОбъект.Склад.Владелец);
			СтруктураПараметров.Вставить("Фирма"				, ДокументОбъект.Фирма);
			СтруктураПараметров.Вставить("Склад"				, ДокументОбъект.Склад);
			
			ЗапросОстатков	= Izh_ОбщегоНазначенияСервер.ПолучитьЗапросПоОстаткамНоменклатуры(СтруктураПараметров);		
			ОсталосьСписать	= ВыборкаНоменклатура.Количество;		
			
			//Списание из остатков собственных и комиссионных товаров
			ВыборкаОстатков = ЗапросОстатков.Выполнить().Выбрать();
			Пока ВыборкаОстатков.Следующий() И ОсталосьСписать <> 0 Цикл				
				НоваяСтрока = ДокументОбъект.Состав.Добавить();
				КолСписания = Мин(ОсталосьСписать, ВыборкаОстатков.Количество);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОстатков);
				ОсталосьСписать = ОсталосьСписать - КолСписания;
				
				//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)
				
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
				
				//СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС);
				СтавкаНДС = ВыборкаОстатков.СтавкаНДСЧислом;
				
				НоваяСтрока.Количество	= КолСписания;
				НоваяСтрока.Цена		= НоваяСтрока.Цена;
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС); //Взято из заполнения документа "Расходная накладная"				
			КонецЦикла;
			
			Если ОсталосьСписать > 0 Тогда
				Сообщить("По фирме: " + СокрЛП(ДокументОбъект.Фирма) + Символы.ПС
						+ "На складе: " + СокрЛП(ДокументОбъект.Склад) + Символы.ПС
						+ "Не хватает " + СокрЛП(ВыборкаНоменклатура.Номенклатура) + " в кол-ве: " + Формат(ОсталосьСписать, "ЧДЦ=3; ЧГ="));
				
				НоваяСтрока = ДокументОбъект.Состав.Добавить();				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);								
				//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)				
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);			
								
				НоваяСтрока.Количество	= ОсталосьСписать;
				НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;
				НоваяСтрока.СуммаНДС	= НоваяСтрока.Количество * ВыборкаНоменклатура.ЦенаНДС;
				НоваяСтрока.СуммаУпр 	= НоваяСтрока.Количество * НоваяСтрока.ЦенаУпр;
				НоваяСтрока.СуммаНДСУпр	= НоваяСтрока.Количество * ВыборкаНоменклатура.ЦенаНДСУпр;
			КонецЕсли;			
			//В зависимости от вида комплектации производные элементы должны иметь реквизиты аналогичные реквизитам родителя.				
		КонецЦикла;
#endregion	
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КоррекцияЗапасов") Тогда
#region КоррекцияЗапасов

		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	ТЗ.Количество,
		|	ТЗ.ЕдиницаИзмерения,
		|	ТЗ.Коэффициент,
		|	ТЗ.Цена,
		|	ТЗ.Сумма,
		|	ТЗ.СтавкаНДС,
		|	ТЗ.ЦенаУпр,
		|	ТЗ.СуммаУпр,
		|	ТЗ.СуммаНДС,
		|	ТЗ.СуммаНДСУпр
		|ПОМЕСТИТЬ ВТСостав
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСостав.Номенклатура,
		|	СУММА(ВТСостав.Количество) КАК Количество,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Коэффициент,
		|	ВТСостав.Цена,
		|	СУММА(ВТСостав.Сумма) КАК Сумма,
		|	ВТСостав.СтавкаНДС,
		|	ВТСостав.ЦенаУпр,
		|	СУММА(ВТСостав.СуммаУпр) КАК СуммаУпр,
		|	СУММА(ВТСостав.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВТСостав.СуммаНДСУпр) КАК СуммаНДСУпр
		|ИЗ
		|	ВТСостав КАК ВТСостав
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТСостав.Номенклатура,
		|	ВТСостав.ЕдиницаИзмерения,
		|	ВТСостав.Коэффициент,
		|	ВТСостав.Цена,
		|	ВТСостав.ЦенаУпр,
		|	ВТСостав.СтавкаНДС";		
		Запрос.УстановитьПараметр("ТЗ", ДокументОбъект.Состав.Выгрузить());		
		//Удаление строк из ТЧ состава
		ДокументОбъект.Состав.Очистить();	
		//Получение распределяемой номенклатуры
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();				
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НаДату"				, Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка));
			СтруктураПараметров.Вставить("Номенклатура"			, ВыборкаНоменклатура.Номенклатура);
			СтруктураПараметров.Вставить("СтруктурнаяЕдиница"	, ДокументОбъект.Склад.Владелец);
			СтруктураПараметров.Вставить("Фирма"				, ДокументОбъект.Фирма);
			СтруктураПараметров.Вставить("Склад"				, ДокументОбъект.Склад);
			
			ЗапросОстатков	= Izh_ОбщегоНазначенияСервер.ПолучитьЗапросПоОстаткамНоменклатуры(СтруктураПараметров);		
			ОсталосьСписать	= ВыборкаНоменклатура.Количество;		
			
			//Списание из остатков собственных и комиссионных товаров
			ВыборкаОстатков = ЗапросОстатков.Выполнить().Выбрать();
			Пока ВыборкаОстатков.Следующий() И ОсталосьСписать > 0 Цикл				
				НоваяСтрока = ДокументОбъект.Состав.Добавить();
				КолСписания = Мин(ОсталосьСписать, ВыборкаОстатков.Количество);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОстатков);
				ОсталосьСписать = ОсталосьСписать - КолСписания;
				
				//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)
				
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
				
				//СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС);
				СтавкаНДС = ВыборкаОстатков.СтавкаНДСЧислом;
				
				НоваяСтрока.Количество	= КолСписания;
				НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС); //Взято из заполнения документа "Расходная накладная"				
			КонецЦикла;
			//Если еще остались нераспределенные позиции
			Если ОсталосьСписать > 0 Тогда
				Сообщить("По фирме: " + СокрЛП(ДокументОбъект.Фирма) + Символы.ПС
						+ "На складе: " + СокрЛП(ДокументОбъект.Склад) + Символы.ПС
						+ "Не хватает " + СокрЛП(ВыборкаНоменклатура.Номенклатура) + " в кол-ве: " + Формат(ОсталосьСписать, "ЧДЦ=3; ЧГ="));
				
				НоваяСтрока = ДокументОбъект.Состав.Добавить();				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);								
				//Регистр сведений цены номенклатуры, или цены из документа основания. цена с НДС (НДС включен в цену)				
				СтруктураДанных = Новый Структура;    
				СтруктураДанных.Вставить("Номенклатура"		, НоваяСтрока.Номенклатура);
				СтруктураДанных.Вставить("ЕдиницаИзмерения"	, НоваяСтрока.ЕдиницаИзмерения);
				СтруктураДанных.Вставить("Коэффициент"		, НоваяСтрока.Коэффициент);
				ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);			
				
				СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ВыборкаНоменклатура.СтавкаНДС);								
				НоваяСтрока.Количество	= ОсталосьСписать;
				НоваяСтрока.Цена		= ВыборкаНоменклатура.Цена;
				НоваяСтрока.Сумма 		= НоваяСтрока.Количество * НоваяСтрока.Цена;					
				НоваяСтрока.СуммаНДС	= РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, СтавкаНДС);
			КонецЕсли;
			
		КонецЦикла;
#endregion	
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСодержимоеВТ(МенеджерВТ, ИмяВременнойТаблицы) Экспорт
	
	РезТаблица = Новый ТаблицаЗначений;
	
	Попытка
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + ИмяВременнойТаблицы;
		РезТаблица = Запрос.Выполнить().Выгрузить();
	Исключение
		Ошибка = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат РезТаблица;
	
КонецФункции

Функция НоменклатураЯвляетсяТоваромОбщепита(Номенклатура) Экспорт
	
	Результат = Ложь;
	
	ЭлемТоварОбщепита	= Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыПроизводство));
	ЭлемТараОбщепита	= Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыТараПроизводство));
	Если ЗначениеЗаполнено(ЭлемТоварОбщепита) И ЗначениеЗаполнено(ЭлемТараОбщепита) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ ВТСоставГрупп
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	(Номенклатура.Ссылка В ИЕРАРХИИ (&ТоварОбщепита)
		|			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&ТараОбщепита))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСоставГрупп.Номенклатура
		|ИЗ
		|	ВТСоставГрупп КАК ВТСоставГрупп
		|ГДЕ
		|	ВТСоставГрупп.Номенклатура = &Ссылка";
		Запрос.УстановитьПараметр("ТоварОбщепита"	, ЭлемТоварОбщепита);
		Запрос.УстановитьПараметр("ТараОбщепита"	, ЭлемТараОбщепита);
		Запрос.УстановитьПараметр("Ссылка"			, Номенклатура);
		РезультатЗапроса = Запрос.Выполнить();
		Результат = НЕ РезультатЗапроса.Пустой();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//Переопределение страндартной процедура модуля "ОбщегоНазначения"
Функция ПолучитьСлужебноеЗначение(Свойство) Экспорт
	
	Значение = РегистрыСведений.СлужебныеЗначения.Получить(Новый Структура("Свойство",Свойство)).Значение;
	
	ТипыСовпадают	= Свойство.ТипЗначения.Типы().Найти(ТипЗнч(Значение)) <> Неопределено;
	ТипПВХСтрока	= Свойство.ТипЗначения.Типы().Найти(Тип("Строка")) <> Неопределено;
	
	Если НЕ ТипыСовпадают И ТипПВХСтрока И ЗначениеЗаполнено(Значение) Тогда		
		Возврат СокрЛП(Значение.Код);
	Иначе
		Возврат Свойство.ТипЗначения.ПривестиЗначение(Значение);
	КонецЕсли;
	
КонецФункции

//Позже исправить вызовы на процедуру "ПолучитьСлужебноеЗначение" и удалить!
Функция ПолучитьЗначениеСвойстваСлужебногоЗначения(Свойство) Экспорт
	
	Значение = РегистрыСведений.СлужебныеЗначения.Получить(Новый Структура("Свойство",Свойство)).Значение;
	
	ТипыСовпадают	= Свойство.ТипЗначения.Типы().Найти(ТипЗнч(Значение)) <> Неопределено;
	ТипПВХСтрока	= Свойство.ТипЗначения.Типы().Найти(Тип("Строка")) <> Неопределено;
	
	Если НЕ ТипыСовпадают И ТипПВХСтрока И ЗначениеЗаполнено(Значение) Тогда		
		Возврат СокрЛП(Значение.Код);
	Иначе
		Возврат Свойство.ТипЗначения.ПривестиЗначение(Значение);
	КонецЕсли;
	
КонецФункции

// Функция - Определить МПЦ
//	Функция проверяет корректность приходных цен по МПЦ
// Параметры:
//  Объект	 -Тип ДокументОбъект.*, ДокументСсылка.* 	 -  Документ, который необходимо проверить.
//  ИмяТабличнойЧасти - Тип Строка - Имя табличной части, с номенклатурой и ценой
//  РеквизитКонтрагента	 - Тип Строка	 - Имя реквизита объекта с типом СправочникСсылка.Контрагенты, для которого необходимо получить МПЦ
// Возвращаемое значение:
// Возвращает истина, когда проходит проверку , иначе сообщает пользователю о несоответствии цен и возвращает ложь
Функция ПроверитьМПЦ(Объект, ИмяТабличнойЧасти,РеквизитКонтрагента,Отказ=Ложь) Экспорт
	РекКонтрагент = Объект[РеквизитКонтрагента];
	Если НЕ ЗначениеЗаполнено(РекКонтрагент) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен контрагент",Объект,"Объект."+РеквизитКонтрагента);
		Возврат Ложь;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ИсточникДанных.НомерСтроки,
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.Цена
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	&тзНоменклатура КАК ИсточникДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.НомерСтроки КАК НомерСтроки,
	|	ВТДанные.Номенклатура КАК Номенклатура,
	|	ВТДанные.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(&Контрагент КАК Справочник.Контрагенты).Производитель
	|			ТОГДА ЕСТЬNULL(Izh_МРЦ.МинимальнаяПриходнаяЦенаПроизводителя, 0)
	|		ИНАЧЕ ЕСТЬNULL(Izh_МРЦ.МинимальнаяПриходнаяЦенаПоставщика, 0)
	|	КОНЕЦ КАК МПЦ
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Izh_МРЦ.СрезПоследних(
	|				&ДатаСреза,
	|				Номенклатура В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						А.Номенклатура
	|					ИЗ
	|						ВТДанные КАК А)) КАК Izh_МРЦ
	|		ПО ВТДанные.Номенклатура = Izh_МРЦ.Номенклатура
	|ГДЕ
	|	ВТДанные.Цена < ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(&Контрагент КАК Справочник.Контрагенты).Производитель
	|				ТОГДА ЕСТЬNULL(Izh_МРЦ.МинимальнаяПриходнаяЦенаПроизводителя, 0)
	|			ИНАЧЕ ЕСТЬNULL(Izh_МРЦ.МинимальнаяПриходнаяЦенаПоставщика, 0)
	|		КОНЕЦ";
	Запрос.УстановитьПараметр("Контрагент", РекКонтрагент);  
	Запрос.УстановитьПараметр("тзНоменклатура", Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,Номенклатура,Цена"));  
	Запрос.УстановитьПараметр("ДатаСреза", Объект.Дата);  
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке №"+Выборка.НомерСтроки+" цена ниже минимальной приходной цены ("+Выборка.МПЦ+" руб.)",Объект,ИмяТабличнойЧасти+"["+(Выборка.НомерСтроки-1)+"].Цена",,Отказ);		
	КонецЦикла;
	Возврат Ложь;
КонецФункции

// Рассчитывает сумму НДС исходя из суммы и флагов налогообложения.
//
// Параметры: 
//  Сумма        - Число - сумма от которой надо рассчитывать налоги 
//  УчитыватьНДС - Булево - признак учета НДС в сумме 
//  СуммаВключаетНДС - булево - признак включения НДС в сумму
//  СтавкаНДС    - Число - процентная ставка НДС.
//
// Возвращаемое значение:
//  Число - полученная сумма НДС.
//
Функция РассчитатьСуммуНДС(Сумма, СуммаВключаетНДС = Истина, СтавкаНДС) Экспорт
	
	Возврат Окр(СтавкаНДС * Сумма / (100 + СтавкаНДС),2);
	
КонецФункции // РассчитатьСуммуНДС()

// Функция возвращает количество в базовой единицы измерения.
//
// Параметры: 
//  СтрокаТабличнойЧасти - ДанныеФормыСтруктура, содержащая строку табличной
//                 части.
//  ОбъектФормы - ДанныеФормыСтруктура, содержащая объект формы.
//
Процедура РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти) Экспорт
	//Не красиво, но нужно быстро
	Попытка
		СтрокаТабличнойЧасти.Сумма = Окр(СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена,2);
	Исключение
	КонецПопытки;
	
	Попытка
		СтрокаТабличнойЧасти.СуммаУпр = Окр(СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.ЦенаУпр,2);
	Исключение
	КонецПопытки;
	
	Попытка
		СтрокаТабличнойЧасти.СуммаНДС = РассчитатьСуммуНДС(СтрокаТабличнойЧасти.Сумма,
		Истина,
		ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
	Исключение
	КонецПопытки;
	
	Попытка
		СтрокаТабличнойЧасти.СуммаНДСУпр = РассчитатьСуммуНДС(СтрокаТабличнойЧасти.СуммаУпр,
		Истина,
		ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
	Исключение
	КонецПопытки;
	
	Попытка
		СтрокаТабличнойЧасти.СуммаБезНДС = СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.СуммаНДС;
		СтрокаТабличнойЧасти.ЦенаБезНДС = Окр(СтрокаТабличнойЧасти.СуммаБезНДС / СтрокаТабличнойЧасти.Количество,2);
	Исключение
	КонецПопытки;
	
КонецПроцедуры // РасчитатьСуммуВСтрокеТабличнойЧасти()

// Функция возвращаяет статус отказа (Булево) при получении сотрудников из базы ЗУП (Ложь - если все хорошо, Истина - если есть ошибки)
//
// Параметры: 
//	ДатаСрезаРаботников - Дата, на которую будет произведен срез работающих сотрудников.
//	НачалоПериода - Дата, содержащая начало периода заполнения табеля.
//	КонецПериода - Дата, содержащая конец периода заполнения табеля, необходимо для контроля уволенных сотрудников.
//	НомерМагазина - Строка, двухзначный код магазина, для сопоставления по конду синхронизации в базе ЗУП.
//	XMLСтрокаРезультата - XMLСтрока, содержащая таблицу значение, обернутую в ХранилищеХначения, в случае выполнения без ошибок.
//	СообщениеОшибки - Строка, содержащая сообщение ошибки, возвращаемое Веб-сервисом.
Функция ПолучитьСотрудниковПодразделенияИзЗУП(ДатаСрезаРаботников, НачалоПериода, КонецПериода, НомерМагазина, XMLСтрокаРезультата = "", СообщениеОшибки = "") Экспорт	
	
	//Определение	= Новый WSОпределения("http://test-1c/zup_test1/ws/ExchangeRSStore?wsdl", "ws");	
	//Прокси		= Новый WSПрокси(Определение, "http://www.1c.ru/SSL/Exchange", "ExchangeRSStore", "ExchangeRSStoreSoap");
	//Прокси.Пользователь = "ws";
	
	Попытка
		ВебСервис			= УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ВебСервисЗУП);
		Определение			= Новый WSОпределения(ВебСервис.URL,ВебСервис.Имя,ВебСервис.Пароль);
		URIПространстваИмен	= Определение.Сервисы.Получить(0).URIПространстваИмен;
		ИмяСервиса			= Определение.Сервисы.Получить(0).Имя;
		ИмяТочки			= Определение.Сервисы.Получить(0).ТочкиПодключения.Получить(0).Имя;
		Прокси				= Новый WSПрокси(Определение,URIПространстваИмен,ИмяСервиса,ИмяТочки);
		Прокси.Пользователь = ВебСервис.Имя;
		Прокси.Пароль		= ВебСервис.Пароль;
	Исключение
		СообщениеОшибки = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке(), "Вебсервис ЗУП");
		ВызватьИсключение(СообщениеОшибки);
	КонецПопытки;
		
	Попытка		
		Возврат Прокси.GetEmployes(ДатаСрезаРаботников, НачалоПериода, КонецПериода, НомерМагазина, XMLСтрокаРезультата, СообщениеОшибки);
	Исключение
		СообщениеОшибки = ОбменДаннымиRIBСервер.ПолучитьИнформациюОбОшибке(ИнформацияОбОшибке(), "Вебсервис ЗУП");
		ВызватьИсключение(СообщениеОшибки);
	КонецПопытки;
	
КонецФункции

// Функция заполняет таблицу подчиненных документов для выбранного
//
// Параметры: 
//	Ссылка - Документ, для которого ищутся подчиненные.
//	ТаблицаДокументов - ТаблицаЗначений, Колонки: Ссылка, ТипДокумента, ДокОснование, ПоследнийДокВЦепочке.
//	НачальныйДокумент - Документ, для которого ищутся подчиненные.
Функция ПолучитьПодчиненныеДокументы(Ссылка, ТаблицаДокументов, НачальныйДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтруктураПодчиненности.Ссылка
	|ИЗ
	|	КритерийОтбора.СтруктураПодчиненности(&Ссылка) КАК СтруктураПодчиненности
	|ГДЕ
	|	(СтруктураПодчиненности.Ссылка ССЫЛКА Документ.КорректировкаПоступления
	|			ИЛИ СтруктураПодчиненности.Ссылка ССЫЛКА Документ.КорректировкаРеализации	
	|			ИЛИ СтруктураПодчиненности.Ссылка ССЫЛКА Документ.РасходнаяНакладная
	|			ИЛИ СтруктураПодчиненности.Ссылка ССЫЛКА Документ.КоррекцияЗапасов)
	|	И СтруктураПодчиненности.Ссылка.Проведен = ИСТИНА";
	Запрос.УстановитьПараметр("Ссылка"			, Ссылка);	
	Запрос.УстановитьПараметр("ДокПриходная"	, НачальныйДокумент);
	Запрос.УстановитьПараметр("ФирмаПолучатель"	, НачальныйДокумент.Фирма);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь; //Когда нет подчиненных документов
	КонецЕсли;	
	
	Выборка = РезультатЗапроса.Выбрать();		
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаДокументов.Добавить();		
		НоваяСтрока.Ссылка			= Выборка.Ссылка;
		НоваяСтрока.ТипДокумента	= ТипЗнч(Выборка.Ссылка);
		НоваяСтрока.ДокОснование	= НачальныйДокумент;
		
		ЕстьПодчиненныеДокументы = ПолучитьПодчиненныеДокументы(Выборка.Ссылка, ТаблицаДокументов, НачальныйДокумент);
		НоваяСтрока.ПоследнийДокВЦепочке = НЕ ЕстьПодчиненныеДокументы;		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Функция считает все корректировки и прочие движения товаров относительно состава документа источника
//
// Параметры: 
//	ТаблицаПодчиненныхДокументов - ТаблицаЗначений, хранящая данные о всех подчиненных документах.
Функция ПолучитьТаблицуСИтоговымЗначениями(ТаблицаПодчиненныхДокументов) Экспорт
	
	МассивВсехДокументов = ТаблицаПодчиненныхДокументов.ВыгрузитьКолонку("Ссылка");
	//Все подчиненные документы - во временную таблицу
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ			
	|	ТЗ.Ссылка,		
	|	ТЗ.ДокОснование,
	|	ТЗ.ПоследнийДокВЦепочке
	|ПОМЕСТИТЬ ВТТаблицаДокументов
	|ИЗ
	|	&ТЗ КАК ТЗ";
	Запрос.УстановитьПараметр("ТЗ", ТаблицаПодчиненныхДокументов);
	Запрос.Выполнить();
	//Нужна последняя по дате корретировка поступления, чтобы из нее взять Количество, Цену и Ставку НДС
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТТаблицаДокументов.Ссылка.МоментВремени КАК МоментВремени,
	|	ВТТаблицаДокументов.Ссылка
	|ПОМЕСТИТЬ ВТПоследнееПоступлениеСУчетомКорректировки
	|ИЗ
	|	ВТТаблицаДокументов КАК ВТТаблицаДокументов
	|ГДЕ
	|	(ВТТаблицаДокументов.Ссылка ССЫЛКА Документ.КорректировкаПоступления
	|			ИЛИ ВТТаблицаДокументов.Ссылка ССЫЛКА Документ.ПриходнаяНакладная)
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени УБЫВ";
	Запрос.Выполнить();
	//Еще нужны все расходные накладные (без корретировок) и корректировки расх. накл. для последующего уменьшения количества прихода 
	Запрос.Текст = "ВЫБРАТЬ
	|	ВТТаблицаДокументов.Ссылка
	|ПОМЕСТИТЬ ВТРасходныеНакладные
	|ИЗ
	|	ВТТаблицаДокументов КАК ВТТаблицаДокументов
	|ГДЕ
	|	(ВТТаблицаДокументов.Ссылка ССЫЛКА Документ.КорректировкаРеализации
	|			ИЛИ ВТТаблицаДокументов.Ссылка ССЫЛКА Документ.РасходнаяНакладная)
	|	И ВТТаблицаДокументов.ПоследнийДокВЦепочке = ИСТИНА
	|";
	Запрос.Выполнить();
	//Необходимо поместить все временные таблицы для получения остатка по количеству, итоговых цен и ставок НДС.
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриходСостав.Номенклатура КАК Номенклатура,
	|	ПриходСостав.Количество КАК Количество,
	|	ПриходСостав.Цена КАК Цена,
	|	ПриходСостав.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ВТДвиженияНоменклатуры
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК ПриходСостав
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоследнееПоступлениеСУчетомКорректировки КАК ВТДокиПрихода
	|		ПО ПриходСостав.Ссылка = ВТДокиПрихода.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходСостав.Номенклатура,
	|	ПриходСостав.Количество,
	|	ПриходСостав.Цена,
	|	ПриходСостав.СтавкаНДС
	|ИЗ
	|	Документ.КорректировкаПоступления.Состав КАК ПриходСостав
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоследнееПоступлениеСУчетомКорректировки КАК ВТДокиПрихода
	|		ПО ПриходСостав.Ссылка = ВТДокиПрихода.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходСостав.Номенклатура,
	|	-РасходСостав.Количество,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.РасходнаяНакладная.Состав КАК РасходСостав
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРасходныеНакладные КАК ВТРасходныеНакладные
	|		ПО РасходСостав.Ссылка = ВТРасходныеНакладные.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходСостав.Номенклатура,
	|	-РасходСостав.Количество,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.КорректировкаРеализации.Состав КАК РасходСостав
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРасходныеНакладные КАК ВТРасходныеНакладные
	|		ПО РасходСостав.Ссылка = ВТРасходныеНакладные.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходСостав.Номенклатура,
	|	-РасходСостав.Количество,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.ПередачаТоваровМеждуФирмами.Состав КАК РасходСостав		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРасходныеНакладные КАК ВТРасходныеНакладные
	|		ПО РасходСостав.Ссылка = ВТРасходныеНакладные.Ссылка	  							
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходСостав.Номенклатура,
	|	-РасходСостав.Количество,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.КоррекцияЗапасов.Состав КАК РасходСостав		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРасходныеНакладные КАК ВТРасходныеНакладные
	|		ПО РасходСостав.Ссылка = ВТРасходныеНакладные.Ссылка	  				
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвиженияНоменклатуры.Номенклатура,
	|	СУММА(ВТДвиженияНоменклатуры.Количество) КАК Количество,
	|	МАКСИМУМ(ВТДвиженияНоменклатуры.Цена) КАК Цена,
	|	МАКСИМУМ(ВТДвиженияНоменклатуры.СтавкаНДС) КАК СтавкаНДС		
	|ИЗ
	|	ВТДвиженияНоменклатуры КАК ВТДвиженияНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДвиженияНоменклатуры.Номенклатура";		
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	
	Возврат ТЗ;
	
КонецФункции

//{Ситек ДойниковПВ 2015-10-26

Функция ПолучитьПервоначальныйДокументКорректировкиРеализации(текДокумент) Экспорт
	
	Если ТипЗнч(текДокумент.ДокументРеализации) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		
		Возврат текДокумент.ДокументРеализации;
		
	ИначеЕсли ЗначениеЗаполнено(текДокумент.ДокументРеализации) Тогда
		
		Возврат ПолучитьПервоначальныйДокументКорректировкиРеализации(текДокумент.ДокументРеализации);
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли; 
	

КонецФункции // ()


//}Ситек ДойниковПВ 2015-10-26