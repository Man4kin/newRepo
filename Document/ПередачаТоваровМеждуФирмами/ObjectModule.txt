


Функция ПровестиПередачуТоваровМеждуФирмами(Объект,Режим)
	
	прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;

	Если Объект.Возврат Тогда
		КодОперацииПродажа = Перечисления.КодыОпераций.ПерепродажаВозвратПоставщику;
		Если Объект.ТипДоговора = прчКомиссия Тогда
			КодОперацииПокупка = Перечисления.КодыОпераций.ПерепродажаВозвратРеализация;
		Иначе	
			КодОперацииПокупка = Перечисления.КодыОпераций.ПерепродажаВозвратОтПокупателя;
		КонецЕсли;
		тзРеализация = Неопределено;
	Иначе
		Если Объект.ТипДоговора = прчКомиссия Тогда
			КодОперацииПродажа = Перечисления.КодыОпераций.ПерепродажаПередачаНаРеализацию;
		Иначе	
			КодОперацииПродажа = Перечисления.КодыОпераций.ПерепродажаПродажаОпт;
		КонецЕсли;	
		тзРеализация = Объект.Движения.Реализация.Выгрузить();
		КодОперацииПокупка = Перечисления.КодыОпераций.ПерепродажаПоступлениеТоваров;
	КонецЕсли;	
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	//serg  25.12.2013
	Для Каждого Стр Из ЭтотОбъект.Состав Цикл
		Если  Не ЗначениеЗаполнено(Стр.Цена)Тогда
			Сообщить ("Не заполнена цена в строке:" + " " + Стр.НомерСтроки);
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;	
	//serg	25.12.2013 
	
	тзОстаткиНоменклатуры = Объект.Движения.ОстаткиНоменклатуры.Выгрузить();
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	
	
	тзТоварыПереданныеНаКомиссию = Объект.Движения.ТоварыПереданныеНаКомиссию.Выгрузить();
	
	// Установка исключительной блокировки контролируемых остатков 
	Запрос=Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	//++БИТ БВО №0000129900
	//Запрос.Текст=
	//"ВЫБРАТЬ
	//|	ПередачаТоваровМеждуФирмамиСостав.Номенклатура,
	//|   МАКСИМУМ(ПередачаТоваровМеждуФирмамиСостав.СтавкаНДС) КАК СтавкаНДС,
	//|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Склад КАК МестоХранения,
	//|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Фирма КАК Фирма,
	//|	СУММА(ВЫРАЗИТЬ(ПередачаТоваровМеждуФирмамиСостав.Количество * ПередачаТоваровМеждуФирмамиСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	//|	СУММА(ПередачаТоваровМеждуФирмамиСостав.Сумма) КАК Сумма,
	//|	СУММА(ПередачаТоваровМеждуФирмамиСостав.СуммаНДС) КАК СуммаНДС
	//|ПОМЕСТИТЬ врСостав
	//|ИЗ
	//|	Документ.ПередачаТоваровМеждуФирмами.Состав КАК ПередачаТоваровМеждуФирмамиСостав
	//|ГДЕ
	//|	ПередачаТоваровМеждуФирмамиСостав.Ссылка = &Ссылка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ПередачаТоваровМеждуФирмамиСостав.Номенклатура,
	//|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Склад,
	//|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Фирма
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	врСостав.Номенклатура,
	//|	врСостав.МестоХранения,
	//|	врСостав.Фирма
	//|ИЗ
	//|	врСостав КАК врСостав";
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ПередачаТоваровМеждуФирмамиСостав.Номенклатура,
	|   ПередачаТоваровМеждуФирмамиСостав.СтавкаНДС КАК СтавкаНДС,
	|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Склад КАК МестоХранения,
	|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Фирма КАК Фирма,
	|	СУММА(ВЫРАЗИТЬ(ПередачаТоваровМеждуФирмамиСостав.Количество * ПередачаТоваровМеждуФирмамиСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	|	СУММА(ПередачаТоваровМеждуФирмамиСостав.Сумма) КАК Сумма,
	|	СУММА(ПередачаТоваровМеждуФирмамиСостав.СуммаНДС) КАК СуммаНДС,
	|	ПередачаТоваровМеждуФирмамиСостав.ТипРеализацииТовара КАК Статус
	|ПОМЕСТИТЬ врСостав
	|ИЗ
	|	Документ.ПередачаТоваровМеждуФирмами.Состав КАК ПередачаТоваровМеждуФирмамиСостав
	|ГДЕ
	|	ПередачаТоваровМеждуФирмамиСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПередачаТоваровМеждуФирмамиСостав.Номенклатура,
	|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Склад,
	|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Фирма,
	|	ПередачаТоваровМеждуФирмамиСостав.ТипРеализацииТовара,
	|   ПередачаТоваровМеждуФирмамиСостав.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врСостав.Номенклатура,
	|	врСостав.МестоХранения,
	|	врСостав.Фирма
	|ИЗ
	|	врСостав КАК врСостав";
	//--БИТ БВО №0000129900
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	тз=Запрос.Выполнить().Выгрузить();
	тз.Свернуть("Номенклатура,МестоХранения,Фирма");
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тз;
	Для каждого к из тз.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	Параметры = Новый Структура;
	Параметры.Вставить("Запрос",Запрос);
	Параметры.Вставить("Объект",Объект);
	Параметры.Вставить("КодОперации",КодОперацииПродажа);
	Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
	Параметры.Вставить("тзРеализация",тзРеализация);
	Параметры.Вставить("РежимПроведения",Режим);
	Параметры.Вставить("ТипДоговора",Объект.ТипДоговора);
	
	Если Объект.Возврат Тогда
		Параметры.Вставить("Комитент",Объект.ФирмаПолучатель);
	Иначе
		Параметры.Вставить("Комитент",Объект.Фирма);
	КонецЕСли;	
	
	Параметры.Вставить("Фирма",Объект.Фирма);
	
	фл = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);
	 
	
	тзОстаткиНоменклатуры.Колонки.Добавить("Контрагент");
	тзОстаткиНоменклатуры.ЗаполнитьЗначения(Объект.ФирмаПолучатель,"Контрагент");
	
	
	Если Объект.Возврат Тогда
		
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура,
		|	МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена) КАК Цена,
		|	МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДС) КАК СуммаНДС
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
		|			&Момент, СтруктурнаяЕдиница = &СтруктурнаяЕдиница И
		|			Номенклатура В
		|					(ВЫБРАТЬ
		|						с.Номенклатура
		|					ИЗ
		|						врСостав КАК с)
		|				И Фирма = &Фирма) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
		|ГДЕ
		|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура.БазоваяЕдиницаИзмерения = ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура";
		Запрос.УстановитьПараметр("Фирма",Объект.ФирмаПолучатель);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница);
		тзЦеныЗакупочные = Запрос.Выполнить().Выгрузить();
		
		Если Объект.ТипДоговора = прчКомиссия Тогда
			//проведение по регистру ТоварыПереданныеНаКомиссию
			Параметры = Новый Структура();
			Параметры.Вставить("Запрос",Запрос);
			Параметры.Вставить("тзТоварыПереданныеНаКомиссию",тзТоварыПереданныеНаКомиссию);
			Параметры.Вставить("Контрагент",Объект.Фирма);
            Параметры.Вставить("Фирма",Объект.ФирмаПолучатель);
			Параметры.Вставить("Объект",Объект);
			ПроведениеДокументов.ПровестиСписаниеПоТоварыПереданныеНаКомиссию(Параметры);
		КонецЕсли;	
		
	КонецЕсли;
	
	
	чКол = тзОстаткиНоменклатуры.Количество();
	Для Сч=1 по чКол Цикл
		
		Стр = тзОстаткиНоменклатуры[Сч-1];
		Новая_стр = тзОстаткиНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(Новая_стр,Стр);
		Новая_стр.ВидДвижения = ВидДвиженияНакопления.Приход;
		Новая_стр.Фирма = Объект.ФирмаПолучатель;
		Если Объект.Возврат Тогда
			
			мсв = тзЦеныЗакупочные.НайтиСтроки(Новый Структура("Номенклатура",Новая_стр.Номенклатура) );
			Если мсв.Количество() > 0 Тогда
				Новая_стр.Сумма = Окр(Новая_стр.Количество*мсв[0].Цена,2);
				Новая_стр.СуммаНДС = Окр(Новая_стр.Количество*мсв[0].СуммаНДС,2);
			Иначе
				Новая_стр.Сумма = Новая_стр.СуммаПродажи;
				Новая_стр.СуммаНДС = Новая_стр.СуммаНДСПродажи;
			КонецЕсли;
			Новая_стр.Статус = прчКупляПродажа;
			Новая_стр.Комитент = Неопределено;
			
		Иначе
			Новая_стр.Сумма = Новая_стр.СуммаПродажи;
			Новая_стр.СуммаНДС = Новая_стр.СуммаНДСПродажи;
			Новая_стр.Статус = Объект.ТипДоговора;
		КонецЕсли;	
		Новая_стр.Контрагент = Объект.Фирма;	
		
		
		Новая_стр.КодОперации = КодОперацииПокупка;
		
		Если Новая_стр.Статус = прчКомиссия Тогда
			
			Новая_стр.Комитент = Объект.Фирма;
			Если НЕ Объект.Возврат Тогда
				
				Движение = тзТоварыПереданныеНаКомиссию.Добавить();
				Движение.Активность      = Истина;
				Движение.ВидДвижения     = ВидДвиженияНакопления.Приход;
				Движение.Регистратор     = Объект.Ссылка;
				Движение.Период          = Объект.Дата;
				Движение.Фирма           = Объект.фирма;
				Движение.Комиссионер     = Объект.ФирмаПолучатель;
				Движение.Номенклатура    = Новая_стр.Номенклатура;
				Движение.Количество      = Новая_стр.Количество;
				Движение.Сумма           = Стр.Сумма;
				Движение.СуммаУпр        = Стр.СуммаУпр;
				Движение.СуммаНДС        = Стр.СуммаНДС;
				Движение.СуммаНДСУпр     = Стр.СуммаНДСУпр;
				Движение.СуммаПродажи    = Стр.СуммаПродажи;
				Движение.СуммаНДСПродажи = Стр.СуммаНДСПродажи;

			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ Объект.Возврат Тогда
			
		//проведение по регистру ЦеныНоменклатурыЗакупочные
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПередачаТоваровМеждуФирмамиСостав.Ссылка КАК Регистратор,
		|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Дата КАК Период,
		|	ПередачаТоваровМеждуФирмамиСостав.Номенклатура,
		|	ПередачаТоваровМеждуФирмамиСостав.ЕдиницаИзмерения,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ПередачаТоваровМеждуФирмамиСостав.Цена * ПередачаТоваровМеждуФирмамиСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК Цена,
		|	СРЕДНЕЕ(ВЫБОР
		|			КОГДА ПередачаТоваровМеждуФирмамиСостав.Количество = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ(ПередачаТоваровМеждуФирмамиСостав.СуммаНДС * ПередачаТоваровМеждуФирмамиСостав.Ссылка.Курс / ПередачаТоваровМеждуФирмамиСостав.Количество КАК ЧИСЛО(15, 3))
		|		КОНЕЦ) КАК СуммаНДС,
		|	СУММА(ЦеныНоменклатурыЗакупочныеСрезПоследних.ЦенаУпр) КАК ЦенаУпр,
		|	СУММА(ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДСУпр) КАК СуммаНДСУпр,
		|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.ФирмаПолучатель КАК Фирма,
		|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ПередачаТоваровМеждуФирмами.Состав КАК ПередачаТоваровМеждуФирмамиСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
		|				&Дата,
		|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							ПередачаТоваровМеждуФирмамиСостав.Номенклатура
		|						ИЗ
		|							Документ.ПередачаТоваровМеждуФирмами.Состав КАК ПередачаТоваровМеждуФирмамиСостав
		|						ГДЕ
		|							ПередачаТоваровМеждуФирмамиСостав.Ссылка = &Ссылка)
		|					И Фирма = &Фирма) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
		|		ПО ПередачаТоваровМеждуФирмамиСостав.Номенклатура = ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура
		|			И ПередачаТоваровМеждуФирмамиСостав.ЕдиницаИзмерения = ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения
		|ГДЕ
		|	ПередачаТоваровМеждуФирмамиСостав.Ссылка = &Ссылка
		|	И ПередачаТоваровМеждуФирмамиСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|	И ПередачаТоваровМеждуФирмамиСостав.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПередачаТоваровМеждуФирмамиСостав.Номенклатура,
		|	ПередачаТоваровМеждуФирмамиСостав.ЕдиницаИзмерения,
		|	ПередачаТоваровМеждуФирмамиСостав.Ссылка,
		|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.Дата,
		|	ПередачаТоваровМеждуФирмамиСостав.Ссылка.ФирмаПолучатель");
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Запрос.УстановитьПараметр("Дата",Объект.Дата);
		Запрос.УстановитьПараметр("Фирма",Объект.Фирма);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница);

		тзЦены = Запрос.Выполнить().Выгрузить();
		Объект.Движения.ЦеныНоменклатурыЗакупочные.Загрузить(тзЦены);
		
	КонецЕсли;
	
	
	
	тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,Комитент,Контрагент,КодОперации,СтавкаНДС","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр,СуммаПродажи,СуммаНДСПродажи");
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
	
	Если тзРеализация <> Неопределено Тогда
		Объект.Движения.Реализация.Загрузить(тзРеализация);
	КонецЕсли;
	
	Если Объект.ТипДоговора = прчКомиссия Тогда
		Объект.Движения.ТоварыПереданныеНаКомиссию.Загрузить(тзТоварыПереданныеНаКомиссию);
	КонецЕсли;
	
	//popn+
	УчетАлкоголя = УчетАлкогольнойПродукции.ВестиУчетАлкоголя();
	Если УчетАлкоголя Тогда
		УчетАлкогольнойПродукции.СформироватьРасходПоУчетуАлкоголя(Объект,КодОперацииПродажа);
	Иначе
		УчетАлкогольнойПродукции.ОчиститьДвиженияПоУчетуАлкоголя(Объект);
	КонецЕсли;
	
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	Объект.Движения.Реализация.Записывать=Истина;
	Объект.Движения.ТоварыПереданныеНаКомиссию.Записывать=Истина;
    Объект.Движения.ЦеныНоменклатурыЗакупочные.Записывать=Истина;
	
	Возврат фл;
КонецФункции
 

Процедура ОбработкаПроведения(Отказ, Режим)
	
	  Отказ = ПровестиПередачуТоваровМеждуФирмами(ЭтотОбъект,Режим);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		
		ЭтотОбъект.ДокОснование = ДанныеЗаполнения;
		ЭтотОбъект.Фирма = ДанныеЗаполнения.Фирма;
		ЭтотОбъект.Склад = ДанныеЗаполнения.Склад;
		ЭтотОбъект.ТипДоговора = ДанныеЗаполнения.ТипДоговора;
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	СУММА(ПриходнаяНакладнаяСостав.Количество) КАК Количество,
		|	ПриходнаяНакладнаяСостав.Коэффициент,
		|	ПриходнаяНакладнаяСостав.Цена,
		|	СУММА(ПриходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ПриходнаяНакладнаяСостав.Сумма) КАК Сумма,
		|	ПриходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	ПриходнаяНакладнаяСостав.Коэффициент,
		|	ПриходнаяНакладнаяСостав.Цена,
		|	ПриходнаяНакладнаяСостав.СтавкаНДС");
		Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
		ЭтотОбъект.Состав.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;	

	//++БИТ БВО №0000129900
	ПерераспределитьСоставПоОстаткам();
	//--БИТ БВО №0000129900
	
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = СтруктурныеЕдиницы.ПолучитьВалютуТекущейСЕ();
		
		СтруктураКурса = РаботаСКурсамиВалют.ЗаполнитьДанныеКурсаДляВалюты(Валюта);
		Курс = СтруктураКурса.Курс;
		Кратность = СтруктураКурса.Кратность;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипДоговора) Тогда
		ТипДоговора = Перечисления.ТипыДоговоров.КупляПродажа;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СтруктурнаяЕдиница = Склад.Владелец;
КонецПроцедуры

//++БИТ БВО №0000129900 2015-06-04
Процедура ПерераспределитьСоставПоОстаткам() Экспорт
		
	Izh_ОбщегоНазначенияСервер.ПерераспределитьСоставПоОстаткам(ЭтотОбъект);
	
КонецПроцедуры
//--БИТ БВО №0000129900 2015-06-04
