Функция ПечатьТОРГ16(МассивОбъектов,ОбъектыПечати) экспорт
	для каждого док из массивобъектов цикл
	ЗапросЛист1 = Новый Запрос;
	ЗапросЛист1.УстановитьПараметр("Ссылка", Док.Ссылка);
	ЗапросЛист1.Текст =
		  "ВЫБРАТЬ
		  |	ВЫБОР
		  |		КОГДА КоррекцияЗапасов.ДокОснование ССЫЛКА Документ.ПриходнаяНакладная
		  |				ИЛИ КоррекцияЗапасов.ДокОснование ССЫЛКА Документ.ВозвратнаяНакладнаяОтПокупателя
		  |			ТОГДА КоррекцияЗапасов.ДокОснование.Дата
		  |		ИНАЧЕ NULL
		  |	КОНЕЦ КАК ДатаДокумента,
		  |	ВЫБОР
		  |		КОГДА КоррекцияЗапасов.ДокОснование ССЫЛКА Документ.ПриходнаяНакладная
		  |				ИЛИ КоррекцияЗапасов.ДокОснование ССЫЛКА Документ.ВозвратнаяНакладнаяОтПокупателя
		  |			ТОГДА КоррекцияЗапасов.ДокОснование.Номер
		  |		ИНАЧЕ NULL
		  |	КОНЕЦ КАК НомерДокумента,
		  |	ВЫБОР
		  |		КОГДА КоррекцияЗапасов.ДокОснование ССЫЛКА Документ.ПриходнаяНакладная
		  |				ИЛИ КоррекцияЗапасов.ДокОснование ССЫЛКА Документ.ВозвратнаяНакладнаяОтПокупателя
		  |			ТОГДА КоррекцияЗапасов.ДокОснование.Дата
		  |	КОНЕЦ КАК ДатаПоступления
		  |ИЗ
		  |	Документ.КоррекцияЗапасов КАК КоррекцияЗапасов
		  |ГДЕ
		  |	КоррекцияЗапасов.Ссылка = &Ссылка
		  |
		  |УПОРЯДОЧИТЬ ПО
		  |	ДатаПоступления"  ;
		  
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Док.Ссылка);
	Запрос.УстановитьПараметр("МестоХранения",Док.Ссылка.Склад);
	Запрос.УстановитьПараметр("МоментВремени",Док.Ссылка.МоментВремени());
	Запрос.Текст = 	
	"ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.ТоварНаименование,
	|	ОстаткиНоменклатуры.ТоварКод,
	|	ОстаткиНоменклатуры.Количество КАК КоличествоМест,
	|	ОстаткиНоменклатуры.СуммаСНДС - ОстаткиНоменклатуры.СуммаНДС как СуммаБезНДС,
	|	ОстаткиНоменклатуры.СуммаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|		ОстаткиНоменклатуры.Фирма КАК Фирма,
	|		ОстаткиНоменклатуры.Номенклатура.Наименование КАК ТоварНаименование,
	|		ОстаткиНоменклатуры.Номенклатура.Код КАК ТоварКод,
	|		СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|		СУММА(ОстаткиНоменклатуры.Сумма) КАК СуммаСНДС,
	|		СУММА(ОстаткиНоменклатуры.СуммаНДС) КАК СуммаНДС
	|	ИЗ
	|		РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|	ГДЕ
	|		ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОстаткиНоменклатуры.Номенклатура,
	|		ОстаткиНоменклатуры.Номенклатура.Код,
	|		ОстаткиНоменклатуры.Фирма,
	|		ОстаткиНоменклатуры.Номенклатура.Наименование) КАК ОстаткиНоменклатуры";	
	
	//Макет = ПолучитьМакет("ТОРГ16");
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.КоррекцияЗапасов.ТОРГ16");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Списание_ТОРГ16";

	// Выводим общие реквизиты шапки
	ОписаниеОрганизации = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Док.Ссылка.Фирма, Док.Ссылка.Дата,Док.Ссылка.СтруктурнаяЕдиница);
	ОбластьМакета       = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента = Док.Номер;
	ОбластьМакета.Параметры.ДатаДокумента = Формат(Док.Дата, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Основание = Док.основание;		
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбработкаПечатиСервер.ОписаниеОрганизации(ОписаниеОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО = ОписаниеОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ПредставлениеПодразделения = СокрЛП(Док.СтруктурнаяЕдиница.Наименование)+", "+СокрЛП(Док.Склад.Наименование);

	//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
	//Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Док.Ссылка.Фирма, Док.Ссылка.Дата);
	Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Док.Фирма, Док.Дата, Док.СтруктурнаяЕдиница);
	///Зернятко А.В.@ - конец блока
	ОбластьМакета.Параметры.ФИОРуководителя = Руководители.ФИОРуководителя;
	ОбластьМакета.Параметры.ДожностьРуководителя = Руководители.РуководительДолжность;
	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 11;
	СтрокПодвала    = 0;
	НомерСтраницы   = 1;
	Ном             = 0;
	
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();	
	КоличествоСтрок  = ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыПервогоЛиста");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПервогоЛиста");
	Выборка = ЗапросЛист1.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			ИтогоСтоимостьПоСтранице = 0;
			НомерСтраницы            = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.ДатаПоступленияТовара = Выборка.ДатаПоступления;
		ОбластьМакета.Параметры.ТоварнаяНакладнаяНомер = Выборка.НомерДокумента;
		ОбластьМакета.Параметры.ТоварнаяНакладнаяДата = Выборка.ДатаДокумента;
		ОбластьМакета.Параметры.ПризнакиПониженияКачестваНаименование = Док.ВидСписания;
		ОбластьМакета.Параметры.ДатаСписанияТовара = Док.Дата;
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;	

	СтрокНаСтранице = 27;
	СтрокШапки      = 5;
	СтрокПодвала    = 11;
	НомерСтраницы   = 1;
	Ном             = 0;

	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	НомерСтраницы    = НомерСтраницы + 1;
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицыВторогоЛиста");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	стрИмяДокумента = Док.Ссылка.Метаданные().Имя;
		
	ИтогоСтоимость = 0;
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаВторогоЛиста");
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			ИтогоСтоимостьПоСтранице = 0;
			НомерСтраницы            = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		ЕдиницаИзмерения = ВыборкаСтрокТовары.Номенклатура.БазоваяЕдиницаИзмерения;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование;
		ОбластьМакета.Параметры.ЕдиницаИзмеренияНаименование = ЕдиницаИзмерения.ПолноеНаименование;
		ОбластьМакета.Параметры.ЕдиницаИзмеренияКодПоОКЕИ    = ЕдиницаИзмерения.Код;
		СуммаБЕЗНДС = ВыборкаСтрокТовары.СуммаБЕЗНДС;
		СуммаНДС = ВыборкаСтроктовары.СуммаНДС;
		Стоимость = СуммаБЕЗНДС;
		ОбластьМакета.Параметры.Стоимость = Стоимость;			
		КоличествоМест = ВЫборкаСтрокТовары.количествоМест;
		Если КоличествоМест  = 0 тогда
			Цена = Стоимость;
		иначе
			Цена = Стоимость/количествоМест;
		конецесли;
		областьМакета.Параметры.цена = Цена;
		//ОбластьМакета.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = ЕдиницаИзмерения.Код;
		ТабДокумент.Вывести(ОбластьМакета);

		// Обновим итоги по документу
		ИтогоСтоимость = ИтогоСтоимость + Стоимость;
	КонецЦикла;
	
	// Выводим итоги по документу в общем
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Итого = ИтогоСтоимость;
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.СуммаСписанияПрописью = ЧислоПрописью(ИтогоСтоимость,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	ТабДокумент.Вывести(ОбластьМакета);
    конеццикла;
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;
КонецФункции // ПечатьТОРГ16()

Функция ПечатьНакладная(МассивОбъектов,ОбъектыПечати) Экспорт
	СтрукРеквизитыШапки = новый Структура();
	СТрукРеквизитыШапки.Вставить("СтруктурнаяЕдиница","Структурная единица");
	СтрукРеквизитыШапки.вставить("Склад","Склад");
	СтрукРеквизитыШапки.вставить("ВиновноеЛицо","Виновное лицо");
	СтрукРеквизитыШапки.вставить("ВидСписания","Вид списания");
	СтрукРеквизитыШапки.вставить("ДокОснование","Документ-основание");
	СтрукРеквизитыШапки.Вставить("Оприходование","Оприходование");
	СтрукРеквизитыТабЧасти = новый Структура;
	СтрукРеквизитыТабЧасти.Вставить("НомерСтроки");
	СтрукРеквизитыТабЧасти.Вставить("Номенклатура");
	СтрукРеквизитыТабЧасти.Вставить("ЕдиницаИзмерения");
	СтрукРеквизитыТабЧасти.Вставить("Коэффициент");
	СтрукРеквизитыТабЧасти.Вставить("Количество");
	ТабДок = ПечатьНакладной(МассивОбъектов,ОбъектыПечати,"Состав",СтрукРеквизитыШапки,СтрукРеквизитыТабЧасти);
	Возврат ТабДок;
КонецФункции

Функция ПечатьНакладной(МассивОбъектов,ОбъектыПечати,ИмяТабЧасти,СтрукРеквизитыШапки,СтрукРеквизитыТабЧасть) Экспорт
	//Макет = ПолучитьОбщийМакет("Накладная");
	Макет = УправлениеПечатью.ПолучитьМакет("ОбщийМакет.Накладная");

	ТабДок = Новый ТабличныйДокумент;
	НомерСтрокиНачало = 0;
	для каждого Док из МассивОбъектов цикл
		Объект = Док.Ссылка.ПолучитьОбъект().Метаданные().Имя;	
		Если СтрукРеквизитыТабЧасть.Свойство("Номенклатура") тогда
			СтрукРеквизитыТабЧасть.Вставить("Код");
		КонецЕсли;
		ЗАпросШапка = Новый Запрос;
		Текст = "ВЫбрать разрешенные ";
		для каждого строка из СтрукРеквизитыШапки цикл
			Текст = Текст + "ДокументОбъект.ссылка."+Строка.Ключ+" как "+Строка.ключ+",";
		конеццикла;
		Текст = Сред(Текст,0,СТрДлина(Текст)-1);
		Текст = Текст + "
		|из Документ."+Объект+" как ДокументОбъект где ДокументОбъект.ссылка = &ТекущийДокумент ";
		ЗапросШапка.Текст = Текст;
		ЗапросШапка.УстановитьПараметр("ТекущийДокумент",Док.Ссылка);
		Результат = ЗапросШапка.Выполнить();
		ВыборкаШапка = Результат.Выбрать();
		ВыборкаШапка.Следующий();
		ЗапросТабЧасть = Новый Запрос;
		Текст = "
		|Выбрать ";
		для каждого Строка из СтрукРеквизитыТабЧасть цикл
			Если ОбработкаПечатиСервер.ПроверкаНаСебестоимость(Строка.Ключ) тогда
				Если Строка.Ключ = "Код" тогда
					Текст= Текст + "ДокументОбъект.Номенклатура."+Строка.Ключ+","
				Иначе					
					Текст= Текст + "ДокументОбъект."+Строка.Ключ+","
				КонецЕсли;	
			Конецесли;
		конеццикла;
		Текст = Сред(Текст,0,СТрДлина(Текст)-1);
		Текст = Текст + "
		|из Документ."+Объект+"."+ИмяТабЧасти+" как ДокументОбъект где ДокументОбъект.ссылка = &ТекущийДокумент Итоги ";
		Итоги = Ложь;	
		для каждого строка из СтрукРеквизитыТабЧАсть цикл
			если ОбработкаПечатиСервер.проверкаНАСебестоимость(строка.Ключ) тогда
				Если ТипЗнч(Строка.Значение) = Тип("Булево") и СТрока.Значение тогда		
					Текст = Текст + "
					|Сумма("+Строка.Ключ+"),";
					Итоги = Истина;
				конецесли;
			конецесли;
		конеццикла;
		Текст = Сред(Текст,0,СТрДлина(Текст)-1);
		Текст = Текст + " По Общие ";
		ЗапросТабЧасть.Текст = Текст;
		ЗапросТабЧасть.УстановитьПараметр("ТекущийДокумент",Док.Ссылка);
		Результат = ЗапросТабЧасть.Выполнить();
		Если Не Результат.Пустой() тогда
			ОбластьЗаголовок=  Макет.ПолучитьОбласть("Заголовок|ЗаголовокКолонка");
			ОбластьЗаголовок.Параметры.ПечЗаголовок = Док.Ссылка.ПолучитьОбъект().Метаданные().Синоним;
			ОбластьЗаголовок.Параметры.Дата = Формат(Док.Ссылка.Дата,"ДФ=dd.MM.yyyy");
			ОбластьЗаголовок.Параметры.Номер = Док.Ссылка.Номер;
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДок, Макет, ОбластьЗаголовок, Док);
			
			
			ТабДок.Вывести(ОбластьЗаголовок);
			//ОбластьСтрокаРеквизита = Макет.ПолучитьОбласть("СтрокаРеквизита");
			//ОбластьСтрокаРеквизита.Параметры.ИмяРеквизита = "Фирма";
			//ОбластьСтрокаРеквизита.Параметры.значениеРеквизита = Константы.Организация.Получить();
			//ТабДок.Вывести(ОбластьСтрокаРеквизита);
			для каждого строка из СтрукРеквизитыШапки цикл
				ЗначениеРеквизитаШапки = ВыборкаШапка[Строка.Ключ];
				Если ЗначениеЗаполнено(ЗначениеРеквизитаШапки) Тогда
					ОбластьСтрокаРеквизита = Макет.ПолучитьОбласть("СтрокаРеквизита");
					ОбластьСтрокаРеквизита.Параметры.ИмяРеквизита = Строка.Значение;
					Если ТипЗнч(ЗначениеРеквизитаШапки) = Тип("Дата") Тогда
						ОбластьСтрокаРеквизита.Параметры.значениеРеквизита = Формат(ЗначениеРеквизитаШапки,"ДФ=dd.MM.yyyy");
					Иначе
						Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеРеквизитаШапки)) тогда
							Представление = ?(ЗначениеРеквизитаШапки.Метаданные().Реквизиты.Найти("ПолноеНаименование")=Неопределено,ЗначениеРеквизитаШапки,?(ЗначениеЗаполнено(ЗначениеРеквизитаШапки.ПолноеНаименование),ЗначениеРеквизитаШапки.ПолноеНаименование,ЗначениеРеквизитаШапки));
						Иначе
							Представление = ЗначениеРеквизитаШапки;
						КонецЕсли;
						ОбластьСтрокаРеквизита.Параметры.значениеРеквизита = Представление;
					КонецЕсли;	
					ТабДок.Вывести(ОбластьСтрокаРеквизита);
				КонецЕсли;	
			конеццикла;
			ОбластьСтрокаРеквизита = Макет.ПолучитьОбласть("СтрокаРеквизита");
			ОбластьСтрокаРеквизита.Параметры.ИмяРеквизита = "Коррекция запасов";
			ОбластьСтрокаРеквизита.Параметры.значениеРеквизита = ?(ВыборкаШапка.Оприходование,"Оприходование","Списание");
			ТабДок.Вывести(ОбластьСтрокаРеквизита);
			
			Флаг = Истина;
			для каждого строка из СтрукРеквизитыТабЧасть цикл
				ИмяРеквизитаТабЧасть = СТрока.Ключ;
				Если Макет.Области.Найти(ИмяРеквизитаТабЧасть) = неопределено тогда        продолжить; конецесли;
				ОбластьШапка = Макет.получитьОбласть("Шапка|"+ИмяРеквизитаТабЧасть);
				Если Флаг тогда
					ТабДок.Вывести(ОбластьШапка);
				иначе
					ТабДок.Присоединить(ОбластьШапка);
				конецесли;
				ФЛаг = Ложь;
			конеццикла;
			ВыборкаОбщиеИтогиТабЧасть = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаОбщиеИтогиТабЧасть.Следующий() цикл
				ВыборкаТабЧасть = ВыборкаОбщиеИтогиТабЧасть.Выбрать();
				Пока выборкаТабЧасть.Следующий() цикл
					Флаг = Истина;
					для каждого строка из СтрукРеквизитыТабЧасть цикл
						ИмяРеквизитаТабЧасть = Строка.Ключ;
						если Макет.Области.Найти(ИмяРеквизитаТабЧасть) = неопределено тогда продолжить; конецесли;
						ОбластьСтрока = Макет.ПолучитьОбласть("Строка|"+ИмяРеквизитаТабЧасть);
						ОбластьСтрока.Параметры.Заполнить(ВыборкаТабЧасть);
						если Флаг тогда				
							ТабДок.Вывести(ОбластьСтрока);
						Иначе
							ТабДок.Присоединить(ОбластьСтрока);
						конецесли;
						Флаг = Ложь;	
					Конеццикла;
				конеццикла;
				если Итоги тогда
					Флаг = Истина;
					для каждого строка из СтрукРЕквизитыТабЧасть цикл                                     
						ИмяРеквизитаТабЧасти = Строка.Ключ;
						Если Макет.Области.Найти(ИмяРеквизитаТабЧасти) = неопределено тогда продолжить; конецесли;
						ОбластьИтоги = Макет.ПолучитьОбласть("Итоги|"+ИмяРеквизитаТабЧасти);
						ОбластьИтоги.Параметры.Заполнить(ВыборкаОбщиеИтогиТабЧасть);
						если Флаг тогда
							ТабДок.Вывести(ОбластьИтоги);		
						Иначе
							ТабДок.Присоединить(ОбластьИтоги);
						Конецесли;
						Флаг = ЛожЬ;
					конеццикла;
				Конецесли;
			конеццикла;
		КонецЕсли;
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы+1;
	Конеццикла;
	Возврат ТабДок;
КонецФункции
 
Функция ПечатьТОРГ15(МассивОбъектов,ОбъектыПечати)       экспорт
	
	//Макет = ПолучитьМакет("ТОРГ15");
	Макет = УправлениеПечатью.ПолучитьМакет("ОбщийМакет.ТОРГ15");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Списание_ТОРГ15";
    Для Каждого док Из массивобъектов Цикл
		// Выводим общие реквизиты шапки ТЧ1
		ОбластьМакета       = Макет.ПолучитьОбласть("ТЧ1_Шапка");
		
		ОписаниеОрганизации = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Док.ссылка.Фирма, Док.ссылка.Дата,Док.Ссылка.СтруктурнаяЕдиница);
		//ОписаниеОрганизацииКонтрагента = ОбработкаПечатиСервер.СведенияОЮрФизЛице(ВыборкаТЧ1_Итоги.Контрагент, ВыборкаТЧ1_Итоги.Дата, ВыборкаТЧ1_Итоги.СтруктурнаяЕдиница);
		//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		//Руководители        = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Док.Ссылка.Фирма, Док.ссылка.Дата);
		Руководители        = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Док.Фирма, Док.Дата, Док.СтруктурнаяЕдиница);
		///Зернятко А.В.@ - конец блока
		//ОписаниеКонтрагента = ОмРаботаСФормами.СведенияОЮрФизЛице(Фирма, Дата);
		
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечНомер                    = ДОк.Номер;
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечДата                     = Формат(Док.Дата, "ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечФирма                    = ОписаниеОрганизации.ПолноеНаименование + ", ИНН " + ОписаниеОрганизации.ИНН + ", " + 
				СокрЛП(ОписаниеОрганизации.ЮридическийАдрес) + ", " + ОписаниеОрганизации.Телефоны + ", р/cч " + ОписаниеОрганизации.НомерСчета + ", БИК " + 
				ОписаниеОрганизации.БИК + ", к/сч " + ОписаниеОрганизации.КоррСчет;
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечСтруктурноеПодразделение = Док.СтруктурнаяЕдиница.Наименование;
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечПоставщик                = ""; 
				//ОписаниеОрганизацииКонтрагента.ПолноеНаименование + ", ИНН " + ОписаниеОрганизацииКонтрагента.ИНН + ", " +  
				//СокрЛП(ОписаниеОрганизацииКонтрагента.ЮридическийАдрес) + ", " + ОписаниеОрганизацииКонтрагента.Телефоны + ", р/cч " + ОписаниеОрганизацииКонтрагента.НомерСчета + ", БИК " + 
				//ОписаниеОрганизацииКонтрагента.БИК + ", к/сч " + ОписаниеОрганизацииКонтрагента.КоррСчет;
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечОснование		          = Док.ДокОснование;
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечФирмаОКПО                = ОписаниеОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечПоставщикОКПО            = "";
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечПоставщикОКДП            = "";
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечДолжность                = Руководители.РуководительДолжность;
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечРасшифровка              = Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечЧисло                    = Формат(Док.Дата, "ДФ=dd");
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечМесяц                    = Формат(Док.Дата, "ДФ=MMММ");
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечГод                      = Формат(Док.Дата, "ДФ=yyyy");
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечПричина                  = "";
		ОбластьМакета.Параметры.ТЧ1_Шапка_ПечКод                      = "";
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		
		// Выводим заголовок ТЧ1 таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ1_Заголовок");
		ТабДокумент.Вывести(ОбластьМакета);
		
		
		// Выводим строки ТЧ1 таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ1_СтрокаСредняя");
		
		Запрос1 = Новый Запрос;
		Запрос1.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.ТоварНаименование,
		|	ВложенныйЗапрос.Код,
		|	ВложенныйЗапрос.ЕдиницаИзмерения,
		|	ВложенныйЗапрос.ЕдИзмНаименование,
		|	ВложенныйЗапрос.КодОКЕИ,
		|	ВложенныйЗапрос.Артикул,
		|	ВложенныйЗапрос.Сорт КАК Сорт,
		|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	ВложенныйЗапрос.Цена
		|ИЗ
		|	(ВЫБРАТЬ
		|		КоррекцияЗапасов.Номенклатура КАК Номенклатура,
		|		КоррекцияЗапасов.Номенклатура.Наименование КАК ТоварНаименование,
		|		КоррекцияЗапасов.Номенклатура.Код КАК Код,
		|		КоррекцияЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		КоррекцияЗапасов.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование КАК ЕдИзмНаименование,
		|		КоррекцияЗапасов.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК КодОКЕИ,
		|		"""" КАК Артикул,
		|		"""" КАК Сорт,
		|		ОстаткиНоменклатуры.Сумма - ОстаткиНоменклатуры.СуммаНДС КАК Сумма,
		|		ОстаткиНоменклатуры.Количество / ВЫБОР
		|			КОГДА КоррекцияЗапасов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ КоррекцияЗапасов.Коэффициент
		|		КОНЕЦ КАК Количество,
		|		(ОстаткиНоменклатуры.Сумма - ОстаткиНоменклатуры.СуммаНДС) / (ОстаткиНоменклатуры.Количество / ВЫБОР
		|			КОГДА КоррекцияЗапасов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ КоррекцияЗапасов.Коэффициент
		|		КОНЕЦ) КАК Цена
		|	ИЗ
		|		Документ.КоррекцияЗапасов.Состав КАК КоррекцияЗапасов
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
		|			ПО КоррекцияЗапасов.Ссылка = ОстаткиНоменклатуры.Регистратор
		|				И КоррекцияЗапасов.Номенклатура = ОстаткиНоменклатуры.Номенклатура
		|	ГДЕ
		|		ОстаткиНоменклатуры.Регистратор = &парамРегистратор
		|		И КоррекцияЗапасов.Ссылка = &парамРегистратор) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.ТоварНаименование,
		|	ВложенныйЗапрос.Код,
		|	ВложенныйЗапрос.ЕдиницаИзмерения,
		|	ВложенныйЗапрос.ЕдИзмНаименование,
		|	ВложенныйЗапрос.КодОКЕИ,
		|	ВложенныйЗапрос.Артикул,
		|	ВложенныйЗапрос.Сорт,
		|	ВложенныйЗапрос.Цена
		|ИТОГИ
		|	СУММА(Сумма),
		|	СУММА(Количество)
		|ПО
		|	ОБЩИЕ";
		
		Запрос1.УстановитьПараметр("парамРегистратор", Док.Ссылка);
		
		ВыборкаТЧ1_Итоги = Запрос1.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаТЧ1_Итоги.Следующий() Цикл
			
			ВыборкаТЧ1 = ВыборкаТЧ1_Итоги.Выбрать();
			Пока ВыборкаТЧ1.Следующий() Цикл
				
				ОбластьМакета.Параметры.ТЧ1_Печ1  = ВыборкаТЧ1.ТоварНаименование;
				ОбластьМакета.Параметры.ТЧ1_Печ2  = ВыборкаТЧ1.Код;
				ОбластьМакета.Параметры.ТЧ1_Печ3  = ВыборкаТЧ1.ЕдИзмНаименование;
				ОбластьМакета.Параметры.ТЧ1_Печ4  = ВыборкаТЧ1.КодОКЕИ;
				ОбластьМакета.Параметры.ТЧ1_Печ5  = ВыборкаТЧ1.Артикул;
				ОбластьМакета.Параметры.ТЧ1_Печ6  = ВыборкаТЧ1.Сорт;
				ОбластьМакета.Параметры.ТЧ1_Печ7  = Формат(ВыборкаТЧ1.Количество, "ЧЦ=15; ЧДЦ=3; ЧН=");
				ОбластьМакета.Параметры.ТЧ1_Печ8  = Формат(ВыборкаТЧ1.Цена      , "ЧЦ=15; ЧДЦ=2; ЧН=");
				ОбластьМакета.Параметры.ТЧ1_Печ9  = Формат(ВыборкаТЧ1.Сумма     , "ЧЦ=19; ЧДЦ=2; ЧН=");
				ОбластьМакета.Параметры.ТЧ1_Печ10 = "";
				ОбластьМакета.Параметры.ТЧ1_Печ11 = "";
				ОбластьМакета.Параметры.ТЧ1_Печ12 = "";
				ОбластьМакета.Параметры.ТЧ1_Печ13 = "";
				ОбластьМакета.Параметры.ТЧ1_Печ14 = "";
				ОбластьМакета.Параметры.ТЧ1_Печ15 = "";
				
				
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			
			// Выводим итого ТЧ1 таблицы
			ОбластьМакета                           = Макет.ПолучитьОбласть("ТЧ1_Итого");
			ТЧ2_Подвал_ПечСуммаБоя                  = ВыборкаТЧ1_Итоги.Сумма;
			ОбластьМакета.Параметры.ТЧ1_Печ7_Итого  = Формат(ВыборкаТЧ1_Итоги.Количество, "ЧЦ=19; ЧДЦ=3; ЧН=");
			ОбластьМакета.Параметры.ТЧ1_Печ9_Итого  = Формат(ВыборкаТЧ1_Итоги.Сумма, "ЧЦ=19; ЧДЦ=2; ЧН=");
			ОбластьМакета.Параметры.ТЧ1_Печ10_Итого = "";
			ОбластьМакета.Параметры.ТЧ1_Печ12_Итого = "";
			ОбластьМакета.Параметры.ТЧ1_Печ13_Итого = "";
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
	
		// Выводим подвал ТЧ1 таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ1_Подвал_Строка1");
		ОбластьМакета.Параметры.ТЧ1_Подвал_ПечПричиныБоя = "";
		ОбластьМакета.Параметры.ТЧ1_Подвал_ПечКод        = "";
		ОбластьМакета.Параметры.ТЧ1_Подвал_ПечВиновные   = "";
		ТабДокумент.Вывести(ОбластьМакета);
		
		// ТЧ2 ...
		
		// Выводим шапку ТЧ2 таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок ТЧ2 таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_Заголовок");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим строки ТЧ2 таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_СтрокаСредняя");
		
		Запрос2 = Новый Запрос;
		Запрос2.Текст = 
		"ВЫБРАТЬ
		|	СписаниеСостав.Ссылка
		|ИЗ
		|	Документ.КоррекцияЗапасов.Состав КАК СписаниеСостав
		|ГДЕ
		|	1 = 2";
		
		ВыборкаТЧ2 = Запрос2.Выполнить().Выбрать();
		Пока ВыборкаТЧ2.Следующий() Цикл

			ОбластьМакета.Параметры.ТЧ2_Печ1 = "";
			ОбластьМакета.Параметры.ТЧ2_Печ2 = "";
			ОбластьМакета.Параметры.ТЧ2_Печ3 = "";
			ОбластьМакета.Параметры.ТЧ2_Печ4 = "";
			ОбластьМакета.Параметры.ТЧ2_Печ5 = "";
			ОбластьМакета.Параметры.ТЧ2_Печ6 = "";
			ОбластьМакета.Параметры.ТЧ2_Печ7 = "";
			ОбластьМакета.Параметры.ТЧ2_Печ8 = "";
			ОбластьМакета.Параметры.ТЧ2_Печ9 = "";
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		// Выводим итого ТЧ2 таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_Итого");
		ОбластьМакета.Параметры.ТЧ2_Печ5_Итого  = "";
		ОбластьМакета.Параметры.ТЧ2_Печ7_Итого  = "";
		ТабДокумент.Вывести(ОбластьМакета);
		
		
		// Выводим подвал ТЧ2 таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_Подвал_Строка1");
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧлен1      = "";
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧлен1_Расш = "";
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_Подвал_Строка2");
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧлен2      = "";
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧлен2_Расш = "";
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_Подвал_Строка3");
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧлен3      = "";
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧлен3_Расш = "";
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_Подвал_Строка4");
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧлен4      = "";
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧлен4_Расш = "";
		ТабДокумент.Вывести(ОбластьМакета);
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("ТЧ2_Подвал_Строка5");
		ОбластьМакета.Параметры.ТЧ2Подвал_ПечОтнестиНаСчет = "";
		//ОбластьМакета.Параметры.ТЧ2Подвал_ПечОтнестиНаСчет              = "94 (Недостачи и потери от порчи ценностей)";
		//ОбластьМакета.Параметры.ТЧ2Подвал_ПечОтнестиНаСчет              = "" + ВидСписания.СчетОтнесенияПотерь.СчетЗатрат.Код + " (" + ВидСписания.СчетОтнесенияПотерь.СчетЗатрат.Наименование + ")";
		
		//СуммаПрописью = ЧислоПрописью(Цел(ТЧ2_Подвал_ПечСуммаБоя),,"рубль, рубля, рублей, м");
		//СуммаПрописью = Сред(СуммаПрописью, 1, СтрДлина(СуммаПрописью) - 3); // уберем копейки и пробел
		//ОбластьМакета.Параметры.ТЧ2_Подвал_ПечСуммаБоя                  = СуммаПрописью;
		//ОбластьМакета.Параметры.ТЧ2_Подвал_ПечСуммаБояКопейки           = Формат(ТЧ2_Подвал_ПечСуммаБоя - Цел(ТЧ2_Подвал_ПечСуммаБоя), "ЧЦ=2 ; ЧВН=; ЧДЦ=0; ЧН=");
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечСуммаОприходования        = "";
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечСуммаОприходованияКопейки = "";
		
		СуммаПрописьюИтого = ЧислоПрописью(Цел(ТЧ2_Подвал_ПечСуммаБоя), ,"рубль, рубля, рублей, м");
		СуммаПрописьюИтого = Сред(СуммаПрописьюИтого, 1, СтрДлина(СуммаПрописьюИтого) - 3); 
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечСуммаЦенностей            = СуммаПрописьюИтого;
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечСуммаЦенностейКопейки     = Формат((ТЧ2_Подвал_ПечСуммаБоя - Цел(ТЧ2_Подвал_ПечСуммаБоя)) * 100, "ЧЦ=2;ЧВН=;ЧН=00");
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечНомерНакладной            = ДОк.Номер + " от " + Формат(Док.Дата, "ДФ=dd.MM.yyyy");
		//ОбластьМакета.Параметры.ТЧ2_Подвал_ПечЧисло                     = "";
		//ОбластьМакета.Параметры.ТЧ2_Подвал_ПечМесяц                     = "";
		//ОбластьМакета.Параметры.ТЧ2_Подвал_ПечГод                       = "";
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечДолжность                 = "";
		ОбластьМакета.Параметры.ТЧ2_Подвал_ПечРасшифровка               = "";

		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;	

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;
	
КонецФункции // ПечатьТОРГ15()

Функция ПечатьМ11(МассивОбъектов,ОбъектыПечати) Экспорт
	ТабДок = Новый ТабличныйДокумент;
	//Макет = ПолучитьОбщийМакет("М11");
	Макет = УправлениеПечатью.ПолучитьМакет("ОбщийМакет.М11");

	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Списание_М11";
    для каждого док из массивобъектов цикл
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СписаниеСостав.Ссылка.Номер,
	               |	СписаниеСостав.Ссылка.Дата,
	               |	СписаниеСостав.Ссылка.Фирма.Представление КАК Фирма,
	               |	СписаниеСостав.Ссылка.Фирма.КодПоОКПО КАК КодПоОКПО,
	               |	СписаниеСостав.Ссылка.Склад.Представление КАК Склад,
	               |	СписаниеСостав.Номенклатура.Представление КАК Номенклатура,
	               |	СписаниеСостав.Номенклатура.Код КАК НоменклатураКод,
	               |	СписаниеСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	               |	СписаниеСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование КАК ЕдиницаИзмерения,
	               |	СписаниеСостав.Количество,
	               |	СУММА(ЕСТЬNULL(УчетПартий.Сумма, 0) - ЕСТЬNULL(УчетПартий.СуммаНДС, 0)) КАК СуммаБезНДС,
	               |	СУММА(УчетПартий.СуммаНДС) КАК СуммаНДС,
	               |	СписаниеСостав.Номенклатура.ВидТовара КАК ВидТовара,
	               |	"" "" КАК ВидМатериала,
	               |	СписаниеСостав.Ссылка.Склад.ВидСклада КАК ВидСклада,
	               |	"" "" КАК СчетЗатрат
	               |ИЗ
	               |	Документ.КоррекцияЗапасов.Состав КАК СписаниеСостав
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры КАК УчетПартий
	               |		ПО СписаниеСостав.Ссылка = УчетПартий.Регистратор
	               |			И СписаниеСостав.Номенклатура = УчетПартий.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			УчетнаяПолитикаНалоговыйУчетСрезПоследних.СхемаНалогообложения КАК СхемаНалогообложения,
	               |			УчетнаяПолитикаНалоговыйУчетСрезПоследних.Организация КАК Организация
	               |		ИЗ
	               |			РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&СсылкаДата, ) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних) КАК УП
	               |		ПО СписаниеСостав.Ссылка.Фирма = УП.Организация
	               |ГДЕ
	               |	СписаниеСостав.Ссылка = &Ссылка
	               |	И УчетПартий.Регистратор.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СписаниеСостав.Ссылка.Склад.Представление,
	               |	СписаниеСостав.Ссылка.Дата,
	               |	СписаниеСостав.Ссылка.Номер,
	               |	СписаниеСостав.Ссылка.Фирма.КодПоОКПО,
	               |	СписаниеСостав.Ссылка.Фирма.Представление,
	               |	СписаниеСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование,
	               |	СписаниеСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код,
	               |	СписаниеСостав.Номенклатура.Код,
	               |	СписаниеСостав.Номенклатура.Представление,
	               |	СписаниеСостав.Количество,
	               |	СписаниеСостав.Номенклатура.ВидТовара,
	               |	СписаниеСостав.Ссылка.Склад.ВидСклада";
		Запрос.УстановитьПараметр("Ссылка", Док);
	Запрос.УстановитьПараметр("СсылкаДата", Док.МоментВремени());	 
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Результат.Пустой() Тогда  //korl по пустому запросу документ не формируем
		Возврат ТабДок;
	КонецЕсли;
	Первая = Истина;
	СуммаИтого = 0;
	Пока Выборка.Следующий() Цикл
		Если Первая Тогда
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Строка = Макет.ПолучитьОбласть("Строка");
			Подвал = Макет.ПолучитьОбласть("Подвал");
	        Шапка.Параметры.Фирма = Выборка.Фирма;
			Шапка.Параметры.Номер = Выборка.Номер;
			Шапка.Параметры.КодОКПО = Выборка.КодПоОКПО;
			Шапка.Параметры.ДатаДок = Выборка.Дата;
			Шапка.Параметры.ПодразделениеОтправитель = Выборка.Склад;
			Шапка.Параметры.ПодразделениеПолучатель = Выборка.Склад;
			Шапка.Параметры.КорСчет = Выборка.СчетЗатрат;
			ТабДок.Вывести(Шапка);
			Первая = Ложь;
		КонецЕсли;
		Строка.Параметры.МатЦенность           = ""+ Выборка.Номенклатура;
		Строка.Параметры.Код                   = Выборка.НоменклатураКод;
		Строка.Параметры.ЕдиницаИзмеренияКод   = Выборка.ЕдиницаИзмеренияКод;
		Строка.Параметры.ЕдиницаИзмерения      = Выборка.ЕдиницаИзмерения;
		Строка.Параметры.КоличествоЗатребовано = Выборка.Количество;
		Строка.Параметры.КоличествоОтпущено    = Выборка.Количество;
		Строка.Параметры.МатериалЦенаБезНДС    = ?(Выборка.Количество = 0, 0, Окр(Выборка.СуммаБезНДС / Выборка.Количество, 2));
		Строка.Параметры.МатериалСумма         = Выборка.СуммаБезНДС;
		СуммаИтого = СуммаИтого + Выборка.СуммаБезНДС;
		//Строка.Параметры.СубСчет = ОмБухгалтерскийУчетДополнительно2.БУПолучитьСчетУчетаТМЦ(Выборка.ВидТовара,Выборка.ВидМатериала,Выборка.ВидСклада,Перечисления.СтатусыПартий.Собственный);
		ТабДок.Вывести(Строка);
	КонецЦикла;
	Подвал.Параметры.СуммаИтого = СуммаИтого;
	ТабДок.Вывести(Подвал);
	КонецЦикла;
	возврат ТабДок;
	
КонецФУнкции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,
	ОбъектыПечати, ПараметрыВывода) Экспорт
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Накладная", "Накладная",ПечатьНакладная(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ15") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ТОРГ15", "ТОРГ-15",ПечатьТОРГ15(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"М11", "М11",ПечатьМ11(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ16") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ТОРГ16", "ТОРГ-16",ПечатьТОРГ16(массивОбъектов,ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

