
Функция ПровестиКоррекциюЗапасов(Объект,Режим)
	
	//++Минин 31-10-13
	Если не РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		Если КонецДня(Дата)<>КонецДня(ТекущаяДата()) Тогда 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Проведение документа разрешено только текущей датой!";
			Сообщение.Сообщить();
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	//--Минин
	
	//{БредовЮГ  28-05-2013 проверка на 0 цены
	Если Оприходование Тогда
		МассивСтрок = Состав.НайтиСтроки(Новый Структура("Цена",0));
		Если МассивСтрок.Количество()>0 Тогда
			Для Каждого СтрокаМассива из МассивСтрок Цикл
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "В строке №"+СтрокаМассива.НомерСтроки+" обнаружена нулевая цена";
				Сообщение.Сообщить();
			КонецЦикла;
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	//БредовЮГ  28-05-2013 проверка на 0 цены}
	прчПродажаСписание = Перечисления.КодыОпераций.Списание;
	прчПродажаОприходованиеИзлишков = Перечисления.КодыОпераций.ОприходованиеИзлишков;
	
	прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	тзОстаткиНоменклатуры = Объект.Движения.ОстаткиНоменклатуры.Выгрузить();
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	
	Объект.Движения.Реализация.Очистить();
	тзРеализация = Объект.Движения.Реализация.Выгрузить();
	
	флВозврата = Ложь;
	Если ЭтотОбъект.Оприходование Тогда
		Запрос=Новый Запрос();
		Запрос.Текст=
		"ВЫБРАТЬ
		|	КоррекцияЗапасовСостав.Ссылка КАК Регистратор,
		|	КоррекцияЗапасовСостав.Ссылка.Дата КАК Период,
		|	&ВидДвиженияПриход КАК ВидДвижения,
		//++БИТ БВО №0000129900
		//|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа) КАК Статус,
		|	КоррекцияЗапасовСостав.ТипРеализацииТовара КАК Статус,
		//--БИТ БВО №0000129900		
		|	КоррекцияЗапасовСостав.Номенклатура,
		|	ИСТИНА КАК активность,
		|	КоррекцияЗапасовСостав.Ссылка.Склад КАК МестоХранения,
		|	КоррекцияЗапасовСостав.Ссылка.Фирма КАК Фирма,
		|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ОприходованиеИзлишков) КАК КодОперации,
		|	НЕОПРЕДЕЛЕНО КАК Комитент,
		|	СУММА(ВЫРАЗИТЬ(КоррекцияЗапасовСостав.Количество * КоррекцияЗапасовСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
		|	СУММА(КоррекцияЗапасовСостав.Сумма) КАК Сумма,
		|	СУММА(КоррекцияЗапасовСостав.СуммаНДС) КАК СуммаНДС,
		|	СУММА(КоррекцияЗапасовСостав.Сумма) КАК СуммаУпр,
		|	СУММА(КоррекцияЗапасовСостав.СуммаНДСУпр) КАК СуммаНДСУпр
		|ИЗ
		|	Документ.КоррекцияЗапасов.Состав КАК КоррекцияЗапасовСостав
		|ГДЕ
		|	КоррекцияЗапасовСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КоррекцияЗапасовСостав.Ссылка,
		|	КоррекцияЗапасовСостав.Ссылка.Дата,
		|	КоррекцияЗапасовСостав.Номенклатура,
		|	КоррекцияЗапасовСостав.Ссылка.Склад,
		|	КоррекцияЗапасовСостав.Ссылка.Фирма,
		//++БИТ БВО №0000129900
		|	КоррекцияЗапасовСостав.ТипРеализацииТовара";
		//--БИТ БВО №0000129900
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
		тзОстаткиНоменклатуры=Запрос.Выполнить().Выгрузить();
		
	Иначе	
		
		// Установка исключительной блокировки контролируемых остатков 
		Запрос=Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	КоррекцияЗапасовСостав.Номенклатура,
		|	КоррекцияЗапасовСостав.Ссылка.Склад КАК МестоХранения,
		|	КоррекцияЗапасовСостав.Ссылка.Фирма КАК Фирма,
		|	СУММА(ВЫРАЗИТЬ(КоррекцияЗапасовСостав.Количество * КоррекцияЗапасовСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
		//++БИТ БВО №0000129900
		//|	СУММА(0) КАК Сумма,
		//|	СУММА(0) КАК СуммаНДС,
		|	СУММА(КоррекцияЗапасовСостав.Сумма) КАК Сумма,
		|	СУММА(КоррекцияЗапасовСостав.СуммаНДС) КАК СуммаНДС,
		//--БИТ БВО №0000129900
		|	КоррекцияЗапасовСостав.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		//++БИТ БВО №0000129900
		|	КоррекцияЗапасовСостав.ТипРеализацииТовара КАК Статус
		//--БИТ БВО №0000129900
		|ПОМЕСТИТЬ врСостав
		|ИЗ
		|	Документ.КоррекцияЗапасов.Состав КАК КоррекцияЗапасовСостав
		|ГДЕ
		|	КоррекцияЗапасовСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КоррекцияЗапасовСостав.Номенклатура,
		|	КоррекцияЗапасовСостав.Ссылка.Склад,
		|	КоррекцияЗапасовСостав.Ссылка.Фирма,
		//++БИТ БВО №0000129900
		|	КоррекцияЗапасовСостав.ТипРеализацииТовара
		//--БИТ БВО №0000129900
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врСостав.Номенклатура,
		|	врСостав.МестоХранения,
		|	врСостав.Фирма
		|ИЗ
		|	врСостав КАК врСостав";
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		тз=Запрос.Выполнить().Выгрузить();
		тз.Свернуть("Номенклатура,МестоХранения,Фирма");
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = тз;
		Для каждого к из тз.Колонки Цикл
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
		КонецЦикла;
		Блокировка.Заблокировать();
		
		Параметры = Новый Структура;
		Параметры.Вставить("Запрос",Запрос);
		Параметры.Вставить("Объект",Объект);
		Параметры.Вставить("КодОперации",прчПродажаСписание);
		Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
		Параметры.Вставить("тзРеализация",тзРеализация);
		Параметры.Вставить("РежимПроведения",Режим);
		Параметры.Вставить("Фирма",Объект.Фирма);
		флВозврата = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);
		
	КонецЕсли;
	
	//dps+  000149484
	Если ЭтотОбъект.Оприходование Тогда 
		Если ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ЭтоГруппа = Истина Тогда
			СЕ = ЭтотОбъект.СтруктурнаяЕдиница;
		Иначе 
			СЕ = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
		КонецЕсли;
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Номенклатура.Ссылка 
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	(Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппыОбщепита)
		|			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппыТараОбщепита))
		|	И Номенклатура.Ссылка В(&Ссылка)");
		Запрос.УстановитьПараметр("ГруппыОбщепита",Справочники.Номенклатура.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыПроизводство)));
		Запрос.УстановитьПараметр("ГруппыТараОбщепита",Справочники.Номенклатура.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыТараПроизводство)));
		Запрос.УстановитьПараметр("Ссылка",тзОстаткиНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
		резОбщепит = Запрос.Выполнить().Выгрузить();
		Для Каждого стрОстаткиНом Из тзОстаткиНоменклатуры Цикл
			//++БИТ БВО - 2015-09-08 - Для оприходования статусы берутся из ТЧ состава
			ПервоначальныйСтатус = стрОстаткиНом.Статус;
			//--БИТ БВО - 2015-09-08
			Если резОбщепит.Найти(стрОстаткиНом.Номенклатура,"Ссылка") = Неопределено Тогда 
				тзПерепродажа = РегистрыСведений.Перепродажа.ПравилаПерепродажи(стрОстаткиНом.Номенклатура,СЕ);
				Если ЗначениеЗаполнено(тзПерепродажа) Тогда
					стрОстаткиНом.Статус = тзПерепродажа[0].ТипДоговора;
					стрОстаткиНом.Фирма = тзПерепродажа[0].ФирмаПолучатель;
					Если тзПерепродажа[0].ТипДоговора = Перечисления.ТипыДоговоров.Комиссия Тогда 
						стрОстаткиНом.Комитент = тзПерепродажа[0].ФирмаОтправитель;
					КонецЕсли;
				КонецЕсли;
			Иначе 
				стрОстаткиНом.Статус = Перечисления.ТипыДоговоров.Комиссия;
				стрОстаткиНом.Фирма = СЕ.Организация;
				//++БИТ БВО - 2015-09-10 - Теперь основной поставщик берется из СтатусовНоменклатуры
				//Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
				//|	НоменклатураКонтрагента.Контрагент КАК Кон
				//|ИЗ
				//|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
				//|ГДЕ
				//|	НоменклатураКонтрагента.Номенклатура = &Номенклатура
				//|	И НоменклатураКонтрагента.ОсновнойПоставщик");				
				Запрос = Новый Запрос;
				Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
                |	СтатусыНоменклатуры.ОсновнойПоставщик КАК Кон
                |ИЗ
                |	РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
                |ГДЕ
                |	СтатусыНоменклатуры.Номенклатура = &Номенклатура
                |	И СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
				Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
				//--БИТ БВО - 2015-09-10
				Запрос.УстановитьПараметр("Номенклатура",стрОстаткиНом.Номенклатура);
				рез = Запрос.Выполнить().Выбрать();
				Если рез.Следующий() Тогда 
					стрОстаткиНом.Комитент = рез.Кон;
				КонецЕсли;
			КонецЕсли;
			//++БИТ БВО - 2015-09-08 - Для оприходования статусы берутся из ТЧ состава			
			стрОстаткиНом.Статус = ПервоначальныйСтатус;
			Если стрОстаткиНом.Статус = Перечисления.ТипыДоговоров.КупляПродажа Тогда
				стрОстаткиНом.Комитент = Неопределено;
			КонецЕсли;
			//--БИТ БВО - 2015-09-08
		КонецЦикла;
	КонецЕсли;
	//dps-  000149484

	тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,Комитент,КодОперации","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр");
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
	
	Объект.Движения.Реализация.Загрузить(тзРеализация);
	
	//popn+
	Если НЕ Объект.Оприходование Тогда
		УчетАлкоголя = УчетАлкогольнойПродукции.ВестиУчетАлкоголя();
		РучнойРасходАлкогольнойПродукции = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РучнойРасходАлкогольнойПродукции,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
		Если УчетАлкоголя И НЕ РучнойРасходАлкогольнойПродукции Тогда
			УчетАлкогольнойПродукции.СформироватьРасходПоУчетуАлкоголя(Объект,прчПродажаСписание);
		Иначе
			УчетАлкогольнойПродукции.ОчиститьДвиженияПоУчетуАлкоголя(Объект);
		КонецЕсли;
	КонецЕсли;
	
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тзОстаткиНоменклатуры,тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры,тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	Объект.Движения.Реализация.Записывать=Истина;
	
	Возврат флВозврата;
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	//popn+
	Если НЕ ЭтотОбъект.Оприходование Тогда
		СформироватьДокументыГотоваяПродукция(ЭтотОбъект,Режим,Отказ);
		//КотлячковаЕВ++28,11,13 нельзя проводить документы с 0 суммойУпр
	иначе
		МассивСтрок = Состав.НайтиСтроки(Новый Структура("СуммаУпр",0));
		Если МассивСтрок.Количество()>0 Тогда
			ОбщегоНазначенияСервер.СообщитьОбОшибкеЗаполненияПоля(ЭтотОбъект,"Не заполнена СуммаУпр на вкладке ОстаткиНоменклатуры!",,Отказ);
		КонецЕсли;
		//КотлячковаЕВ--
	КонецЕсли;
	//++БИТ БВО 2015-06-16
	//Если ТипЗнч(ЭтотОбъект.ДокОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") И ЭтотОбъект.ВидСписания = Разработка_Ижтрейдинг_Сервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.ВидСписанияЗаСчетПоставщика)  Тогда
	Если ТипЗнч(ЭтотОбъект.ДокОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") 
		И ЭтотОбъект.ВидСписания = Справочники.ВидыСписания.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьСлужебноеЗначение(ПланыВидовХарактеристик.СлужебныеЗначения.ВидСписанияЗаСчетПоставщика)) Тогда
	//--БИТ БВО 2015-06-16	
		ОформитьПерепродажу();
	КонецЕсли;
	

	//popn-
	Отказ = ПровестиКоррекциюЗапасов(ЭтотОбъект,Режим);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Перемещение") Тогда
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		Фирма = ДанныеЗаполнения.Фирма;
		Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		Фирма = ДанныеЗаполнения.Фирма;
		//++БИТ БВО - 2015-09-11 - При заполнении на основании ПриоднойНакладной необходимо учитывать движения всех документов, подчиненных приходной.
		//Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
		ТаблицаДокументов = Новый ТаблицаЗначений;	
		ТаблицаДокументов.Колонки.Добавить("Ссылка"					, Новый ОписаниеТипов("ДокументСсылка.РасходнаяНакладная, ДокументСсылка.ПриходнаяНакладная, ДокументСсылка.КорректировкаРеализации, ДокументСсылка.КорректировкаПоступления, ДокументСсылка.ПередачаТоваровМеждуФирмами, ДокументСсылка.КоррекцияЗапасов"));
		ТаблицаДокументов.Колонки.Добавить("ТипДокумента"			, Новый ОписаниеТипов("Тип"));	
		ТаблицаДокументов.Колонки.Добавить("ДокОснование"			, Новый ОписаниеТипов("ДокументСсылка.РасходнаяНакладная, ДокументСсылка.ПриходнаяНакладная, ДокументСсылка.КорректировкаРеализации, ДокументСсылка.КорректировкаПоступления, ДокументСсылка.ПередачаТоваровМеждуФирмами, ДокументСсылка.КоррекцияЗапасов"));
		ТаблицаДокументов.Колонки.Добавить("ПоследнийДокВЦепочке"	, Новый ОписаниеТипов("Булево"));
		
		//Первоначальный документ прихода нужен на случай, если не будет корректировок поступления
		НоваяСтрока = ТаблицаДокументов.Добавить();		
		НоваяСтрока.Ссылка			= ДанныеЗаполнения;
		НоваяСтрока.ТипДокумента	= ТипЗнч(ДанныеЗаполнения);
		НоваяСтрока.ДокОснование	= Неопределено;
		НоваяСтрока.ПоследнийДокВЦепочке = Ложь;
		
		ЕстьПодчиненныеДокументы = Izh_ОбщегоНазначенияСервер.ПолучитьПодчиненныеДокументы(ДанныеЗаполнения, ТаблицаДокументов, ДанныеЗаполнения);
		Если ЕстьПодчиненныеДокументы Тогда			
			ТЗ = Izh_ОбщегоНазначенияСервер.ПолучитьТаблицуСИтоговымЗначениями(ТаблицаДокументов);
			
			Состав.Загрузить(ТЗ);			
		Иначе
			Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
		КонецЕсли;
		
		Для Каждого СтрокаСостава Из Состав Цикл
			СтавкаНДСЧислом = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(СтрокаСостава.СтавкаНДС);
			СтрокаСостава.Коэффициент	= 1;			
			СтрокаСостава.Сумма			= СтрокаСостава.Цена * СтрокаСостава.Количество;
			СтрокаСостава.СуммаУпр		= СтрокаСостава.Цена * СтрокаСостава.Количество;
			СтрокаСостава.СуммаНДС		= Izh_ОбщегоНазначенияСервер.РассчитатьСуммуНДС(СтрокаСостава.Сумма, Истина, СтавкаНДСЧислом);
			СтрокаСостава.СуммаНДСУпр	= СтрокаСостава.СуммаНДС;
			Попытка
				//СтрокаСостава.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(СтрокаСостава.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,,,СтрокаСостава.Номенклатура);				
				СтрокаСостава.ЕдиницаИзмерения  = Izh_ОбщегоНазначения.ПолучитьЕдиницуИзмеренияПоНаименованию(СтрокаСостава.Номенклатура.БазоваяЕдиницаИзмерения.Наименование,СтрокаСостава.Номенклатура); //dps+ 15.10.05
			Исключение
			КонецПопытки;
		КонецЦикла;
		//--БИТ БВО - 2015-09-11
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратнаяНакладнаяОтПокупателя") Тогда
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		Фирма = ДанныеЗаполнения.Фирма;
		Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
	КонецЕсли;
	ИнициализироватьДокумент();
	
	//++БИТ БВО №0000129900
	ПерераспределитьСоставПоОстаткам();
	//--БИТ БВО №0000129900
		
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если НЕ ЭтотОбъект.ЭтоНовый() Тогда
	//	Отказ = РаботаСФормамиСервер.ЗапрещеноРедактировать(ЭтотОбъект.Ссылка);
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;	
    СтруктурнаяЕдиница = Склад.Владелец;
	
	//{ВетровИА 23.06.2015 Наряд №000154451
	Если НЕ ЭтотОбъект.Оприходование Тогда 
		Отказ = Izh_ОбработкаТабличныхЧастейКлиентСервер.ПроверитьНаОграниченияПоВозвратамИСписаниям(ЭтотОбъект);
	КонецЕсли;	
	// ВетровИА 23.06.2015 Наряд №000154451 }

КонецПроцедуры

//алгоритм формирования следуюущий:
//1. определяем по регистру ПродукцияПоЦехам какие склады производства определены для номенклатура
//2. для складов производства с включенным флагом Автопроизводство если товара нет на складе (торговом зале), то создается документ ГотоваяПродукция 
Процедура СформироватьДокументыГотоваяПродукция(Объект,Режим,Отказ)
	
	флВыпускПродукцииПоПлановымЦенам = ОбщегоНазначенияСервер.ПолучитьУчетнуюПолитикуФирмы(Фирма,Дата).ВыпускПродукцииПоПлановымЦенам;
	Момент = ПроведениеДокументов.ПолучитьМоментВремени(Объект.Ссылка,Объект.Дата,Режим);
	
	//получим список уже созданных документов ГотоваяПродукция
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ГотоваяПродукция.Ссылка
	|ИЗ
	|	Документ.ГотоваяПродукция КАК ГотоваяПродукция
	|ГДЕ
	|	ГотоваяПродукция.ДокОснование = &ДокОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ГотоваяПродукция.Ссылка");
	Запрос.УстановитьПараметр("ДокОснование",Объект.Ссылка);
	тзГотоваяПродукция = Запрос.Выполнить().Выгрузить();
	
	Если тзГотоваяПродукция.Количество() > 0 Тогда
		ТолькоПросмотрДокумента = РаботаСФормамиСервер.ЗапрещеноРедактировать(тзГотоваяПродукция[0].Ссылка);
		Если ТолькоПросмотрДокумента Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого СтрокаТзГотоваяПродукция из тзГотоваяПродукция Цикл
		ТолькоПросмотрДокумента = РаботаСФормамиСервер.ЗапрещеноРедактировать(СтрокаТзГотоваяПродукция.Ссылка);
		ДокументОбъект = СтрокаТзГотоваяПродукция.Ссылка.ПолучитьОбъект();
		Если ТолькоПросмотрДокумента Тогда
			СпособЗаписиДокумента = РежимЗаписиДокумента.Проведение;
		Иначе 
			СпособЗаписиДокумента = РежимЗаписиДокумента.ОтменаПроведения;
		КонецЕсли;
		ДокументОбъект.Записать(СпособЗаписиДокумента);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ПродукцияПоЦехам.Склад) КАК Склад,
	|	ПродукцияПоЦехам.Продукция
	|ПОМЕСТИТЬ ПродукцияПоЦехам
	|ИЗ
	|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|ГДЕ
	|	ПродукцияПоЦехам.Склад.Автопроизводство = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродукцияПоЦехам.Продукция
	|;";
	
	Если флВыпускПродукцииПоПлановымЦенам Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ПлановаяСебестоимостьПродукции.Продукция КАК Номенклатура,
		|	ПлановаяСебестоимостьПродукции.Себестоимость КАК Цена
		|ПОМЕСТИТЬ ПлановыеЦены
		|ИЗ
		|	РегистрСведений.ПлановаяСебестоимостьПродукции.СрезПоследних(&МоментВремени, ) КАК ПлановаяСебестоимостьПродукции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПродукцияПоЦехам КАК ПродукцияПоЦехам
		|		ПО ПлановаяСебестоимостьПродукции.Продукция = ПродукцияПоЦехам.Продукция
		|;";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	КоррекцияЗапасовСостав.Номенклатура,
	|	ПродукцияПоЦехам.Склад КАК СкладПроизводства,
	|	КоррекцияЗапасовСостав.Ссылка.Склад КАК Склад,
	|	КоррекцияЗапасовСостав.Количество * КоррекцияЗапасовСостав.Коэффициент КАК Количество,
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	"+?(флВыпускПродукцииПоПлановымЦенам," ЕСТЬNULL(ПлановыеЦены.Цена,0) "," 0 ")+" КАК ПлановаяЦена
	|ИЗ
	|	Документ.КоррекцияЗапасов.Состав КАК КоррекцияЗапасовСостав
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|		ПО КоррекцияЗапасовСостав.Номенклатура = ПродукцияПоЦехам.Продукция
	|	"+?(флВыпускПродукцииПоПлановымЦенам," ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеЦены КАК ПлановыеЦены
	|		ПО КоррекцияЗапасовСостав.Номенклатура = ПлановыеЦены.Номенклатура ","")+"
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				&МоментВремени,
	|				МестоХранения В
	|						(ВЫБРАТЬ
	|							КоррекцияЗапасовСостав.Ссылка.Склад
	|						ИЗ
	|							Документ.КоррекцияЗапасов.Состав КАК КоррекцияЗапасовСостав
	|						ГДЕ
	|							КоррекцияЗапасовСостав.Ссылка = &Ссылка
	|						СГРУППИРОВАТЬ ПО
	|										КоррекцияЗапасовСостав.Ссылка.Склад)
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							ПродукцияПоЦехам1.Продукция
	|						ИЗ
	|							ПродукцияПоЦехам КАК ПродукцияПоЦехам1)
	|					И Фирма = &Фирма) КАК ОстаткиНоменклатурыОстатки
	|		ПО КоррекцияЗапасовСостав.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|ГДЕ
	|	КоррекцияЗапасовСостав.Ссылка = &Ссылка
	|ИТОГИ ПО
	|	СкладПроизводства,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПродукцияПоЦехам
	|;";
	Если флВыпускПродукцииПоПлановымЦенам Тогда
		ТекстЗапроса = ТекстЗапроса + " УНИЧТОЖИТЬ ПлановыеЦены ";
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("Фирма",Объект.Фирма);
	Запрос.УстановитьПараметр("МоментВремени",Момент);
	ВыборкаСкладПроизводства = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСкладПроизводства.Следующий() Цикл
		ВыборкаСклад = 	ВыборкаСкладПроизводства.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСклад.Следующий() Цикл
			
			//получим документ ГотоваяПродукция из таблицы уже ранее введенных
			Если тзГотоваяПродукция.Количество()>0 Тогда
				ДокументОбъект = тзГотоваяПродукция[0].Ссылка.ПолучитьОбъект();
			Иначе	
				ДокументОбъект = Документы.ГотоваяПродукция.СоздатьДокумент();
			КонецЕсли;
			ДокументОбъект.Фирма              = Объект.Фирма;
			ДокументОбъект.Дата               = Объект.Дата;
			ДокументОбъект.ВидПроизводства    = Перечисления.ВидыПроизводства.Приготовление;
			ДокументОбъект.ДокОснование       = Объект.Ссылка;
			ДокументОбъект.Склад              = ВыборкаСклад.Склад;
			ДокументОбъект.СкладПроизводства  = ВыборкаСклад.СкладПроизводства;
			ДокументОбъект.СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
			ДокументОбъект.ПометкаУдаления    = Ложь;
			
			ДокументОбъект.ДополнительныеСвойства.Вставить("НеМенятьВремя", ИСТИНА);
			
			ДокументОбъект.Продукция.Очистить();
			ДокументОбъект.Состав.Очистить();
			
			Выборка = ВыборкаСклад.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				чКолАвтопроизводства = Выборка.Количество - Выборка.КоличествоОстаток;
				Если чКолАвтопроизводства > 0 Тогда
					НоваяСтрокаПродукция = ДокументОбъект.Продукция.Добавить();
					НоваяСтрокаПродукция.Номенклатура      = Выборка.Номенклатура;
					НоваяСтрокаПродукция.ЕдиницаИзмерения  = РаботаСФормамиСервер.ПолучитьБазовуюЕдиницуИзмерения(Выборка.Номенклатура);
					НоваяСтрокаПродукция.Коэффициент       = 1;
					НоваяСтрокаПродукция.Ключ              = Строка(Новый УникальныйИдентификатор());
					НоваяСтрокаПродукция.Количество        = чКолАвтопроизводства;
					НоваяСтрокаПродукция.ПоТехКарте        = истина;
					Если флВыпускПродукцииПоПлановымЦенам Тогда
						НоваяСтрокаПродукция.ПлановаяСтоимость = Выборка.ПлановаяЦена;
						НоваяСтрокаПродукция.СуммаПлановая     = Окр(Выборка.ПлановаяЦена * чКолАвтопроизводства,2);
					КонецЕсли;
					ДокументОбъект.ЗаполнитьСостав(НоваяСтрокаПродукция.Номенклатура,НоваяСтрокаПродукция.Количество,НоваяСтрокаПродукция.Коэффициент,НоваяСтрокаПродукция.ТехнологическаяКарта,НоваяСтрокаПродукция.ПоТехКарте,НоваяСтрокаПродукция.Ключ,флВыпускПродукцииПоПлановымЦенам);
				КонецЕсли;
			КонецЦикла;
			
			Если ДокументОбъект.Продукция.Количество() > 0 Тогда
				
				Если ДокументОбъект.Состав.Количество() = 0 Тогда
					Сообщить( "При автопроизводстве номенклатуры """ + Строка(НоваяСтрокаПродукция.Номенклатура) + """ не удалось определить состав ингридиентов.");
					Отказ = Истина;
					Возврат;
				КонецЕсли;
				
				Попытка
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
				Исключение
					Сообщить(ОписаниеОшибки());
					Отказ = Истина;
					Возврат;
				КонецПопытки;
				Если тзГотоваяПродукция.Количество() > 0 Тогда
					//удаляем в таблице строку с документом, чтобы в таблице остались только не используемые документы, которые потом пометим на удаление
					тзГотоваяПродукция.Удалить(тзГотоваяПродукция[0]);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого СтрокаТзГотоваяПродукция Из тзГотоваяПродукция Цикл
		ДокументОбъект = СтрокаТзГотоваяПродукция.Ссылка.ПолучитьОбъект();
		Попытка 
			ДокументОбъект.УстановитьПометкуУдаления(Истина);
		Исключение
			Сообщить(ОписаниеОшибки());
			Отказ = Истина;
			Возврат;
		КонецПопытки;	
	КонецЦикла;
	
	Отказ = Ложь;
КонецПроцедуры	

//dps+
Функция ОформитьПерепродажу()
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ФирмаПродажи
	|	КОНЕЦ КАК ФирмаПерепродажи,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ПроцентПрибыли
	|	КОНЕЦ КАК ПроцентПрибыли,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ТипДоговора
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ТипДоговора
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ТипДоговора
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ТипДоговора
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ТипДоговора
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ТипДоговора
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ТипДоговора
	|	КОНЕЦ КАК ТипДоговора
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК Состав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа1
	|		ПО Состав.Номенклатура.Код = Перепродажа1.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа2
	|		ПО Состав.Номенклатура.Родитель.Код = Перепродажа2.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа3
	|		ПО Состав.Номенклатура.Родитель.Родитель.Код = Перепродажа3.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа4
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Код = Перепродажа4.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа5
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Родитель.Код = Перепродажа5.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа6
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Родитель.Родитель.Код = Перепродажа6.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа7
	|		ПО (Перепродажа7.ГруппаНоменклатуры = &ПустаяСтрока)
	|ГДЕ
	|	Состав.Ссылка = &Ссылка
	|	И (НЕ ВЫБОР
	|				КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа1.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа2.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа3.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа4.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа5.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа6.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа7.ФирмаПродажи
	|			КОНЕЦ ЕСТЬ NULL )
	|
	|СГРУППИРОВАТЬ ПО
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ФирмаПродажи
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ПроцентПрибыли
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ТипДоговора
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ТипДоговора
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ТипДоговора
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ТипДоговора
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ТипДоговора
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ТипДоговора
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ТипДоговора
	|	КОНЕЦ
	|ИТОГИ ПО
	|	ФирмаПерепродажи,
	|	ТипДоговора");
	Запрос.УстановитьПараметр("ПустаяСтрока","                    ");
	Запрос.УстановитьПараметр("Дата",ЭтотОбъект.Дата);
	Запрос.УстановитьПараметр("Фирма",ЭтотОбъект.Фирма);
	Запрос.УстановитьПараметр("СЕ",ЭтотОбъект.СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	
	//{ СИТЕК БрыляковЕЮ 2014-10-23  
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КоррекцияЗапасовСостав.Номенклатура КАК Номенклатура,
	|	КоррекцияЗапасовСостав.ЕдиницаИзмерения,
	|	КоррекцияЗапасовСостав.Количество,
	|	КоррекцияЗапасовСостав.Коэффициент,
	|	КоррекцияЗапасовСостав.Цена,
	|	КоррекцияЗапасовСостав.СуммаНДС,
	|	КоррекцияЗапасовСостав.Сумма,
	|	КоррекцияЗапасовСостав.СтавкаНДС
	|ПОМЕСТИТЬ ВТ_Состав
	|ИЗ
	|	Документ.КоррекцияЗапасов.Состав КАК КоррекцияЗапасовСостав
	|ГДЕ
	|	КоррекцияЗапасовСостав.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	Запрос.Выполнить();
	ПравилаПерепродажи = РегистрыСведений.Перепродажа.ПравилаДляОформленияПерепродажиВДокументах(Запрос.МенеджерВременныхТаблиц, СтруктурнаяЕдиница, Фирма, Дата);
	// СИТЕК БрыляковЕЮ 2014-10-23 }
	
	//найдем уже созданные документ перепродажи
	
	//{ СИТЕК БрыляковЕЮ 2014-10-23  
	// Исходный текст --> 
	//ВыборкаФирмы=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	// <-- Исходный текст 
	ВыборкаФирмы = ПравилаПерепродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	// СИТЕК БрыляковЕЮ 2014-10-23 }
	//{ СИТЕК БрыляковЕЮ 2014-10-03  
	// Не записывались движения перед формированием перепродажи, при том что перепродажа проверяет остатки при проведении
	Если ВыборкаФирмы.Количество() > 0 Тогда
		Для каждого НаборДвижений Из Движения Цикл
			Попытка
				Если НаборДвижений.Записывать Тогда
					НаборДвижений.БлокироватьДляИзменения = Истина;
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЦикла;
		Движения.Записать();
	КонецЕсли;
	// СИТЕК БрыляковЕЮ 2014-10-03 }
	Пока ВыборкаФирмы.Следующий() Цикл
		
		//{Ситек ДойниковПВ 2015-10-28 Если фирма покупки совпадает с фирмой продажи, ПередачаТоваровМеждуФирмами не формируем.} 
		Если ЭтотОбъект.Фирма = ВыборкаФирмы.ФирмаПерепродажи Тогда
			Продолжить;
		КонецЕсли;	
		//}Ситек ДойниковПВ 2015-10-28

		ВыборкаТипДоговора=ВыборкаФирмы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаТипДоговора.Следующий() Цикл

			//определим ссылку на уже существующий документ перепродажи     //dps+ 26/03/15 подчиненное перемещение создается с таким же гуид
			ДокСсылка = Документы.ПередачаТоваровМеждуФирмами.ПолучитьСсылку(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
			ДокОбъект = ДокСсылка.ПолучитьОбъект();
			Если ДокОбъект = Неопределено Тогда
				ДокОбъект = Документы.ПередачаТоваровМеждуФирмами.СоздатьДокумент();
				НоваяСсылка = Документы.ПередачаТоваровМеждуФирмами.ПолучитьСсылку(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
                ДокОбъект.УстановитьСсылкуНового(НоваяСсылка);
			КонецЕсли;
			
			ДокОбъект.Возврат = Истина;
			ДокОбъект.Валюта = ЭтотОбъект.СтруктурнаяЕдиница.Валюта;
			ДокОбъект.Дата   = ЭтотОбъект.Дата;
			ДокОбъект.ДокОснование = ЭтотОбъект.Ссылка.ДокОснование;
			ДокОбъект.ПометкаУдаления=Ложь;
			ДокОбъект.Кратность = 1;
			ДокОбъект.Курс = 1;
			ДокОбъект.Склад = ЭтотОбъект.Склад;
			ДокОбъект.СтруктурнаяЕдиница = ЭтотОбъект.СтруктурнаяЕдиница;
			ДокОбъект.ТипДоговора = ВыборкаТипДоговора.ТипДоговора;
			ДокОбъект.Фирма = ВыборкаТипДоговора.ФирмаПерепродажи;
			ДокОбъект.ФирмаПолучатель = ЭтотОбъект.Фирма;
			
			ДокОбъект.Состав.Очистить();
			ВыборкаСостав = ВыборкаТипДоговора.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСостав.Следующий() Цикл
				НоваяСтрока = ДокОбъект.Состав.Добавить();
				НоваяСтрока.ЕдиницаИзмерения = ВыборкаСостав.ЕдиницаИзмерения;
				НоваяСтрока.Количество   = ВыборкаСостав.Количество;
				НоваяСтрока.Коэффициент  = ВыборкаСостав.Коэффициент;
				НоваяСтрока.Номенклатура = ВыборкаСостав.Номенклатура;
				НоваяСтрока.СтавкаНДС    = ВыборкаСостав.СтавкаНДС;
				чЦена = ВыборкаСостав.Цена + Окр(ВыборкаСостав.Цена * ВыборкаСостав.ПроцентПрибыли / 100,2);
				НоваяСтрока.Цена     = чЦена;
				НоваяСтрока.Сумма    = Окр(ВыборкаСостав.Количество * чЦена, 2);
				НоваяСтрока.СуммаНДС = Окр(НоваяСтрока.Сумма * НоваяСтрока.СтавкаНДС.Ставка /(100 + НоваяСтрока.СтавкаНДС.Ставка),2);
			КонецЦикла;
			
			//{ СИТЕК БрыляковЕЮ 2014-10-10  Остатки в перепродаже получаются на дату документа, если даты равны, он не видит остатков по приходной накладной
			ДокОбъект.Дата = ЭтотОбъект.Дата - 1;
			// СИТЕК БрыляковЕЮ 2014-10-10 }
			
			//++БИТ БВО
			ДокОбъект.ПерераспределитьСоставПоОстаткам();
			//--БИТ БВО
			
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
		КонецЦикла;
		
	КонецЦикла;
	
КонецФункции

//dps-

//++БИТ БВО №0000129900
Процедура ПерераспределитьСоставПоОстаткам() Экспорт
		
	Izh_ОбщегоНазначенияСервер.ПерераспределитьСоставПоОстаткам(ЭтотОбъект);
	
КонецПроцедуры
//--БИТ БВО №0000129900