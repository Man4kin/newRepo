


&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
	Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

//Процедуры и функции для организации подбора

//{БредовЮГ 2014-06-09 Переделан подбор номенклатуры
&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	
	ПараметрыФормы = ПодготовитьПараметрыДляПодбора();
	Если ОткрытьФормуМодально("ОбщаяФорма.ПодборНоменклатуры",Новый Структура("СтруктураПараметров",ПараметрыФормы),ЭтаФорма) <> "ОК" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОбработатьПодборНаСервере(ПараметрыФормы.АдресВременногоХранилища);
	
	Для Каждого Строка Из ВыбраннаяНоменклатура Цикл
		ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Строка,Элементы.состав,СтандартнаяОбработка,Строка.Количество);
	КонецЦикла;	
	
	//ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстЗапросаПодбораНоменклатуры()
	Возврат "ВЫБРАТЬ
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	СписокНоменклатуры.Группа,
	|	ВЫБОР
	|		КОГДА СписокНоменклатуры.ПометкаУдаления
	|			ТОГДА ВЫБОР
	|					КОГДА СписокНоменклатуры.Группа = 0
	|						ТОГДА 2
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНоменклатуры.Группа = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка,
	|	СписокНоменклатуры.Ссылка КАК Номенклатура,
	|	СписокНоменклатуры.Ссылка КАК Ссылка,
	|	ОстаткиНоменклатуры.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	Справочник.Номенклатура КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				,
	|				МестоХранения = &МестоХранения
	|					И Фирма = &Фирма) КАК ОстаткиНоменклатуры
	|		ПО СписокНоменклатуры.Ссылка = ОстаткиНоменклатуры.Номенклатура
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							СтатусыНоменклатуры.Номенклатура
	|						ИЗ
	|							РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	|						ГДЕ
	|							СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
КонецФункции

&НаСервере
Функция ПодготовитьПараметрыДляПодбора()
	СтруктураПараметровПодбора = Новый Структура("ТекстЗапроса,Параметры,АдресВременногоХранилища",);
	СтруктураПараметровПодбора.АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Неопределено,ЭтаФорма.УникальныйИдентификатор);
	СтруктураПараметровПодбора.ТекстЗапроса = ТекстЗапросаПодбораНоменклатуры();
	СтруктураПараметрыЗапроса = Новый Структура();
	СтруктураПараметрыЗапроса.Вставить("Фирма",Объект.Фирма);
	СтруктураПараметрыЗапроса.Вставить("СтруктурнаяЕдиница",Объект.Склад.Владелец);
	СтруктураПараметрыЗапроса.Вставить("МестоХранения",Объект.Склад);
	СтруктураПараметровПодбора.Параметры = СтруктураПараметрыЗапроса;
	Возврат СтруктураПараметровПодбора;	
КонецФункции

&НаСервере
Процедура ОбработатьПодборНаСервере(АдресХранилища)
	тзЗначений = ПолучитьИзВременногоХранилища(АдресХранилища);
	ЗначениеВРеквизитФормы(тзЗначений,"ВыбраннаяНоменклатура");
КонецПроцедуры


//Конец Процедуры и функции для организации подбора


&НаКлиенте
Процедура ОприходованиеПриИзменении(Элемент)
	ВидимостьПриИзмененииОприходования();
	Если Объект.Оприходование Тогда
		 Объект.ВидСписания = "";
		 Объект.ВиновноеЛицо = "";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьПриИзмененииОприходования()
	//Элементы.ВидСписания.Видимость=НЕ Объект.Оприходование;
	Элементы.ВиновноеЛицо.Доступность = НЕ Объект.Оприходование;
	Элементы.Состав.ПодчиненныеЭлементы.СоставСумма.Видимость =  Объект.Оприходование;
	Элементы.Состав.ПодчиненныеЭлементы.СоставЦена.Видимость  =  Объект.Оприходование;
	Элементы.Состав.ПодчиненныеЭлементы.СоставСуммаУпр.Видимость =  Объект.Оприходование;
	Элементы.Состав.ПодчиненныеЭлементы.СоставЦенаУпр.Видимость  =  Объект.Оприходование;
	Элементы.Состав.ПодчиненныеЭлементы.СоставСтавкаНДС.Видимость =  Объект.Оприходование;
	Элементы.Состав.ПодчиненныеЭлементы.СоставСуммаНДС.Видимость  =  Объект.Оприходование;
	Элементы.Состав.ПодчиненныеЭлементы.СоставСуммаНДСУпр.Видимость =  Объект.Оприходование;

	Элементы.Состав.КоманднаяПанель.ПодчиненныеЭлементы.СоставЗаполнитьЦеныЗакупки.Доступность =  Объект.Оприходование;

КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидимостьПриИзмененииОприходования();
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "BarCodeScaner" И Событие = "BarCodeValue" Тогда
		Если Не ВводДоступен() Тогда
			КомпонентаСканераШК.СобытиеОбработано();
			Возврат;   
		КонецЕсли;
		//СтруктураПодбора = Новый ;
		//СтрокаТЧ = РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВДокументах(ЭтаФорма,Объект,Элементы.Состав,Данные,СтруктураПодбора);
		//КомпонентаСканераШК.СобытиеОбработано();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставКоличествоПриИзменении(Элемент)
	Если Объект.Оприходование Тогда
		ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
		ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры


&НаКлиенте
Процедура СоставСуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦеныЗакупки(Команда)
	ПолучитьЦеныЗакупки();
	//{{ШиловМВ 08.12.14 №000136167
	ПолучитьСебестоимость();//для тех товаров, по которым не смогли определить цену закупки, хотя и здесь шансов не много
	ПолучитьЦеныПоставщика();//если уж даже 2 предыдущих процедуры не заполнили цены - то попытаемся их взять из цен номенклатуры контрагента
	//ШиловМВ 08.12.14 №000136167}}
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЦеныЗакупки()
	
	тз=Объект.Состав.Выгрузить();
	тз2 = РаботаСФормамиСервер.ПолучитьЦеныЗакупки(тз,Объект.Дата,Объект.Фирма,Объект.Склад.Владелец);
	мсв=Новый Массив();
	Для каждого с из Объект.Состав цикл
		
		мсв = тз2.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",с.Номенклатура,с.ЕдиницаИзмерения));
		Если мсв.Количество() > 0 Тогда
			с_тз2 = мсв[0];
			
			с.Цена  = с_тз2.Цена;
			с.Сумма = Окр(с.Цена*с.Количество,2);
			с.СуммаНДС = Окр(с.Сумма * с.СтавкаНДС.Ставка / (с.СтавкаНДС.Ставка + 100),2);
			
			с.ЦенаУпр  = с_тз2.ЦенаУпр;
			с.СуммаУпр = Окр(с.ЦенаУпр*с.Количество,2);
			с.СуммаНДСУпр = Окр(с.СуммаУпр * с.СтавкаНДС.Ставка / (с.СтавкаНДС.Ставка + 100),2);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

//{{ШиловМВ 08.12.14 №000136167
&НаСервере
Процедура ПолучитьСебестоимость()

	Запрос = Новый Запрос;
	Запрос.Текст=
		"ВЫБРАТЬ
		|	Состав.НомерСтроки,
		|	Состав.Номенклатура,
		|	Состав.ЕдиницаИзмерения,
		|	Состав.Цена,
		|	Состав.ЦенаУпр,
		|	&Склад КАК Склад,
		|	&Фирма КАК Фирма
		|ПОМЕСТИТЬ Состав
		|ИЗ
		|	&Состав КАК Состав
		|ГДЕ
		|	(Состав.Цена = 0
		|			ИЛИ Состав.ЦенаУпр = 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Состав.НомерСтроки,
		|	ВЫБОР
		|		КОГДА Состав.Цена = 0
		|			ТОГДА ОстаткиНоменклатурыОстатки.СуммаОстаток / ОстаткиНоменклатурыОстатки.КоличествоОстаток * ЕдиницыИзмерения.Коэффициент
		|		ИНАЧЕ Состав.Цена
		|	КОНЕЦ КАК Цена,
		|	ВЫБОР
		|		КОГДА Состав.ЦенаУпр = 0
		|			ТОГДА ОстаткиНоменклатурыОстатки.СуммаОстаток / ОстаткиНоменклатурыОстатки.КоличествоОстаток * ЕдиницыИзмерения.Коэффициент
		|		ИНАЧЕ Состав.ЦенаУпр
		|	КОНЕЦ КАК ЦенаУпр		
		|ИЗ
		|	Состав КАК Состав
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&Период,
		|				(Номенклатура, МестоХранения, Фирма) В
		|					(ВЫБРАТЬ
		|						Состав.Номенклатура,
		|						Состав.Склад,
		|						Состав.Фирма
		|					ИЗ
		|						Состав КАК Состав)) КАК ОстаткиНоменклатурыОстатки
		|		ПО Состав.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|			И Состав.Склад = ОстаткиНоменклатурыОстатки.МестоХранения
		|			И Состав.Фирма = ОстаткиНоменклатурыОстатки.Фирма
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|		ПО Состав.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток <> 0
		|	И (ОстаткиНоменклатурыОстатки.СуммаОстаток <> 0
		|			ИЛИ ОстаткиНоменклатурыОстатки.СуммаУпрОстаток <> 0)";
		
	Запрос.УстановитьПараметр("Состав", Объект.Состав.Выгрузить());
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Фирма", Объект.Фирма);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		сСостав = Объект.Состав[Выборка.НомерСтроки-1];
		
		сСостав.Цена    = ?(Выборка.Цена>0,Выборка.Цена,-Выборка.Цена);
		сСостав.Сумма   = Окр(сСостав.Цена*сСостав.Количество,2);
		сСостав.СуммаНДС = Окр(сСостав.Сумма * сСостав.СтавкаНДС.Ставка / (сСостав.СтавкаНДС.Ставка + 100),2);
		
		сСостав.ЦенаУпр  = ?(Выборка.ЦенаУпр>0,Выборка.ЦенаУпр,-Выборка.ЦенаУпр);
		сСостав.СуммаУпр = Окр(сСостав.ЦенаУпр*сСостав.Количество,2);
		сСостав.СуммаНДСУпр = Окр(сСостав.СуммаУпр * сСостав.СтавкаНДС.Ставка / (сСостав.СтавкаНДС.Ставка + 100),2);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЦеныПоставщика()

	Запрос = Новый Запрос;
	Запрос.Текст=
		"ВЫБРАТЬ
		|	Состав.НомерСтроки,
		|	Состав.Номенклатура,
		|	Состав.ЕдиницаИзмерения,
		|	Состав.Цена,
		|	Состав.ЦенаУпр,
		|	&Склад,
		|	&Фирма
		|ПОМЕСТИТЬ Состав
		|ИЗ
		|	&Состав КАК Состав
		|ГДЕ
		|	(Состав.Цена = 0
		|			ИЛИ Состав.ЦенаУпр = 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Состав.НомерСтроки,
		|	ВЫБОР
		|		КОГДА Состав.Цена = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
		|						ТОГДА НоменклатураКонтрагента.Цена
		|					ИНАЧЕ НоменклатураКонтрагента.Цена * (100 + НоменклатураКонтрагента.Номенклатура.СтавкаНДС.Ставка) / 100
		|				КОНЕЦ
		|		ИНАЧЕ Состав.Цена
		|	КОНЕЦ КАК Цена,
		|	ВЫБОР
		|		КОГДА Состав.ЦенаУпр = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
		|						ТОГДА НоменклатураКонтрагента.Цена
		|					ИНАЧЕ НоменклатураКонтрагента.Цена * (100 + НоменклатураКонтрагента.Номенклатура.СтавкаНДС.Ставка) / 100
		|				КОНЕЦ
		|		ИНАЧЕ Состав.ЦенаУпр
		|	КОНЕЦ КАК ЦенаУпр
		|ИЗ
		|	Состав КАК Состав
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|		ПО Состав.Номенклатура = НоменклатураКонтрагента.Номенклатура,
		|	Константа.ВключатьНДСВЦеныКонтрагентов КАК ВключатьНДСВЦеныКонтрагентов";
		
	Запрос.УстановитьПараметр("Состав", Объект.Состав.Выгрузить());
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Фирма", Объект.Фирма);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		сСостав = Объект.Состав[Выборка.НомерСтроки-1];
		
		сСостав.Цена    = Выборка.Цена;
		сСостав.Сумма   = Окр(сСостав.Цена*сСостав.Количество,2);
		сСостав.СуммаНДС = Окр(сСостав.Сумма * сСостав.СтавкаНДС.Ставка / (сСостав.СтавкаНДС.Ставка + 100),2);
		
		сСостав.ЦенаУпр = Выборка.ЦенаУпр;
		сСостав.СуммаУпр = Окр(сСостав.ЦенаУпр*сСостав.Количество,2);
		сСостав.СуммаНДСУпр = Окр(сСостав.СуммаУпр * сСостав.СтавкаНДС.Ставка / (сСостав.СтавкаНДС.Ставка + 100),2);
		
	КонецЦикла;
	
КонецПроцедуры
//ШиловМВ 08.12.14 №000136167}}

&НаКлиенте
Процедура СоставЦенаУпрПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставСуммаУпрПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставСтавкаНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
КонецПроцедуры

//&НаКлиенте
//Процедура РеквизитыПриИзменении(Элемент)
//	Установитьпараметры();
//КонецПроцедуры

&НаКлиенте
Процедура НайтиТоварВСпискеПоШтрихкоду(Команда)
	
	ШК = "";
	Если Не ВвестиЗначение(ШК, НСтр("ru = 'Введите штрихкод'")) Тогда
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ШК) Тогда
		Возврат;
	КонецЕсли;
	
	//РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВСпискеНоменклатуры(ШК, ПодборНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура АнализДокумента(Команда)
	
	Если Модифицированность Тогда
		Сообщить("Документ необходимо записать");
	Иначе
	    ПараметрыОтчета = Новый Структура("СформироватьПриОткрытии, КоррекцияЗапасов", Истина, Объект.Ссылка);
	    ОткрытьФорму("Отчет.АнализРезультатовКоррекцииЗапасов.Форма", ПараметрыОтчета);
	КонецЕсли;
		
КонецПроцедуры

//{БредовЮГ 2013-08-01 
&НаСервере
Функция ПоместитьВовременноеХранилищеНаСервере()
	тзШаблон = Новый ТаблицаЗначений;
	тзШаблон.Колонки.Добавить("Номенклатура");
	тзШаблон.Колонки.Добавить("Количество");
	Возврат ПоместитьВоВременноеХранилище(тзШаблон,ЭтаФорма.УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ОбработатьРезультатТСДНаСервере(АдресХранилища)
	тзРезультат = ПолучитьИзВременногоХранилища(АдресХранилища);		
	Для Каждого СтрокаТЗ из тзРезультат Цикл
		МассивСтрок = Объект.Состав.НайтиСтроки(Новый Структура("Номенклатура",СтрокаТЗ.Номенклатура));
		Если МассивСтрок.Количество()=0 Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Номенклатура = СтрокаТЗ.Номенклатура;
			СтруктураДанных = Новый Структура;    
			СтруктураДанных.Вставить("Номенклатура",	 НоваяСтрока.Номенклатура);
			СтруктураДанных.Вставить("ЕдиницаИзмерения", НоваяСтрока.ЕдиницаИзмерения);
			СтруктураДанных.Вставить("Коэффициент",НоваяСтрока.Коэффициент);
			СтруктураДанных.Вставить("СтавкаНДС",НоваяСтрока.СтавкаНДС);
			ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
			НоваяСтрока.Количество = СтрокаТЗ.Количество;
		Иначе
			МассивСтрок[0].Количество = СтрокаТЗ.Количество;
			Если Объект.Оприходование Тогда
				СтрокаТЧ = МассивСтрок[0];
				СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.Количество;
				СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(СтрокаТЧ.СтавкаНДС);
				СтрокаТЧ.СуммаНДС = Окр(СтавкаНДС * СтрокаТЧ.Сумма / (100 + СтавкаНДС),2);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьИЗТСД(Команда)
	Если Вопрос("Заполнить данными из терминала ?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
		АдресХранилища = ПоместитьВоВременноеХранилищеНаСервере();
		ФормаОбработки = ПолучитьФорму("Обработка.Izh_ТСД.Форма.ФормаОбработки",Новый Структура("АдресХранилища,ВидДействия,ВнешнийВызов,СтруктураПараметров",АдресХранилища,"Инвентаризация",Истина,Новый Структура("ТипДействия","ВыгрузкаИзТСД")),ЭтаФорма.УникальныйИдентификатор);
		ФормаОбработки.ОткрытьМодально();
		ОбработатьРезультатТСДНаСервере(АдресХранилища);
	КонецЕсли;
КонецПроцедуры

//БредовЮГ 2013-08-01 }


//++БИТ БВО №0000129900 2015-06-03
&НаСервере
Процедура ПерераспределитьПоОстаткамНаСервере() Экспорт
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ПерераспределитьСоставПоОстаткам();
	Объект.Состав.Загрузить(ДокументОбъект.Состав.Выгрузить());
		
КонецПроцедуры

&НаКлиенте
Процедура ПерераспределитьПоОстаткам(Команда)
	
	ПерераспределитьПоОстаткамНаСервере();
	Для Каждого СтрокаСостава Из Объект.Состав Цикл
		ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаСостава);
	КонецЦикла;
	
КонецПроцедуры
//--БИТ БВО №0000129900 2015-06-03
