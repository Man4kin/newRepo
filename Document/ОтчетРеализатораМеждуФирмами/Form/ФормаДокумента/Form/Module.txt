
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
	Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

 //Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество);
		ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Валюта(Команда)
	РаботаСФормамиКлиент.ОткрытьФормуВводаВалютыКурса(Объект);
	ОбновитьПредставлениеВалюты();
КонецПроцедуры

//Конец Процедуры и функции для организации подбора

 &НаСервереБезКонтекста
Функция ИспользованиеВалюты(СтруктурнаяЕдиница)
	 
	Возврат ПолучитьФункциональнуюОпцию("ИспользованиеВалюты",Новый Структура("СтруктурнаяЕдиница,ПараметрСтруктурнойЕдиницы",СтруктурнаяЕдиница,ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеВалюты));

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКурсВалютыНаДату(Валюта,Дата)
	 
	Возврат РаботаСКурсамиВалютКлиентСервер.ПолучитьКурсВалютыНаДату(Валюта,Дата);

КонецФункции

&НаКлиенте
Процедура ОбновитьПредставлениеВалюты()
	Если Объект.Курс = 1 Тогда
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = Объект.Валюта;
	Иначе
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = ""+Объект.Валюта+" "+Объект.Курс;
	КонецЕсли;	
КонецПроцедуры	


&НаСервереБезКонтекста
Функция ПолучитьВалютуСтруктурнойЕдиницы(се)
	
	Возврат се.Валюта;
	 
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	загрузитьНастройкиПодбора();
КонецПроцедуры


&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьСостав();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСостав()
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РеализацияОстатки.Номенклатура,
	|	РеализацияОстатки.ПоДокументу,
	|	РеализацияОстатки.КоличествоОстаток КАК КоличествоОст,
	|	РеализацияОстатки.КоличествоОстаток КАК Количество,
	|	ВЫРАЗИТЬ(РеализацияОстатки.СуммаОстаток / РеализацияОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВЫРАЗИТЬ(РеализацияОстатки.СуммаПродажиОстаток / РеализацияОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2)) КАК ЦенаПродажи,
	|	РеализацияОстатки.СуммаОстаток КАК Сумма,
	|	РеализацияОстатки.СуммаПродажиОстаток КАК СуммаПродажи,
	|	РеализацияОстатки.СуммаНДСПродажиОстаток КАК СуммаНДС,
	|	МАКСИМУМ(ЕдиницыИзмерения.Ссылка) КАК ЕдиницаИзмерения,
	|	1 КАК Коэффициент,
	//++БИТ БВО 
	//|	РеализацияОстатки.Номенклатура.СтавкаНДС КАК СтавкаНДС
	|	ВЫБОР КОГДА РеализацияОстатки.Комитент.НеПлательщикНДС
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		ИНАЧЕ РеализацияОстатки.Номенклатура.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС	
	//--БИТ БВО 
	|ИЗ
	|	РегистрНакопления.Реализация.Остатки(
	|			&Дата,
	|			Комитент = &Комитент
	|				И Фирма = &Комиссионер) КАК РеализацияОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО РеализацияОстатки.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И РеализацияОстатки.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|			И ((НЕ ЕдиницыИзмерения.ПометкаУдаления))
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияОстатки.Номенклатура,
	|	РеализацияОстатки.ПоДокументу,
	|	РеализацияОстатки.КоличествоОстаток,
	|	РеализацияОстатки.СуммаОстаток,
	|	РеализацияОстатки.СуммаПродажиОстаток,
	|	РеализацияОстатки.СуммаНДСПродажиОстаток,
	|	ВЫРАЗИТЬ(РеализацияОстатки.СуммаОстаток / РеализацияОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(РеализацияОстатки.СуммаПродажиОстаток / РеализацияОстатки.КоличествоОстаток КАК ЧИСЛО(15, 2)),
	//++БИТ БВО 
	//|	РеализацияОстатки.Номенклатура.СтавкаНДС,
	|	ВЫБОР КОГДА РеализацияОстатки.Комитент.НеПлательщикНДС
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		ИНАЧЕ РеализацияОстатки.Номенклатура.СтавкаНДС
	|	КОНЕЦ,
	//--БИТ БВО
	|	РеализацияОстатки.КоличествоОстаток");	
	Запрос.УстановитьПараметр("Дата"		, Объект.Дата);
	Запрос.УстановитьПараметр("Комитент"	, Объект.ФирмаКомитент);
	Запрос.УстановитьПараметр("Комиссионер"	, Объект.ФирмаКомиссионер);
	ТЗ = Запрос.Выполнить().Выгрузить();
	Объект.Состав.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставЦенаПродажиПриИзменении(Элемент)
	ПересчетСуммыПродажи();
КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммыПродажи()
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	ТекСтрока.СуммаПродажи = Окр(ТекСтрока.ЦенаПродажи*ТекСтрока.Количество,2);
	
КонецПроцедуры	

&НаКлиенте
Процедура СоставКоличествоПриИзменении(Элемент)
	ПересчетСуммыПродажи();
	ПересчетСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммы()
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	ТекСтрока.Сумма = Окр(ТекСтрока.Цена*ТекСтрока.Количество,2);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

 &НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
		Настройки = ПолучитьНастройкуПодбора();
		ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры
