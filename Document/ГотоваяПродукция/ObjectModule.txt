Перем флОтрицательныеОстаткиЗапрещены;

Процедура СформироватьКоррекциюЗапасов(ЭтотОбъект)
	
	Если ЭтотОбъект.ВидПроизводства <> Перечисления.ВидыПроизводства.Разделка Тогда
		 Возврат;
	КонецЕсли;
	
	ПродукцияДокументаОснования = ЭтотОбъект.Продукция;
	
	ЕстьТехКартыСРазделкой = ЛОЖЬ;
	Для Каждого СтрокаПродукции	Из ПродукцияДокументаОснования Цикл
		Если ЗначениеЗаполнено(СтрокаПродукции.ТехнологическаяКарта) И СтрокаПродукции.ТехнологическаяКарта.ВозможнаРазделка Тогда
			ЕстьТехКартыСРазделкой = ИСТИНА;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЕстьТехКартыСРазделкой Тогда
		 Возврат;
	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КоррекцияЗапасов.Ссылка
	|ИЗ
	|	Документ.КоррекцияЗапасов КАК КоррекцияЗапасов
	|ГДЕ
	|	КоррекцияЗапасов.ДокОснование = &ДокОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	КоррекцияЗапасов.Ссылка");
	Запрос.УстановитьПараметр("ДокОснование",ЭтотОбъект.Ссылка);
	тзГотоваяПродукция = Запрос.Выполнить().Выгрузить();
	
	Если тзГотоваяПродукция.Количество() = 0 Тогда
		ДокументКоррекцииЗапасов = Документы.КоррекцияЗапасов.СоздатьДокумент();
	Иначе	
		ТолькоПросмотрДокумента = РаботаСФормамиСервер.ЗапрещеноРедактировать(тзГотоваяПродукция[0].Ссылка);
		Если ТолькоПросмотрДокумента Тогда
			Возврат;
		Иначе
			ДокументКоррекцииЗапасов = тзГотоваяПродукция[0].Ссылка.ПолучитьОбъект();
			ДокументКоррекцииЗапасов.ПометкаУдаления = ЛОЖЬ;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГотоваяПродукцияСостав.Номенклатура,
		|	ГотоваяПродукцияСостав.ЕдиницаИзмерения,
		|	ГотоваяПродукцияСостав.Коэффициент,
		|	СУММА(ГотоваяПродукцияСостав.Количество * ГотоваяПродукцияСостав.Коэффициент * ГотоваяПродукцияСостав.ПроцентСписания / 100) КАК Количество
		|ИЗ
		|	Документ.ГотоваяПродукция.Состав КАК ГотоваяПродукцияСостав
		|ГДЕ
		|	ГотоваяПродукцияСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ГотоваяПродукцияСостав.Номенклатура,
		|	ГотоваяПродукцияСостав.ЕдиницаИзмерения,
		|	ГотоваяПродукцияСостав.Коэффициент
		|
		|ИМЕЮЩИЕ
		|	СУММА(ГотоваяПродукцияСостав.Количество * ГотоваяПродукцияСостав.Коэффициент * ГотоваяПродукцияСостав.ПроцентСписания / 100) > 0";

	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Результат = Запрос.Выполнить();

	ДокументКоррекцииЗапасов.Дата               = ЭтотОбъект.Дата + 1;
	ДокументКоррекцииЗапасов.СтруктурнаяЕдиница = ЭтотОбъект.СтруктурнаяЕдиница;
	ДокументКоррекцииЗапасов.Склад              = ЭтотОбъект.Склад;
	ДокументКоррекцииЗапасов.Фирма              = ЭтотОбъект.Фирма;
	ДокументКоррекцииЗапасов.Автор              = ПараметрыСеанса.ТекущийПользователь;
	ДокументКоррекцииЗапасов.ДокОснование       = ЭтотОбъект.Ссылка;
	КодКоррекции = ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодКоррекцииСписаниеПотерь);
	ВидСписания = Справочники.ВидыСписания.НайтиПоКоду(КодКоррекции);
	Если НЕ ЗначениеЗаполнено(ВидСписания) Тогда
		Сообщить("Не найден вид списания с кодом "+Строка(КодКоррекции)+", заданным в служебном значении ""Код коррекции списание потерь.""");
		Сообщить("Документ списания потерь не создан.");
		Возврат;
	КонецЕсли;
	ДокументКоррекцииЗапасов.ВидСписания        = ВидСписания;
	ДокументКоррекцииЗапасов.Основание          = "Списание при разделке";
	ДокументКоррекцииЗапасов.Состав.Загрузить(Результат.Выгрузить());
	ДокументКоррекцииЗапасов.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ЗаполнитьОбратноеПроизводство(ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.ВидПроизводства <> Перечисления.ВидыПроизводства.Приготовление Тогда
		ТекстСообщения = НСтр("ru='Ввод на основании возможен только для документов с видом производства ""Приготовление"".'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ПродукцияДокументаОснования = ДанныеЗаполнения.Продукция;
	СоставДокументаОснования = ДанныеЗаполнения.Состав;
	
	ЕстьТехКартыСРазделкой = ЛОЖЬ;
	Для Каждого СтрокаПродукции	Из ПродукцияДокументаОснования Цикл
		Если ЗначениеЗаполнено(СтрокаПродукции.ТехнологическаяКарта) И СтрокаПродукции.ТехнологическаяКарта.ВозможнаРазделка Тогда
			ЕстьТехКартыСРазделкой = ИСТИНА;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЕстьТехКартыСРазделкой Тогда
		ТекстСообщения = НСтр("ru='В документе-основании нет ни одной технологической карты, предполагающей разделку.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ДокОснование       = ДанныеЗаполнения.Ссылка;
	ВидПроизводства    = Перечисления.ВидыПроизводства.Разделка;	
	СтруктурнаяЕдиница = ДанныеЗаполнения.СтруктурнаяЕдиница;
	Фирма              = ДанныеЗаполнения.Фирма;
	СкладПроизводства  = ДанныеЗаполнения.Склад;
	Склад              = ДанныеЗаполнения.СкладПроизводства;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура,
	|   ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.Сумма / ОстаткиНоменклатуры.Количество), 0) КАК Цена, 
	|   ЕСТЬNULL(СУММА(ОстаткиНоменклатуры.СуммаНДС / ОстаткиНоменклатуры.Количество), 0) КАК ЦенаНДС 
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура";
	
	Результат = Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГотоваяПродукцияПродукция.*
	|ПОМЕСТИТЬ ВремТаблицаПродукция
	|ИЗ
	|	Документ.ГотоваяПродукция.Продукция КАК ГотоваяПродукцияПродукция
	|ГДЕ
	|	ГотоваяПродукцияПродукция.ТехнологическаяКарта.ВозможнаРазделка
	|	И ГотоваяПродукцияПродукция.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВремТаблицаПродукция.*
	|ИЗ
	|	ВремТаблицаПродукция КАК ВремТаблицаПродукция";
	
	Результат = Запрос.Выполнить();
	ТЗПродукция = Результат.Выгрузить();
	Продукция.Загрузить(ТЗПродукция);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВремТаблицаПродукция.Ключ,
	|	Состав.Ссылка,
	|	Состав.НомерСтроки,
	|	Состав.Номенклатура,
	|	Состав.Количество,
	|	Состав.КоэффициентРаспределенияЦены,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Коэффициент,
	|	Состав.Ингредиент,
	|	Состав.ПлановаяСтоимость,
	|	Состав.ПлановаяСтоимостьНДС,
	|	Состав.СуммаПлановая,
	|	Состав.СуммаНДСПлановая,
	|	Состав.ПроцентСписания
	|ИЗ
	|	ВремТаблицаПродукция КАК ВремТаблицаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ГотоваяПродукцияСостав.Ссылка КАК Ссылка,
	|			ГотоваяПродукцияСостав.НомерСтроки КАК НомерСтроки,
	|			ГотоваяПродукцияСостав.Номенклатура КАК Номенклатура,
	|			ГотоваяПродукцияСостав.Количество КАК Количество,
	|			ГотоваяПродукцияСостав.КоэффициентРаспределенияЦены КАК КоэффициентРаспределенияЦены,
	|			ГотоваяПродукцияСостав.ПроцентСписания КАК ПроцентСписания,
	|			ГотоваяПродукцияСостав.Ключ КАК Ключ,
	|			ГотоваяПродукцияСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|			ГотоваяПродукцияСостав.Коэффициент КАК Коэффициент,
	|			ГотоваяПродукцияСостав.Ингредиент КАК Ингредиент,
	|			ЕСТЬNULL(ОстаткиНоменклатуры.Цена,0) КАК ПлановаяСтоимость,
	|			ЕСТЬNULL(ОстаткиНоменклатуры.ЦенаНДС,0) КАК ПлановаяСтоимостьНДС,
	|			ЕСТЬNULL(ОстаткиНоменклатуры.Цена * ГотоваяПродукцияСостав.Количество,0) КАК СуммаПлановая,
	|			ЕСТЬNULL(ОстаткиНоменклатуры.ЦенаНДС * ГотоваяПродукцияСостав.Количество,0) КАК СуммаНДСПлановая
	|		ИЗ
	|			Документ.ГотоваяПродукция.Состав КАК ГотоваяПродукцияСостав
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|			ПО ГотоваяПродукцияСостав.Номенклатура = ОстаткиНоменклатуры.Номенклатура
	|		ГДЕ
	|			ГотоваяПродукцияСостав.Ссылка = &Ссылка) КАК Состав
	|		ПО (Состав.Ключ = ВремТаблицаПродукция.Ключ)";
	
	Результат = Запрос.Выполнить();
	ТЗСостав = Результат.Выгрузить();
	Состав.Загрузить(ТЗСостав);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ИнициализироватьДокумент();
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказВнешний") Тогда
		ДатаПоставки = ДанныеЗаполнения.Состав[0].ДатаПоставки;
		СкладПроизводства = ДанныеЗаполнения.Склад;
		Фирма = ДанныеЗаполнения.Фирма;
		ЗаполнитьПоЗаказам(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ГотоваяПродукция") Тогда
		ЗаполнитьОбратноеПроизводство(ДанныеЗаполнения);
	КонецЕсли;
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
	Дата = ТекущаяДата();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

//Необходимо:
// 1. Для ВидПроизводства = Приготовление
//  1.1 Пытаемся списать номенклатуру из тч Состав сначала ту часть, что есть на остатках
//  1.2 В табличной части может присутствовать номенклатура, которая сама является продукцией, если на шаге 1.1 она списалась не вся,
//      тогда необходимо рекурсивно получить ее составляющие по последней технологической карте (проведенной и не помеченной на удаление) и попытаться списать составляющие
//  1.3 При получении составляющих по тех карте необходимо ингредиенты заменять на номенклатуру с учетом приоритета
//  1.4 Алгоритм проведения строим таким образом:
//		1.4.1 Получаем таблицу номенклатуры для фильтра по остаткам регистра ОстаткиНоменклатуры - рекурсивно обходя все вложенные тех карты
//		1.4.2 Выполняем запрос по остаткам (фильтруя по статусу Собственый),получаем таблицу значений с остатками и индексируем ее
//      1.4.3 Строим дерево: Продукция/Товар(Ингредиент)/Товар (замена ингредиента)
//      1.4.4 Обходим дерево получая данные по остаткам из тз и одновременно уменьшаем количество остатка в тз - заполняем таблицу значений для движений
//      1.4.5 Если остатка не хватает то, для не ингредиента списываем в минус по номенклатуре товара, а для ингредиента списываем по номенклатере из первой строки
//      1.4.6 Сворачиваем таблицу значений движений и пишем в набор записей
Функция ПровестиГотоваяПродукция(РежимПроведения)
	
	флВыпускПродукцииПоПлановымЦенам = ОбщегоНазначенияСервер.ПолучитьУчетнуюПолитикуФирмы(Фирма,Дата).ВыпускПродукцииПоПлановымЦенам;
	
	флОтрицательныеОстаткиЗапрещены = НЕ СкладПроизводства.ОтрицательныеОстатки;
	
	МоментВремениДокументаДляФильтраОстатков = ПроведениеДокументов.ПолучитьМоментВремени(Ссылка,Дата,РежимПроведения);
	МоментВремениДокумента = МоментВремени(); 
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(ЭтотОбъект,"ОстаткиНоменклатуры");
	Движения.ОстаткиНоменклатуры.Очистить();	
	//popn-
	
	тзОстаткиНоменклатуры = Движения.ОстаткиНоменклатуры.Выгрузить();
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	
	Если      ВидПроизводства = Перечисления.ВидыПроизводства.Приготовление Тогда
		дз = Новый ДеревоЗначений;
		дз.Колонки.Добавить("Продукция");
		дз.Колонки.Добавить("Номенклатура");
		дз.Колонки.Добавить("Количество");
		дз.Колонки.Добавить("КоэффициентЗамены");
		дз.Колонки.Добавить("флИнгредиент");
		дз.Колонки.Добавить("СуммаПлановая");
		//popn+
		дз.Колонки.Добавить("СуммаНДСПлановая");
		//popn-
		соРаскладкаНоменклатуры      = Новый Соответствие;    //хранит номенклатуру, по которой нет тех карт, используется для исключения повторного запроса для поиска тех карты
		тзФильтрОстатковНоменклатуры = Новый ТаблицаЗначений; //для фильтра таблицы остатков
		тзФильтрОстатковНоменклатуры.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		тзФильтрОстатковНоменклатуры.Колонки.Добавить("МестоХранения",Новый ОписаниеТипов("СправочникСсылка.Склады"));
		тзФильтрОстатковНоменклатуры.Колонки.Добавить("Фирма",        Новый ОписаниеТипов("СправочникСсылка.Организации"));
		тзФильтрОстатковНоменклатуры.Колонки.Добавить("Статус",       Новый ОписаниеТипов("ПеречислениеСсылка.ТипыДоговоров"));
		
		соСписокАналогов             = Новый Соответствие;    //храним список аналогов, чтобы повторно не считывать из БД
		Для каждого СтрокаПродукция из Продукция Цикл
			СтрокаДзПродукция = дз.Строки.Добавить();
			СтрокаДзПродукция.Продукция     = СтрокаПродукция.Номенклатура;
			СтрокаДзПродукция.Количество    = Окр(СтрокаПродукция.Количество * СтрокаПродукция.Коэффициент,4);
			СтрокаДзПродукция.СуммаПлановая = СтрокаПродукция.СуммаПлановая;
			//popn+
			СтрокаДзПродукция.СуммаНДСПлановая = СтрокаПродукция.СуммаНДСПлановая;
			//popn-
			мсвСтрокСостава = Состав.НайтиСтроки(Новый Структура("Ключ",СтрокаПродукция.Ключ));
			Для каждого СтрокаСостава из мсвСтрокСостава Цикл
				СтрокаДзТовар = СтрокаДзПродукция.Строки.Добавить();
				СтрокаДзТовар.Номенклатура = СтрокаСостава.Номенклатура;
				СтрокаДзТовар.Количество   = Окр(СтрокаСостава.Количество * СтрокаСостава.Коэффициент,4);
				
				Если ЗначениеЗаполнено(СтрокаСостава.Ингредиент) Тогда
					
					//по номенклатуре ингредиенту нужно получить список аналогов
					СтрокаДзТовар.флИнгредиент = Истина;
					
					тзАналоги = соСписокАналогов.Получить(СтрокаСостава.Ингредиент);
					Если тзАналоги = Неопределено Тогда
						тзАналоги = СтрокаСостава.Ингредиент.Состав.Выгрузить(); 
						соСписокАналогов.Вставить(СтрокаСостава.Ингредиент,тзАналоги);
						
						Для каждого СтрокаТзАналоги из тзАналоги Цикл
							СтрокатзФильтрОстатковНоменклатуры = тзФильтрОстатковНоменклатуры.Добавить();
							СтрокатзФильтрОстатковНоменклатуры.Номенклатура = СтрокаТзАналоги.Номенклатура;
						КонецЦикла;	
						
					КонецЕсли;
					
					Для каждого СтрокаТзАналоги из тзАналоги Цикл
						//popn+
						//если номенклатура аналога заполнена - в списке аналогов будет только она
						//если же не заполнена - то все возможные аналоги ингредиента
						Если ЗначениеЗаполнено(СтрокаСостава.Номенклатура) Тогда
							Если СтрокаТзАналоги.Номенклатура = СтрокаСостава.Номенклатура Тогда
								СтрокаДереваАналог = СтрокаДзТовар.Строки.Добавить();
								СтрокаДереваАналог.Номенклатура      = СтрокаТзАналоги.Номенклатура;
								СтрокаДереваАналог.КоэффициентЗамены = СтрокаТзАналоги.КоэффициентЗамены;
							КонецЕсли;
						Иначе
							СтрокаДереваАналог = СтрокаДзТовар.Строки.Добавить();
							СтрокаДереваАналог.Номенклатура      = СтрокаТзАналоги.Номенклатура;
							СтрокаДереваАналог.КоэффициентЗамены = СтрокаТзАналоги.КоэффициентЗамены;
						КонецЕсли;
					КонецЦикла;	
				Иначе
					РазузловатьНоменклатуру(СтрокаСостава.Номенклатура,СтрокаДзТовар.Строки,соРаскладкаНоменклатуры,соСписокАналогов,тзФильтрОстатковНоменклатуры,МоментВремениДокумента);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
		//получим таблицу значений с остатками, но перед этим заблокируем таблицу остатков
		тзФильтрОстатковНоменклатуры.ЗаполнитьЗначения(СкладПроизводства,"МестоХранения");
		тзФильтрОстатковНоменклатуры.ЗаполнитьЗначения(Фирма,"Фирма");
		тзФильтрОстатковНоменклатуры.ЗаполнитьЗначения(Перечисления.ТипыДоговоров.КупляПродажа,"Статус");
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = тзФильтрОстатковНоменклатуры;
		Для каждого к из тзФильтрОстатковНоменклатуры.Колонки Цикл
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
		КонецЦикла;
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Фильтр",тзФильтрОстатковНоменклатуры);
		Запрос.УстановитьПараметр("МоментВремени",МоментВремениДокументаДляФильтраОстатков);
		Запрос.УстановитьПараметр("Фирма",Фирма);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница",СтруктурнаяЕдиница);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Фильтр.Номенклатура,
		|	Фильтр.Фирма,
		|	Фильтр.Статус,
		|	Фильтр.МестоХранения
		|ПОМЕСТИТЬ Фильтр
		|ИЗ
		|	&Фильтр КАК Фильтр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Цены.Номенклатура,
		|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена), 0) КАК Цена,
		|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС), 0) КАК ЦенаНДС,
		|	ЕСТЬNULL(МАКСИМУМ(Цены.ЦенаУпр), 0) КАК ЦенаУпр,
		|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДСУпр), 0) КАК ЦенаНДСУпр
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура КАК Номенклатура,
		|		МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена) КАК Цена,
		|		МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДС) КАК СуммаНДС,
		|		0 КАК ЦенаУпр,
		|		0 КАК СуммаНДСУпр
		|	ИЗ
		|		РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
		|				&МоментВремени,
		|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							с.Номенклатура
		|						ИЗ
		|							Фильтр КАК с)
		|					И Фирма = &Фирма) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
		|	ГДЕ
		|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура.БазоваяЕдиницаИзмерения = ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура,
		|		0,
		|		0,
		|		МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.ЦенаУпр),
		|		МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.СуммаНДСУпр)
		|	ИЗ
		|		РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
		|				&МоментВремени,
		|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							с.Номенклатура
		|						ИЗ
		|							Фильтр КАК с)) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
		|	ГДЕ
		|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура.БазоваяЕдиницаИзмерения = ЦеныНоменклатурыЗакупочныеСрезПоследних.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура) КАК Цены
		|
		|СГРУППИРОВАТЬ ПО
		|	Цены.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкиНДС.Ссылка,
		|	СтавкиНДС.Ставка
		|ПОМЕСТИТЬ СтавкиНДС
		|ИЗ
		|	Справочник.СтавкиНДС КАК СтавкиНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура.Ссылка,
		|	ЕСТЬNULL(СтавкиНДС.Ставка, 0) КАК Ставка
		|ПОМЕСТИТЬ СтавкиНДСНоменклатуры
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
		|		ПО Номенклатура.СтавкаНДС = СтавкиНДС.Ссылка
		|ГДЕ
		|	Номенклатура.Ссылка В
		|			(ВЫБРАТЬ
		|				с.Номенклатура
		|			ИЗ
		|				Фильтр КАК с)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Цены.Номенклатура,
		|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена), 0) КАК Цена,
		|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС), 0) КАК ЦенаНДС,
		|	ЕСТЬNULL(МАКСИМУМ(Цены.Цена), 0) КАК ЦенаУпр,
		|	ЕСТЬNULL(МАКСИМУМ(Цены.СуммаНДС), 0) КАК ЦенаНДСУпр
		|ИЗ
		|	(ВЫБРАТЬ
		|		НоменклатураКонтрагента.Номенклатура КАК Номенклатура,
		|		ВЫБОР
		|			КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
		|				ТОГДА НоменклатураКонтрагента.Цена
		|			ИНАЧЕ ВЫРАЗИТЬ(НоменклатураКонтрагента.Цена * (100 + СтавкиНДСНоменклатуры.Ставка) / 100 КАК ЧИСЛО(15, 2))
		|		КОНЕЦ КАК Цена,
		|		ВЫБОР
		|			КОГДА НоменклатураКонтрагента.Контрагент.НеПлательщикНДС
		|				ТОГДА 0
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
		|						ТОГДА ВЫРАЗИТЬ(СтавкиНДСНоменклатуры.Ставка * НоменклатураКонтрагента.Цена / (100 + СтавкиНДСНоменклатуры.Ставка) КАК ЧИСЛО(15, 2))
		|					ИНАЧЕ ВЫРАЗИТЬ(НоменклатураКонтрагента.Цена * СтавкиНДСНоменклатуры.Ставка / 100 КАК ЧИСЛО(15, 2))
		|				КОНЕЦ
		|		КОНЕЦ КАК СуммаНДС
		|	ИЗ
		|		РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|			ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
		|			ПО НоменклатураКонтрагента.Номенклатура = СтавкиНДСНоменклатуры.Ссылка,
		|		Константа.ВключатьНДСВЦеныКонтрагентов КАК ВключатьНДСВЦеныКонтрагентов
		|	ГДЕ
		|		НоменклатураКонтрагента.Номенклатура В
		|				(ВЫБРАТЬ
		|					с.Номенклатура
		|				ИЗ
		|					Фильтр КАК с)
		|		И НоменклатураКонтрагента.ОсновнойПоставщик) КАК Цены
		|
		|СГРУППИРОВАТЬ ПО
		|	Цены.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура,
		|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК Количество,
		|	СУММА(ОстаткиНоменклатурыОстатки.СуммаОстаток) КАК Сумма,
		|	СУММА(ОстаткиНоменклатурыОстатки.СуммаУпрОстаток) КАК СуммаУпр,
		|	СУММА(ОстаткиНоменклатурыОстатки.СуммаНДСОстаток) КАК СуммаНДС,
		|	СУММА(ОстаткиНоменклатурыОстатки.СуммаНДСУпрОстаток) КАК СуммаНДСУпр
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&МоментВремени,
		|			(МестоХранения, Номенклатура, Статус, Фирма) В
		|				(ВЫБРАТЬ
		|					Фильтр.МестоХранения,
		|					Фильтр.Номенклатура,
		|					Фильтр.Статус,
		|					Фильтр.Фирма
		|				ИЗ
		|					Фильтр КАК Фильтр)) КАК ОстаткиНоменклатурыОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиНоменклатурыОстатки.Номенклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Фильтр";
		мсв = Запрос.ВыполнитьПакет();
		тзЦеныЗакупочные = мсв[1].Выгрузить();
		тзЦеныЗакупочные.Индексы.Добавить("Номенклатура");
		//popn+
		тзЦеныОсновногоПоставщика = мсв[4].Выгрузить();
		тзЦеныОсновногоПоставщика.Индексы.Добавить("Номенклатура");
		//popn-
		тзОстатки        = мсв[5].Выгрузить();
		тзОстатки.Индексы.Добавить("Номенклатура");
		
		тзОстаткиНеизменная = тзОстатки.Скопировать(,"Номенклатура, Количество");
		тзОшибокПроведения = Новый ТаблицаЗначений;
		тзОшибокПроведения.Колонки.Добавить("Номенклатура");
		тзОшибокПроведения.Колонки.Добавить("Требуется");
		
		Для каждого СтрокаПродукция из дз.Строки Цикл
			Отказ = СписатьСоставПродукции(СтрокаПродукция.Продукция,1,СтрокаПродукция.Строки,тзОстатки,тзЦеныЗакупочные,тзЦеныОсновногоПоставщика,тзОстаткиНоменклатуры,Ложь,флВыпускПродукцииПоПлановымЦенам, тзОшибокПроведения);
			Если Отказ Тогда
				Возврат Отказ;
			КонецЕсли;
			Движение = тзОстаткиНоменклатуры.Добавить();
			Движение.Активность    = Истина;
			Движение.ВидДвижения   = ВидДвиженияНакопления.Приход;
			Движение.Регистратор   = Ссылка;
			Движение.Период        = Дата;
			Движение.Фирма         = Фирма;
			Движение.МестоХранения = Склад;
			Движение.Статус        = Перечисления.ТипыДоговоров.КупляПродажа;
			Движение.Номенклатура  = СтрокаПродукция.Продукция;
			Движение.Количество    = СтрокаПродукция.Количество;
			Если флВыпускПродукцииПоПлановымЦенам Тогда
				Движение.Сумма         = СтрокаПродукция.СуммаПлановая;
				Движение.СуммаУпр      = СтрокаПродукция.СуммаПлановая;
				//popn+
				//Движение.СуммаНДС      = 0;
				//Движение.СуммаНДСУпр   = 0;
				Движение.СуммаНДС      = СтрокаПродукция.СуммаНДСПлановая;
				Движение.СуммаНДСУпр   = СтрокаПродукция.СуммаНДСПлановая;
				//popn+
			Иначе	
				Движение.Сумма         = 0;
				Движение.СуммаУпр      = 0;
				Движение.СуммаНДС      = 0;
				Движение.СуммаНДСУпр   = 0;
			КонецЕсли;
			Движение.КодОперации   = Перечисления.КодыОпераций.ПередачаИзПроизводства;
		КонецЦикла;
		
		тзОшибокПроведения.Свернуть("Номенклатура", "Требуется");
		
		БылиОшибкиПроведения = ЛОЖЬ;
		Для Каждого ОшибкаПроведения Из тзОшибокПроведения Цикл
			КолТребуется = ОшибкаПроведения.Требуется;
			СтрокиОстатка = тзОстаткиНеизменная.НайтиСтроки(Новый Структура("Номенклатура",ОшибкаПроведения.Номенклатура));
			Если СтрокиОстатка.Количество() = 0 Тогда
				КолИмеется = 0;
			Иначе
				КолИмеется = СтрокиОстатка[0].Количество;
			КонецЕсли;
			КолНеХватает = КолТребуется - КолИмеется;
			
			Если КолНеХватает > 0 Тогда
				Текст = "Недостаточно остатка на складе """+СкладПроизводства+""" по:" 
				+Символы.ПС+""""+ОшибкаПроведения.Номенклатура+""""+"(Код:"+СокрЛП(ОшибкаПроведения.Номенклатура.Код)+")"
				+Символы.ПС+"   По документу: "+КолТребуется
				+Символы.ПС+"   На остатке: "  +КолИмеется
				+Символы.ПС+"   Не хватает: "  +КолНеХватает;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Ссылка);
				Отказ = ИСТИНА;
				БылиОшибкиПроведения = ИСТИНА;
			КонецЕсли;
		КонецЦикла;
		
		Если БылиОшибкиПроведения Тогда
			Возврат Отказ;
		КонецЕсли;
		
		тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,КодОперации,Продукция","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр");
		тзОстаткиНоменклатуры.Сортировать("ВидДвижения Убыв, Номенклатура Возр");
		Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
		
		//popn+
		ПроведениеДокументов.ПодготовитьТаблицыДляСравнения("ГотоваяПродукцияПриготовление", тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
		НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
		Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
		//popn-
		
		Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
		Движения.ДвиженияТМЦ.Записывать = Истина;
		
		флВозврата = Ложь;
	Иначе
		
		флРазделка = ВидПроизводства = Перечисления.ВидыПроизводства.Разделка;
		
		тзРеализация = Неопределено;
		
		// Установка исключительной блокировки контролируемых остатков 
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ГотоваяПродукцияПродукция.Номенклатура,
		|	ГотоваяПродукцияПродукция.Ссылка.СкладПроизводства КАК МестоХранения,
		|	ГотоваяПродукцияПродукция.Ссылка.Фирма КАК Фирма,
		|	СУММА(ВЫРАЗИТЬ(ГотоваяПродукцияПродукция.Количество * ГотоваяПродукцияПродукция.Коэффициент КАК ЧИСЛО(15, 4))) КАК Количество,
		|	СУММА(0) КАК Сумма,
		|	СУММА(0) КАК СуммаНДС,
		|	ГотоваяПродукцияПродукция.Номенклатура.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ врСостав
		|ИЗ
		|	Документ.ГотоваяПродукция.Продукция КАК ГотоваяПродукцияПродукция
		|ГДЕ
		|	ГотоваяПродукцияПродукция.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ГотоваяПродукцияПродукция.Номенклатура,
		|	ГотоваяПродукцияПродукция.Ссылка.СкладПроизводства,
		|	ГотоваяПродукцияПродукция.Ссылка.Фирма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врСостав.Номенклатура,
		|	врСостав.МестоХранения,
		|	врСостав.Фирма
		|ИЗ
		|	врСостав КАК врСостав";
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		тз=Запрос.Выполнить().Выгрузить();
		тз.Свернуть("Номенклатура,МестоХранения,Фирма");
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = тз;
		Для каждого к из тз.Колонки Цикл
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
		КонецЦикла;
		Блокировка.Заблокировать();
		
		Параметры = Новый Структура;
		Параметры.Вставить("Запрос",Запрос);
		Параметры.Вставить("Объект",ЭтотОбъект);
		Параметры.Вставить("КодОперации",Перечисления.КодыОпераций.ПередачаВПроизводство);
		Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
		Параметры.Вставить("тзРеализация",тзРеализация);
		Параметры.Вставить("РежимПроведения",РежимПроведения);
		Параметры.Вставить("Фирма",Фирма);
		флВозврата = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);
		
		тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,Комитент,КодОперации,Продукция","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр");
		
		//если это разделка на основании приготовления
		//есть смысл получить таблицу ингредиентов, списанных при приготовлении,
		//что оприходовать при разделке именно их, а не какие-то другие
		Если флРазделка И ТипЗнч(ДокОснование) = Тип("ДокументСсылка.ГотоваяПродукция") Тогда
			ТаблицаСписанныхИнгредиентов = ПолучитьТаблицуСписанныхИнгредиентов(ДокОснование); 
		КонецЕсли;
		
		Для каждого СтрокаПродукция из Продукция Цикл
			
			СтрокаТзОстаткиНоменклатуры = тзОстаткиНоменклатуры.Найти(СтрокаПродукция.Номенклатура,"Номенклатура");
			Если НЕ флВыпускПродукцииПоПлановымЦенам Тогда
				Если СтрокаТзОстаткиНоменклатуры = Неопределено Тогда
					//данных по себестоимости не найдено
					чСумма       = 0;
					чСуммаУпр    = 0;
					чСуммаНДС    = 0;
					чСуммаНДСУпр = 0;
				Иначе
					чСумма       = СтрокаТзОстаткиНоменклатуры.Сумма;
					чСуммаУпр    = СтрокаТзОстаткиНоменклатуры.СуммаУпр;
					чСуммаНДС    = СтрокаТзОстаткиНоменклатуры.СуммаНДС;
					чСуммаНДСУпр = СтрокаТзОстаткиНоменклатуры.СуммаНДСУпр;
				КонецЕсли;
			КонецЕсли;
			
			//найдем строки табличной части состав
			мсвСостав = Состав.НайтиСтроки(Новый Структура("Ключ",СтрокаПродукция.Ключ));
			
			Если НЕ флВыпускПродукцииПоПлановымЦенам Тогда
				//в этих переменных накопим фактическую сумму, которую распределили между составляющими
				чРаспрСумма       = 0;
				чРаспрСуммаУпр    = 0;
				чРаспрСуммаНДС    = 0;
				чРаспрСуммаНДСУпр = 0;
				
				НоваяСтрока = Неопределено;
			КонецЕсли;
			
			Для Каждого Эл Из мсвСостав Цикл
				
				//если в строке состава заполнен ингредиент и режим документа разделка на основании приготовления,
				//то будем приходовать те аналоги указанного ингредиента, которые были списаны документом-основанием 
				//с видом приготовление.
				
				Если ЗначениеЗаполнено(Эл.Ингредиент)
					И флРазделка 
					И ТипЗнч(ДокОснование) = Тип("ДокументСсылка.ГотоваяПродукция") Тогда
					
					мсвСписанныхИнгредиентов = ТаблицаСписанныхИнгредиентов.НайтиСтроки(Новый Структура("Ингредиент",Эл.Ингредиент));
					Для Каждого ЭлИнгредиент Из мсвСписанныхИнгредиентов Цикл
						
						КоэффициентПересчета = Эл.Количество / ЭлИнгредиент.КоличествоИнгредиента;
						чТекКоличество  = Окр(ЭлИнгредиент.Количество * КоэффициентПересчета,4);
						
						Если флВыпускПродукцииПоПлановымЦенам Тогда
							чТекСумма       = Окр(ЭлИнгредиент.Сумма       * КоэффициентПересчета,2);
							чТекСуммаУпр    = Окр(ЭлИнгредиент.СуммаУпр    * КоэффициентПересчета,2);
							чТекСуммаНДС    = Окр(ЭлИнгредиент.СуммаНДС    * КоэффициентПересчета,2);
							чТекСуммаНДСУпр = Окр(ЭлИнгредиент.СуммаНДСУпр * КоэффициентПересчета,2);
						Иначе	
							чТекСумма       = Окр(ЭлИнгредиент.Сумма       * КоэффициентПересчета,2);
							чТекСуммаУпр    = Окр(ЭлИнгредиент.СуммаУпр    * КоэффициентПересчета,2);
							чТекСуммаНДС    = Окр(ЭлИнгредиент.СуммаНДС    * КоэффициентПересчета,2);
							чТекСуммаНДСУпр = Окр(ЭлИнгредиент.СуммаНДСУпр * КоэффициентПересчета,2);

							чРаспрСумма       = чРаспрСумма       + чТекСумма;
							чРаспрСуммаУпр    = чРаспрСуммаУпр    + чТекСуммаУпр;
							чРаспрСуммаНДС    = чРаспрСуммаНДС    + чТекСуммаНДС;
							чРаспрСуммаНДСУпр = чРаспрСуммаНДСУпр + чТекСуммаНДСУпр;
						КонецЕсли;
						
						НоваяСтрока = тзОстаткиНоменклатуры.Добавить();
						НоваяСтрока.Регистратор   = Ссылка;
						НоваяСтрока.Период        = Дата;
						НоваяСтрока.Фирма         = Фирма;
						НоваяСтрока.Активность    = Истина;
						НоваяСтрока.ВидДвижения   = ВидДвиженияНакопления.Приход;
						НоваяСтрока.МестоХранения = Склад;
						НоваяСтрока.Номенклатура  = ЭлИнгредиент.Номенклатура;
						НоваяСтрока.Статус        = Перечисления.ТипыДоговоров.КупляПродажа;
						НоваяСтрока.Комитент      = Неопределено;
						НоваяСтрока.КодОперации   = Перечисления.КодыОпераций.ПередачаИзПроизводства;
						НоваяСтрока.Продукция     = СтрокаПродукция.Номенклатура;
						НоваяСтрока.Количество    = чТекКоличество;
						НоваяСтрока.Сумма         = чТекСумма;
						НоваяСтрока.СуммаУпр      = чТекСуммаУпр;
						НоваяСтрока.СуммаНДС      = чТекСуммаНДС;
						НоваяСтрока.СуммаНДСУпр   = чТекСуммаНДСУпр;
						
					КонецЦикла;
					
				Иначе
					
					чТекКоличество  = Окр(Эл.Количество * Эл.Коэффициент,4);
					
					Если флВыпускПродукцииПоПлановымЦенам Тогда
						чТекСумма       = Эл.СуммаПлановая;
						чТекСуммаУпр    = Эл.СуммаПлановая;
						чТекСуммаНДС    = Эл.СуммаНДСПлановая;
						чТекСуммаНДСУпр = Эл.СуммаНДСПлановая;
					Иначе	
						чТекСумма       = Окр(чСумма        * Эл.КоэффициентРаспределенияЦены / 100, 2);
						чТекСуммаУпр    = Окр(чСуммаУпр     * Эл.КоэффициентРаспределенияЦены / 100, 2);
						чТекСуммаНДС    = Окр(чСуммаНДС     * Эл.КоэффициентРаспределенияЦены / 100, 2);
						чТекСуммаНДСУпр = Окр(чСуммаНДСУпр  * Эл.КоэффициентРаспределенияЦены / 100, 2);
						
						чРаспрСумма       = чРаспрСумма       + чТекСумма;
						чРаспрСуммаУпр    = чРаспрСуммаУпр    + чТекСуммаУпр;
						чРаспрСуммаНДС    = чРаспрСуммаНДС    + чТекСуммаНДС;
						чРаспрСуммаНДСУпр = чРаспрСуммаНДСУпр + чТекСуммаНДСУпр;
					КонецЕсли;
					
					НоваяСтрока = тзОстаткиНоменклатуры.Добавить();
					НоваяСтрока.Регистратор   = Ссылка;
					НоваяСтрока.Период        = Дата;
					НоваяСтрока.Фирма         = Фирма;
					НоваяСтрока.Активность    = Истина;
					НоваяСтрока.ВидДвижения   = ВидДвиженияНакопления.Приход;
					НоваяСтрока.МестоХранения = Склад;
					НоваяСтрока.Номенклатура  = Эл.Номенклатура;
					НоваяСтрока.Статус        = Перечисления.ТипыДоговоров.КупляПродажа;
					НоваяСтрока.Комитент      = Неопределено;
					НоваяСтрока.КодОперации   = Перечисления.КодыОпераций.ПередачаИзПроизводства;
					НоваяСтрока.Продукция     = СтрокаПродукция.Номенклатура;
					НоваяСтрока.Количество    = чТекКоличество;
					НоваяСтрока.Сумма         = чТекСумма;
					НоваяСтрока.СуммаУпр      = чТекСуммаУпр;
					НоваяСтрока.СуммаНДС      = чТекСуммаНДС;
					НоваяСтрока.СуммаНДСУпр   = чТекСуммаНДСУпр;
					
				КонецЕсли;
			КонецЦикла;
			
			//popn+
			Если тзОстаткиНоменклатуры.Количество() > 0 Тогда
				тзОстаткиНоменклатурыКопия = тзОстаткиНоменклатуры.Скопировать();
				тзОстаткиНоменклатурыКопия.Сортировать("Сумма УБЫВ");
				МаксимальнаяСумма = тзОстаткиНоменклатурыКопия[0].Сумма;
				НоваяСтрока = тзОстаткиНоменклатуры.Найти(МаксимальнаяСумма,"Сумма");
			КонецЕсли;
			//popn-
			
			Если НЕ флВыпускПродукцииПоПлановымЦенам Тогда
				Если НоваяСтрока <> Неопределено Тогда
					
					чРазницаСумма = чСумма - чРаспрСумма;
					Если чРазницаСумма <> 0 Тогда
						НоваяСтрока.Сумма = НоваяСтрока.Сумма + чРазницаСумма;
					КонецЕсли;
					
					чРазницаСуммаУпр = чСуммаУпр - чРаспрСуммаУпр;
					Если чРазницаСуммаУпр <> 0 Тогда
						НоваяСтрока.СуммаУпр = НоваяСтрока.СуммаУпр + чРазницаСуммаУпр;
					КонецЕсли;
					
					чРазницаСуммаНДС = чСуммаНДС - чРаспрСуммаНДС;
					Если чРазницаСуммаНДС <> 0 Тогда
						НоваяСтрока.СуммаНДС = НоваяСтрока.СуммаНДС + чРазницаСуммаНДС;
					КонецЕсли;
					
					чРазницаСуммаНДСУпр = чСуммаНДСУпр - чРаспрСуммаНДСУпр;
					Если чРазницаСуммаНДСУпр <> 0 Тогда
						НоваяСтрока.СуммаНДСУпр = НоваяСтрока.СуммаНДСУпр + чРазницаСуммаНДСУпр;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		тзОстаткиНоменклатуры.Сортировать("ВидДвижения Убыв, Номенклатура Возр");
		Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
		
		//popn+
		ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(ЭтотОбъект.Метаданные().Имя, тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
		НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
		Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
		//popn-
		
		Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
		Движения.ДвиженияТМЦ.Записывать = Истина;
		
	КонецЕсли;
	
	УчетАлкоголя = УчетАлкогольнойПродукции.ВестиУчетАлкоголя();
	Если УчетАлкоголя Тогда
		УчетАлкогольнойПродукции.СформироватьРасходПоУчетуАлкоголя(ЭтотОбъект,Перечисления.КодыОпераций.ПередачаВПроизводство);
	Иначе
		УчетАлкогольнойПродукции.ОчиститьДвиженияПоУчетуАлкоголя(ЭтотОбъект);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	Запрос.Текст = "Выбрать * Поместить ОстаткиНоменклатуры из &ОстаткиНоменклатуры как ОстаткиНоменклатуры Где ОстаткиНоменклатуры.ВидДвижения = &ВидДвижения И ОстаткиНоменклатуры.Количество <> 0";
	Запрос.УстановитьПараметр("ОстаткиНоменклатуры",тзОстаткиНоменклатуры);
	Запрос.УстановитьПараметр("ВидДвижения",ВидДвиженияНакопления.Приход);
	Запрос.Выполнить();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыЗакупочные.Период,
	|	ЦеныНоменклатурыЗакупочные.Регистратор,
	|	ЦеныНоменклатурыЗакупочные.Активность,
	|	ЦеныНоменклатурыЗакупочные.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
	|	ЦеныНоменклатурыЗакупочные.Фирма,
	|	&СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ЦеныНоменклатурыЗакупочные.Сумма / ЦеныНоменклатурыЗакупочные.Количество КАК ЧИСЛО(15, 2))) КАК Цена,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ЦеныНоменклатурыЗакупочные.СуммаУпр / ЦеныНоменклатурыЗакупочные.Количество КАК ЧИСЛО(15, 2))) КАК ЦенаУпр,
//popn+
	|	МАКСИМУМ(ВЫРАЗИТЬ(ЦеныНоменклатурыЗакупочные.СуммаНДС / ЦеныНоменклатурыЗакупочные.Количество КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	МАКСИМУМ(ВЫРАЗИТЬ(ЦеныНоменклатурыЗакупочные.СуммаНДСУпр / ЦеныНоменклатурыЗакупочные.Количество КАК ЧИСЛО(15, 2))) КАК СуммаНДСУпр
//popn-
	|ИЗ
	|	ОстаткиНоменклатуры КАК ЦеныНоменклатурыЗакупочные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ЦеныНоменклатурыЗакупочные.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И ЦеныНоменклатурыЗакупочные.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыЗакупочные.Период,
	|	ЦеныНоменклатурыЗакупочные.Регистратор,
	|	ЦеныНоменклатурыЗакупочные.Активность,
	|	ЦеныНоменклатурыЗакупочные.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка,
	|	ЦеныНоменклатурыЗакупочные.Фирма";
	
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",ЭтотОбъект.СтруктурнаяЕдиница);
	тзЦеныНоменклатурыЗакупочные = Запрос.Выполнить().Выгрузить();
	
	Движения.ЦеныНоменклатурыЗакупочные.Загрузить(тзЦеныНоменклатурыЗакупочные);
	Движения.ЦеныНоменклатурыЗакупочные.Записывать = Истина;
	
	Возврат флВозврата;
КонецФункции

Функция ПолучитьТаблицуСписанныхИнгредиентов(ДокументПриготовления)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатуры.Номенклатура,
		|	ОстаткиНоменклатуры.Продукция,
		|	ОстаткиНоменклатуры.Количество,
		|	ОстаткиНоменклатуры.Сумма,
		|	ОстаткиНоменклатуры.СуммаУпр,
		|	ОстаткиНоменклатуры.СуммаНДС,
		|	ОстаткиНоменклатуры.СуммаНДСУпр
		|ПОМЕСТИТЬ ДвиженияДокумента
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
		|ГДЕ
		|	ОстаткиНоменклатуры.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнгредиентыСостав.Номенклатура,
		|	ИнгредиентыСостав.Ссылка
		|ПОМЕСТИТЬ Аналоги
		|ИЗ
		|	Справочник.Ингредиенты.Состав КАК ИнгредиентыСостав
		|ГДЕ
		|	ИнгредиентыСостав.Ссылка В(&МассивИнгредиентовДокумента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГотоваяПродукцияСостав.Ингредиент,
		|	ГотоваяПродукцияСостав.Количество,
		|	ГотоваяПродукцияСостав.Ключ
		|ПОМЕСТИТЬ Состав
		|ИЗ
		|	Документ.ГотоваяПродукция.Состав КАК ГотоваяПродукцияСостав
		|ГДЕ
		|	ГотоваяПродукцияСостав.Ссылка = &Ссылка
		|	И ГотоваяПродукцияСостав.Ингредиент <> ЗНАЧЕНИЕ(Справочник.Ингредиенты.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГотоваяПродукцияПродукция.Номенклатура КАК Номенклатура,
		|	ГотоваяПродукцияПродукция.Ключ КАК Ключ
		|ПОМЕСТИТЬ Продукция
		|ИЗ
		|	Документ.ГотоваяПродукция.Продукция КАК ГотоваяПродукцияПродукция
		|ГДЕ
		|	ГотоваяПродукцияПродукция.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Состав.Ингредиент,
		|	Состав.Количество КАК КоличествоИнгредиента,
		|	Продукция.Номенклатура КАК Продукция,
		|	Аналоги.Номенклатура КАК Аналог
		|ПОМЕСТИТЬ ИтоговаяТаблица
		|ИЗ
		|	Состав КАК Состав
		|		ЛЕВОЕ СОЕДИНЕНИЕ Продукция КАК Продукция
		|		ПО Состав.Ключ = Продукция.Ключ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Аналоги КАК Аналоги
		|		ПО Состав.Ингредиент = Аналоги.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговаяТаблица.Ингредиент,
		|	ИтоговаяТаблица.КоличествоИнгредиента,
		|	ИтоговаяТаблица.Продукция,
		|	ИтоговаяТаблица.Аналог КАК Номенклатура,
		|	ДвиженияДокумента.Количество,
		|	ДвиженияДокумента.Сумма,
		|	ДвиженияДокумента.СуммаУпр,
		|	ДвиженияДокумента.СуммаНДС,
		|	ДвиженияДокумента.СуммаНДСУпр
		|ИЗ
		|	ИтоговаяТаблица КАК ИтоговаяТаблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДвиженияДокумента КАК ДвиженияДокумента
		|		ПО ИтоговаяТаблица.Продукция = ДвиженияДокумента.Продукция
		|			И ИтоговаяТаблица.Аналог = ДвиженияДокумента.Номенклатура";

		
	Запрос.УстановитьПараметр("Ссылка", ДокументПриготовления);
	Запрос.УстановитьПараметр("МассивИнгредиентовДокумента", ДокументПриготовления.Состав.ВыгрузитьКолонку("Ингредиент"));
	
	Результат = Запрос.Выполнить();

	Возврат Результат.Выгрузить();
	
КонецФункции

Функция СписатьСоставПродукции(Продукция,КоличествоПродукции,Строки,тзОстатки,тзЦеныЗакупочные,тзЦеныОсновногоПоставщика,тзОстаткиНоменклатуры,флОтказа,флВыпускПродукцииПоПлановымЦенам,тзОшибокПроведения)
	
	флПриготовление = ЭтотОбъект.ВидПроизводства = Перечисления.ВидыПроизводства.Приготовление;
	
	Для каждого Строка из Строки Цикл
		//получим количество составляющего на все количество продукции
		чКоличество = Окр(Строка.Количество * КоличествоПродукции,4); 
		
		Если НЕ флПриготовление Тогда
			Если НЕ ЗначениеЗаполнено(Строка.Номенклатура) Тогда
				Сообщить("Не заполнено значение номенклатуры для ингредиента """+Строка.Ингредиент+"""");
				Возврат ИСТИНА;
			КонецЕсли;
		КонецЕсли;
		
		Если Строка.флИнгредиент = Истина Тогда
			
			СтрокиАналоги = Строка.Строки;
			чКоличествоСписать = 0;
			Для каждого СтрокаАналога из СтрокиАналоги Цикл
				СтрокаТзОстатки = тзОстатки.Найти(СтрокаАналога.Номенклатура,"Номенклатура");
				Если СтрокаТзОстатки <> Неопределено Тогда
					//приведем количество ингредиента к количеству аналога, умножив на коэффициент замены (например для ингредиента картофель, можно завести аналог Картофель отборный с коэф=1, и Картофель гнилой с коэф = 3)
					
					Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
						Если Строка.Номенклатура = СтрокаТзОстатки.Номенклатура Тогда
							КоэффициентЗамены = 1;
						Иначе
							СтрокаОсновнойАналог = СтрокиАналоги.Найти(Строка.Номенклатура,"Номенклатура");
							КоэффициентПервогоАналога = СтрокаОсновнойАналог.КоэффициентЗамены;
							КоэффициентЗамены = СтрокаАналога.КоэффициентЗамены / КоэффициентПервогоАналога;
						КонецЕсли;
					Иначе
						КоэффициентЗамены = СтрокаАналога.КоэффициентЗамены;
					КонецЕсли;
					
					чКоличествоАналога        = Окр(чКоличество * КоэффициентЗамены, 4); 
					чКоличествоСписатьАналога = МИН(чКоличествоАналога,СтрокаТзОстатки.Количество);
					чКоличествоСписать        = чКоличествоСписатьАналога;
					
					Если чКоличествоСписатьАналога > 0 Тогда
						ДобавитьДвижениеРасход(Продукция,СтрокаАналога.Номенклатура,чКоличествоСписатьАналога,тзОстаткиНоменклатуры,СтрокаТзОстатки,тзОстатки,флВыпускПродукцииПоПлановымЦенам);
					КонецЕсли;
					
					чКоличество = чКоличество - чКоличествоСписать / КоэффициентЗамены;
				КонецЕсли;
			КонецЦикла;
			
			Если чКоличество > 0 Тогда
				//количество, которое не удалось списать списываем в минус 
				//по аналогу ингредиента, указанному в номенклатуре
				
				Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
					чКоличествоАналога = Окр(чКоличество, 4);
				Иначе
					чКоличествоАналога = Окр(чКоличество * СтрокаАналога.КоэффициентЗамены, 4);
				КонецЕсли;
				
				Если флОтрицательныеОстаткиЗапрещены Тогда
					//Текст = "Недостаточно остатка на складе """+СкладПроизводства+""" по:" 
					//+Символы.ПС+""""+СтрокаАналога.Номенклатура+""""+"(Код:"+СокрЛП(СтрокаАналога.Номенклатура.Код)+")"
					//+Символы.ПС+"   По документу: "+чКоличествоСписать
					//+Символы.ПС+"   На остатке: "+?(СтрокаТзОстатки = НЕОПРЕДЕЛЕНО, 0, СтрокаТзОстатки.Количество)
					//+Символы.ПС+"   Не хватает: "+чКоличество;
					//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Ссылка);
					//Возврат Истина;
					ОшибкаПроведения = тзОшибокПроведения.Добавить();
					Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
						ОшибкаПроведения.Номенклатура = Строка.Номенклатура;
					Иначе
						ОшибкаПроведения.Номенклатура = СтрокаАналога.Номенклатура;
					КонецЕсли;
					ОшибкаПроведения.Требуется    = чКоличествоСписать + чКоличествоАналога;
				Иначе
					ДобавитьДвижениеРасходВМинус(Продукция,СтрокаАналога.Номенклатура,чКоличествоАналога,тзОстаткиНоменклатуры,тзЦеныЗакупочные,тзЦеныОсновногоПоставщика,флВыпускПродукцииПоПлановымЦенам);
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			//сперва ищем остаток по номенклатуре, если есть то списываем, иначе пытаемся списать составляющие
			СтрокаТзОстатки = тзОстатки.Найти(Строка.Номенклатура,"Номенклатура");
			Если СтрокаТзОстатки = Неопределено Тогда
				чКолРазузловать = чКоличество;
				СтрокаТзОстаткиКоличество = 0;
			Иначе
				СтрокаТзОстаткиКоличество = СтрокаТзОстатки.Количество;
				//количество составляющего, которое можем списать
				чКоличествоСписать = МИН(чКоличество,СтрокаТзОстатки.Количество);
				//количество составляющего, которого не хватило
				//popn+
				//чКолРазузловать    = Строка.Количество - СтрокаТзОстатки.Количество;
				чКолРазузловать    = чКоличество - СтрокаТзОстатки.Количество;
				//popn-
				ДобавитьДвижениеРасход(Продукция,Строка.Номенклатура,чКоличествоСписать,тзОстаткиНоменклатуры,СтрокаТзОстатки,тзОстатки,флВыпускПродукцииПоПлановымЦенам);
			КонецЕсли;
			
			Если чКолРазузловать > 0 Тогда
				Если Строка.Строки.Количество() > 0 Тогда 
					//popn+
					Для Каждого ТекСтрока Из Строка.Строки Цикл
						Если ТекСтрока.флИнгредиент = ИСТИНА Тогда
							ТекСтрока.Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
						КонецЕсли;
					КонецЦикла;
					//popn-
					флОтказа = флОтказа ИЛИ СписатьСоставПродукции(Продукция,чКолРазузловать,Строка.Строки,тзОстатки,тзЦеныЗакупочные,тзЦеныОсновногоПоставщика,тзОстаткиНоменклатуры,флОтказа,флВыпускПродукцииПоПлановымЦенам,тзОшибокПроведения);
				Иначе
					Если флОтрицательныеОстаткиЗапрещены Тогда
						//Текст = "Недостаточно остатка на складе """+СкладПроизводства+""" по:" 
						//+Символы.ПС+""""+Строка.Номенклатура+""""+"(Код:"+СокрЛП(Строка.Номенклатура.Код)+")"
						//+Символы.ПС+"   По документу: "+чКоличество
						//+Символы.ПС+"   На остатке: "+СтрокаТзОстаткиКоличество
						//+Символы.ПС+"   Не хватает: "+чКолРазузловать;
						//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Ссылка);
						//Возврат Истина;
						ОшибкаПроведения = тзОшибокПроведения.Добавить();
						ОшибкаПроведения.Номенклатура = Строка.Номенклатура;
						ОшибкаПроведения.Требуется    = чКоличество;
					Иначе
						//списываем в минус, оценивая по цене последней закупки
						ДобавитьДвижениеРасходВМинус(Продукция,Строка.Номенклатура,чКолРазузловать,тзОстаткиНоменклатуры,тзЦеныЗакупочные,тзЦеныОсновногоПоставщика,флВыпускПродукцииПоПлановымЦенам);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат флОтказа;
КонецФункции

Процедура ДобавитьДвижениеРасходВМинус(Продукция,Номенклатура,чКоличествоСписать,тзОстаткиНоменклатуры,тзЦеныЗакупочные,тзЦеныОсновногоПоставщика,флВыпускПродукцииПоПлановымЦенам)
	
	СтрокаТзЦеныЗакупочные = тзЦеныЗакупочные.Найти(Номенклатура,"Номенклатура");
	//popn+
	Если СтрокаТзЦеныЗакупочные = Неопределено Тогда
		СтрокаТзЦеныЗакупочные = тзЦеныОсновногоПоставщика.Найти(Номенклатура,"Номенклатура");
	КонецЕсли;
	//popn-
	Если СтрокаТзЦеныЗакупочные = Неопределено Тогда
		чСумма       = 0; 
		чСуммаУпр    = 0; 
		чСуммаНДС    = 0; 
		чСуммаНДСУпр = 0; 
	Иначе
		чСумма       = Окр(СтрокаТзЦеныЗакупочные.Цена       * чКоличествоСписать,2); 
		чСуммаУпр    = Окр(СтрокаТзЦеныЗакупочные.ЦенаУпр    * чКоличествоСписать,2); 
		чСуммаНДС    = Окр(СтрокаТзЦеныЗакупочные.ЦенаНДС    * чКоличествоСписать,2); 
		чСуммаНДСУпр = Окр(СтрокаТзЦеныЗакупочные.ЦенаНДСУпр * чКоличествоСписать,2); 
	КонецЕсли;	
	
	Движение = тзОстаткиНоменклатуры.Добавить();
	Движение.Активность    = Истина;
	Движение.ВидДвижения   = ВидДвиженияНакопления.Расход;
	Движение.Регистратор   = Ссылка;
	Движение.Период        = Дата;
	Движение.Фирма         = Фирма;
	Движение.МестоХранения = СкладПроизводства;
	Движение.Статус        = Перечисления.ТипыДоговоров.КупляПродажа;
	Движение.Номенклатура  = Номенклатура;
	Движение.Количество    = чКоличествоСписать;
	Движение.Сумма         = чСумма;
	Движение.СуммаУпр      = чСуммаУпр;
	Движение.СуммаНДС      = чСуммаНДС;
	Движение.СуммаНДСУпр   = чСуммаНДСУпр;
	Движение.КодОперации   = Перечисления.КодыОпераций.ПередачаВПроизводство;
	Движение.Продукция     = Продукция;
	
	Если НЕ флВыпускПродукцииПоПлановымЦенам Тогда
		
		Движение = тзОстаткиНоменклатуры.Добавить();
		Движение.Активность    = Истина;
		Движение.ВидДвижения   = ВидДвиженияНакопления.Приход;
		Движение.Регистратор   = Ссылка;
		Движение.Период        = Дата;
		Движение.Фирма         = Фирма;
		Движение.МестоХранения = Склад;
		Движение.Статус        = Перечисления.ТипыДоговоров.КупляПродажа;
		Движение.Номенклатура  = Продукция;
		Движение.Количество    = 0;
		Движение.Сумма         = чСумма;
		Движение.СуммаУпр      = чСуммаУпр;
		Движение.СуммаНДС      = чСуммаНДС;
		Движение.СуммаНДСУпр   = чСуммаНДСУпр;
		Движение.КодОперации   = Перечисления.КодыОпераций.ПередачаИзПроизводства;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьДвижениеРасход(Продукция,Номенклатура,чКоличествоСписать,тзОстаткиНоменклатуры,СтрокаТзОстатки,тзОстатки,флВыпускПродукцииПоПлановымЦенам)
	
	Движение = тзОстаткиНоменклатуры.Добавить();
	Движение.Активность    = Истина;
	Движение.ВидДвижения   = ВидДвиженияНакопления.Расход;
	Движение.Регистратор   = Ссылка;
	Движение.Период        = Дата;
	Движение.Фирма         = Фирма;
	Движение.МестоХранения = СкладПроизводства;
	Движение.Статус        = Перечисления.ТипыДоговоров.КупляПродажа;
	Движение.Номенклатура  = Номенклатура;
	Движение.Количество    = чКоличествоСписать;
	к = чКоличествоСписать / СтрокаТзОстатки.Количество;
	Движение.Сумма         = Окр( к * СтрокаТзОстатки.Сумма,      2);
	Движение.СуммаУпр      = Окр( к * СтрокаТзОстатки.СуммаУпр,   2);
	Движение.СуммаНДС      = Окр( к * СтрокаТзОстатки.СуммаНДС,   2);
	Движение.СуммаНДСУпр   = Окр( к * СтрокаТзОстатки.СуммаНДСУпр,2);
	Движение.КодОперации   = Перечисления.КодыОпераций.ПередачаВПроизводство;
	Движение.Продукция     = Продукция;
	
	Если НЕ флВыпускПродукцииПоПлановымЦенам Тогда
		
		ДвижениеПриход = тзОстаткиНоменклатуры.Добавить();
		ДвижениеПриход.Активность    = Истина;
		ДвижениеПриход.ВидДвижения   = ВидДвиженияНакопления.Приход;
		ДвижениеПриход.Регистратор   = Ссылка;
		ДвижениеПриход.Период        = Дата;
		ДвижениеПриход.Фирма         = Фирма;
		ДвижениеПриход.МестоХранения = Склад;
		ДвижениеПриход.Статус        = Перечисления.ТипыДоговоров.КупляПродажа;
		ДвижениеПриход.Номенклатура  = Продукция;
		ДвижениеПриход.Количество    = 0;
		ДвижениеПриход.Сумма         = Движение.Сумма;
		ДвижениеПриход.СуммаУпр      = Движение.СуммаУпр;
		ДвижениеПриход.СуммаНДС      = Движение.СуммаНДС;
		ДвижениеПриход.СуммаНДСУпр   = Движение.СуммаНДСУпр;
		ДвижениеПриход.КодОперации   = Перечисления.КодыОпераций.ПередачаИзПроизводства;
		
	КонецЕсли;
	
	//отразим списание в таблице остатков
	СтрокаТзОстатки.Количество = СтрокаТзОстатки.Количество - чКоличествоСписать;
	Если СтрокаТзОстатки.Количество = 0 Тогда
		//удалим строку
		тзОстатки.Удалить(СтрокаТзОстатки);
	Иначе	
		СтрокаТзОстатки.Сумма       = СтрокаТзОстатки.Сумма       - Движение.Сумма;
		СтрокаТзОстатки.СуммаУпр    = СтрокаТзОстатки.СуммаУпр    - Движение.СуммаУпр;
		СтрокаТзОстатки.СуммаНДС    = СтрокаТзОстатки.СуммаНДС    - Движение.СуммаНДС;
		СтрокаТзОстатки.СуммаНДСУпр = СтрокаТзОстатки.СуммаНДСУпр - Движение.СуммаНДСУпр;
	КонецЕсли;
	
	
КонецПроцедуры	

Процедура РазузловатьНоменклатуру(Номенклатура,Строки,соРаскладкаНоменклатуры,соСписокАналогов,тзФильтрОстатковНоменклатуры,МоментВремениДокумента)
	
	//проверим есть ли в соответствии данные по номенклатуре
	ЭлементСоответствия = соРаскладкаНоменклатуры.Получить(Номенклатура);
	Если ЭлементСоответствия = Неопределено Тогда
		//данные по номенклатуре не найдены, значит по ней еще не было поиска тех карт или техкарты существуют
		
		//найдем последнюю тех карту по номенклатуре
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТехнологическаяКартаСостав.Номенклатура,
		|	ВЫРАЗИТЬ(ТехнологическаяКартаСостав.Количество * ТехнологическаяКартаСостав.Коэффициент КАК ЧИСЛО(15, 4)) КАК Количество,
		|	ВЫБОР
		|		КОГДА ТехнологическаяКартаСостав.Номенклатура ССЫЛКА Справочник.Ингредиенты
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК флИнгредиент
		|ИЗ
		|	Документ.ТехнологическаяКарта.Состав КАК ТехнологическаяКартаСостав
		|ГДЕ
		|	ТехнологическаяКартаСостав.Ссылка В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				Док.Ссылка
		|			ИЗ
		|				Документ.ТехнологическаяКарта КАК Док
		|			ГДЕ
		|				Док.Продукция = &Продукция
		|				И Док.ВидПроизводства = ЗНАЧЕНИЕ(Перечисление.ВидыПроизводства.Приготовление)
		|				И Док.ПометкаУдаления = ЛОЖЬ
		|				И Док.Проведен = ИСТИНА
		|				И Док.МоментВремени <= &МоментВремениДокумента
		|			УПОРЯДОЧИТЬ ПО
		|				Док.Дата УБЫВ)");
		Запрос.УстановитьПараметр("Продукция",Номенклатура);
		Запрос.УстановитьПараметр("МоментВремениДокумента",МоментВремениДокумента);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			//такой элемент соответствия значит, что по номенклатуре нет тех карт
			соРаскладкаНоменклатуры.Вставить(Номенклатура,Номенклатура);
			СтрокатзФильтрОстатковНоменклатуры = тзФильтрОстатковНоменклатуры.Добавить();
			СтрокатзФильтрОстатковНоменклатуры.Номенклатура = Номенклатура;
		Иначе
			//popn+
			СтрокатзФильтрОстатковНоменклатуры = тзФильтрОстатковНоменклатуры.Добавить();
			СтрокатзФильтрОстатковНоменклатуры.Номенклатура = Номенклатура;
			//popn+
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				//добавляем в основное дерево
				СтрокаДерева = Строки.Добавить();
				СтрокаДерева.Номенклатура = Выборка.Номенклатура;
				СтрокаДерева.Количество   = Выборка.Количество;
				
				Если Выборка.флИнгредиент = Истина Тогда
					//по номенклатуре ингредиенту нужно получить список аналогов
					СтрокаДерева.флИнгредиент = Истина;
					
					тзАналоги = соСписокАналогов.Получить(Выборка.Номенклатура);
					Если тзАналоги = Неопределено Тогда
						тзАналоги = Выборка.Номенклатура.Состав.Выгрузить(); 
						соСписокАналогов.Вставить(Выборка.Номенклатура,тзАналоги);
						
						Для каждого СтрокаТзАналоги из тзАналоги Цикл
							СтрокатзФильтрОстатковНоменклатуры = тзФильтрОстатковНоменклатуры.Добавить();
							СтрокатзФильтрОстатковНоменклатуры.Номенклатура = СтрокаТзАналоги.Номенклатура;
						КонецЦикла;	
						
					КонецЕсли;
					
					Для каждого СтрокаТзАналоги из тзАналоги Цикл
						СтрокаДереваАналог = СтрокаДерева.Строки.Добавить();
						СтрокаДереваАналог.Номенклатура      = СтрокаТзАналоги.Номенклатура;
						СтрокаДереваАналог.КоэффициентЗамены = СтрокаТзАналоги.КоэффициентЗамены;
					КонецЦикла;	
					
				Иначе
					РазузловатьНоменклатуру(Выборка.Номенклатура,СтрокаДерева.Строки,соРаскладкаНоменклатуры,соСписокАналогов,тзФильтрОстатковНоменклатуры,МоментВремениДокумента);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Отказ = ПровестиГотоваяПродукция(РежимПроведения);
	Если Не Отказ Тогда
		СформироватьКоррекциюЗапасов(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если НЕ ЭтотОбъект.ЭтоНовый() Тогда
	//	Отказ = РаботаСФормамиСервер.ЗапрещеноРедактировать(ЭтотОбъект.Ссылка);
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;	
	СтруктурнаяЕдиница = СкладПроизводства.Владелец;
КонецПроцедуры

Процедура ЗаполнитьПоЗаказам(ЗаказВнешний = Неопределено) Экспорт
	
	флВыпускПродукцииПоПлановымЦенам = ОбщегоНазначенияСервер.ПолучитьУчетнуюПолитикуФирмы(Фирма,Дата).ВыпускПродукцииПоПлановымЦенам;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.Заказано) КАК Заказано,
	|	ВложенныйЗапрос.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
	|ПОМЕСТИТЬ Планы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВнешнийЗаказ.Номенклатура КАК Номенклатура,
	|		ВнешнийЗаказ.Количество КАК Заказано,
	|		ВнешнийЗаказ.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
	|	ИЗ
	|		РегистрСведений.ВнешнийЗаказ КАК ВнешнийЗаказ
	|	ГДЕ
	|		ВнешнийЗаказ.ДатаПоставки = &ДатаНачала
	|		И ВнешнийЗаказ.Склад = &Склад  "+?(ЗначениеЗаполнено(ЗаказВнешний)," И ВнешнийЗаказ.Регистратор = &Регистратор","")+") КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.БазоваяЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Внутр.Продукция КАК Продукция,
	|	МАКСИМУМ(ТехнологическаяКарта.Ссылка) КАК ТехнологическаяКарта
	|ПОМЕСТИТЬ ТехнологическиеКарты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПродукцияПоЦехам.Продукция КАК Продукция,
	|		МАКСИМУМ(ПродукцияПоЦехам.ТехнологическаяКарта.Дата) КАК Дата
	|	ИЗ
	|		РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|	ГДЕ
	|		ПродукцияПоЦехам.ФлагАктивности
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПродукцияПоЦехам.Продукция) КАК Внутр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	|		ПО Внутр.Продукция = ТехнологическаяКарта.Продукция
    |
	|СГРУППИРОВАТЬ ПО
	|	Внутр.Продукция
	|; "+?(флВыпускПродукцииПоПлановымЦенам, "
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановаяСебестоимостьПродукции.Продукция КАК Номенклатура,
	|	ПлановаяСебестоимостьПродукции.Себестоимость КАК Цена,
	|	ПлановаяСебестоимостьПродукции.СебестоимостьНДС КАК ЦенаНДС
	|ПОМЕСТИТЬ ПлановыеЦены
	|ИЗ
	|	РегистрСведений.ПлановаяСебестоимостьПродукции.СрезПоследних(&Момент) КАК ПлановаяСебестоимостьПродукции
	|; ","")+" 
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Планы.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
	|	СУММА(Планы.Заказано) - ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) КАК Количество,
	|	ТехнологическиеКарты.ТехнологическаяКарта,
	|	Истина КАК ПоТехКарте,
	|	ЕдиницыИзмерения.Коэффициент "
	+?(флВыпускПродукцииПоПлановымЦенам, ",ПлановыеЦены.Цена"," ,0 ")+ " КАК ПлановаяСтоимость,"
	+?(флВыпускПродукцииПоПлановымЦенам, "ПлановыеЦены.ЦенаНДС","0 ")+ " КАК ПлановаяСтоимостьНДС
	|   
	|ИЗ
	|	Планы КАК Планы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО Планы.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И Планы.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &СкладГотовойПродукции) КАК ОстаткиНоменклатурыОстатки
	|		ПО Планы.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТехнологическиеКарты КАК ТехнологическиеКарты
	|		ПО Планы.Номенклатура = ТехнологическиеКарты.Продукция " + ?(флВыпускПродукцииПоПлановымЦенам, "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеЦены КАК ПлановыеЦены
	|		ПО Планы.Номенклатура = ПлановыеЦены.Номенклатура "," ")+"
	|
	|СГРУППИРОВАТЬ ПО
	|	Планы.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка,
	|	ТехнологическиеКарты.ТехнологическаяКарта,
	|	ЕдиницыИзмерения.Коэффициент "+?(флВыпускПродукцииПоПлановымЦенам," ,ПлановыеЦены.Цена,ПлановыеЦены.ЦенаНДС","")
	+
	"
	|
	|ИМЕЮЩИЕ
	|	СУММА(Планы.Заказано) - ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Планы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТехнологическиеКарты "+?(флВыпускПродукцииПоПлановымЦенам, "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПлановыеЦены","");
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаПоставки));
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(КонецДня(Дата)));
	Запрос.УстановитьПараметр("Склад", СкладПроизводства);
	Запрос.УстановитьПараметр("СкладГотовойПродукции", Склад);
	Запрос.УстановитьПараметр("Регистратор",ЗаказВнешний);	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Продукция.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		НоваяСтрока.СуммаПлановая = Окр(НоваяСтрока.ПлановаяСтоимость * НоваяСтрока.Количество,2);  
		НоваяСтрока.СуммаНДСПлановая = Окр(НоваяСтрока.ПлановаяСтоимостьНДС * НоваяСтрока.Количество,2);  
		НоваяСтрока.Ключ = Новый УникальныйИдентификатор();
		Если ЗначениеЗаполнено(НоваяСтрока.ТехнологическаяКарта) Тогда
			Для Каждого Строка Из НоваяСтрока.ТехнологическаяКарта.Состав Цикл
				НоваяСтрокаСостава = Состав.Добавить();
				Если ТипЗнч(Строка.Номенклатура) = Тип("СправочникСсылка.Ингредиенты") Тогда
					//ищем первый аналог ингредиента
					Аналоги = Строка.Номенклатура.Состав;
					Если Аналоги.Количество() > 0 Тогда
						НоваяСтрокаСостава.Номенклатура     = Аналоги[0].Номенклатура;
						НоваяСтрокаСостава.Ингредиент       = Строка.Номенклатура;
						НоваяСтрокаСостава.ЕдиницаИзмерения = РаботаСФормамиСервер.ПолучитьЕдиницуИзмеренияНоменклатурыПоКлассификатору(НоваяСтрокаСостава.Номенклатура,Строка.ЕдиницаИзмерения.ЕдиницаПоКлассификатору);
						НоваяСтрокаСостава.Коэффициент      = НоваяСтрокаСостава.ЕдиницаИзмерения.Коэффициент;
						НоваяСтрокаСостава.Количество       = Окр(Строка.Количество * НоваяСтрока.Количество * Аналоги[0].КоэффициентЗамены,4);
					Иначе
						Сообщить("Не заданы аналоги для ингредиента "+Строка.Номенклатура+"!",СтатусСообщения.Важное);
					КонецЕсли;	
					
				Иначе	
					ЗаполнитьЗначенияСвойств(НоваяСтрокаСостава,Строка);
					НоваяСтрокаСостава.Количество = НоваяСтрокаСостава.Количество*НоваяСтрока.Количество;
				КонецЕсли;
				НоваяСтрокаСостава.Ключ = НоваяСтрока.Ключ;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры	

Процедура ЗаполнитьПоПланам() Экспорт
	
	флВыпускПродукцииПоПлановымЦенам = ОбщегоНазначенияСервер.ПолучитьУчетнуюПолитикуФирмы(Фирма,Дата).ВыпускПродукцииПоПлановымЦенам;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.Заказано) КАК Заказано,
	|	ВложенныйЗапрос.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
	|ПОМЕСТИТЬ Планы
	|ИЗ
    |   (ВЫБРАТЬ
	|		ЗаказВПроизводствоСрезПоследних.Продукция КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ДЕНЬНЕДЕЛИ(&ДатаНачала) = 1
	|				ТОГДА ЗаказВПроизводствоСрезПоследних.Понедельник
	|			КОГДА ДЕНЬНЕДЕЛИ(&ДатаНачала) = 2
	|				ТОГДА ЗаказВПроизводствоСрезПоследних.Вторник
	|			КОГДА ДЕНЬНЕДЕЛИ(&ДатаНачала) = 3
	|				ТОГДА ЗаказВПроизводствоСрезПоследних.Среда
	|			КОГДА ДЕНЬНЕДЕЛИ(&ДатаНачала) = 4
	|				ТОГДА ЗаказВПроизводствоСрезПоследних.Четверг
	|			КОГДА ДЕНЬНЕДЕЛИ(&ДатаНачала) = 5
	|				ТОГДА ЗаказВПроизводствоСрезПоследних.Пятница
	|			КОГДА ДЕНЬНЕДЕЛИ(&ДатаНачала) = 6
	|				ТОГДА ЗаказВПроизводствоСрезПоследних.Суббота
	|			КОГДА ДЕНЬНЕДЕЛИ(&ДатаНачала) = 7
	|				ТОГДА ЗаказВПроизводствоСрезПоследних.Воскресенье
	|		КОНЕЦ КАК Заказано,
	|		ЗаказВПроизводствоСрезПоследних.Продукция.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
	|	ИЗ
	|		РегистрСведений.ЗаказВПроизводство.СрезПоследних(&Момент, Склад = &Склад) КАК ЗаказВПроизводствоСрезПоследних) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.БазоваяЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Внутр.Продукция КАК Продукция,
	|	МАКСИМУМ(ТехнологическаяКарта.Ссылка) КАК ТехнологическаяКарта
	|ПОМЕСТИТЬ ТехнологическиеКарты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПродукцияПоЦехам.Продукция КАК Продукция,
	|		МАКСИМУМ(ПродукцияПоЦехам.ТехнологическаяКарта.Дата) КАК Дата
	|	ИЗ
	|		РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|	ГДЕ
	|		ПродукцияПоЦехам.ФлагАктивности
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПродукцияПоЦехам.Продукция) КАК Внутр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	|		ПО Внутр.Продукция = ТехнологическаяКарта.Продукция
    |
	|СГРУППИРОВАТЬ ПО
	|	Внутр.Продукция
	|; "+?(флВыпускПродукцииПоПлановымЦенам, "
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановаяСебестоимостьПродукции.Продукция КАК Номенклатура,
	|	ПлановаяСебестоимостьПродукции.Себестоимость КАК Цена,
	|	ПлановаяСебестоимостьПродукции.СебестоимостьНДС КАК ЦенаНДС
	|ПОМЕСТИТЬ ПлановыеЦены
	|ИЗ
	|	РегистрСведений.ПлановаяСебестоимостьПродукции.СрезПоследних(&Момент) КАК ПлановаяСебестоимостьПродукции
	|; ","")+" 
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Планы.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
	|	СУММА(Планы.Заказано) КАК Количество,
	//- ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) КАК Количество,
	|	ТехнологическиеКарты.ТехнологическаяКарта,
	|	Истина КАК ПоТехКарте,
	|	ЕдиницыИзмерения.Коэффициент "
	+?(флВыпускПродукцииПоПлановымЦенам, ",ПлановыеЦены.Цена"," ,0 ")+ " КАК ПлановаяСтоимость,"
	+?(флВыпускПродукцииПоПлановымЦенам, "ПлановыеЦены.ЦенаНДС","0 ")+ " КАК ПлановаяСтоимостьНДС
	|   
	|ИЗ
	|	Планы КАК Планы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО Планы.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И Планы.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &СкладГотовойПродукции) КАК ОстаткиНоменклатурыОстатки
//	|		ПО Планы.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТехнологическиеКарты КАК ТехнологическиеКарты
	|		ПО Планы.Номенклатура = ТехнологическиеКарты.Продукция " + ?(флВыпускПродукцииПоПлановымЦенам, "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеЦены КАК ПлановыеЦены
	|		ПО Планы.Номенклатура = ПлановыеЦены.Номенклатура "," ")+"
	|
	|СГРУППИРОВАТЬ ПО
	|	Планы.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка,
	|	ТехнологическиеКарты.ТехнологическаяКарта,
	|	ЕдиницыИзмерения.Коэффициент "+?(флВыпускПродукцииПоПлановымЦенам," ,ПлановыеЦены.Цена,ПлановыеЦены.ЦенаНДС","")
	+
	"
	|
	|ИМЕЮЩИЕ
	|	СУММА(Планы.Заказано) > 0
	//- ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Планы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТехнологическиеКарты "+?(флВыпускПродукцииПоПлановымЦенам, "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПлановыеЦены","");
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаПоставки));
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(КонецДня(Дата)));
	Запрос.УстановитьПараметр("Склад", СкладПроизводства);
	Запрос.УстановитьПараметр("СкладГотовойПродукции", Склад);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Продукция.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		НоваяСтрока.СуммаПлановая = Окр(НоваяСтрока.ПлановаяСтоимость * НоваяСтрока.Количество,2);  
		НоваяСтрока.СуммаНДСПлановая = Окр(НоваяСтрока.ПлановаяСтоимостьНДС * НоваяСтрока.Количество,2);  
		НоваяСтрока.Ключ = Новый УникальныйИдентификатор();
		Если ЗначениеЗаполнено(НоваяСтрока.ТехнологическаяКарта) Тогда
			Для Каждого Строка Из НоваяСтрока.ТехнологическаяКарта.Состав Цикл
				НоваяСтрокаСостава = Состав.Добавить();
				Если ТипЗнч(Строка.Номенклатура) = Тип("СправочникСсылка.Ингредиенты") Тогда
					//ищем первый аналог ингредиента
					Аналоги = Строка.Номенклатура.Состав;
					Если Аналоги.Количество() > 0 Тогда
						НоваяСтрокаСостава.Номенклатура     = Аналоги[0].Номенклатура;
						НоваяСтрокаСостава.Ингредиент       = Строка.Номенклатура;
						НоваяСтрокаСостава.ЕдиницаИзмерения = РаботаСФормамиСервер.ПолучитьЕдиницуИзмеренияНоменклатурыПоКлассификатору(НоваяСтрокаСостава.Номенклатура,Строка.ЕдиницаИзмерения.ЕдиницаПоКлассификатору);
						НоваяСтрокаСостава.Коэффициент      = НоваяСтрокаСостава.ЕдиницаИзмерения.Коэффициент;
						НоваяСтрокаСостава.Количество       = Окр(Строка.Количество * НоваяСтрока.Количество * Аналоги[0].КоэффициентЗамены,4);
					Иначе
						Сообщить("Не заданы аналоги для ингредиента "+Строка.Номенклатура+"!",СтатусСообщения.Важное);
					КонецЕсли;	
				Иначе	
					ЗаполнитьЗначенияСвойств(НоваяСтрокаСостава,Строка);
					НоваяСтрокаСостава.Количество = НоваяСтрокаСостава.Количество*НоваяСтрока.Количество;
				КонецЕсли;
				НоваяСтрокаСостава.Ключ = НоваяСтрока.Ключ;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСостав(Номенклатура,Количество,Коэффициент,ТехнологическаяКарта,ПоТехКарте,Ключ,флВыпускПродукцииПоПлановымЦенам)  экспорт
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ",Ключ);
	мсв = ЭтотОбъект.Состав.НайтиСтроки(Отбор);
	Для каждого Эл из мсв Цикл
		ЭтотОбъект.Состав.Удалить(Эл);
	КонецЦикла;	
	
	чКоличествоПродукции = Окр(Количество * Коэффициент,4);
	
	//флВыпускПродукцииПоПлановымЦенам = ВыпускПродукцииПоПлановымЦенам();
	флПриготовление = ЭтотОбъект.ВидПроизводства = Перечисления.ВидыПроизводства.Приготовление;
	флРазделка      = ЭтотОбъект.ВидПроизводства = Перечисления.ВидыПроизводства.Разделка;
	
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(ТехнологическаяКарта) Тогда
		Запрос.Текст =
		"ВЫБРАТЬ 
		|	ТехнологическаяКарта.Ссылка
		|ПОМЕСТИТЬ ТехКарта
		|ИЗ
		|	Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
		|ГДЕ
		|	ТехнологическаяКарта.Ссылка = &ТехнологическаяКартаСсылка
		|;";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПродукцияПоЦехам.ТехнологическаяКарта КАК Ссылка
		|ПОМЕСТИТЬ ТехКарта
		|ИЗ
		|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
		|ГДЕ
		|	ПродукцияПоЦехам.ТехнологическаяКарта.Продукция = &Продукция
		|	И ПродукцияПоЦехам.ТехнологическаяКарта.Проведен = ИСТИНА
		|	И ПродукцияПоЦехам.ТехнологическаяКарта.ПометкаУдаления = ЛОЖЬ
		|	И (ПродукцияПоЦехам.ТехнологическаяКарта.ВидПроизводства = &ВидПроизводства
		|			ИЛИ ПродукцияПоЦехам.ТехнологическаяКарта.ВидПроизводства = ЗНАЧЕНИЕ(Перечисление.ВидыПроизводства.Приготовление)
		|				И ПродукцияПоЦехам.ТехнологическаяКарта.ВозможнаРазделка
		|				И &ВидПроизводства = ЗНАЧЕНИЕ(Перечисление.ВидыПроизводства.Разделка))
		|	И ПродукцияПоЦехам.ФлагАктивности
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПродукцияПоЦехам.ТехнологическаяКарта.Дата УБЫВ
		|;";
	КонецЕсли;	
	
	
	Если флВыпускПродукцииПоПлановымЦенам И НЕ флПриготовление Тогда
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ
		|	ТехнологическаяКартаСостав.Ссылка,
		|	ТехнологическаяКартаСостав.Номенклатура,
		|	ТехнологическаяКартаСостав.Количество,
		|	ТехнологическаяКартаСостав.КоличествоНетто,
		|	ТехнологическаяКартаСостав.ЕдиницаИзмерения,
		|	ТехнологическаяКартаСостав.Коэффициент,
		|	ТехнологическаяКартаСостав.КоэффициентРаспределенияЦены,
		|	ТехнологическаяКартаСостав.ПроцентСписания
		|ПОМЕСТИТЬ ТехКартаСостав
		|ИЗ
		|	Документ.ТехнологическаяКарта.Состав КАК ТехнологическаяКартаСостав
		|ГДЕ
		|	ТехнологическаяКартаСостав.Ссылка В
		|			(ВЫБРАТЬ
		|				ТехКарта.Ссылка КАК Ссылка
		|			ИЗ
		|				ТехКарта)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановаяСебестоимостьПродукции.Продукция КАК Номенклатура,
		|	ПлановаяСебестоимостьПродукции.Себестоимость КАК Цена,
		|	ПлановаяСебестоимостьПродукции.СебестоимостьНДС КАК ЦенаНДС
		|ПОМЕСТИТЬ ПлановыеЦены
		|ИЗ
		|	РегистрСведений.ПлановаяСебестоимостьПродукции.СрезПоследних(
		|			&МоментВремени,
		|			Продукция В
		|				(ВЫБРАТЬ
		|					ТехКартаСостав.Номенклатура
		|				ИЗ
		|					ТехКартаСостав КАК ТехКартаСостав)) КАК ПлановаяСебестоимостьПродукции
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТехнологическаяКартаСостав.Ссылка,
		|	ТехнологическаяКартаСостав.Номенклатура,
		|	ТехнологическаяКартаСостав.Количество / ТехнологическаяКартаСостав.Ссылка.КоличествоПорций КАК Количество,
		|	ТехнологическаяКартаСостав.КоличествоНетто / ТехнологическаяКартаСостав.Ссылка.КоличествоПорций КАК КоличествоНетто,
		|	ТехнологическаяКартаСостав.ЕдиницаИзмерения,
		|	ТехнологическаяКартаСостав.Коэффициент,
		|	ТехнологическаяКартаСостав.КоэффициентРаспределенияЦены,
		|	ТехнологическаяКартаСостав.ПроцентСписания,
		|	ЕСТЬNULL(ПлановыеЦены.Цена, 0) КАК ПлановаяСтоимость,
		|	ЕСТЬNULL(ПлановыеЦены.ЦенаНДС, 0) КАК ПлановаяСтоимостьНДС,
		|	ТехнологическаяКартаСостав.Количество / ТехнологическаяКартаСостав.Ссылка.КоличествоПорций * ТехнологическаяКартаСостав.Коэффициент * ЕСТЬNULL(ПлановыеЦены.Цена, 0) КАК СуммаПлановая,
		|	ТехнологическаяКартаСостав.Количество / ТехнологическаяКартаСостав.Ссылка.КоличествоПорций * ТехнологическаяКартаСостав.Коэффициент * ЕСТЬNULL(ПлановыеЦены.ЦенаНДС, 0) КАК СуммаНДСПлановая
		|ИЗ
		|	ТехКартаСостав КАК ТехнологическаяКартаСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеЦены КАК ПлановыеЦены
		|		ПО ТехнологическаяКартаСостав.Номенклатура = ПлановыеЦены.Номенклатура";
	Иначе
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ
		|	ТехнологическаяКартаСостав.Ссылка,
		|	ТехнологическаяКартаСостав.Номенклатура,
		|	ТехнологическаяКартаСостав.Количество / ТехнологическаяКартаСостав.Ссылка.КоличествоПорций КАК Количество,
		|	ТехнологическаяКартаСостав.КоличествоНетто / ТехнологическаяКартаСостав.Ссылка.КоличествоПорций КАК КоличествоНетто,
		|	ТехнологическаяКартаСостав.ЕдиницаИзмерения,
		|	ТехнологическаяКартаСостав.Коэффициент,
		|	ТехнологическаяКартаСостав.КоэффициентРаспределенияЦены,
		|	ТехнологическаяКартаСостав.ПроцентСписания
		|ИЗ
		|	Документ.ТехнологическаяКарта.Состав КАК ТехнологическаяКартаСостав
		|ГДЕ
		|	ТехнологическаяКартаСостав.Ссылка В
		|			(ВЫБРАТЬ
		|				ТехКарта.Ссылка КАК Ссылка
		|			ИЗ
		|				ТехКарта)";
	КонецЕсли;
	Запрос.УстановитьПараметр("МоментВремени", ЭтотОбъект.Дата);
	Запрос.УстановитьПараметр("Продукция", Номенклатура);
	Запрос.УстановитьПараметр("ВидПроизводства", ЭтотОбъект.ВидПроизводства);
	Запрос.УстановитьПараметр("ТехнологическаяКартаСсылка", ТехнологическаяКарта);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		чКоличествоРаспределили=0;
		НоваяСтрока=Неопределено;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ВозможнаРазделка = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаДетальныеЗаписи.Ссылка, "ВозможнаРазделка");
			НоваяСтрока = ЭтотОбъект.Состав.Добавить();
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Номенклатура) = Тип("СправочникСсылка.Ингредиенты") Тогда
                НоваяСтрока.Ингредиент            = ВыборкаДетальныеЗаписи.Номенклатура;
				Аналоги = ВыборкаДетальныеЗаписи.Номенклатура.Состав;
				Если Аналоги.Количество() > 0 Тогда
					//если это приготовление - по умолчанию будет автоподбор аналогов и номенклатуру не заполняем
					//если это разделка, но на основании приготовления - также автоподбор
					Если флПриготовление 
					//ИЛИ (флРазделка И ТипЗнч(ДокОснование) = Тип("ДокументСсылка.ГотоваяПродукция")) 
					Тогда
						НоваяСтрока.Ингредиент            = ВыборкаДетальныеЗаписи.Номенклатура;
						НоваяСтрока.ЕдиницаИзмерения  = ВыборкаДетальныеЗаписи.ЕдиницаИзмерения;
						НоваяСтрока.Количество        = Окр( чКоличествоПродукции * ВыборкаДетальныеЗаписи.Количество, 4);
					Иначе
						//иначе заполним первой по списку номенклатурой ингредиента
						НоваяСтрока.Ингредиент            = ВыборкаДетальныеЗаписи.Номенклатура;
						НоваяСтрока.Номенклатура      = Аналоги[0].Номенклатура;
						НоваяСтрока.ЕдиницаИзмерения  = РаботаСФормамиСервер.ПолучитьЕдиницуИзмеренияНоменклатурыПоКлассификатору(НоваяСтрока.Номенклатура,ВыборкаДетальныеЗаписи.ЕдиницаИзмерения.ЕдиницаПоКлассификатору);
						НоваяСтрока.Количество        = Окр( чКоличествоПродукции * ВыборкаДетальныеЗаписи.Количество * Аналоги[0].КоэффициентЗамены , 4);
					КонецЕсли;
				КонецЕсли;
			Иначе
				НоваяСтрока.Номенклатура          = ВыборкаДетальныеЗаписи.Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения      = ВыборкаДетальныеЗаписи.ЕдиницаИзмерения;
				Если флПриготовление 
					ИЛИ (флРазделка И ВозможнаРазделка)
					Тогда
					НоваяСтрока.Количество        = Окр( чКоличествоПродукции * ВыборкаДетальныеЗаписи.Количество, 4);
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока.Коэффициент                  = ВыборкаДетальныеЗаписи.Коэффициент;
			НоваяСтрока.КоэффициентРаспределенияЦены = ВыборкаДетальныеЗаписи.КоэффициентРаспределенияЦены; 
			НоваяСтрока.ПроцентСписания              = ВыборкаДетальныеЗаписи.ПроцентСписания; 
			НоваяСтрока.Ключ                         = Ключ;
			Если НЕ флПриготовление И НЕ ВозможнаРазделка Тогда
				НоваяСтрока.Количество        = Окр( чКоличествоПродукции * ВыборкаДетальныеЗаписи.Количество / 100, 4);
				чКоличествоРаспределили       = чКоличествоРаспределили + НоваяСтрока.Количество;
				Если флВыпускПродукцииПоПлановымЦенам Тогда
					НоваяСтрока.ПлановаяСтоимость = ВыборкаДетальныеЗаписи.ПлановаяСтоимость;
					НоваяСтрока.СуммаПлановая     = ВыборкаДетальныеЗаписи.СуммаПлановая;
					НоваяСтрока.ПлановаяСтоимостьНДС = ВыборкаДетальныеЗаписи.ПлановаяСтоимостьНДС;
					НоваяСтрока.СуммаНДСПлановая     = ВыборкаДетальныеЗаписи.СуммаНДСПлановая;
				КонецЕсли;	
			КонецЕсли;	
			
			ТекущаяТехКарта = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
		
		Если (флРазделка И НЕ ВозможнаРазделка) И НоваяСтрока <> Неопределено Тогда
			чРазница = чКоличествоПродукции - чКоличествоРаспределили;
			Если чРазница <> 0 Тогда
				НоваяСтрока.Количество = НоваяСтрока.Количество + чРазница;
			КонецЕсли;	
		КонецЕсли;
		
		ТехнологическаяКарта = ТекущаяТехКарта;
		ПоТехКарте = Истина;
	КонецЕсли;	
КонецПроцедуры

Процедура ЗаполнитьПоПланамИЗаказам(ЗаказВнешний = Неопределено) Экспорт
	
	флВыпускПродукцииПоПлановымЦенам = ОбщегоНазначенияСервер.ПолучитьУчетнуюПолитикуФирмы(Фирма,Дата).ВыпускПродукцииПоПлановымЦенам;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.Заказано) КАК Заказано,
	|	ВложенныйЗапрос.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
	|ПОМЕСТИТЬ Планы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВнешнийЗаказ.Номенклатура КАК Номенклатура,
	|		ВнешнийЗаказ.Количество КАК Заказано,
	|		ВнешнийЗаказ.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
	|	ИЗ
	|		РегистрСведений.ВнешнийЗаказ КАК ВнешнийЗаказ
	|	ГДЕ
	|		ВнешнийЗаказ.ДатаПоставки = &ДатаНачала
	|		И ВнешнийЗаказ.Склад = &Склад  "+?(ЗначениеЗаполнено(ЗаказВнешний)," И ВнешнийЗаказ.Регистратор = &Регистратор","")+") КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.БазоваяЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Внутр.Продукция КАК Продукция,
	|	МАКСИМУМ(ТехнологическаяКарта.Ссылка) КАК ТехнологическаяКарта
	|ПОМЕСТИТЬ ТехнологическиеКарты
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПродукцияПоЦехам.Продукция КАК Продукция,
	|		МАКСИМУМ(ПродукцияПоЦехам.ТехнологическаяКарта.Дата) КАК Дата
	|	ИЗ
	|		РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|	ГДЕ
	|		ПродукцияПоЦехам.ФлагАктивности
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПродукцияПоЦехам.Продукция) КАК Внутр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	|		ПО Внутр.Продукция = ТехнологическаяКарта.Продукция
    |
	|СГРУППИРОВАТЬ ПО
	|	Внутр.Продукция
	|; "+?(флВыпускПродукцииПоПлановымЦенам, "
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановаяСебестоимостьПродукции.Продукция КАК Номенклатура,
	|	ПлановаяСебестоимостьПродукции.Себестоимость КАК Цена,
	//popn+
	|	ПлановаяСебестоимостьПродукции.СебестоимостьНДС КАК ЦенаНДС
	//popn-
	|ПОМЕСТИТЬ ПлановыеЦены
	|ИЗ
	|	РегистрСведений.ПлановаяСебестоимостьПродукции.СрезПоследних(&Момент) КАК ПлановаяСебестоимостьПродукции
	|; ","")+" 
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Планы.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
	|	СУММА(Планы.Заказано) - ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) КАК Количество,
	|	ТехнологическиеКарты.ТехнологическаяКарта,
	|	Истина КАК ПоТехКарте,
	|	ЕдиницыИзмерения.Коэффициент "
	+?(флВыпускПродукцииПоПлановымЦенам, ",ПлановыеЦены.Цена"," ,0 ")+ " КАК ПлановаяСтоимость,"
	//popn+
	+?(флВыпускПродукцииПоПлановымЦенам, "ПлановыеЦены.ЦенаНДС","0 ")+ " КАК ПлановаяСтоимостьНДС
	//popn-
	|   
	|ИЗ
	|	Планы КАК Планы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО Планы.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И Планы.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &СкладГотовойПродукции) КАК ОстаткиНоменклатурыОстатки
	|		ПО Планы.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТехнологическиеКарты КАК ТехнологическиеКарты
	|		ПО Планы.Номенклатура = ТехнологическиеКарты.Продукция " + ?(флВыпускПродукцииПоПлановымЦенам, "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеЦены КАК ПлановыеЦены
	|		ПО Планы.Номенклатура = ПлановыеЦены.Номенклатура "," ")+"
	|
	|СГРУППИРОВАТЬ ПО
	|	Планы.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка,
	|	ТехнологическиеКарты.ТехнологическаяКарта,
	|	ЕдиницыИзмерения.Коэффициент "+?(флВыпускПродукцииПоПлановымЦенам," ,ПлановыеЦены.Цена,ПлановыеЦены.ЦенаНДС","")
	+
	"
	|
	|ИМЕЮЩИЕ
	|	СУММА(Планы.Заказано) - ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Планы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТехнологическиеКарты "+?(флВыпускПродукцииПоПлановымЦенам, "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПлановыеЦены","");
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаПоставки));
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(КонецДня(Дата)));
	Запрос.УстановитьПараметр("Склад", СкладПроизводства);
	Запрос.УстановитьПараметр("СкладГотовойПродукции", Склад);
	Запрос.УстановитьПараметр("Регистратор",ЗаказВнешний);	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Продукция.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		НоваяСтрока.СуммаПлановая = Окр(НоваяСтрока.ПлановаяСтоимость * НоваяСтрока.Количество,2);  
		//popn+
		НоваяСтрока.СуммаНДСПлановая = Окр(НоваяСтрока.ПлановаяСтоимостьНДС * НоваяСтрока.Количество,2);  
		//popn-
		НоваяСтрока.Ключ = Новый УникальныйИдентификатор();
		Если ЗначениеЗаполнено(НоваяСтрока.ТехнологическаяКарта) Тогда
			Для Каждого Строка Из НоваяСтрока.ТехнологическаяКарта.Состав Цикл
				НоваяСтрокаСостава = Состав.Добавить();
				Если ТипЗнч(Строка.Номенклатура) = Тип("СправочникСсылка.Ингредиенты") Тогда
					//ищем первый аналог ингредиента
					Аналоги = Строка.Номенклатура.Состав;
					Если Аналоги.Количество() > 0 Тогда
						НоваяСтрокаСостава.Номенклатура     = Аналоги[0].Номенклатура;
						НоваяСтрокаСостава.Ингредиент       = Строка.Номенклатура;
						НоваяСтрокаСостава.ЕдиницаИзмерения = РаботаСФормамиСервер.ПолучитьЕдиницуИзмеренияНоменклатурыПоКлассификатору(НоваяСтрокаСостава.Номенклатура,Строка.ЕдиницаИзмерения.ЕдиницаПоКлассификатору);
						НоваяСтрокаСостава.Коэффициент      = НоваяСтрокаСостава.ЕдиницаИзмерения.Коэффициент;
						НоваяСтрокаСостава.Количество       = Окр(Строка.Количество * НоваяСтрока.Количество * Аналоги[0].КоэффициентЗамены,4);
					Иначе
						Сообщить("Не заданы аналоги для ингредиента "+Строка.Номенклатура+"!",СтатусСообщения.Важное);
					КонецЕсли;	
					
				Иначе	
					ЗаполнитьЗначенияСвойств(НоваяСтрокаСостава,Строка);
					НоваяСтрокаСостава.Количество = НоваяСтрокаСостава.Количество*НоваяСтрока.Количество;
				КонецЕсли;
				НоваяСтрокаСостава.Ключ = НоваяСтрока.Ключ;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры	
