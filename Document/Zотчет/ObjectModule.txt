

Функция ПровестиZотчет(Объект,Режим)
	
	прчПродажаРозница = Перечисления.КодыОпераций.ПродажаРозница;
	прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-

	тзОстаткиНоменклатуры = Объект.Движения.ОстаткиНоменклатуры.Выгрузить();
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	
	Объект.Движения.Реализация.Очистить();
	тзРеализация = Объект.Движения.Реализация.Выгрузить();
	
	
	// Установка исключительной блокировки контролируемых остатков 
	Запрос=Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	тзНаборы=ПроведениеДокументов.ПреобразоватьНаборы(Новый Структура("Ссылка,Дата",Объект.Ссылка,Объект.Дата));
	
	Запрос.УстановитьПараметр("Наборы",тзНаборы);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	н.Количество,
	|	н.Номенклатура,
	|	н.Сумма,
	|	н.СуммаНДС,
	|	н.СтавкаНДС,
	|	н.Склад,
	|	н.Статус
	|ПОМЕСТИТЬ врНаборы
	|ИЗ
	|	&Наборы КАК н";
	Запрос.Выполнить();
	Запрос.Текст=
	"ВЫБРАТЬ
	|	т.Номенклатура,
	|	т.МестоХранения КАК МестоХранения,
	|	&Фирма КАК Фирма,
	|	СУММА(т.Количество) КАК Количество,
	|	СУММА(т.Сумма) КАК Сумма,
	|	СУММА(т.СуммаНДС) КАК СуммаНДС,
	|	т.СтавкаНДС КАК СтавкаНДС,
	|	т.Статус
	|ПОМЕСТИТЬ врСостав
	|ИЗ
	|	(ВЫБРАТЬ
	|		ZотчетСостав.Номенклатура КАК Номенклатура,
	|		ZотчетСостав.СтавкаНДС КАК СтавкаНДС,
	|		ZотчетСостав.Склад КАК МестоХранения,
	|		СУММА(ВЫРАЗИТЬ(ZотчетСостав.Количество * ZотчетСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	|		СУММА(ZотчетСостав.Сумма) КАК Сумма,
	|		СУММА(ZотчетСостав.СуммаНДС) КАК СуммаНДС,
	|		ZотчетСостав.ТипРеализацииТовара КАК Статус
	|	ИЗ
	|		Документ.Zотчет.Состав КАК ZотчетСостав
	|	ГДЕ
	|		ZотчетСостав.Ссылка = &Ссылка
	|		И ZотчетСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Набор)
	|		И ZотчетСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ZотчетСостав.Номенклатура,
	|		ZотчетСостав.Склад,
	|		ZотчетСостав.Ссылка.Фирма,
	|		ZотчетСостав.СтавкаНДС,
	|		ZотчетСостав.ТипРеализацииТовара
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		н.Номенклатура,
	|		н.СтавкаНДС,
	|		н.Склад,
	|		н.Количество,
	|		н.Сумма,
	|		н.СуммаНДС,
	|		н.Статус
	|	ИЗ
	|		врНаборы КАК н) КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Номенклатура,
	|	т.МестоХранения,
	|	т.СтавкаНДС,
	|	т.Статус
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врСостав.Номенклатура,
	|	врСостав.МестоХранения,
	|	врСостав.Фирма
	|ИЗ
	|	врСостав КАК врСостав";
	Запрос.УстановитьПараметр("Фирма",Объект.Фирма);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	тз=Запрос.Выполнить().Выгрузить();
	тз.Свернуть("Номенклатура,МестоХранения,Фирма");
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тз;
	Для каждого к из тз.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	Параметры = Новый Структура;
	Параметры.Вставить("Запрос",Запрос);
	Параметры.Вставить("Объект",Объект);
	Параметры.Вставить("КодОперации",прчПродажаРозница);
	Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
	Параметры.Вставить("тзРеализация",тзРеализация);
	Параметры.Вставить("РежимПроведения",Режим);
	Параметры.Вставить("Фирма",Объект.Фирма);
	//++БИТ БВО
	//фл = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);
	фл = ПроведениеДокументов.ПровестиСписаниеПоПартиямСоСтатусом(Параметры);
	//--БИТ БВО
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ZотчетВыручка.ПОС КАК ДенежнаяЯчейка,
	|	СУММА(ZотчетВыручка.СуммаНал) КАК Сумма,
	|	ZотчетВыручка.Ссылка КАК Регистратор,
	|	ZотчетВыручка.Ссылка.Дата КАК Период,
	|	ZотчетВыручка.Ссылка.Фирма,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПродажиККМНаличные) КАК КлассификаторДДС,
	|	ZотчетВыручка.Ссылка.СтруктурнаяЕдиница.Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения
	|ИЗ
	|	Документ.Zотчет.Выручка КАК ZотчетВыручка
	|ГДЕ
	|	ZотчетВыручка.Ссылка = &Ссылка
	|	И ZотчетВыручка.СуммаНал <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ZотчетВыручка.ПОС,
	|	ZотчетВыручка.Ссылка,
	|	ZотчетВыручка.Ссылка.Дата,
	|	ZотчетВыручка.Ссылка.Фирма,
	|	ZотчетВыручка.Ссылка.СтруктурнаяЕдиница.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ZотчетВыручка.ПОС,
	|	ZотчетВыручка.Сумма - ZотчетВыручка.СуммаНал,
	|	ZотчетВыручка.Ссылка,
	|	ZотчетВыручка.Ссылка.Дата,
	|	ZотчетВыручка.Ссылка.Фирма,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КлассификаторДДС.ПродажиККМПоКартам),
	|	ZотчетВыручка.Ссылка.СтруктурнаяЕдиница.Валюта,
	|	ВидыДвижений.ВидДвижения
	|ИЗ
	|	Документ.Zотчет.Выручка КАК ZотчетВыручка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)) КАК ВидыДвижений
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ZотчетВыручка.Ссылка = &Ссылка
	|	И ZотчетВыручка.Сумма - ZотчетВыручка.СуммаНал <> 0";
	тзДеньги = Запрос.Выполнить().Выгрузить();
	
	тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,Комитент,КодОперации,СтавкаНДС","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр,СуммаПродажи,СуммаНДСПродажи");
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
	
	//popn+
	//движения по услугам
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ZотчетСостав.Ссылка.Дата КАК Период,
		|	ZотчетСостав.Ссылка.Ссылка КАК Регистратор,
		|	ИСТИНА КАК Активность,
		|	ZотчетСостав.Номенклатура КАК Номенклатура,
		|	ZотчетСостав.Ссылка.Фирма КАК Фирма,
		|	&КодОперации КАК КодОперации,
		|	&СтатусПартии КАК Статус,
		|	МАКСИМУМ(ZотчетСостав.СтавкаНДС) КАК СтавкаНДС,
		|	СУММА(ВЫРАЗИТЬ(ZотчетСостав.Количество * ZотчетСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
		|	СУММА(ZотчетСостав.Сумма) КАК СуммаПродажи,
		|	СУММА(ZотчетСостав.СуммаНДС) КАК СуммаНДСПродажи
		|ИЗ
		|	Документ.Zотчет.Состав КАК ZотчетСостав
		|ГДЕ
		|	ZотчетСостав.Ссылка = &Ссылка
		|	И ZотчетСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	ZотчетСостав.Номенклатура,
		|	ZотчетСостав.Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("КодОперации", прчПродажаРозница);
	Запрос.УстановитьПараметр("СтатусПартии", прчКупляПродажа);
	
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаУслуги = тзОстаткиНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаУслуги,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	//popn-
	
	тзОстаткиНоменклатуры.Колонки.Добавить("Контрагент");
	тзОстаткиНоменклатуры.ЗаполнитьЗначения(Справочники.Контрагенты.РозничныйПокупатель,"Контрагент");
	
	Объект.Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
	
	Объект.Движения.Реализация.Загрузить(тзРеализация);
	Объект.Движения.ДенежныеСредства.Загрузить(тзДеньги);
	
	//popn+
	УчетАлкоголя = УчетАлкогольнойПродукции.ВестиУчетАлкоголя();
	Если УчетАлкоголя Тогда
		УчетАлкогольнойПродукции.СформироватьРасходПоУчетуАлкоголя(Объект,прчПродажаРозница);
	Иначе
		УчетАлкогольнойПродукции.ОчиститьДвиженияПоУчетуАлкоголя(Объект);
	КонецЕсли;
	
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	Объект.Движения.Реализация.Записывать=Истина;
	Объект.Движения.ДенежныеСредства.Записывать=Истина;
	
	Возврат фл;
КонецФункции	

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Отказ = ПроверкаПравильностиЗаполненныхДанных();
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	АвтоПроизводство.СформироватьДокументыГотоваяПродукция(ЭтотОбъект,Режим,Отказ);
	Отказ = ПровестиZотчет(ЭтотОбъект,Режим);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаИтого = Состав.Итог("Сумма");
	СуммаНДСИтого = Состав.Итог("СуммаНДС");
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Если Выручка.Количество()> 0 Тогда
			СтруктурнаяЕдиница = Выручка[0].ПОС.Владелец;
		ИначеЕсли НЕ ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ЭтоГруппа Тогда	
			СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Функция ПроверкаПравильностиЗаполненныхДанных()

	//Проверка на правильность данных в Zотчете
	Отказ = Ложь;
	ТекстОшибки = "ZОтчет заполнен неверно.";
	
	//проверим что склады выбраны розничные
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("", Перечисления.ВидыСкладов.Розничный);
	Запрос.Текст = "ВЫБРАТЬ
	|	ZотчетСостав.НомерСтроки КАК НомерСтроки,
	|	ZотчетСостав.Склад.Представление КАК СкладПредставление
	|ИЗ
	|	Документ.Zотчет.Состав КАК ZотчетСостав
	|ГДЕ
	|	ZотчетСостав.Ссылка = &Ссылка
	|    И (НЕ ZотчетСостав.Склад.ВидСклада = ЗНАЧЕНИЕ(Перечисление.ВидыСкладов.Розничный) 
	|    ИЛИ ZотчетСостав.Склад = Значение(Справочник.Склады.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Отказ = Истина;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.СкладПредставление) Тогда
				ТекстОшибки = ТекстОшибки + "
				|Склад """ + Выборка.СкладПредставление + " не является ""розничным""""! (Строка: " + Выборка.НомерСтроки + ")";
			Иначе
				ТекстОшибки = ТекстОшибки + "
				|Склад не выбран! (Строка: " + Выборка.НомерСтроки + ")";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//проверим на нулевую сумму денежной выручки
	чВыручкаВсего           = Выручка.Итог("Сумма");
	
	Если чВыручкаВсего = 0 Тогда
		Отказ = Истина;
		ТекстОшибки = ТекстОшибки + "
		|Сумма общей денежной выручки равна нулю!";
	КонецЕсли;
	
	чВыручкаНалВсего        = Выручка.Итог("СуммаНал");
	чВыручкаБезНалКредКарты = Карты.Итог("Сумма");
	чВыручкаСвободнаяСумма  = Выручка.Итог("СвободнаяСумма");
	чВыручкаТовары          = Состав.Итог("Сумма");
	
	Если чВыручкаТовары = 0 И чВыручкаСвободнаяСумма <> 0  ТОгда
		Отказ = Истина;
		ТекстОшибки = ТекстОшибки + "
		|Не поддерживается ввод свободной суммы без товаров!";
	КонецЕсли;	
	
	спрМПНал = Справочники.КредитныеКарты.Наличные;
	
	чМПНал=0;чМПБезНал=0;
	////определим сумму мобильных платежей нал и безнал
	//Для каждого СтрокаМП из ОплатаМобильнойСвязи Цикл
	//	Если СтрокаМП.ТипКарты = спрМПНал Тогда
	//		чМПНал = чМПНал + СтрокаМП.Сумма;
	//	Иначе
	//		чМПБезНал = чМПБезНал + СтрокаМП.Сумма;
	//	КонецЕсли;	
	//КонецЦикла;	
	
	чВыручкаВсегоРасч = чВыручкаНалВсего + чВыручкаБезНалКредКарты + чМПБезНал;
	Если чВыручкаВсего <> чВыручкаВсегоРасч Тогда
		Отказ = Истина;
		ТекстОшибки = ТекстОшибки + "
		|Сумма наличной и безналичной оплаты не равняется общей сумме денежной выручки!";
	КонецЕсли;
	чВыручкаСвободнаяСуммаРасч = чВыручкаВсего - чМПНал - чМПБезНал - чВыручкаТовары;
	Если чВыручкаСвободнаяСуммаРасч <> чВыручкаСвободнаяСумма Тогда
		Отказ = Истина;
		ТекстОшибки = ТекстОшибки + "
		|Свободная сумма заполнена неверно!";
	КонецЕсли;	
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,Ссылка);
	КонецЕсли;
	
	Возврат Отказ;
КонецФункции // ПроверкаПравильностиЗаполненныхДанных()

//++БИТ БВО №0000129900 2015-06-04
Процедура ПерераспределитьСоставПоОстаткам() Экспорт
		
	Izh_ОбщегоНазначенияСервер.ПерераспределитьСоставПоОстаткам(ЭтотОбъект);
	Для Каждого СтрокаСостава Из Состав Цикл
		Izh_ОбщегоНазначенияСервер.РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаСостава);
	КонецЦикла;
	
	Если Состав.Количество() > 0 Тогда
		ПоследняяСтрока = Состав[Состав.Количество() - 1];				
		ПоследняяСтрока.Сумма = ПоследняяСтрока.Сумма - (Состав.Итог("Сумма") - Выручка.Итог("Сумма"));		
	КонецЕсли;
	
КонецПроцедуры
//--БИТ БВО №0000129900 2015-06-04