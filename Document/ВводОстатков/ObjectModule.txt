
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	
	ИнициализироватьДокумент();

КонецПроцедуры


Процедура ИнициализироватьДокумент()

	Автор = ПараметрыСеанса.ТекущийПользователь;
	
		
	Если НЕ ЗначениеЗаполнено(ТипОстатков) Тогда
		
		ТипОстатков = Перечисления.ТипыОстатков.КупленныеТовары;
		
	КонецЕсли;	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Отказ = ПровестиВводОстатков(ЭтотОбъект,РежимПроведения);
КонецПроцедуры

Функция ПровестиВводОстатков(Объект,Режим)
	
	
	
	Если Объект.ТипОстатков = Перечисления.ТипыОстатков.КупленныеТовары ИЛИ Объект.ТипОстатков = Перечисления.ТипыОстатков.КомиссионныеТовары ИЛИ Объект.ТипОстатков = Перечисления.ТипыОстатков.ХранимыеТовары Тогда
		
		прчВводОстатков = Перечисления.КодыОпераций.ВводОстатков;
		
		прчКупляПродажа          = Перечисления.ТипыДоговоров.КупляПродажа;
		прчКомиссия              = Перечисления.ТипыДоговоров.Комиссия;
		прчОтветственноеХранение = Перечисления.ТипыДоговоров.ОтветственноеХранение;
		
		//popn+
		тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
		Для Каждого РегистрДвижений Из Объект.Движения Цикл
			РегистрДвижений.Очистить();
		КонецЦикла;
		//popn-
		
		Если Объект.ТипОстатков = Перечисления.ТипыОстатков.КупленныеТовары Тогда
			стрКомитент="";
			стрКомитентГруппировка="";
			Статус = прчКупляПродажа;
			стрТаблица = "КупленныеТовары";
			стрНДС = "ВводОстатковСостав.СуммаНДС";
			стрНДСУпр = "ВводОстатковСостав.СуммаНДСУпр";
		ИначеЕсли Объект.ТипОстатков = Перечисления.ТипыОстатков.КомиссионныеТовары Тогда
			стрКомитент="ВводОстатковСостав.Комитент КАК Комитент,";
			стрКомитентГруппировка="ВводОстатковСостав.Комитент,";
			Статус = прчКомиссия;
			стрТаблица = "КомиссионныеТовары";
			стрНДС = "0";
			стрНДСУпр = "0";
		ИначеЕсли Объект.ТипОстатков = Перечисления.ТипыОстатков.ХранимыеТовары Тогда
			стрКомитент="ВводОстатковСостав.Контрагент КАК Комитент,";
			стрКомитентГруппировка="ВводОстатковСостав.Контрагент,";
			Статус = прчОтветственноеХранение;
			стрТаблица = "ХранимыеТовары";
			стрНДС = "0";
			стрНДСУпр = "0";
		КонецЕсли;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВводОстатковСостав.Номенклатура,
		|"+стрКомитент+"
		|	ВводОстатковСостав.Ссылка КАК Регистратор,
		|	ИСТИНА КАК Активность,
		|	ВводОстатковСостав.Ссылка.Склад КАК МестоХранения,
		|	СУММА(ВЫРАЗИТЬ(ВводОстатковСостав.Количество * ВводОстатковСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
		|	СУММА(ВводОстатковСостав.Сумма) КАК Сумма,
		|	СУММА("+стрНДС+") КАК СуммаНДС,
		|	&ВидДвижения КАК ВидДвижения,
		|	ВводОстатковСостав.Ссылка.Дата КАК Период,
		|	ВводОстатковСостав.Ссылка.Фирма,
		|	СУММА(ВводОстатковСостав.СуммаУпр) КАК СуммаУпр,
		|	СУММА("+стрНДСУпр+") КАК СуммаНДСУпр,
		|	&Статус КАК Статус,
		|   Значение(Перечисление.КодыОпераций.ВводОстатков) КАК КодОперации
		|ИЗ
		|	Документ.ВводОстатков."+стрТаблица+" КАК ВводОстатковСостав
		|ГДЕ
		|	ВводОстатковСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводОстатковСостав.Номенклатура,
		|"+стрКомитентГруппировка+"
		|	ВводОстатковСостав.Ссылка,
		|	ВводОстатковСостав.Ссылка.Склад,
		|	ВводОстатковСостав.Ссылка.Дата,
		|	ВводОстатковСостав.Ссылка.Фирма");
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Запрос.УстановитьПараметр("Статус",Статус);
		Запрос.УстановитьПараметр("ВидДвижения",ВидДвиженияНакопления.Приход);
		
		тзОстаткиНоменклатуры = Запрос.Выполнить().Выгрузить();
		Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
		
		//popn+
		ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
		НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
		Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
		//popn-
		
	ИначеЕсли Объект.ТипОстатков = Перечисления.ТипыОстатков.ДенежныеСредства Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВводОстатковДенежныеСредства.Ссылка КАК Регистратор,
		|	ВводОстатковДенежныеСредства.Ссылка.Фирма,
		|	ВводОстатковДенежныеСредства.Ссылка.Дата КАК Период,
		|	ВводОстатковДенежныеСредства.ДенежнаяЯчейка,
		|	СУММА(ВводОстатковДенежныеСредства.Сумма) КАК Сумма,
		|	&ВидДвижения,
		|	ВводОстатковДенежныеСредства.Валюта
		|ИЗ
		|	Документ.ВводОстатков.ДенежныеСредства КАК ВводОстатковДенежныеСредства
		|ГДЕ
		|	ВводОстатковДенежныеСредства.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводОстатковДенежныеСредства.Ссылка,
		|	ВводОстатковДенежныеСредства.Ссылка.Фирма,
		|	ВводОстатковДенежныеСредства.Ссылка.Дата,
		|	ВводОстатковДенежныеСредства.ДенежнаяЯчейка,
		|	ВводОстатковДенежныеСредства.Валюта");
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Запрос.УстановитьПараметр("ВидДвижения",ВидДвиженияНакопления.Приход);
		Объект.Движения.ДенежныеСредства.Загрузить(Запрос.Выполнить().Выгрузить());
		Объект.Движения.ДенежныеСредства.Записывать=Истина;
		
	ИначеЕсли Объект.ТипОстатков = Перечисления.ТипыОстатков.ТоварыПереданныеНаКомиссию Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВводОстатковТоварыПереданныеНаКомиссию.Ссылка КАК Регистратор,
		|	ВводОстатковТоварыПереданныеНаКомиссию.Ссылка.Фирма,
		|	ВводОстатковТоварыПереданныеНаКомиссию.Ссылка.Дата КАК Период,
		|	ВводОстатковТоварыПереданныеНаКомиссию.Контрагент КАК Комиссионер,
		|	ВводОстатковТоварыПереданныеНаКомиссию.Номенклатура,
		|	СУММА(ВЫРАЗИТЬ(ВводОстатковТоварыПереданныеНаКомиссию.Количество * ВводОстатковТоварыПереданныеНаКомиссию.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
		|	СУММА(ВводОстатковТоварыПереданныеНаКомиссию.Сумма) КАК Сумма,
		|	СУММА(ВводОстатковТоварыПереданныеНаКомиссию.СуммаНДС) КАК СуммаНДС,
		|	&ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ВводОстатков) КАК КодОперации,
		|	СУММА(ВводОстатковТоварыПереданныеНаКомиссию.СуммаУпр) КАК СуммаУпр,
		|	СУММА(ВводОстатковТоварыПереданныеНаКомиссию.СуммаНДСУпр) КАК СуммаНДСУпр
		|ИЗ
		|	Документ.ВводОстатков.ТоварыПереданныеНаКомиссию КАК ВводОстатковТоварыПереданныеНаКомиссию
		|ГДЕ
		|	ВводОстатковТоварыПереданныеНаКомиссию.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводОстатковТоварыПереданныеНаКомиссию.Ссылка,
		|	ВводОстатковТоварыПереданныеНаКомиссию.Ссылка.Фирма,
		|	ВводОстатковТоварыПереданныеНаКомиссию.Ссылка.Дата,
		|	ВводОстатковТоварыПереданныеНаКомиссию.Контрагент,
		|	ВводОстатковТоварыПереданныеНаКомиссию.Номенклатура");
		Запрос.УстановитьПараметр("ВидДвижения",ВидДвиженияНакопления.Приход);
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Объект.Движения.ТоварыПереданныеНаКомиссию.Загрузить(Запрос.Выполнить().Выгрузить());
		Объект.Движения.ТоварыПереданныеНаКомиссию.Записывать=Истина;

	ИначеЕсли Объект.ТипОстатков = Перечисления.ТипыОстатков.РеализованныеТовары Тогда		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВводОстатковРеализованныеТовары.Ссылка КАК Регистратор,
		|	ВводОстатковРеализованныеТовары.Ссылка КАК ПоДокументу,
		|	ВводОстатковРеализованныеТовары.Ссылка.Фирма,
		|	ВводОстатковРеализованныеТовары.Ссылка.Дата КАК Период,
		|	ВводОстатковРеализованныеТовары.Комитент КАК Комитент,
		|	ВводОстатковРеализованныеТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ВЫРАЗИТЬ(ВводОстатковРеализованныеТовары.Количество * ВводОстатковРеализованныеТовары.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
		|	СУММА(ВводОстатковРеализованныеТовары.Сумма) КАК Сумма,
		|	СУММА(ВводОстатковРеализованныеТовары.СуммаПродажи) КАК СуммаПродажи,
		|	СУММА(ВводОстатковРеализованныеТовары.СуммаНДСПродажи) КАК СуммаНДСПродажи,
		|	&ВидДвижения КАК ВидДвижения
		|ИЗ
		|	Документ.ВводОстатков.РеализованныеТовары КАК ВводОстатковРеализованныеТовары
		|ГДЕ
		|	ВводОстатковРеализованныеТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводОстатковРеализованныеТовары.Ссылка,
		|	ВводОстатковРеализованныеТовары.Ссылка.Фирма,
		|	ВводОстатковРеализованныеТовары.Ссылка.Дата,
		|	ВводОстатковРеализованныеТовары.Комитент,
		|	ВводОстатковРеализованныеТовары.Номенклатура");
		Запрос.УстановитьПараметр("ВидДвижения",ВидДвиженияНакопления.Приход);
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Объект.Движения.Реализация.Загрузить(Запрос.Выполнить().Выгрузить());
		Объект.Движения.Реализация.Записывать=Истина;

	КонецЕсли;
	Возврат Ложь;
КонецФункции	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СтруктурнаяЕдиница = Склад.Владелец;
КонецПроцедуры
