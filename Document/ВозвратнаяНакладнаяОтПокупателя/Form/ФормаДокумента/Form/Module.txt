&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеПодбора() 
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(ТекСтрока);
	
	ТекСтрока.СебестоимостьСумма = Окр(ТекСтрока.СебестоимостьЦена*ТекСтрока.Количество,2);	
	ТекСтрока.СебестоимостьСуммаУпр = Окр(ТекСтрока.СебестоимостьЦенаУпр*ТекСтрока.Количество,2);	
	
	чСтавка = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС);
	ТекСтрока.СебестоимостьНДС    = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.СебестоимостьСумма,Истина,чСтавка);
	ТекСтрока.СебестоимостьНДСУпр = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.СебестоимостьСуммаУпр,Истина,чСтавка);
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество);
		ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры


//Конец Процедуры и функции для организации подбора

&НаКлиенте
Процедура Валюта(Команда)
	РаботаСФормамиКлиент.ОткрытьФормуВводаВалютыКурса(Объект);
	ОбновитьПредставлениеВалюты();	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеВалюты()
	Если Объект.Курс = 1 Тогда
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = Объект.Валюта;
	Иначе
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = ""+Объект.Валюта+" "+Объект.Курс;
	КонецЕсли;	
КонецПроцедуры	


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
			Объект.Валюта = ПолучитьВалютуКонтрагента(Объект.Контрагент);
		Иначе
			Объект.Валюта = ПолучитьВалютуСтруктурнойЕдиницы(Объект.СтруктурнаяЕдиница);
		КонецЕсли;
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	УстановитьВидимостьЭлементовФормы();	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ИспользованиеВалюты(СтруктурнаяЕдиница)
	Возврат ПолучитьФункциональнуюОпцию("ИспользованиеВалюты",Новый Структура("СтруктурнаяЕдиница,ПараметрСтруктурнойЕдиницы",СтруктурнаяЕдиница,ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеВалюты));
КонецФункции

 &НаСервереБезКонтекста
Функция ПолучитьКурсВалютыНаДату(Валюта,Дата)
	Возврат РаботаСКурсамиВалютКлиентСервер.ПолучитьКурсВалютыНаДату(Валюта,Дата);
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьВалютуКонтрагента(Контрагент)
	 Возврат Контрагент.Валюта;
КонецФункции
 
 &НаСервереБезКонтекста
Функция ПолучитьВалютуСтруктурнойЕдиницы(се)
	Возврат се.Валюта;
КонецФункции	 
 

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.ВыбиратьТип = Объект.Контрагент = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)
	Объект.Контрагент = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
	КонецЕсли;	
КонецПроцедуры



&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	фл = ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты");
	Элементы.ТипДоговора.Видимость = фл;
	
	//++БИТ БВО №0000129900
	//Элементы.СоставТипРеализацииТовара.Видимость = Ложь;
	//--БИТ БВО №0000129900
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	УстановитьВидимостьЭлементовФормы();
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаКлиенте
Процедура СоставСебестоимостьЦенаПриИзменении(Элемент)
	ПриИзмененииСебестоимостьЦена(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСебестоимостьЦена(ТекСтрока)
	ТекСтрока.СебестоимостьСумма = Окр(ТекСтрока.СебестоимостьЦена*ТекСтрока.Количество,2);	
	ТекСтрока.СебестоимостьНДС   = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.СебестоимостьСумма,Истина,ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС));	
	Если НЕ ЗначениеЗаполнено(ТекСтрока.СебестоимостьЦенаУпр) Тогда
		 ТекСтрока.СебестоимостьЦенаУпр = ТекСтрока.СебестоимостьЦена;
		 ПриИзмененииСебестоимостьЦенаУпр(ТекСтрока);
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура ПриИзмененииСебестоимостьЦенаУпр(ТекСтрока)
	ТекСтрока.СебестоимостьСуммаУпр = Окр(ТекСтрока.СебестоимостьЦенаУпр*ТекСтрока.Количество,2);	
	ТекСтрока.СебестоимостьНДСУпр   = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.СебестоимостьСуммаУпр,Истина,ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС));	
КонецПроцедуры

&НаКлиенте
Процедура СоставСебестоимостьЦенаУпрПриИзменении(Элемент)
	ПриИзмененииСебестоимостьЦенаУпр(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставСтавкаНДСПриИзменении(Элемент)
	ПриИзмененииСтавкаНДС();
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСтавкаНДС()
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	чСтавка = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС);
	ТекСтрока.СуммаНДС            = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.Сумма,Истина,чСтавка);
	ТекСтрока.СебестоимостьНДС    = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.СебестоимостьСумма,Истина,чСтавка);
	ТекСтрока.СебестоимостьНДСУпр = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.СебестоимостьСуммаУпр,Истина,чСтавка);
КонецПроцедуры



&НаКлиенте
Процедура СоставСебестоимостьСуммаПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока.Количество <> 0 Тогда
		ТекСтрока.СебестоимостьЦена = Окр(ТекСтрока.СебестоимостьСумма/ТекСтрока.Количество,2);	
	Иначе
		ТекСтрока.СебестоимостьЦена = 0;
	КонецЕсли;
	ТекСтрока.СебестоимостьНДС   = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.СебестоимостьСумма,Истина,ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС));	
	Если НЕ ЗначениеЗаполнено(ТекСтрока.СебестоимостьСуммаУпр) Тогда
		ТекСтрока.СебестоимостьСуммаУпр = ТекСтрока.СебестоимостьСумма;
		ПриИзмененииСебестоимостьСуммаУпр();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСебестоимостьСуммаУпр()
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока.Количество <> 0 Тогда
		ТекСтрока.СебестоимостьЦенаУпр = Окр(ТекСтрока.СебестоимостьЦенаУпр/ТекСтрока.Количество,2);
	Иначе
		ТекСтрока.СебестоимостьЦенаУпр = 0;
	КонецЕсли;	
	ТекСтрока.СебестоимостьНДСУпр   = ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуНДС(ТекСтрока.СебестоимостьСуммаУпр,Истина,ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(ТекСтрока.СтавкаНДС));	
КонецПроцедуры

&НаКлиенте
Процедура СоставСебестоимостьСуммаУпрПриИзменении(Элемент)
	ПриИзмененииСебестоимостьСуммаУпр();
КонецПроцедуры

&НаКлиенте
Процедура СоставДокОснованиеПриИзменении(Элемент)
	ПриИзмененииДокументаОснования();
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииДокументаОснования()
	
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) И ЗначениеЗаполнено(ТекСтрока.ДокОснование) Тогда
		струкПараметры = ОбщегоНазначенияСервер.ПолучитьДанныеСтрокиДокументаОснованияДляВозвратнойНакладной(ТекСтрока.ДокОснование,ТекСтрока.Номенклатура);
		Если струкПараметры = Неопределено Тогда
			Сообщить("Номенклатура "+ТекСтрока.Номенклатура+" в документе "+ТекСтрока.ДокОснование+" не найдена!");
			ТекСтрока.ДокОснование = Неопределено;
		Иначе
			ТекСтрока.Цена =  струкПараметры.Цена;
			ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СоставДокОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.ВыбиратьТип = Элементы.Состав.ТекущиеДанные.ДокОснование = Неопределено;
КонецПроцедуры


&НаКлиенте
Процедура СоставДокОснованиеОчистка(Элемент, СтандартнаяОбработка)
	Элементы.Состав.ТекущиеДанные.ДокОснование = Неопределено;
КонецПроцедуры


&НаСервере
Процедура ПолучитьЦеныЗакупки()
	
	тз=Объект.Состав.Выгрузить();
	тз2 = РаботаСФормамиСервер.ПолучитьЦеныЗакупки(тз,Объект.Дата,Объект.Фирма,Объект.Склад.Владелец);
	мсв=Новый Массив();
	Для каждого с из Объект.Состав цикл
		
		мсв = тз2.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",с.Номенклатура,с.ЕдиницаИзмерения));
		Если мсв.Количество() > 0 Тогда
			с_тз2 = мсв[0];
			
			с.СебестоимостьЦена  = с_тз2.Цена;
			с.СебестоимостьСумма = Окр(с.СебестоимостьЦена*с.Количество,2);
			с.СебестоимостьНДС   =  ОбработкаТабличныхЧастейСервер.РассчитатьСуммуНДС(с.СебестоимостьСумма,Истина,с.СтавкаНДС.Ставка);
			
			с.СебестоимостьЦенаУпр  = с_тз2.ЦенаУпр;
			с.СебестоимостьСуммаУпр = Окр(с.СебестоимостьЦенаУпр*с.Количество,2);
			с.СебестоимостьНДСУпр   =  ОбработкаТабличныхЧастейСервер.РассчитатьСуммуНДС(с.СебестоимостьСуммаУпр,Истина,с.СтавкаНДС.Ставка);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦеныЗакупки(Команда)
	 ПолучитьЦеныЗакупки();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
		Настройки = ПолучитьНастройкуПодбора();
		ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

  
&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры

//++БИТ БВО №0000129900 2015-06-03
&НаСервере
Процедура ПерераспределитьПоОстаткамНаСервере() Экспорт
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ПерераспределитьСоставПоОстаткам();
	Объект.Состав.Загрузить(ДокументОбъект.Состав.Выгрузить());
		
КонецПроцедуры

&НаКлиенте
Процедура ПерераспределитьПоОстаткам(Команда)
	
	ПерераспределитьПоОстаткамНаСервере();
	Для Каждого СтрокаСостава Из Объект.Состав Цикл
		ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаСостава);
	КонецЦикла;
	
КонецПроцедуры
//--БИТ БВО №0000129900 2015-06-03
