
Функция ПровестиКорректировкуРеализации(Объект,Режим)
	
	прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;
	
	флПродажа = ИСТИНА;
	
	КодОперации = Перечисления.КодыОпераций.КорректировкаРеализации;
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	// {ВетровИА Обращение 0000140049 25.09.2015
	Если НЕ ЭтотОбъект.ФлагЗагрузки Тогда 
		СтруктураПоиска = Новый Структура("Цена",0 );
		МассивСтрок = ЭтотОбъект.Состав.НайтиСтроки(СтруктураПоиска);
		Если МассивСтрок.Количество()>0 Тогда
			Для Каждого СтрокаМассива из МассивСтрок Цикл
				НомерСтроки = Формат(СтрокаМассива.НомерСтроки, "ЧЦ=15; ЧН=; ЧГ=0");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана цена в строке №"+НомерСтроки);
			КонецЦикла;
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	// ВетровИА Обращение 0000140049 25.09.2015}
	
	тзОстаткиНоменклатуры = Объект.Движения.ОстаткиНоменклатуры.Выгрузить();
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	
	ИсходныйДокументРеализации = УчетНДС.ПолучитьИсправляемыйДокументРеализации(Объект.ДокументРеализации, Истина);
	ИсходныйСклад = ИсходныйДокументРеализации.Склад;
	
	Если ТипЗнч(ИсходныйДокументРеализации.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда 
		Если ЗначениеЗаполнено(ИсходныйДокументРеализации.Контрагент.Организация) Тогда
			Если ИсходныйДокументРеализации.Контрагент.Организация = ИсходныйДокументРеализации.Фирма Тогда
				флПеремещения = ИСТИНА;
				флПерепродажи = ЛОЖЬ;
			Иначе
				флПеремещения = ЛОЖЬ;
				флПерепродажи = ИСТИНА;
			КонецЕсли;
		Иначе
			флПеремещения = ИСТИНА;
			флПерепродажи = ЛОЖЬ;
		КонецЕсли;
	Иначе
		флПеремещения = ЛОЖЬ;
		флПерепродажи = ЛОЖЬ;
	КонецЕсли;
	
	прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;
	
	//флПродажа = Ложь;        //dps+ 15,10,22 хз зачем этот флаг
	Если флПеремещения Тогда
		КодОперацииРеализации = Перечисления.КодыОпераций.ПеремещениеРасход;
	Иначе
		Если ИсходныйДокументРеализации.Возврат Тогда
			КодОперацииРеализации = Перечисления.КодыОпераций.ВозвратПоставщику;
			// {ВетровИА 2015-06-11 Наряд 000153279  
			КодОперации = Перечисления.КодыОпераций.ВозвратПоставщику;
			// ВетровИА 2015-06-11 Наряд 000153279}  
		Иначе
			Если ИсходныйДокументРеализации.ТипДоговора = прчКомиссия Тогда
				КодОперацииРеализации = ?(флПерепродажи,Перечисления.КодыОпераций.ПерепродажаПередачаНаРеализацию,Перечисления.КодыОпераций.ПередачаНаРеализацию);
				флПродажа = Истина;
			Иначе
				КодОперацииРеализации = ?(флПерепродажи,Перечисления.КодыОпераций.ПерепродажаПродажаОпт,Перечисления.КодыОпераций.ПродажаОпт);
				флПродажа = Истина;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	Если КодОперацииРеализации = Перечисления.КодыОпераций.ПродажаОпт Тогда
		тзРеализация = Объект.Движения.Реализация.Выгрузить();
	Иначе	
		тзРеализация = Неопределено;
	КонецЕсли;	
	
	// Установка исключительной блокировки контролируемых остатков 
	Запрос=Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	тзНаборы=ПроведениеДокументов.ПреобразоватьНаборы(Новый Структура("Ссылка,Дата",Объект.Ссылка,Объект.Дата));
	Запрос.УстановитьПараметр("Наборы",тзНаборы);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	н.Количество,
	|	н.Номенклатура,
	|	н.СтавкаНДС,
	|	н.Сумма,
	|	н.СуммаНДС,
	|	н.Склад,
	|	н.Статус
	|ПОМЕСТИТЬ врНаборы
	|ИЗ
	|	&Наборы КАК н";
	Запрос.Выполнить();
	Запрос.Текст=
	"ВЫБРАТЬ
	|	т.Номенклатура,
	|	т.СтавкаНДС КАК СтавкаНДС,
	|	т.Статус КАК Статус,
	|	т.МестоХранения КАК МестоХранения,
	|	&Фирма КАК Фирма,
	|	СУММА(т.Количество) КАК Количество,
	|	СУММА(т.Сумма) КАК Сумма,
	|	СУММА(т.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ врСостав
	|ИЗ
	|	(ВЫБРАТЬ
	|		КорректировкаРеализацииСостав.Номенклатура КАК Номенклатура,
	|		КорректировкаРеализацииСостав.СтавкаНДС КАК СтавкаНДС,
	|		КорректировкаРеализацииСостав.ТипРеализацииТовара КАК Статус,
	//	|		КорректировкаРеализацииСостав.Ссылка.ИсправляемыйДокумент.Склад КАК МестоХранения,
	|		&ИсходныйСклад КАК МестоХранения,
	|		СУММА(ВЫРАЗИТЬ((КорректировкаРеализацииСостав.Количество - КорректировкаРеализацииСостав.КоличествоДоИзменения) * КорректировкаРеализацииСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	|	"+?(флПродажа,"СУММА(КорректировкаРеализацииСостав.Сумма - КорректировкаРеализацииСостав.СуммаДоИзменения)","СУММА(0)")+" КАК Сумма,
	|	"+?(флПродажа,"СУММА(КорректировкаРеализацииСостав.СуммаНДС - КорректировкаРеализацииСостав.СуммаНДСДоИзменения)","СУММА(0)")+" КАК СуммаНДС
	|	ИЗ
	|		Документ.КорректировкаРеализации.Состав КАК КорректировкаРеализацииСостав
	|	ГДЕ
	|		КорректировкаРеализацииСостав.Ссылка = &Ссылка
	|		И КорректировкаРеализацииСостав.Номенклатура.ВидТовара <> Значение(Перечисление.ВидыТоваров.Набор)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		КорректировкаРеализацииСостав.Номенклатура,
	//	|		КорректировкаРеализацииСостав.Ссылка.ИсправляемыйДокумент.Склад,
	|       &ИсходныйСклад,
	|		КорректировкаРеализацииСостав.Ссылка.Фирма,
	|		КорректировкаРеализацииСостав.СтавкаНДС,
	|		КорректировкаРеализацииСостав.ТипРеализацииТовара
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		н.Номенклатура,
	|		н.СтавкаНДС,
	|		н.Статус,
	|		н.Склад,
	|		н.Количество,
	|		н.Сумма,
	|		н.СуммаНДС
	|	ИЗ
	|		врНаборы КАК н) КАК т
	|
	|СГРУППИРОВАТЬ ПО
	|	т.Номенклатура,
	|	т.МестоХранения,
	//++БИТ БВО №0000129900
	|	т.СтавкаНДС,
	|	т.Статус
	//--БИТ БВО №0000129900
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врСостав.Номенклатура,
	|	врСостав.МестоХранения,
	|	врСостав.Фирма
	|ИЗ
	|	врСостав КАК врСостав";
	Запрос.УстановитьПараметр("Фирма",Объект.Фирма);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ИсходныйСклад",ИсходныйСклад);
	тз=Запрос.Выполнить().Выгрузить();
	тз.Свернуть("Номенклатура,МестоХранения,Фирма");
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тз;
	Для каждого к из тз.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	Параметры = Новый Структура;
	Параметры.Вставить("Запрос",Запрос);
	Параметры.Вставить("Объект",Объект);
	Параметры.Вставить("КодОперации",КодОперации);
	Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
	Параметры.Вставить("тзРеализация",тзРеализация);
	Параметры.Вставить("РежимПроведения",Режим);
	Параметры.Вставить("ТипДоговора",ИсходныйДокументРеализации.ТипДоговора);
	Параметры.Вставить("Комитент",Объект.Контрагент);
	Параметры.Вставить("Фирма",Объект.Фирма);
	фл = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);
	
	тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,Комитент,КодОперации,СтавкаНДС","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр,СуммаПродажи,СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("Контрагент");
	//popn+
	//тзОстаткиНоменклатуры.ЗаполнитьЗначения(Объект.Контрагент,"Контрагент");
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда 
		тзОстаткиНоменклатуры.ЗаполнитьЗначения(Объект.Контрагент.Организация,"Контрагент");
	Иначе
		тзОстаткиНоменклатуры.ЗаполнитьЗначения(Объект.Контрагент,"Контрагент");
	КонецЕсли;
	//popn-
	тзОстаткиНоменклатуры_Копия = тзОстаткиНоменклатуры.Скопировать();
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Количество", 0);
	ПараметрыОтбора.Вставить("Сумма", 0);
	ПараметрыОтбора.Вставить("СуммаНДС", 0);
	ПараметрыОтбора.Вставить("СуммаУпр", 0);
	ПараметрыОтбора.Вставить("СуммаНДСУпр", 0);
	НайденныеСтроки = тзОстаткиНоменклатуры_Копия.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого ТекСтрока Из НайденныеСтроки Цикл
		тзОстаткиНоменклатуры_Копия.Удалить(ТекСтрока);
	КонецЦикла;
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры_Копия);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
	
	Если тзРеализация <> Неопределено Тогда
		Объект.Движения.Реализация.Загрузить(тзРеализация);
	КонецЕсли;
	Если КодОперацииРеализации = Перечисления.КодыОпераций.ПередачаНаРеализацию Тогда
		тзОстаткиНоменклатуры.Колонки.Добавить("Комиссионер");
		тзОстаткиНоменклатуры.ЗаполнитьЗначения(Объект.Контрагент,"Комиссионер");
		тзОстаткиНоменклатуры.ЗаполнитьЗначения(ВидДвиженияНакопления.Приход,"ВидДвижения");
		Объект.Движения.ТоварыПереданныеНаКомиссию.Загрузить(тзОстаткиНоменклатуры);
		Объект.Движения.ТоварыПереданныеНаКомиссию.Записывать=Истина;
	КонецЕсли;	
	//popn+
	УчетАлкоголя = УчетАлкогольнойПродукции.ВестиУчетАлкоголя();
	РучнойРасходАлкогольнойПродукции = УправлениеПараметрамиСЕСервер.ПолучитьЗначениеСвойства(ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.РучнойРасходАлкогольнойПродукции,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
	Если УчетАлкоголя И НЕ РучнойРасходАлкогольнойПродукции Тогда
		УчетАлкогольнойПродукции.СформироватьРасходПоУчетуАлкоголя(Объект,КодОперации);
	Иначе
		УчетАлкогольнойПродукции.ОчиститьДвиженияПоУчетуАлкоголя(Объект);
	КонецЕсли;
	
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	
	Возврат фл;
	
КонецФункции	

Процедура ЗаполнитьПоРасходнойНакладнойИКорректировкеРеализации(ДанныеЗаполнения)
	
	//popn+
	//Если ТипЗнч(ДанныеЗаполнения.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
	//	ВызватьИсключение("Запрещен ввод на основании для перемещений между структурными единицами!");
	//КонецЕсли;
	//Котлячкова ++ 30,01,15
	//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
	//	Если ДанныеЗаполнения.Возврат Тогда
	//		ВызватьИсключение("Запрещен ввод на основании расходной накладной с признаком ""Возврат""!");
	//	КонецЕсли;
	//КонецЕсли;
	//Котлячкова--
	Если ТипЗнч(ДанныеЗаполнения.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда 
		Если ЗначениеЗаполнено(ДанныеЗаполнения.Контрагент.Организация) Тогда
			Если ДанныеЗаполнения.Контрагент.Организация = ДанныеЗаполнения.Фирма Тогда
				флПеремещения = ИСТИНА;
			Иначе
				флПеремещения = ЛОЖЬ;
			КонецЕсли;
		Иначе
			флПеремещения = ИСТИНА;
		КонецЕсли;
	Иначе
		флПеремещения = ЛОЖЬ;
	КонецЕсли;
	
	//Если флПеремещения Тогда
	//	ВызватьИсключение("Запрещен ввод на основании для перемещений между структурными единицами!");
	//КонецЕсли;
	//popn-
	
	стрИмяВидаДокумента = ДанныеЗаполнения.Метаданные().Имя;
	
	ДокументСсылка = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ДанныеЗаполнения, Ложь);
	
	ЭтотОбъект.Фирма              = ДанныеЗаполнения.Фирма;
	ЭтотОбъект.Контрагент         = ДанныеЗаполнения.Контрагент;
	ЭтотОбъект.ДокументРеализации = ДанныеЗаполнения;
	ЭтотОбъект.Грузоотправитель   = ДанныеЗаполнения.Грузоотправитель;
	ЭтотОбъект.Грузополучатель    = ДанныеЗаполнения.Грузополучатель;
	ЭтотОбъект.СтруктурнаяЕдиница              = ДанныеЗаполнения.СтруктурнаяЕдиница;
	
	
	ДокументПоступленияСсылка = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ЭтотОбъект.ДокументРеализации, Истина);
	Если ЭтотОбъект.РежимКорректировки = Перечисления.РежимыКорректировок.СогласованноеИзменение Тогда
		ЭтотОбъект.ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ЭтотОбъект.ДокументРеализации, Истина);
	Иначе
		ЭтотОбъект.ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ЭтотОбъект.ДокументРеализации, Ложь);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапрос =
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяСостав.Номенклатура,
	|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения,
	|	РасходнаяНакладнаяСостав.Количество,
	|	РасходнаяНакладнаяСостав.Количество КАК КоличествоДоИзменения,
	|	РасходнаяНакладнаяСостав.Коэффициент,
	|	РасходнаяНакладнаяСостав.Цена,
	|	РасходнаяНакладнаяСостав.Цена КАК ЦенаДоИзменения,
	|	РасходнаяНакладнаяСостав.СуммаНДС,
	|	РасходнаяНакладнаяСостав.СуммаНДС КАК СуммаНДСДоИзменения,
	|	РасходнаяНакладнаяСостав.Сумма,
	|	РасходнаяНакладнаяСостав.Сумма КАК СуммаДоИзменения,
	|	РасходнаяНакладнаяСостав.СтавкаНДС,
	|	РасходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДСДоИзменения,";
	Если стрИмяВидаДокумента = "КорректировкаРеализации" Тогда
		ТекстЗапрос = ТекстЗапрос + "
		|	РасходнаяНакладнаяСостав.КоличествоДоКорректировки КАК КоличествоДоКорректировки,
		|	РасходнаяНакладнаяСостав.ЦенаДоКорректировки       КАК ЦенаДоКорректировки,
		|	РасходнаяНакладнаяСостав.СуммаДоКорректировки      КАК СуммаДоКорректировки,
		|	РасходнаяНакладнаяСостав.СуммаНДСДоКорректировки   КАК СуммаНДСДоКорректировки,";
	КонецЕсли;
	ТекстЗапрос = ТекстЗапрос + "
	|	РасходнаяНакладнаяСостав.Вес,
	//++БИТ БВО
	|	//СтатусИзОснования КАК ТипРеализацииТовара,
	|	//СтатусИзОснования КАК ТипРеализацииТовараДоИзменения,	
	//--БИТ БВО
	|	РасходнаяНакладнаяСостав.ЕдиницаВеса
	|ИЗ
	|	Документ."+стрИмяВидаДокумента+".Состав КАК РасходнаяНакладнаяСостав
	|ГДЕ
	|	РасходнаяНакладнаяСостав.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);	
	//++БИТ БВО
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И ДанныеЗаполнения.Состав.Выгрузить().Колонки.Найти("ТипРеализацииТовара") <> Неопределено Тогда
		ТекстЗапрос = СтрЗаменить(ТекстЗапрос, "//СтатусИзОснования", "РасходнаяНакладнаяСостав.ТипРеализацииТовара"); 
	КонецЕсли;
	//--БИТ БВО
	Запрос.Текст = ТекстЗапрос;	
	ЭтотОбъект.Состав.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры	

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеЗаполнения.Проведен Тогда
		ТекстСообщения=
		НСтр("ru = 'Документ Корректировка реализации необходимо вводить на основании проведенных документов ""Расходная накладная"" или ""Корректировка реализации""!'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	//++Минин 31-10-13
	Если РольДоступна("КонтроллерРевизор") Или РольДоступна("ОператорПриходаВыписки_Алко") Тогда 
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			мсНоменклатура = Новый Массив;
			мсНоменклатура.Добавить(Справочники.Номенклатура.НайтиПоКоду("2:4009"));
			мсНоменклатура.Добавить(Справочники.Номенклатура.НайтиПоКоду("2:4010"));
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	РасходнаяНакладнаяСостав.Номенклатура
			|ИЗ
			|	Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
			|ГДЕ
			|	РасходнаяНакладнаяСостав.Номенклатура В ИЕРАРХИИ(&Номенклатура)
			|	И РасходнаяНакладнаяСостав.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Номенклатура",мсНоменклатура);
			Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
			
			Результат = Запрос.Выполнить();
			Если НЕ Результат.Пустой() Тогда
				ТекущийКвартал = КонецКвартала(ТекущаяДата());
				Если КонецКвартала(ДанныеЗаполнения.Дата)<>ТекущийКвартал Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата документа выходит за рамки текущего квартала");
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//--Минин
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаРеализации")  Тогда
		ЗаполнитьПоРасходнойНакладнойИКорректировкеРеализации(ДанныеЗаполнения);
	КонецЕсли;	
	//++БИТ БВО №0000129900
	ПерераспределитьСоставПоОстаткам();
	//--БИТ БВО №0000129900
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()Экспорт
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		СчетФактура = УчетНДС.НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ЭтотОбъект.Ссылка, Ложь);
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
			СчетФактураОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Сообщить("Отменено проведение документа: "+СчетФактураОбъект);
		КонецЕсли;
	КонецЕсли;
	
	СуммаИтого    = Состав.Итог("Сумма");
	СуммаНДСИтого = Состав.Итог("СуммаНДС");
	ОбработатьСуммыДокорректировки();
	СтруктурнаяЕдиница = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ДокументРеализации, Истина).СтруктурнаяЕдиница;
КонецПроцедуры

Процедура ПроверитьПоследовательностьКорректировки(Отказ)
	
	Если РежимКорректировки = Перечисления.РежимыКорректировок.ИсправлениеОшибки Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
		Запрос.УстановитьПараметр("ЭтотДокумент", Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаРеализации.Ссылка
		|ИЗ
		|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
		|ГДЕ
		|	КорректировкаРеализации.ДокументРеализации = &ДокументРеализации
		|	И КорректировкаРеализации.РежимКорректировки <> ЗНАЧЕНИЕ(Перечисление.РежимыКорректировок.СогласованноеИзменение)
		|	И КорректировкаРеализации.Ссылка <> &ЭтотДокумент
		|	И КорректировкаРеализации.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	КорректировкаРеализации.Дата УБЫВ";
		
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Сообщить("К документу "+ ДокументРеализации +" введено больше одного корректировочного документа с видом операции ""Исправление первичных документов"". 
			|Каждую последующую корректировку следует вводить на основании предыдущей.");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПроверитьПоследовательностьКорректировки()

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//БредовЮГ+ 2013-07-09 Проверка на проведения текущим днем
	Если НЕ РольДоступна("ПолныеПрава") Тогда
		Если НачалоДня(ЭтотОбъект.Дата) <> НачалоДня(ТекущаяДата()) Тогда
			ВызватьИсключение "Провести документ можно только текущим днем";
		КонецЕсли;
	КонецЕсли;
	//++Минин 0000144432 2015-11-05
	ПроверитьИзмененияВДокументе(Отказ);
	Если Отказ Тогда 
		ВызватьИсключение "Провести документ можно только при наличии корректировок в табличной части";
	КонецЕсли;
	//--Минин 0000144432 2015-11-05
	// {ВетровИА Обращение 0000139353 23.09.2015
	Если Не ФлагЗагрузки Тогда
		ОформитьПерепродажу();
	КонецЕсли;
	// ВетровИА Обращение 0000139353 23.09.2015}
	
	//БредовЮГ- 2013-07-09 Проверка на проведения текущим днем
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		Отказ = ПровестиКорректировкуРеализации(ЭтотОбъект,РежимПроведения);
	КонецЕсли;	
	Если Не Отказ Тогда
		СформироватьСчетФактуру(ЭтотОбъект);
	КонецЕсли; 
КонецПроцедуры

Функция ПолучитьДокументыПерепродажи()
	ЗапросДокументы = Новый Запрос(
	"ВЫБРАТЬ
	|	СтруктураПодчиненности.Ссылка,
	|	СтруктураПодчиненности.Ссылка.Фирма КАК Фирма,
	|	СтруктураПодчиненности.Ссылка.ФирмаПолучатель КАК ФирмаПолучатель,
	|	СтруктураПодчиненности.Ссылка.ТипДоговора КАК ТипДоговора,
	|	СтруктураПодчиненности.Ссылка.Возврат КАК Возврат
	|ИЗ
	|	КритерийОтбора.СтруктураПодчиненности(&ДокументОснование) КАК СтруктураПодчиненности
	|ГДЕ
	|	СтруктураПодчиненности.Ссылка ССЫЛКА Документ.ПередачаТоваровМеждуФирмами");
	ЗапросДокументы.УстановитьПараметр("ДокументОснование",ЭтотОбъект.Ссылка);
	тз = ЗапросДокументы.Выполнить().Выгрузить();
	Возврат тз;
КонецФункции

Функция ОформитьПерепродажу()
	//{ВетровИА Обращение 0000139353 23.09.2015
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество - Состав.КоличествоДоИзменения КАК Количество,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС
	|ПОМЕСТИТЬ ВТ_Состав
	|ИЗ
	|	Документ.КорректировкаРеализации.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &Ссылка
	|	И Состав.Количество <> Состав.КоличествоДоИзменения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);	
	Запрос.Выполнить();
	ПравилаПерепродажи = РегистрыСведений.Перепродажа.ПравилаДляОформленияПерепродажиВДокументах(Запрос.МенеджерВременныхТаблиц, СтруктурнаяЕдиница, Фирма, Дата);
	
	//найдем уже созданные документ перепродажи
	тз = ПолучитьДокументыПерепродажи();
	
	// {ВетровИА 2015-10-28 Обращение №0000142388 
	ИсходныйДокументПоступления = УчетНДС.ПолучитьИсправляемыйДокументРеализации(ЭтотОбъект.ДокументРеализации, Истина);
	// ВетровИА 2015-10-28 Обращение №0000142388}	
	ИсходныйСклад = ИсходныйДокументПоступления.Склад;
	ИсходныйКурс = ИсходныйДокументПоступления.Курс;
	
	ВыборкаФирмы = ПравилаПерепродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФирмы.Следующий() Цикл
		ВыборкаТипДоговора = ВыборкаФирмы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаТипДоговора.Следующий() Цикл
			
			ФлагУдаления = ЛОЖЬ;
			
			//{Ситек ДойниковПВ 2015-10-19 Если фирма покупки совпадает с фирмой продажи, ПередачаТоваровМеждуФирмами не формируем.} 
			Если ЭтотОбъект.Фирма = ВыборкаТипДоговора.ФирмаПерепродажи Тогда
				Продолжить;
			КонецЕсли;	
			//}Ситек ДойниковПВ 2015-10-19
			
			//определим ссылку на уже существующий документ перепродажи
			мсв = тз.НайтиСтроки(Новый Структура("ФирмаПолучатель, Фирма, ТипДоговора, Возврат", 
			ЭтотОбъект.Фирма, ВыборкаТипДоговора.ФирмаПерепродажи, ВыборкаТипДоговора.ТипДоговора, ИСТИНА));//ШиловМВ 10.10.14 №000130241
			Если мсв.Количество() > 0 Тогда
				ДокОбъектВозврат = мсв[0].Ссылка.ПолучитьОбъект();
				ФлагУдаления = ИСТИНА;
			Иначе
				ДокОбъектВозврат = Документы.ПередачаТоваровМеждуФирмами.СоздатьДокумент();
			КонецЕсли;	
			
			ДокОбъектВозврат.Возврат = ЛОЖЬ;
			ДокОбъектВозврат.Валюта = ЭтотОбъект.СтруктурнаяЕдиница.Валюта;
			ДокОбъектВозврат.Дата   = ЭтотОбъект.Дата;
			ДокОбъектВозврат.ДокОснование = ЭтотОбъект.Ссылка;
			ДокОбъектВозврат.ПометкаУдаления=Ложь;
			ДокОбъектВозврат.Кратность = 1;
			ДокОбъектВозврат.Курс = ИсходныйКурс;
			ДокОбъектВозврат.Склад = ИсходныйСклад;
			ДокОбъектВозврат.СтруктурнаяЕдиница = ЭтотОбъект.СтруктурнаяЕдиница;
			ДокОбъектВозврат.ТипДоговора = ВыборкаТипДоговора.ТипДоговора;
			ДокОбъектВозврат.Фирма = ЭтотОбъект.Фирма;
			ДокОбъектВозврат.ФирмаПолучатель = ВыборкаТипДоговора.ФирмаПерепродажи; 
			
			ДокОбъектВозврат.Состав.Очистить();
			ВыборкаСостав = ВыборкаТипДоговора.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСостав.Следующий() Цикл
				Если ВыборкаСостав.Количество < 0 Тогда
					НоваяСтрока = ДокОбъектВозврат.Состав.Добавить();
					НоваяСтрока.ЕдиницаИзмерения = ВыборкаСостав.ЕдиницаИзмерения;
					НоваяСтрока.Количество = -ВыборкаСостав.Количество;
					НоваяСтрока.Коэффициент  = ВыборкаСостав.Коэффициент;
					НоваяСтрока.Номенклатура = ВыборкаСостав.Номенклатура;
					НоваяСтрока.СтавкаНДС    = ВыборкаСостав.СтавкаНДС;
					чЦена = ВыборкаСостав.Цена + Окр(ВыборкаСостав.Цена * ВыборкаСостав.ПроцентПрибыли / 100,2);
					НоваяСтрока.Цена     = чЦена;
					НоваяСтрока.Сумма    = Окр(-ВыборкаСостав.Количество * чЦена, 2); 
					НоваяСтрока.СуммаНДС    = Окр(НоваяСтрока.Сумма * НоваяСтрока.СтавкаНДС.Ставка /(100 + НоваяСтрока.СтавкаНДС.Ставка),2);
				КонецЕсли; 
			КонецЦикла;
			
			Если ДокОбъектВозврат.Состав.Количество() > 0 Тогда
				ДокОбъектВозврат.ПерераспределитьСоставПоОстаткам();
				ДокОбъектВозврат.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
				Если ФлагУдаления Тогда
					тз.Удалить(мсв[0]);
				КонецЕсли;
			КонецЕсли;
			
			ФлагУдаления = ЛОЖЬ;
			//определим ссылку на уже существующий документ перепродажи
			мсв = тз.НайтиСтроки(Новый Структура("Фирма, ФирмаПолучатель, ТипДоговора, Возврат",
			ЭтотОбъект.Фирма, ВыборкаТипДоговора.ФирмаПерепродажи, ВыборкаТипДоговора.ТипДоговора, ЛОЖЬ));
			Если мсв.Количество() > 0 Тогда
				ДокОбъект = мсв[0].Ссылка.ПолучитьОбъект();
				//удалим ссылку из таблицы
				ФлагУдаления = ИСТИНА;
			Иначе
				ДокОбъект = Документы.ПередачаТоваровМеждуФирмами.СоздатьДокумент();
			КонецЕсли;	
			
			ДокОбъект.Возврат = ИСТИНА;
			ДокОбъект.Валюта = ЭтотОбъект.СтруктурнаяЕдиница.Валюта;
			ДокОбъект.Дата   = ЭтотОбъект.Дата;
			ДокОбъект.ДокОснование = ЭтотОбъект.Ссылка;
			ДокОбъект.ПометкаУдаления = Ложь;
			ДокОбъект.Кратность = 1;
			ДокОбъект.Курс = ИсходныйКурс;
			ДокОбъект.Склад = ИсходныйСклад;
			ДокОбъект.СтруктурнаяЕдиница = ЭтотОбъект.СтруктурнаяЕдиница;
			ДокОбъект.ТипДоговора = ВыборкаТипДоговора.ТипДоговора;
			ДокОбъект.Фирма = ВыборкаТипДоговора.ФирмаПерепродажи;
			ДокОбъект.ФирмаПолучатель = ЭтотОбъект.Фирма; 
			
			ДокОбъект.Состав.Очистить();
			ВыборкаСостав = ВыборкаТипДоговора.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСостав.Следующий() Цикл
				Если ВыборкаСостав.Количество > 0 Тогда
					НоваяСтрока = ДокОбъект.Состав.Добавить();
					НоваяСтрока.ЕдиницаИзмерения = ВыборкаСостав.ЕдиницаИзмерения;
					НоваяСтрока.Количество = ВыборкаСостав.Количество;
					НоваяСтрока.Коэффициент = ВыборкаСостав.Коэффициент;
					НоваяСтрока.Номенклатура = ВыборкаСостав.Номенклатура;
					НоваяСтрока.СтавкаНДС = ВыборкаСостав.СтавкаНДС;
					чЦена = ВыборкаСостав.Цена + Окр(ВыборкаСостав.Цена * ВыборкаСостав.ПроцентПрибыли / 100, 2);
					НоваяСтрока.Цена = чЦена;
					НоваяСтрока.Сумма = Окр(ВыборкаСостав.Количество * чЦена, 2); 
					НоваяСтрока.СуммаНДС = Окр(НоваяСтрока.Сумма * НоваяСтрока.СтавкаНДС.Ставка / (100 + НоваяСтрока.СтавкаНДС.Ставка), 2);
				КонецЕсли; 
			КонецЦикла;
			
			Если ДокОбъект.Состав.Количество() > 0 Тогда
				ДокОбъект.ПерераспределитьСоставПоОстаткам();
				ДокОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				Если ФлагУдаления Тогда
					тз.Удалить(мсв[0]);
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого с из тз цикл	
		ДокОбъект = с.Ссылка.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);	
	КонецЦикла;	
	//ВетровИА Обращение 0000139353 23.09.2015}
КонецФункции

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ОбработатьСуммыДокорректировки()
	
	ИсправлениеКорректировки = ЗначениеЗаполнено(ИсправляемыйДокумент) И (ТипЗнч(ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаРеализации")) И (ОбщегоНазначения.ПолучитьЗначениеРеквизита(ИсправляемыйДокумент, "РежимКорректировки") = Перечисления.РежимыКорректировок.СогласованноеИзменение);
	
	Если РежимКорректировки = Перечисления.РежимыКорректировок.СогласованноеИзменение Тогда
		
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("КоличествоДоИзменения"), 	"КоличествоДоКорректировки");
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("ЦенаДоИзменения"), 		"ЦенаДоКорректировки");
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("СуммаДоИзменения"), 		"СуммаДоКорректировки");
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("СуммаНДСДоИзменения"), 	"СуммаНДСДоКорректировки");
		
	ИначеЕсли Не ИсправлениеКорректировки Тогда
		
		Для Каждого СтрокаТаблицы из Состав Цикл
			СтрокаТаблицы.КоличествоДоКорректировки = 0;
			СтрокаТаблицы.ЦенаДоКорректировки       = 0;
			СтрокаТаблицы.СуммаДоКорректировки      = 0;
			СтрокаТаблицы.СуммаНДСДоКорректировки   = 0;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСчетФактуру(Объект)
	
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда 
		Если ЗначениеЗаполнено(Объект.Контрагент.Организация) Тогда
			Если Объект.Контрагент.Организация = Объект.Фирма Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НастройкаУчетнойПолитики = ОбщегоНазначенияСервер.ПолучитьУчетнуюПолитикуФирмы(Объект.Фирма,Объект.Дата).АвтоматическоеФормированиеСчетаФактуры;
	
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		НастройкаКонтрагента = НЕ Объект.Контрагент.НеФормироватьСчетаФактурыАвтоматически;
	Иначе
		НастройкаКонтрагента = ИСТИНА;
	КонецЕсли;
	
	Если НастройкаУчетнойПолитики И НастройкаКонтрагента Тогда
		
		СчетФактура = УчетНДС.НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(Объект.Ссылка, Ложь);
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
			СчетФактураОбъект.ПометкаУдаления = Ложь;
			СчетФактураОбъект.Заполнить(Объект.Ссылка);
			СчетФактураОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Сообщить("Переоформлен документ: "+СчетФактураОбъект);
		Иначе
			СчетФактураОбъект = Документы.СчетФактура.СоздатьДокумент();
			СчетФактураОбъект.Заполнить(Объект.Ссылка);
			СчетФактураОбъект.Дата = Объект.Дата;
			СчетФактураОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Сообщить("Создан документ: "+СчетФактураОбъект);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЭтотОбъект.ПометкаУдаления = ИСТИНА Тогда
		СчетФактура = УчетНДС.НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ЭтотОбъект.Ссылка, Ложь);
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
			СчетФактураОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			СчетФактураОбъект.ПометкаУдаления = ИСТИНА;
			СчетФактураОбъект.Записать();
			Сообщить("Помечен на удаление документ: "+СчетФактураОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//++БИТ БВО №0000129900
Процедура ПерераспределитьСоставПоОстаткам() Экспорт
	
	Izh_ОбщегоНазначенияСервер.ПерераспределитьСоставПоОстаткам(ЭтотОбъект);
	
КонецПроцедуры
//--БИТ БВО №0000129900

//++Минин 0000144432 2015-11-05
Процедура  ПроверитьИзмененияВДокументе(Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КорректировкаРеализацииСостав.НомерСтроки
	|ИЗ
	|	Документ.КорректировкаРеализации.Состав КАК КорректировкаРеализацииСостав
	|ГДЕ
	|	КорректировкаРеализацииСостав.Ссылка = &Ссылка
	|	И (КорректировкаРеализацииСостав.Количество <> КорректировкаРеализацииСостав.КоличествоДоИзменения
	|			ИЛИ КорректировкаРеализацииСостав.Цена <> КорректировкаРеализацииСостав.ЦенаДоИзменения
	|			ИЛИ КорректировкаРеализацииСостав.СуммаНДС <> КорректировкаРеализацииСостав.СуммаНДСДоИзменения
	|			ИЛИ КорректировкаРеализацииСостав.Сумма <> КорректировкаРеализацииСостав.СуммаДоИзменения
	|			ИЛИ КорректировкаРеализацииСостав.СтавкаНДС <> КорректировкаРеализацииСостав.СтавкаНДСДоИзменения
	|			ИЛИ КорректировкаРеализацииСостав.ТипРеализацииТовара <> КорректировкаРеализацииСостав.ТипРеализацииТовараДоИзменения)";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Отказ=Истина;
	КонецЕсли;
КонецПроцедуры
//--Минин 0000144432 2015-11-05