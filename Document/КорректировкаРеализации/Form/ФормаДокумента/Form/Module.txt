&НаКлиенте
Процедура ПодборВыполнить()
	Если НЕ Элементы.ГруппаПодбор.Видимость Тогда
	КонецЕсли;
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.ДокументРеализации) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Документ Корректировка реализации необходимо вводить на основании документов ""Расходная накладная"" или ""Корректировка реализации""!'"));
		Возврат;
	Иначе
		ДокументСсылка = УчетНДС.ПолучитьИсправляемыйДокументРеализации(Объект.ДокументРеализации, Ложь);
		ДокументОснование = Документы.КорректировкаРеализации.ПолучитьПоследнийКорректирующийДокумент(ДокументСсылка, Объект.Ссылка);
		Если Объект.ДокументРеализации <> ДокументОснование 
			И Объект.ДокументРеализации.Дата < ДокументОснование.Дата Тогда
			ПоследнийДокументИсправления = ДокументОснование;
		КонецЕсли;
	КонецЕсли;	
	//{БредовЮГ 2015-03-31 Наряд 000146494 от 31.03.2015 13:40:17
	Элементы.Izh_ОбработанКРО.Видимость = НЕ ПараметрыСеанса.ЭтоЦентр;
	Izh_ОбработанКРО = РегистрыСведений.Izh_СостояниеДокумента.ДокументЗафиксированВСостоянии(Объект,Перечисления.Izh_СостояниеДокумента.ОбработанКРО);
	//БредовЮГ 2015-03-31 Наряд 000146494 от 31.03.2015 13:40:17}
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюЭлементов()
	Элементы.ГруппаПодбор.Видимость  = ?(Не ЗначениеЗаполнено(Объект.Контрагент),Ложь,Элементы.ГруппаПодбор.Видимость);
	ИсправлениеКорректировки = ЭтоИсправлениеКорректировки();
	ЗапретРедактированияЦен = ОбщегоНазначенияСервер.ЗапретРедактированияЦенПродажи();
конецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка)
		И ЗначениеЗаполнено(ПоследнийДокументИсправления) Тогда
		ТекстВопроса = НСтр("ru = 'Для указанного документа существуют более поздние корректировки.
								|Использовать последнюю введенную корректировку?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			УстановитьДокументРеализации(ПоследнийДокументИсправления);
		КонецЕсли;
	КонецЕсли;

	УправлениеДоступностьюЭлементов();
	УстановитьПараметры();
	ЗагрузитьНастройкиПодбора();
	
	//++БИТ БВО №0000129900
	//Элементы.СоставТипРеализацииТовара.Видимость = Ложь;
	//--БИТ БВО №0000129900
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДокументРеализации(НовыйДокументРеализации)
	
	Объект.ДокументРеализации = НовыйДокументРеализации;
	Документы.КорректировкаРеализации.ЗаполнитьПоДокументу(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	БезНДС = ПолучитьСтавкуБезНДС();
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка);	
		//++Минин добавил проверку на СЕ. У СЕ не нужно НеПлательщикНДС
		Если ТекСтрока <> Неопределено и Не ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
			Если ПолучитьНеПлательщикНДС() Тогда
				//popn+
				ТекСтрока.СтавкаНДС = БезНДС;
				ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
				//popn-
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтавкуБезНДС()
	Возврат Справочники.СтавкиНДС.БезНДС;
КонецФункции

&НаСервере
Функция ПолучитьНеПлательщикНДС()
	Возврат Объект.Контрагент.НеПлательщикНДС;
КонецФункции


&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Установитьпараметры();
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПустуюСсылкуКонтрагента()
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();
	
КонецФункции


&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗапросаПодбора() Экспорт
	СтруктураПодбора = Новый Структура;
	СтруктураПодбора.Вставить("ТекстЗапроса",ПодборНоменклатуры.ТекстЗапроса);
	СтруктураПодбора.Вставить("Параметры",ПодборНоменклатуры.Параметры);
	Возврат СтруктураПодбора;
КонецФункции	

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	если элементы.ПодборНоменклатурысписок.Пометка тогда
		элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	иначе
		элементы.кнГруппы.Пометка = истина;
	конецесли;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


процедура Установитьпараметры()
	
	ИсходныйДокументРеализации = УчетНДС.ПолучитьИсправляемыйДокументРеализации(Объект.ДокументРеализации, Истина);
    ИсходныйСклад = ИсходныйДокументРеализации.Склад;
	
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ОтрицательныеОстатки",?(ЗначениеЗаполнено(ИсходныйСклад),ИсходныйСклад.ОтрицательныеОстатки,ложь));
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ТекущееВремя", ТекущаяДата());
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СтруктурнаяЕдиница", ИсходныйСклад.Владелец);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Фирма", Объект.Фирма);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("МестоХранения", ИсходныйСклад);
	
конецпроцедуры


&НаКлиенте
Процедура СоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	если поле.Имя = "СоставНоменклатура" тогда
		Стандартнаяобработка = ложь;
		ПодборОткрыть(Неопределено);
	конецесли;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
КонецПроцедуры


&НаКлиенте
Процедура РежимКорректировкиПриИзменении(Элемент)
	УправлениеДоступностьюЭлементов();
КонецПроцедуры


	


&НаСервере
Функция ЭтоИсправлениеКорректировки()
	
	ИсправлениеКорректировки = ЗначениеЗаполнено(Объект.ИсправляемыйДокумент)
		И (ТипЗнч(Объект.ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаПоступления"))
		И (Объект.ИсправляемыйДокумент.РежимКорректировки
			= Перечисления.РежимыКорректировок.СогласованноеИзменение);
    Возврат ИсправлениеКорректировки;
	
КонецФункции	


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
	Установитьпараметры();
КонецПроцедуры


&НаКлиенте
Процедура СоставПередУдалением(Элемент, Отказ)
	Сообщить("Удалять строки запрещено." );
	Отказ = Истина;
	Возврат;
КонецПроцедуры


&НаКлиенте
Процедура ПодборНоменклатурыНайтиТоварВСпискеПоШтрихкоду(Команда)
	ШК = "";
	Если Не ВвестиЗначение(ШК, НСтр("ru = 'Введите штрихкод'")) Тогда
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ШК) Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВСпискеНоменклатуры(ШК, ПодборНоменклатуры);
	

КонецПроцедуры


//++БИТ БВО №0000129900 2015-06-03
&НаСервере
Процедура ПерераспределитьПоОстаткамНаСервере() Экспорт
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ПерераспределитьСоставПоОстаткам();
	Объект.Состав.Загрузить(ДокументОбъект.Состав.Выгрузить());
		
КонецПроцедуры

&НаКлиенте
Процедура ПерераспределитьПоОстаткам(Команда)
	
	ПерераспределитьПоОстаткамНаСервере();
	Для Каждого СтрокаСостава Из Объект.Состав Цикл
		ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаСостава);
	КонецЦикла;
	
КонецПроцедуры
//--БИТ БВО №0000129900 2015-06-03

