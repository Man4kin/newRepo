
Функция ПровестиИнвентаризацию(Объект,Режим)
	//изменение дпс 1
	прчКупляПродажа = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия = Перечисления.ТипыДоговоров.Комиссия;
	
	КодОперацииРасход = Перечисления.КодыОпераций.Инвентаризация;
	КодОперацииПриход = Перечисления.КодыОпераций.ОприходованиеИзлишков;
	КодОперацииКорректировкаОстатков = Перечисления.КодыОпераций.КорректировкаОстатков;
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
		//++БИТ БВО - похоже остаются записи в регистрах при перепроведенни
		РегистрДвижений.Записать();
		//--БИТ БВО
	КонецЦикла;
	//popn-
	
	тзОстаткиНоменклатуры = Объект.Движения.ОстаткиНоменклатуры.Выгрузить();
	
	тзРеализация = Объект.Движения.Реализация.Выгрузить();
	
	флВозврата=Ложь;
	//излишки
	Запрос=Новый Запрос();
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ИнвентаризацияСостав.Ссылка КАК Регистратор,
	|	ИСТИНА КАК Активность,
	|	ИнвентаризацияСостав.Ссылка.Дата КАК Период,
	|	&ВидДвиженияПриход КАК ВидДвижения,
	//++БИТ БВО №0000129900
	//|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа) КАК Статус,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияСостав.ТипРеализацииТовара = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)		
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	|		ИНАЧЕ ИнвентаризацияСостав.ТипРеализацииТовара
	|	КОНЕЦ КАК Статус,
	//--БИТ БВО №0000129900
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.Склад КАК МестоХранения,
	|	ИнвентаризацияСостав.Фирма КАК Фирма,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ОприходованиеИзлишков) КАК КодОперации,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	СУММА(ИнвентаризацияСостав.Количество - ВЫБОР
	|			КОГДА ИнвентаризацияСостав.КоличествоУчет < 0
	|				ТОГДА 0
	|			ИНАЧЕ ИнвентаризацияСостав.КоличествоУчет
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫРАЗИТЬ((ИнвентаризацияСостав.Количество - ВЫБОР
	|				КОГДА ИнвентаризацияСостав.КоличествоУчет < 0
	|					ТОГДА 0
	|				ИНАЧЕ ИнвентаризацияСостав.КоличествоУчет
	|			КОНЕЦ) * ИнвентаризацияСостав.ЦенаИзлишка КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ((ИнвентаризацияСостав.Количество - ВЫБОР
	|				КОГДА ИнвентаризацияСостав.КоличествоУчет < 0
	|					ТОГДА 0
	|				ИНАЧЕ ИнвентаризацияСостав.КоличествоУчет
	|			КОНЕЦ) * ИнвентаризацияСостав.ЦенаИзлишка * ИнвентаризацияСостав.Номенклатура.СтавкаНДС.Ставка / (100 + ИнвентаризацияСостав.Номенклатура.СтавкаНДС.Ставка) КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	СУММА(ВЫРАЗИТЬ((ИнвентаризацияСостав.Количество - ВЫБОР
	|				КОГДА ИнвентаризацияСостав.КоличествоУчет < 0
	|					ТОГДА 0
	|				ИНАЧЕ ИнвентаризацияСостав.КоличествоУчет
	|			КОНЕЦ) * ИнвентаризацияСостав.ЦенаИзлишкаУпр КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
	|	СУММА(ВЫРАЗИТЬ((ИнвентаризацияСостав.Количество - ВЫБОР
	|				КОГДА ИнвентаризацияСостав.КоличествоУчет < 0
	|					ТОГДА 0
	|				ИНАЧЕ ИнвентаризацияСостав.КоличествоУчет
	|			КОНЕЦ) * ИнвентаризацияСостав.ЦенаИзлишкаУпр * ИнвентаризацияСостав.Номенклатура.СтавкаНДС.Ставка / (100 + ИнвентаризацияСостав.Номенклатура.СтавкаНДС.Ставка) КАК ЧИСЛО(15, 2))) КАК СуммаНДСУпр
	|ИЗ
	|	Документ.Инвентаризация.СоставПоФирмам КАК ИнвентаризацияСостав
	|ГДЕ
	|	ИнвентаризацияСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияСостав.Ссылка,
	|	ИнвентаризацияСостав.Ссылка.Дата,
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.Склад,
	|	ИнвентаризацияСостав.Фирма,
	//++БИТ БВО №0000129900	
	|	ИнвентаризацияСостав.ТипРеализацииТовара
	//--БИТ БВО №0000129900
	|
	|ИМЕЮЩИЕ
	|	СУММА(ИнвентаризацияСостав.Количество - ВЫБОР
	|			КОГДА ИнвентаризацияСостав.КоличествоУчет < 0
	|				ТОГДА 0
	|			ИНАЧЕ ИнвентаризацияСостав.КоличествоУчет
	|		КОНЕЦ) > 0";
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
	
	тзОстаткиНоменклатуры=Запрос.Выполнить().Выгрузить();
	
	//++БИТ БВО	2015-10-13
	ГруппаОбщепита		= Справочники.Номенклатура.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыПроизводство));
	ГруппаТараОбщепита	= Справочники.Номенклатура.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыТараПроизводство));
	Если ЗначениеЗаполнено(ГруппаОбщепита) И ЗначениеЗаполнено(ГруппаТараОбщепита) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ГруппыОбщепита"		, ГруппаОбщепита);
		Запрос.УстановитьПараметр("ГруппыТараОбщепита"	, ГруппаТараОбщепита);
		//--БИТ БВО 2015-10-13
	
		//dps+
		Запрос.Текст = "ВЫБРАТЬ
		|	Номенклатура.Ссылка 
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	(Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппыОбщепита)
		|			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппыТараОбщепита))
		|	И Номенклатура.Ссылка В(&Ссылка)";
		
		Запрос.УстановитьПараметр("Ссылка",тзОстаткиНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
		резОбщепит = Запрос.Выполнить().Выгрузить();
		Для  Каждого стрОстаткиНом Из тзОстаткиНоменклатуры Цикл
			Если резОбщепит.Найти(стрОстаткиНом.Номенклатура,"Ссылка") = Неопределено Тогда 
				тзПерепродажа = РегистрыСведений.Перепродажа.ПравилаПерепродажи(стрОстаткиНом.Номенклатура,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
				Если ЗначениеЗаполнено(тзПерепродажа) Тогда
					стрОстаткиНом.Статус = тзПерепродажа[0].ТипДоговора;
					стрОстаткиНом.Фирма = тзПерепродажа[0].ФирмаПолучатель;
					Если тзПерепродажа[0].ТипДоговора = Перечисления.ТипыДоговоров.Комиссия Тогда 
						стрОстаткиНом.Комитент = тзПерепродажа[0].ФирмаОтправитель;
					КонецЕсли;
				КонецЕсли;
			Иначе 
				стрОстаткиНом.Статус = Перечисления.ТипыДоговоров.Комиссия;
				стрОстаткиНом.Фирма = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Организация;
				//++БИТ БВО - 2015-09-10 - Теперь основной поставщик берется из СтатусовНоменклатуры
				//Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
				//|	НоменклатураКонтрагента.Контрагент КАК Кон
				//|ИЗ
				//|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
				//|ГДЕ
				//|	НоменклатураКонтрагента.Номенклатура = &Номенклатура
				//|	И НоменклатураКонтрагента.ОсновнойПоставщик");
				Запрос = Новый Запрос;
				Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
	            |	СтатусыНоменклатуры.ОсновнойПоставщик КАК Кон
	            |ИЗ
	            |	РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	            |ГДЕ
	            |	СтатусыНоменклатуры.Номенклатура = &Номенклатура
	            |	И СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
				Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
				//--БИТ БВО - 2015-09-10
				Запрос.УстановитьПараметр("Номенклатура",стрОстаткиНом.Номенклатура);
				рез = Запрос.Выполнить().Выбрать();
				Если рез.Следующий() Тогда 
					стрОстаткиНом.Комитент = рез.Кон;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	//++БИТ БВО	2015-10-13
	КонецЕсли;
 	//--БИТ БВО 2015-10-13
	//dps-
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	
	//++БИТ БВО 2015-11-05 Перенес сюда закрытие отрицательных остатков, т.к. бывают остатки по нескольким комитентам 
	//в основном запросе они сворачиваются по статусу и не закрываются в итоге.
	//закроем отрицательные остатки 
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.Склад,
	|	ИнвентаризацияСостав.Фирма,
	//++БИТ БВО №0000129900
	|	ВЫБОР
	|		КОГДА ИнвентаризацияСостав.ТипРеализацииТовара = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)		
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	|		ИНАЧЕ ИнвентаризацияСостав.ТипРеализацииТовара
	|	КОНЕЦ КАК Статус,
	//--БИТ БВО №0000129900
	|	СУММА(ИнвентаризацияСостав.КоличествоУчет) КАК КоличествоУчет
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	Документ.Инвентаризация.СоставПоФирмам КАК ИнвентаризацияСостав
	|ГДЕ
	|	ИнвентаризацияСостав.Ссылка = &Ссылка
	|	И ИнвентаризацияСостав.КоличествоУчет < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.Склад,
	|	ИнвентаризацияСостав.Фирма,
	//++БИТ БВО №0000129900
	|	ИнвентаризацияСостав.ТипРеализацииТовара
	//--БИТ БВО №0000129900
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ОстаткиНоменклатурыОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(ОстаткиНоменклатурыОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток,
	|	СУММА(ОстаткиНоменклатурыОстатки.СуммаНДСОстаток) КАК СуммаНДСОстаток,
	|	СУММА(ОстаткиНоменклатурыОстатки.СуммаНДСУпрОстаток) КАК СуммаНДСУпрОстаток,
	|	ОстаткиНоменклатурыОстатки.Комитент,
	|	ОстаткиНоменклатурыОстатки.Статус,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.Статус КАК Статус1,
	|	ОстаткиНоменклатурыОстатки.Номенклатура
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&Дата,
	|			Фирма В
	|					(ВЫБРАТЬ
	|						т.Фирма КАК Фирма
	|					ИЗ
	|						Состав КАК т)
	|				И Статус В (&мсвСтатусы)
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						т.Номенклатура КАК Номенклатура
	|					ИЗ
	|						Состав КАК т)
	|				И МестоХранения В
	|					(ВЫБРАТЬ
	|						т.Склад КАК Склад
	|					ИЗ
	|						Состав КАК т)) КАК ОстаткиНоменклатурыОстатки
	|ГДЕ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.Комитент,
	|	ОстаткиНоменклатурыОстатки.Статус,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.Статус");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);	
	мсвСтатусы=Новый Массив;
	мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.КупляПродажа);
	мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.Комиссия);
	Запрос.УстановитьПараметр("мсвСтатусы",мсвСтатусы);	
	Запрос.УстановитьПараметр("Дата",Объект.Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		//Движение = тзОстаткиНоменклатуры.Добавить();
		//Движение.Регистратор   = Объект.Ссылка;
		//Движение.Активность    = Истина;
		//Движение.Фирма         = Выборка.Фирма;
		//Движение.МестоХранения = Выборка.МестоХранения;
		//Движение.Период        = Объект.Дата;
		//Движение.Статус        = Выборка.Статус;
		//Движение.Комитент      = Выборка.Комитент;
		//Движение.Номенклатура  = Выборка.Номенклатура;
		//Движение.ВидДвижения   = ВидДвиженияНакопления.Приход;
		//Движение.Количество    = -Выборка.КоличествоОстаток;
		//Движение.Сумма         = -Выборка.СуммаОстаток;
		//Движение.СуммаУпр      = -Выборка.СуммаУпрОстаток;
		//Движение.СуммаНДС      = -Выборка.СуммаНДСОстаток;
		//Движение.СуммаНДСУпр   = -Выборка.СуммаНДСУпрОстаток;
		//Движение.КодОперации   = КодОперацииПриход;
		
		Движение = Объект.Движения.ОстаткиНоменклатуры.Добавить();
		Движение.Регистратор   = Объект.Ссылка;
		Движение.Активность    = Истина;
		Движение.Фирма         = Выборка.Фирма;
		Движение.МестоХранения = Выборка.МестоХранения;
		Движение.Период        = Объект.Дата;
		Движение.Статус        = Выборка.Статус;
		Движение.Комитент      = Выборка.Комитент;
		Движение.Номенклатура  = Выборка.Номенклатура;
		Движение.ВидДвижения   = ВидДвиженияНакопления.Приход;
		Движение.Количество    = -Выборка.КоличествоОстаток;
		Движение.Сумма         = -Выборка.СуммаОстаток;
		Движение.СуммаУпр      = -Выборка.СуммаУпрОстаток;
		Движение.СуммаНДС      = -Выборка.СуммаНДСОстаток;
		Движение.СуммаНДСУпр   = -Выборка.СуммаНДСУпрОстаток;
		Движение.КодОперации   = КодОперацииПриход;		
	КонецЦикла;
	Объект.Движения.ОстаткиНоменклатуры.Записать();
	Объект.Движения.ОстаткиНоменклатуры.Записывать = Истина;
	//--БИТ БВО 2015-11-05
	
	// Установка исключительной блокировки контролируемых остатков 
	Запрос=Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Если Объект.ТолькоТаблица Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ИнвентаризацияСостав.Номенклатура,					
		|	ИнвентаризацияСостав.Склад КАК МестоХранения,
		|	ИнвентаризацияСостав.Фирма КАК Фирма,
		//++БИТ БВО №0000129900
		|	ВЫБОР
		|		КОГДА ИнвентаризацияСостав.ТипРеализацииТовара = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)		
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
		|		ИНАЧЕ ИнвентаризацияСостав.ТипРеализацииТовара
		|	КОНЕЦ КАК Статус,
		//--БИТ БВО №0000129900
		|	СУММА(ИнвентаризацияСостав.КоличествоУчет - ИнвентаризацияСостав.Количество) КАК Количество,
		|	СУММА(0) КАК Сумма,
		|	СУММА(0) КАК СуммаНДС,
		|	ИнвентаризацияСостав.Номенклатура.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ врСостав
		|ИЗ
		|	Документ.Инвентаризация.СоставПоФирмам КАК ИнвентаризацияСостав
		|ГДЕ
		|	ИнвентаризацияСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияСостав.Номенклатура,
		|	ИнвентаризацияСостав.Склад,
		|	ИнвентаризацияСостав.Фирма,
		//++БИТ БВО №0000129900
		|	ВЫБОР
		|		КОГДА ИнвентаризацияСостав.ТипРеализацииТовара = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)		
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
		|		ИНАЧЕ ИнвентаризацияСостав.ТипРеализацииТовара
		|	КОНЕЦ
		//--БИТ БВО №0000129900
		|
		|ИМЕЮЩИЕ
		|	СУММА(ИнвентаризацияСостав.КоличествоУчет - ИнвентаризацияСостав.Количество) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врСостав.Номенклатура,
		|	врСостав.МестоХранения,
		|	врСостав.Фирма
		|ИЗ
		|	врСостав КАК врСостав";
	Иначе
		//флаг Толькотаблица не установлен, следовательно необходимо заблокировать остатки по Фирмам и складам, которые есть в документе по всей номенклатуре
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияСоставПоФирмам.Склад КАК Склад,
		|	ИнвентаризацияСоставПоФирмам.Номенклатура КАК Номенклатура,
		|	ИнвентаризацияСоставПоФирмам.Фирма КАК Фирма
		|ПОМЕСТИТЬ ФирмыСкладыНоменклатура
		|ИЗ
		|	Документ.Инвентаризация.СоставПоФирмам КАК ИнвентаризацияСоставПоФирмам
		|ГДЕ
		|	ИнвентаризацияСоставПоФирмам.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияСоставПоФирмам.Склад,
		|	ИнвентаризацияСоставПоФирмам.Номенклатура,
		|	ИнвентаризацияСоставПоФирмам.Фирма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФирмыСкладыНоменклатура.Склад КАК МестоХранения
		|ИЗ
		|	ФирмыСкладыНоменклатура КАК ФирмыСкладыНоменклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ФирмыСкладыНоменклатура.Склад";
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		тзСклады = Запрос.Выполнить().Выгрузить();
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = тзСклады;
		Для каждого к из тзСклады.Колонки Цикл
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
		КонецЦикла;
		Блокировка.Заблокировать();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	т.Номенклатура,
		|	т.МестоХранения КАК МестоХранения,
		|	т.Фирма КАК Фирма,
		|	СУММА(т.Количество) КАК Количество,
		|	СУММА(т.Сумма) КАК Сумма,
		|	СУММА(т.СуммаНДС) КАК СуммаНДС,
		|	т.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		//++БИТ БВО №0000129900
		|	т.Статус
		//--БИТ БВО №0000129900
		|ПОМЕСТИТЬ врСостав
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИнвентаризацияСостав.Номенклатура КАК Номенклатура,
		|		ИнвентаризацияСостав.Склад КАК МестоХранения,
		|		ИнвентаризацияСостав.Фирма КАК Фирма,
		//++БИТ БВО №0000129900
		|	ВЫБОР
		|		КОГДА ИнвентаризацияСостав.ТипРеализацииТовара = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)		
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
		|		ИНАЧЕ ИнвентаризацияСостав.ТипРеализацииТовара
		|	КОНЕЦ КАК Статус,
		//--БИТ БВО №0000129900
		|		СУММА(ИнвентаризацияСостав.КоличествоУчет - ИнвентаризацияСостав.Количество) КАК Количество,
		|		СУММА(0) КАК Сумма,
		|		СУММА(0) КАК СуммаНДС
		|	ИЗ
		|		Документ.Инвентаризация.СоставПоФирмам КАК ИнвентаризацияСостав
		|	ГДЕ
		|		ИнвентаризацияСостав.Ссылка = &Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ИнвентаризацияСостав.Номенклатура,
		|		ИнвентаризацияСостав.Склад,
		|		ИнвентаризацияСостав.Фирма,
		|		ИнвентаризацияСостав.ТипРеализацииТовара
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(ИнвентаризацияСостав.КоличествоУчет - ИнвентаризацияСостав.Количество) > 0
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОстаткиНоменклатурыОстатки.Номенклатура,
		|		ОстаткиНоменклатурыОстатки.МестоХранения,
		|		ОстаткиНоменклатурыОстатки.Фирма,
		//++БИТ БВО №0000129900
		|		ОстаткиНоменклатурыОстатки.Статус,
		//--БИТ БВО №0000129900
		|		ВЫБОР
		|			КОГДА врСоставИсключить.Номенклатура ЕСТЬ NULL 
		|				ТОГДА ОстаткиНоменклатурыОстатки.КоличествоОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&Дата,
		|				МестоХранения В
		|					(ВЫБРАТЬ
		|						ИнвентаризацияСостав.Склад
		|					ИЗ
		|						ФирмыСкладыНоменклатура КАК ИнвентаризацияСостав)) КАК ОстаткиНоменклатурыОстатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ ФирмыСкладыНоменклатура КАК врСоставИсключить
		|			ПО ОстаткиНоменклатурыОстатки.Номенклатура = врСоставИсключить.Номенклатура
		|				И ОстаткиНоменклатурыОстатки.МестоХранения = врСоставИсключить.Склад
		|				И ОстаткиНоменклатурыОстатки.Фирма = врСоставИсключить.Фирма
		|	ГДЕ
		|		ВЫБОР
		|				КОГДА врСоставИсключить.Номенклатура ЕСТЬ NULL 
		|					ТОГДА ОстаткиНоменклатурыОстатки.КоличествоОстаток
		|				ИНАЧЕ 0
		|			КОНЕЦ > 0) КАК т
		|
		|СГРУППИРОВАТЬ ПО
		|	т.Номенклатура,
		|	т.МестоХранения,
		|	т.Фирма,
		|	т.Номенклатура.СтавкаНДС,
		//++БИТ БВО №0000129900
		|	т.Статус
		//--БИТ БВО №0000129900
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врСостав.Номенклатура,
		|	врСостав.МестоХранения,
		|	врСостав.Фирма
		|ИЗ
		|	врСостав КАК врСостав";
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("Дата",Объект.Дата);
	
	тз=Запрос.Выполнить().Выгрузить();
	
	Если тз.Количество() > 0 Тогда
		
		Если Объект.ТолькоТаблица Тогда
			тз.Свернуть("Номенклатура,МестоХранения,Фирма");
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = тз;
			Для каждого к из тз.Колонки Цикл
				ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
			КонецЦикла;
			Блокировка.Заблокировать();
		КонецЕсли;
		
		тз.Свернуть("Фирма","");
		
		Для каждого с_тз из тз Цикл
			Параметры = Новый Структура;
			Параметры.Вставить("Запрос",Запрос);
			Параметры.Вставить("Объект",Объект);
			Параметры.Вставить("КодОперации",КодОперацииРасход);
			Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
			Параметры.Вставить("тзРеализация",тзРеализация);
			Параметры.Вставить("РежимПроведения",Режим);
			Параметры.Вставить("Фирма",с_тз.Фирма);
			флВозврата = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);
		КонецЦикла;
	КонецЕсли;
	
	//++БИТ БВО 2015-11-05 Тут было закрытие отрицательных остатков, перенес выше
	//--БИТ БВО 2015-11-05
	
	Если ТолькоОтрицательныеОстатки Тогда     //dps+ 15/05/25
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИнвентаризацияСостав.Номенклатура,
		|	ИнвентаризацияСостав.Склад,
		|	ИнвентаризацияСостав.Фирма,
		//++БИТ БВО №0000129900
		|	ВЫБОР
		|		КОГДА ИнвентаризацияСостав.ТипРеализацииТовара = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)		
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
		|		ИНАЧЕ ИнвентаризацияСостав.ТипРеализацииТовара
		|	КОНЕЦ КАК Статус,
		//--БИТ БВО №0000129900
		|	СУММА(ИнвентаризацияСостав.КоличествоУчет) КАК КоличествоУчет
		|ПОМЕСТИТЬ Состав
		|ИЗ
		|	Документ.Инвентаризация.СоставПоФирмам КАК ИнвентаризацияСостав
		|ГДЕ
		|	ИнвентаризацияСостав.Ссылка = &Ссылка
		|	И ИнвентаризацияСостав.КоличествоУчет < 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияСостав.Номенклатура,
		|	ИнвентаризацияСостав.Склад,
		|	ИнвентаризацияСостав.Фирма,
		//++БИТ БВО №0000129900
		|	ИнвентаризацияСостав.ТипРеализацииТовара
		//--БИТ БВО №0000129900
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	СУММА(ОстаткиНоменклатурыОстатки.СуммаОстаток) КАК СуммаОстаток,
		|	СУММА(ОстаткиНоменклатурыОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток,
		|	СУММА(ОстаткиНоменклатурыОстатки.СуммаНДСОстаток) КАК СуммаНДСОстаток,
		|	СУММА(ОстаткиНоменклатурыОстатки.СуммаНДСУпрОстаток) КАК СуммаНДСУпрОстаток,
		|	ОстаткиНоменклатурыОстатки.Комитент,
		|	ОстаткиНоменклатурыОстатки.Статус,
		|	ОстаткиНоменклатурыОстатки.МестоХранения,
		|	ОстаткиНоменклатурыОстатки.Фирма,
		|	ОстаткиНоменклатурыОстатки.Номенклатура
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&Дата,
		|			Фирма В
		|					(ВЫБРАТЬ
		|						т.Фирма КАК Фирма
		|					ИЗ
		|						Состав КАК т)
		//++БИТ БВО  №0000129900
		//|				И Статус В (&мсвСтатусы)
		//--БИТ БВО  №0000129900
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						т.Номенклатура КАК Номенклатура
		|					ИЗ
		|						Состав КАК т)
		|				И МестоХранения В
		|					(ВЫБРАТЬ
		|						т.Склад КАК Склад
		|					ИЗ
		|						Состав КАК т)) КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиНоменклатурыОстатки.Номенклатура,
		|	ОстаткиНоменклатурыОстатки.Комитент,
		|	ОстаткиНоменклатурыОстатки.Статус,
		|	ОстаткиНоменклатурыОстатки.МестоХранения,
		|	ОстаткиНоменклатурыОстатки.Фирма,
		|	ОстаткиНоменклатурыОстатки.Статус");
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		мсвСтатусы=Новый Массив;
		мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.КупляПродажа);
		мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.Комиссия);
		Запрос.УстановитьПараметр("мсвСтатусы",мсвСтатусы);	
		Запрос.УстановитьПараметр("Дата",Объект.Дата);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Движение = тзОстаткиНоменклатуры.Добавить();
			Движение.Регистратор   = Объект.Ссылка;
			Движение.Активность    = Истина;
			Движение.Фирма         = Выборка.Фирма;
			Движение.МестоХранения = Выборка.МестоХранения;
			Движение.Период        = Объект.Дата;
			Движение.Статус        = Выборка.Статус;
			Движение.Комитент      = Выборка.Комитент;
			Движение.Номенклатура  = Выборка.Номенклатура;
			Движение.ВидДвижения   = ВидДвиженияНакопления.Приход;
			Движение.Количество    = -Выборка.КоличествоОстаток;
			Движение.Сумма         = -Выборка.СуммаОстаток;
			Движение.СуммаУпр      = -Выборка.СуммаУпрОстаток;
			Движение.СуммаНДС      = -Выборка.СуммаНДСОстаток;
			Движение.СуммаНДСУпр   = -Выборка.СуммаНДСУпрОстаток;
			Движение.КодОперации   = КодОперацииПриход;
		КонецЦикла;	
	КонецЕсли; //dps- 15/05/25
		
	//остатки без количества
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.Склад,
	|	ИнвентаризацияСостав.Фирма,
	//++БИТ БВО №0000129900
	|	ВЫБОР
	|		КОГДА ИнвентаризацияСостав.ТипРеализацииТовара = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка)		
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	|		ИНАЧЕ ИнвентаризацияСостав.ТипРеализацииТовара
	|	КОНЕЦ КАК Статус
	//--БИТ БВО №0000129900
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	Документ.Инвентаризация.СоставПоФирмам КАК ИнвентаризацияСостав
	|ГДЕ
	|	ИнвентаризацияСостав.Ссылка = &Ссылка
	|	И ИнвентаризацияСостав.КоличествоУчет = 0
	|	И ИнвентаризацияСостав.Количество = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияСостав.Номенклатура,
	|	ИнвентаризацияСостав.Склад,
	|	ИнвентаризацияСостав.Фирма,
	//++БИТ БВО №0000129900
	|	ИнвентаризацияСостав.ТипРеализацииТовара
	//--БИТ БВО №0000129900
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ОстаткиНоменклатурыОстатки.СуммаУпрОстаток КАК СуммаУпрОстаток,
	|	ОстаткиНоменклатурыОстатки.СуммаНДСОстаток КАК СуммаНДСОстаток,
	|	ОстаткиНоменклатурыОстатки.СуммаНДСУпрОстаток КАК СуммаНДСУпрОстаток,
	|	ОстаткиНоменклатурыОстатки.Комитент,
	|	ОстаткиНоменклатурыОстатки.Статус,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.Номенклатура
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&Дата,
	|			Фирма В
	|					(ВЫБРАТЬ
	|						т.Фирма КАК Фирма
	|					ИЗ
	|						Состав КАК т)
	//++БИТ БВО №0000129900
	//			И Статус В (&мсвСтатусы)
	//--БИТ БВО №0000129900
	|				" + ?(Объект.ТолькоТаблица, "И Номенклатура В
	|					(ВЫБРАТЬ
	|						т.Номенклатура КАК Номенклатура
	|					ИЗ
	|						Состав КАК т)", "") + "
	|				И МестоХранения В
	|					(ВЫБРАТЬ
	|						т.Склад КАК Склад
	|					ИЗ
	|						Состав КАК т)) КАК ОстаткиНоменклатурыОстатки
	|ГДЕ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток = 0");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	мсвСтатусы=Новый Массив;
	мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.КупляПродажа);
	мсвСтатусы.Добавить(Перечисления.ТипыДоговоров.Комиссия);
	Запрос.УстановитьПараметр("мсвСтатусы",мсвСтатусы);	
	Запрос.УстановитьПараметр("Дата",Объект.Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = тзОстаткиНоменклатуры.Добавить();
		Движение.Регистратор   = Объект.Ссылка;
		Движение.Активность    = Истина;
		Движение.Фирма         = Выборка.Фирма;
		Движение.МестоХранения = Выборка.МестоХранения;
		Движение.Период        = Объект.Дата;
		Движение.Статус        = Выборка.Статус;
		Движение.Комитент      = Выборка.Комитент;
		Движение.Номенклатура  = Выборка.Номенклатура;
		Движение.ВидДвижения   = ВидДвиженияНакопления.Расход;
		Движение.Количество    = Выборка.КоличествоОстаток;
		Движение.Сумма         = Выборка.СуммаОстаток;
		Движение.СуммаУпр      = Выборка.СуммаУпрОстаток;
		Движение.СуммаНДС      = Выборка.СуммаНДСОстаток;
		Движение.СуммаНДСУпр   = Выборка.СуммаНДСУпрОстаток;
		Движение.КодОперации   = КодОперацииКорректировкаОстатков;
	КонецЦикла;	
	
	тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,Комитент,КодОперации","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр,СуммаПродажи,СуммаНДСПродажи");
	
	//++БИТ БВО 2015-11-05 Теперь предполагается, что в ОстаткахНоменклатуры уже есть записи и не стоит их замещать
	//Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);	
	Для Каждого СтрокаТЗ ИЗ тзОстаткиНоменклатуры Цикл
		Движение = Объект.Движения.ОстаткиНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТЗ);
	КонецЦикла;
	//--БИТ БВО
	Объект.Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
	Объект.Движения.Реализация.Загрузить(тзРеализация);
	
	//Объект.Движения.ОстаткиНоменклатуры.Записать();
	//popn+
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	тзОстаткиНоменклатуры.Колонки.Добавить("ВидДвижения1", Новый ОписаниеТипов("ВидДвиженияНакопления"));	//kons
	тзОстаткиНоменклатуры.ЗагрузитьКолонку(тзОстаткиНоменклатуры.ВыгрузитьКолонку("ВидДвижения"), "ВидДвижения1");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОстаткиНоменклатуры.ВидДвижения,
	|	ОстаткиНоменклатуры.ВидДвижения1,
	|	ОстаткиНоменклатуры.Фирма,
	|	ОстаткиНоменклатуры.МестоХранения,
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.Статус,
	|	ОстаткиНоменклатуры.Количество,
	|	ОстаткиНоменклатуры.Сумма,
	|	ОстаткиНоменклатуры.СуммаНДС,
	|	ОстаткиНоменклатуры.СуммаУпр,
	|	ОстаткиНоменклатуры.СуммаНДСУпр
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	&тзОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Статус В(&Статусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.МестоХранения КАК Склад,
	|	ОстаткиНоменклатуры.Фирма,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиНоменклатуры.ВидДвижения1 = &Приход
	|				ТОГДА ОстаткиНоменклатуры.Количество
	|			ИНАЧЕ -ОстаткиНоменклатуры.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиНоменклатуры.ВидДвижения1 = &Приход
	|				ТОГДА ОстаткиНоменклатуры.Сумма
	|			ИНАЧЕ -ОстаткиНоменклатуры.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиНоменклатуры.ВидДвижения1 = &Приход
	|				ТОГДА ОстаткиНоменклатуры.СуммаУпр
	|			ИНАЧЕ -ОстаткиНоменклатуры.СуммаУпр
	|		КОНЕЦ) КАК СуммаУпр,
	|	ОстаткиНоменклатуры.ВидДвижения1,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиНоменклатуры.ВидДвижения1 = &Приход
	|				ТОГДА ОстаткиНоменклатуры.СуммаНДС
	|			ИНАЧЕ -ОстаткиНоменклатуры.СуммаНДС
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиНоменклатуры.ВидДвижения1 = &Приход
	|				ТОГДА ОстаткиНоменклатуры.СуммаНДСУпр
	|			ИНАЧЕ -ОстаткиНоменклатуры.СуммаНДСУпр
	|		КОНЕЦ) КАК СуммаНДСУпр
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.МестоХранения,
	|	ОстаткиНоменклатуры.Фирма,
	|	ОстаткиНоменклатуры.ВидДвижения1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвентаризацияПересортица.Номенклатура1,
	|	ИнвентаризацияПересортица.Номенклатура2,
	|	ИнвентаризацияПересортица.Фирма,
	|	ИнвентаризацияПересортица.Склад,
	|	СУММА(ИнвентаризацияПересортица.Количество) КАК Количество,
	|	СУММА(ЕСТЬNULL(СоставИзлишки.Количество, 0)) КАК КоличествоИзлишки,
	|	СУММА(ЕСТЬNULL(СоставНедостача.Количество, 0)) КАК КоличествоНедостача
	|ПОМЕСТИТЬ Пересортица
	|ИЗ
	|	Документ.Инвентаризация.ПересортицаПоФирмам КАК ИнвентаризацияПересортица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Состав КАК СоставИзлишки
	|		ПО (СоставИзлишки.Фирма = ИнвентаризацияПересортица.Фирма)
	|			И (СоставИзлишки.Склад = ИнвентаризацияПересортица.Склад)
	|			И (ВЫБОР
	|				КОГДА СоставИзлишки.ВидДвижения1 = &Приход
	|					ТОГДА ИнвентаризацияПересортица.Номенклатура1 = СоставИзлишки.Номенклатура
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Состав КАК СоставНедостача
	|		ПО (СоставНедостача.Фирма = ИнвентаризацияПересортица.Фирма)
	|			И (СоставНедостача.Склад = ИнвентаризацияПересортица.Склад)
	|			И (ВЫБОР
	|				КОГДА СоставНедостача.ВидДвижения1 = &Расход
	|					ТОГДА ИнвентаризацияПересортица.Номенклатура2 = СоставНедостача.Номенклатура
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|ГДЕ
	|	ИнвентаризацияПересортица.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияПересортица.Номенклатура1,
	|	ИнвентаризацияПересортица.Номенклатура2,
	|	ИнвентаризацияПересортица.Фирма,
	|	ИнвентаризацияПересортица.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	Состав.Фирма,
	|	Состав.Склад,
	|	СУММА(Состав.Количество) КАК Количество,
	|	СУММА(Состав.Сумма) КАК Сумма,
	|	СУММА(Состав.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Состав.ВидДвижения1 = &Приход
	|					ТОГДА Пересортица.Количество
	|				ИНАЧЕ -Пересортица.Количество
	|			КОНЕЦ, 0)) КАК КоличествоПересорт,
	|	ВЫБОР
	|		КОГДА Состав.ВидДвижения1 = &Приход
	|			ТОГДА Пересортица.Номенклатура2
	|		ИНАЧЕ Пересортица.Номенклатура1
	|	КОНЕЦ КАК НоменклатураПересорт,
	|	СУММА(Состав.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Состав.СуммаНДСУпр) КАК СуммаНДСУпр,
	|	СУММА(ЕСТЬNULL(Пересортица.КоличествоИзлишки, 0)) КАК КоличествоИзлишка,
	|	СУММА(ЕСТЬNULL(Пересортица.КоличествоНедостача, 0)) КАК КоличествоНедостачи,
	|	Пересортица.Номенклатура1,
	|	Пересортица.Номенклатура2
	|ИЗ
	|	Состав КАК Состав
	|		ПОЛНОЕ СОЕДИНЕНИЕ Пересортица КАК Пересортица
	|		ПО (Пересортица.Фирма = Состав.Фирма)
	|			И (Пересортица.Склад = Состав.Склад)
	|			И (ВЫБОР
	|				КОГДА Состав.ВидДвижения1 = &Приход
	|					ТОГДА Состав.Номенклатура = Пересортица.Номенклатура1
	|				ИНАЧЕ Состав.Номенклатура = Пересортица.Номенклатура2
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Состав.Номенклатура,
	|	Состав.Фирма,
	|	Состав.Склад,
	|	ВЫБОР
	|		КОГДА Состав.ВидДвижения1 = &Приход
	|			ТОГДА Пересортица.Номенклатура2
	|		ИНАЧЕ Пересортица.Номенклатура1
	|	КОНЕЦ,
	|	Пересортица.Номенклатура1,
	|	Пересортица.Номенклатура2
	|
	|УПОРЯДОЧИТЬ ПО
	|	Состав.Номенклатура.Наименование");
	Запрос.УстановитьПараметр("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("Приход",ВидДвиженияНакопления.Приход);
	мсв=Новый Массив;
	мсв.Добавить(Перечисления.ТипыДоговоров.КупляПродажа);
	Запрос.УстановитьПараметр("Статусы",мсв);
	Запрос.УстановитьПараметр("Расход",ВидДвиженияНакопления.Расход);
	тзСведенияПоИнвентаризации = Запрос.Выполнить().Выгрузить();
	
	тзСведенияПоИнвентаризации.Индексы.Добавить("Номенклатура,Склад,Фирма");
	
	Для каждого Выборка из  тзСведенияПоИнвентаризации Цикл
		
		Если Выборка.Номенклатура = NULL Тогда
			Сообщить("Обнаружены некорректные сведение по пересортице. Номенклатура излишка: "+Выборка.Номенклатура1+" номенклатура недостачи: "+Выборка.Номенклатура2);
			флВозврата = Истина;
			Продолжить;
		КонецЕсли;	
		
		чКолПоМодулю = МАКС(Выборка.Количество,-Выборка.Количество);
		чКолПересортПоМодулю = МАКС(Выборка.КоличествоПересорт,-Выборка.КоличествоПересорт);
		чКолнедостчаиПоМодулю = МАКС(Выборка.КоличествоНедостачи,-Выборка.КоличествоНедостачи);
		Если  чКолПересортПоМодулю >  Выборка.КоличествоИзлишка ИЛИ  чКолПересортПоМодулю >  чКолнедостчаиПоМодулю Тогда  
			Сообщить("Обнаружены некорректные сведение по пересортице. Номенклатура излишка: "+Выборка.Номенклатура1+" номенклатура недостачи: "+Выборка.Номенклатура2);
			флВозврата = Истина;
		КонецЕсли;
		
		Движение = Объект.Движения.СведенияПоИнвентаризации.Добавить();	
		Движение.Регистратор = Объект.Ссылка;
		Движение.Период = Объект.Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Фирма = Выборка.Фирма;
		Движение.Склад = Выборка.Склад;
		Движение.Количество = Выборка.Количество;
		Движение.КоличествоПересорт = Выборка.КоличествоПересорт;
		Движение.Сумма = Выборка.Сумма;
		Движение.СуммаУпр = Выборка.СуммаУпр;
		Движение.СуммаНДС = Выборка.СуммаНДС;
		Движение.СуммаНДСУпр = Выборка.СуммаНДСУпр;
		Если Выборка.КоличествоПересорт <> 0 Тогда
			к = Выборка.КоличествоПересорт / Выборка.Количество;
			Движение.СуммаПересорт       = Окр(Выборка.Сумма       * к,2);
			Движение.СуммаУпрПересорт    = Окр(Выборка.СуммаУпр    * к,2);
			Движение.СуммаНДСПересорт    = Окр(Выборка.СуммаНДС    * к,2);
			Движение.СуммаНДСУпрПересорт = Окр(Выборка.СуммаНДСУпр * к,2);
			
			мсвСтр = тзСведенияПоИнвентаризации.НайтиСтроки(Новый Структура("Номенклатура,Фирма,Склад",Выборка.НоменклатураПересорт,Выборка.Фирма,Выборка.Склад));
			Если мсвСтр.Количество() > 0 Тогда
				Движение.НомерСтрокиПересорт = тзСведенияПоИнвентаризации.Индекс(мсвСтр[0])+1;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	//++БИТ БВО
	//Объект.Движения.ОстаткиНоменклатуры.Записывать=Ложь;
	Объект.Движения.ОстаткиНоменклатуры.Записывать = Истина;
	//--БИТ БВО
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;	
	Объект.Движения.Реализация.Записывать=Истина;
	Объект.Движения.СведенияПоИнвентаризации.Записывать=Истина;
	
	Возврат флВозврата;	
КонецФункции	

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Источник") И ДанныеЗаполнения.Источник = "ДанныеТСД" Тогда
			Для каждого сСостава Из Состав Цикл
				сСостава.Количество = 0;
			КонецЦикла;
			
			Для каждого эл Из ДанныеЗаполнения.Состав Цикл	//массив структур
				НайденныеСтроки = Состав.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения", эл.Номенклатура, эл.ЕдиницаИзмерения));
				Если НайденныеСтроки.Количество() = 0 Тогда
					сСостава = Состав.Добавить();
					ЗаполнитьЗначенияСвойств(сСостава, эл);//ключи Эл - "Номенклатура, ЕдиницаИзмерения, Количество, Коэффициент, Цена, Сумма"
				Иначе
					сСостава = НайденныеСтроки[0];
					сСостава.Количество = эл.Количество;
				КонецЕсли;
				сСостава.КоличествоРазница = сСостава.Количество - сСостава.КоличествоУчет;
			КонецЦикла;
			Если СоставПоФирмам.Количество() > 0 И ЗначениеЗаполнено(МетодРазнесенияКоличества) Тогда
				ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииМетодаРазнесенияКоличества(ЭтотОбъект);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ГрафикИнвентаризаций") Тогда
		ДокОснование = ДанныеЗаполнения;
		ТипПередачиРезультатов = ДанныеЗаполнения.ТипПередачиРезультатов;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ИнвентаризационнаяОписьСостав.Номенклатура КАК Номенклатура,
			|	ИнвентаризационнаяОписьСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ИнвентаризационнаяОписьСостав.Коэффициент КАК Коэффициент,
			|	ИнвентаризационнаяОписьСостав.Вес КАК Вес,
			|	ИнвентаризационнаяОписьСостав.ЕдиницаВеса КАК ЕдиницаВеса,
			|	ИнвентаризационнаяОписьСостав.Количество КАК Количество,
			|	ИнвентаризационнаяОписьСостав.Ссылка.Склад КАК Склад,
			|	ИнвентаризационнаяОписьСостав.Ссылка.Фирма КАК Фирма
			|ИЗ
			|	Документ.ИнвентаризационнаяОпись.Состав КАК ИнвентаризационнаяОписьСостав
			|ГДЕ
			|	ИнвентаризационнаяОписьСостав.Ссылка.ДокОснование = &ДокОснование
			|	И ИнвентаризационнаяОписьСостав.Ссылка.Проведен
			|ИТОГИ
			|	СУММА(Вес),
			|	СУММА(Количество)
			|ПО
			|	Склад,
			|	Номенклатура,
			|	ЕдиницаИзмерения,
			|	Фирма";

		Запрос.УстановитьПараметр("ДокОснование", ДанныеЗаполнения);

		Результат = Запрос.Выполнить();

		ВыборкаСклад = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаСклад.Следующий() Цикл
			чНомерСтроки = 1;
			ВыборкаНоменклатура = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНоменклатура.Следующий() Цикл
				ВыборкаЕдиницаИзмерения = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаЕдиницаИзмерения.Следующий() Цикл
					НоваяСтрокаСостав = Состав.Добавить();
					НоваяСтрокаСостав.НомерСтрокиПоСкладу = чНомерСтроки;
					НоваяСтрокаСостав.Склад               = ВыборкаСклад.Склад;
					НоваяСтрокаСостав.Номенклатура        = ВыборкаЕдиницаИзмерения.Номенклатура;
					НоваяСтрокаСостав.ЕдиницаИзмерения    = ВыборкаЕдиницаИзмерения.ЕдиницаИзмерения;
					НоваяСтрокаСостав.Количество          = ВыборкаЕдиницаИзмерения.Количество;
					НоваяСтрокаСостав.ЕдиницаВеса         = ВыборкаЕдиницаИзмерения.ЕдиницаВеса;
					НоваяСтрокаСостав.Вес                 = ВыборкаЕдиницаИзмерения.Вес;
					ВыборкаФирма = ВыборкаЕдиницаИзмерения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаФирма.Следующий() Цикл
						НоваяСтрокаСоставПоФирмам = СоставПоФирмам.Добавить();
						НоваяСтрокаСоставПоФирмам.Склад            = ВыборкаСклад.Склад;
						НоваяСтрокаСоставПоФирмам.Фирма            = ВыборкаФирма.Фирма;
						НоваяСтрокаСоставПоФирмам.Номенклатура     = ВыборкаФирма.Номенклатура;
						НоваяСтрокаСоставПоФирмам.ЕдиницаИзмерения = ВыборкаФирма.ЕдиницаИзмерения;
						НоваяСтрокаСоставПоФирмам.Количество       = ВыборкаФирма.Количество;
						НоваяСтрокаСоставПоФирмам.ЕдиницаВеса      = ВыборкаФирма.ЕдиницаВеса;
						НоваяСтрокаСоставПоФирмам.Вес              = ВыборкаФирма.Вес;
					КонецЦикла;
					чНомерСтроки = чНомерСтроки + 1;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиница) И НЕ ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ЭтоГруппа Тогда
		СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(МетодРазнесенияКоличества) Тогда
		МетодРазнесенияКоличества = Перечисления.МетодРаспределенияКоличестваМеждуФирмами.ВсеНаБольшееКоличество;
	КонецЕсли;
	
	Если ДокОснование.Пустая() Тогда
		ТолькоТаблица = Истина;
	Иначе
		ТолькоТаблица = ОбщегоНазначенияСервер.ВГрафикеИнвентаризацийЕстьГруппы(ДокОснование);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипПередачиРезультатов) Тогда
		ТипПередачиРезультатов = Перечисления.ТипыПередачиРезультатовИнвентаризации.ИзлишкиНедостачи;
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
	ДокОснование = Неопределено;
	ТолькоТаблица = Истина;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Отказ = ПровестиИнвентаризацию(ЭтотОбъект,РежимПроведения);
	
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	
	//Если НЕ ЭтотОбъект.ЭтоНовый() Тогда
	//	Отказ = РаботаСФормамиСервер.ЗапрещеноРедактировать(ЭтотОбъект.Ссылка);
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;	
	
	//{ СИТЕК БрыляковЕЮ 2015-04-30  
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	// СИТЕК БрыляковЕЮ 2015-04-30 }
	
	АктуализироватьУчетноеКоличество(РежимЗаписи, РежимПроведения);
	ПроверитьСоставПоФирмам(Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	
	
КонецПроцедуры
 
Процедура АктуализироватьУчетноеКоличество(РежимЗаписи, РежимПроведения)
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		//не актуализируем
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИнвентаризацияСоставПоФирмам.Номенклатура,
	|	ИнвентаризацияСоставПоФирмам.КоличествоУчет КАК КоличествоУчет,
	|	ИнвентаризацияСоставПоФирмам.Склад,
	|	ИнвентаризацияСоставПоФирмам.Фирма,
	//++БИТ БВО 2015-08-20 Актуализация остатков должна учитывать статус
	|	ИнвентаризацияСоставПоФирмам.ТипРеализацииТовара КАК Статус
	//--БИТ БВО 2015-08-20
	|ПОМЕСТИТЬ Состав
	|ИЗ
	|	&ДокументИнвентаризацияСоставПоФирмам КАК ИнвентаризацияСоставПоФирмам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ОстаткиНоменклатурыОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(ОстаткиНоменклатурыОстатки.СуммаУпрОстаток) КАК СуммаУпрОстаток,
	|	СУММА(ОстаткиНоменклатурыОстатки.СуммаНДСОстаток) КАК СуммаНДСОстаток,
	|	СУММА(ОстаткиНоменклатурыОстатки.СуммаНДСУпрОстаток) КАК СуммаНДСУпрОстаток,
	//++БИТ БВО 2015-08-20 Актуализация остатков должна учитывать статус
	|	ОстаткиНоменклатурыОстатки.Статус
	//--БИТ БВО 2015-08-20
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&МоментВремени,
	|			(Фирма, Номенклатура, МестоХранения) В
	|				(ВЫБРАТЬ
	|					Состав.Фирма,
	|					Состав.Номенклатура,
	|					Состав.Склад КАК МестоХранения
	|				ИЗ
	|					Состав КАК Состав)) КАК ОстаткиНоменклатурыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.МестоХранения,
	|	ОстаткиНоменклатурыОстатки.Фирма,
	|	ОстаткиНоменклатурыОстатки.Статус
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	Состав.Склад,
	|	Состав.Фирма,
	|	Состав.КоличествоУчет,
	//++БИТ БВО 2015-08-20 Актуализация остатков должна учитывать статус
	|	Состав.Статус КАК Статус,
	//--БИТ БВО 2015-08-20
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ЕСТЬNULL(Остатки.СуммаУпрОстаток, 0) КАК СуммаУпрОстаток,
	|	ЕСТЬNULL(Остатки.СуммаНДСОстаток, 0) КАК СуммаНДСОстаток,
	|	ЕСТЬNULL(Остатки.СуммаНДСУпрОстаток, 0) КАК СуммаНДСУпрОстаток
	|ИЗ
	|	Состав КАК Состав
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО Состав.Номенклатура = Остатки.Номенклатура
	|			И Состав.Склад = Остатки.МестоХранения
	//++БИТ БВО 2015-08-20 Актуализация остатков должна учитывать статус
	|			И Состав.Статус = Остатки.Статус
	//--БИТ БВО 2015-08-20
	|			И Состав.Фирма = Остатки.Фирма");
	Запрос.УстановитьПараметр("ДокументИнвентаризацияСоставПоФирмам",ЭтотОбъект.СоставПоФирмам.Выгрузить());
	//Если РежимЗаписи = РежимЗаписиДокумента.Запись ИЛИ РежимПроведения = РежимПроведенияДокумента.Неоперативный Тогда
		Если ЭтотОбъект.ЭтоНовый() Тогда
			МоментВремениЗапроса = ЭтотОбъект.Дата;
		Иначе
			МоментВремениЗапроса = Новый МоментВремени(ЭтотОбъект.Дата,ЭтотОбъект.Ссылка);
		КонецЕсли;	
	//Иначе
	//	МоментВремениЗапроса = Неопределено;
	//КонецЕсли;
	Запрос.УстановитьПараметр("МоментВремени",МоментВремениЗапроса);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.КоличествоУчет <> Выборка.КоличествоОстаток Тогда
			
			//++БИТ БВО 2015-06-18 Если это инвентаризация отрицательных остатков, то учетное количество проставляется 0, проверку отстаков отключу
			Если ЭтотОбъект.ТолькоОтрицательныеОстатки И Выборка.КоличествоУчет < 0 Тогда
				Продолжить;
			КонецЕсли;
			//--БИТ БВО 2015-06-18
			
			Сообщить("По номенклатуре ("+Выборка.Номенклатура +") фирме ("+Выборка.Фирма+") складу ("+Выборка.Склад
							+ ") учетное количество (" + СокрЛП(Выборка.КоличествоУчет) 
							+ ") не соответствует текущим остаткам (" + СокрЛП(Выборка.КоличествоОстаток) 
							+ ")! Табличная часть будет перезаполнена, необходимо переформировать сличительную ведомость!", СтатусСообщения.Обычное);
			мсв = ЭтотОбъект.СоставПоФирмам.НайтиСтроки(Новый Структура("Фирма,Номенклатура,Склад",Выборка.Фирма,Выборка.Номенклатура,Выборка.Склад));
			
			Если мсв.Количество() > 0 Тогда
				чРазница = мсв[0].КоличествоУчет - Выборка.КоличествоОстаток;
				мсв[0].КоличествоУчет = Выборка.КоличествоОстаток;
			КонецЕсли;
			//++БИТ БВО 2015-08-20 Актуализация остатков должна учитывать статус
			//мсвСостав = ЭтотОбъект.Состав.НайтиСтроки(Новый Структура("Номенклатура,Склад",Выборка.Номенклатура,Выборка.Склад));
			мсвСостав = ЭтотОбъект.Состав.НайтиСтроки(Новый Структура("Номенклатура,Склад,ТипРеализацииТовара",Выборка.Номенклатура,Выборка.Склад,Выборка.Статус));
			//--БИТ БВО 2015-08-20
			Если мсвСостав.Количество() > 0 Тогда
				мсвСостав[0].КоличествоУчет = мсвСостав[0].КоличествоУчет - чРазница;
				мсвСостав[0].КоличествоРазница = мсвСостав[0].Количество - мсвСостав[0].КоличествоУчет;
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура ПроверитьСоставПоФирмам(Отказ, РежимЗаписи, РежимПроведения)

	Если Не РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияСостав.Номенклатура,
		|	ИнвентаризацияСостав.Количество,
		|	ИнвентаризацияСостав.КоличествоУчет,
		|	ИнвентаризацияСостав.Склад,
		|	ИнвентаризацияСостав.НомерСтрокиПоСкладу
		|ПОМЕСТИТЬ ИнвентаризацияСостав
		|ИЗ
		|	&Состав КАК ИнвентаризацияСостав
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоставПоФирмам.Номенклатура,
		|	СоставПоФирмам.Количество,
		|	СоставПоФирмам.КоличествоУчет,
		|	СоставПоФирмам.Склад,
		|	СоставПоФирмам.Фирма,
		|	СоставПоФирмам.ЦенаИзлишка,
		|	СоставПоФирмам.ЦенаИзлишкаУпр
		|ПОМЕСТИТЬ СоставПоФирмам
		|ИЗ
		|	&СоставПоФирмам КАК СоставПоФирмам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнвентаризацияСостав.Склад КАК Склад,
		|	ИнвентаризацияСостав.НомерСтрокиПоСкладу КАК НомерСтрокиПоСкладу,
		|	ИнвентаризацияСостав.Номенклатура,
		|	ИнвентаризацияСостав.Количество КАК Количество,
		|	ИнвентаризацияСостав.КоличествоУчет КАК КоличествоУчет,
		|	СоставПоФирмам.Фирма,
		|	ЕСТЬNULL(СоставПоФирмам.ЦенаИзлишка, 0) КАК ЦенаИзлишка,
		|	ЕСТЬNULL(СоставПоФирмам.ЦенаИзлишкаУпр, 0) КАК ЦенаИзлишкаУпр,
		|	ЕСТЬNULL(СоставПоФирмамСГруппировкой.Количество, 0) КАК ИтогоКоличествоПоФирмам,
		|	ЕСТЬNULL(СоставПоФирмамСГруппировкой.КоличествоУчет, 0) КАК ИтогоКоличествоУчетПоФирмам
		|ИЗ
		|	ИнвентаризацияСостав КАК ИнвентаризацияСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ СоставПоФирмам КАК СоставПоФирмам
		|		ПО ИнвентаризацияСостав.Номенклатура = СоставПоФирмам.Номенклатура
		|			И ИнвентаризацияСостав.Склад = СоставПоФирмам.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СоставПоФирмам.Номенклатура КАК Номенклатура,
		|			СоставПоФирмам.Склад КАК Склад,
		|			СУММА(СоставПоФирмам.Количество) КАК Количество,
		|			СУММА(СоставПоФирмам.КоличествоУчет) КАК КоличествоУчет
		|		ИЗ
		|			СоставПоФирмам КАК СоставПоФирмам
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СоставПоФирмам.Номенклатура,
		|			СоставПоФирмам.Склад) КАК СоставПоФирмамСГруппировкой
		|		ПО ИнвентаризацияСостав.Номенклатура = СоставПоФирмамСГруппировкой.Номенклатура
		|			И ИнвентаризацияСостав.Склад = СоставПоФирмамСГруппировкой.Склад
		|ГДЕ
		|	(ИнвентаризацияСостав.Количество <> ЕСТЬNULL(СоставПоФирмамСГруппировкой.Количество, 0)
		|			ИЛИ ИнвентаризацияСостав.КоличествоУчет <> ЕСТЬNULL(СоставПоФирмамСГруппировкой.КоличествоУчет, 0)
		|			ИЛИ СоставПоФирмам.Фирма = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ИЛИ СоставПоФирмам.Количество > СоставПоФирмам.КоличествоУчет
		|				И (НЕ СоставПоФирмам.ЦенаИзлишка > 0
		|					ИЛИ НЕ СоставПоФирмам.ЦенаИзлишкаУпр > 0))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Склад,
		|	НомерСтрокиПоСкладу";

	Запрос.УстановитьПараметр("Состав", Состав.Выгрузить(, "Номенклатура, Количество, КоличествоУчет, Склад, НомерСтрокиПоСкладу"));
	Запрос.УстановитьПараметр("СоставПоФирмам", СоставПоФирмам.Выгрузить(, "Номенклатура, Количество, КоличествоУчет, Склад, Фирма, ЦенаИзлишка, ЦенаИзлишкаУпр"));
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Не Результат.Пустой() Тогда
		Отказ = Истина;
		Пока Выборка.Следующий() Цикл
			ТекстОшибки = "---------------------------------------";
			ТекстОшибки = ТекстОшибки + Символы.ПС + "По складу """ + Выборка.Склад + """ в строке " + Выборка.НомерСтрокиПоСкладу + " с номенклатурой """ + Выборка.Номенклатура + """";
			Если Выборка.Количество <> Выборка.ИтогоКоличествоПоФирмам
				Или Выборка.КоличествоУчет <> Выборка.ИтогоКоличествоУчетПоФирмам Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС + "неверно распределено количество по фирмам";
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Выборка.Фирма) Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС + "не указана фирма";
			КонецЕсли;
			Если Выборка.ЦенаИзлишка <= 0 Или Выборка.ЦенаИзлишкаУпр <= 0 Тогда
				ТекстОшибки = ТекстОшибки + Символы.ПС + "не указана цена излишка";
			КонецЕсли;
			Сообщить(ТекстОшибки);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры
