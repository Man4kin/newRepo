&НаКлиенте
Перем ВремСклад,ВремНоменклатура;


&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	мНайденныеСтроки = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад, Номенклатура", ТекСтрока.Склад, ТекСтрока.Номенклатура));
	Если мНайденныеСтроки.Количество() > 0 Тогда
		ОбработкаТабличныхЧастейКлиентСервер.РаспределитьКоличествоПоСтрокам(мНайденныеСтроки, Объект.МетодРазнесенияКоличества, ТекСтрока.Количество);
	КонецЕсли; 
	ТекСтрока.КоличествоРазница = ТекСтрока.Количество - ТекСтрока.КоличествоУчет;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	сзСклады  =  ЗаполнитьСписокСкладов();
	////popn+
	//сзФирмы   =  ЗаполнитьСписокФирм();
	//ЭтаФорма.Элементы.НастройкаФирмИСкладов.Доступность = НЕ ТолькоПросмотр;
	//ЭтаФорма.Элементы.СоставЗаполнитьПоОстаткам.Доступность = НЕ ТолькоПросмотр;
	//popn-
	
	//dps+ 15.05.08 147820
	Если НЕ ПравоИзменения() Тогда 
		Если сзСклады.Количество() = 0 Тогда
			сзСклады.Добавить(ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.СкладТорговогоЗала);
		КонецЕсли;	
		Объект.Дата = ТекущаяДата();
		Объект.МетодРазнесенияКоличества = Перечисления.МетодРаспределенияКоличестваМеждуФирмами.ВсеНаБольшееКоличество;
		Объект.ВидКоррекцииСписание = Справочники.ВидыСписания.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодКоррекцииСписанияПоУмолчанию));
		Объект.ВидКоррекцииОприходование = Справочники.ВидыСписания.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодКоррекцииОприходованияПоУмолчанию));
		ЭтаФорма.Элементы.МетодРазнесенияКоличества.Доступность = Ложь;
		ЭтаФорма.Элементы.Дата.Доступность = Ложь;
		ЭтаФорма.Элементы.ВидКоррекцииОприходование.Доступность = Ложь;
		ЭтаФорма.Элементы.ВидКоррекцииСписание.Доступность = Ложь;
		ЭтаФорма.Элементы.НастройкаФирмИСкладов.Видимость = Ложь;
	Иначе 
		//ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
		сзФирмы   =  ЗаполнитьСписокФирм();
		ЭтаФорма.Элементы.НастройкаФирмИСкладов.Доступность = Истина;
		ЭтаФорма.Элементы.СоставЗаполнитьПоОстаткам.Доступность = Истина;
	КонецЕсли;
	//dps- 15.05.08 147820
	Если сзСклады.Количество() > 0 Тогда
		текСклад = сзСклады[0].Значение;
	КонецЕсли;	
	СформироватьСтраницыПоСкладам();
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	//dps+  15.05.08 147820
	Если ПравоИзменения() Тогда 
		Если сзСклады.Количество()>0 Тогда                     
			Элементы.Страницы.Видимость=Истина;
			Элементы.СтраницыПоФирмам.Видимость=Истина;
		Иначе
			Элементы.Страницы.Видимость=Ложь;
			Элементы.СтраницыПоФирмам.Видимость=Ложь;
		КонецЕсли;
	Иначе 
		Элементы.Страницы.Видимость=Истина;
		Элементы.СтраницыПоФирмам.Видимость=Истина;
	КонецЕсли;
	//dps-  15.05.08 147820
	Элементы.ТолькоТаблица.Видимость = Объект.ТипПередачиРезультатов = ПредопределенноеЗначение("Перечисление.ТипыПередачиРезультатовИнвентаризации.ИзлишкиНедостачи");
	
	//++БИТ БВО - Для случаев, когда автоматически не установилось значение поля "ТипПередачиРезультатов" необходимо имет возможность ручного изменения
	Элементы.ТипПередачиРезультатов.Доступность = НЕ ЗначениеЗаполнено(Объект.ТипПередачиРезультатов);
	//--БИТ БВО
	
КонецПроцедуры	

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПравоИзменения = ПравоИзменения();
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		ТекНоменклатура = Элемент.ДанныеСтроки(Строка).Номенклатура;
		Если ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ТекНоменклатура,"Группа") = 1 Тогда
			ПолучитьНоменклатуруГруппы(ТекНоменклатура);
			КоличествоВТаблице = ТаблицаНоменклатуры.Количество();
			I = 0;
			Для каждого СтрокаТаблицаНоменклатуры из ТаблицаНоменклатуры Цикл
				ОбработкаПрерыванияПользователя();                           
				I = I + 1;
				Процент = Окр(100*I/КоличествоВТаблице);
				Состояние(НСтр("ru = 'Подбор номенклатуры'", "ru"),Процент, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выполняется добавление списка: %1'", "ru"),КоличествоВТаблице),БиблиотекаКартинок.ПодсистемаСкладИЗапасы);
				Строки = Объект.Состав.НайтиСтроки(Новый Структура("Номенклатура,Склад", СтрокаТаблицаНоменклатуры.Номенклатура,ТекСклад));
				Если Строки.Количество() > 0 Тогда
					ТекСтрока = СТроки[0];
					//ТекСтрока.Количество = 	ТекСтрока.Количество + 1;
					//ПриИзмененииКоличестваВТабличнойЧасти(ТекСтрока);
				Иначе 
					ТекСТрока = Объект.Состав.Добавить();
					ТекСТрока.Номенклатура = СтрокаТаблицаНоменклатуры.Номенклатура;
					//ТекСТрока.Количество = 1;
				КонецЕсли;
				ОбработкаТабличныхЧастейКлиент.ЗаполнитьСтрокуТабличнойЧастиПоУмолчанию(ТекСТрока,Элементы.состав,Объект,"Состав");
				
				Если ТекСтрока <> Неопределено Тогда
					ТекСтрока.КоличествоРазница = ТекСтрока.Количество - ТекСтрока.КоличествоУчет;
					//мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка")));
					//Для каждого с из мсв Цикл
					ТекСтрока.Склад = ТекСклад;
					//Если добавлена новая строка, то установим ей свой номер
					Если ТекСтрока.НомерСтроки = Объект.Состав.Количество() Тогда
						мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ТекСклад));
						ТекСтрока.НомерСтрокиПоСкладу = мсв.Количество();
					КонецЕсли;	
					//КонецЦикла;
					//popn+
					//dps+ 15.05.08 147820
					Если ПравоИзменения Тогда
						Для Каждого ЭлементСписка Из сзФирмы Цикл
							мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Фирма, Склад, Номенклатура", ЭлементСписка.Значение, ТекСклад, ТекСтрока.Номенклатура));
							Если мсв.Количество() > 0 Тогда
								Для Каждого Эл Из мсв Цикл
									Эл.Количество = 0;
								КонецЦикла;
								Продолжить;
							КонецЕсли;
							НоваяСтрокаФирма  = Объект.СоставПоФирмам.Добавить();
							НоваяСтрокаФирма.Номенклатура     = ТекСтрока.Номенклатура;
							НоваяСтрокаФирма.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
							НоваяСтрокаФирма.Склад            = ТекСтрока.Склад;
							НоваяСтрокаФирма.Фирма            = ЭлементСписка.Значение;
						КонецЦикла;
					Иначе 
						Фирма = ОпределитьФирму(ТекСтрока.Номенклатура);
						мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Фирма, Склад, Номенклатура", Фирма, ТекСклад, ТекСтрока.Номенклатура));
						Если мсв.Количество() > 0 Тогда
							Для Каждого Эл Из мсв Цикл
								Эл.Количество = 0;
							КонецЦикла;
							Продолжить;
						КонецЕсли;
						НоваяСтрокаФирма  = Объект.СоставПоФирмам.Добавить();
						НоваяСтрокаФирма.Номенклатура     = ТекСтрока.Номенклатура;
						НоваяСтрокаФирма.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
						НоваяСтрокаФирма.Склад            = ТекСтрока.Склад;
						НоваяСтрокаФирма.Фирма            = Фирма;
					КонецЕсли;
					//dps- 15.05.08 147820
					//popn-
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если ЗапрашиватьКоличество Тогда
				Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество);
			Иначе
				Количество = 0;
			КонецЕсли;	
			
			ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);	
			
			Если ТекСтрока <> Неопределено Тогда
				ТекСтрока.КоличествоРазница = ТекСтрока.Количество - ТекСтрока.КоличествоУчет;
				//мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка")));
				//Для каждого с из мсв Цикл
				ТекСтрока.Склад = ТекСклад;
				//Если добавлена новая строка, то установим ей свой номер
				Если ТекСтрока.НомерСтроки = Объект.Состав.Количество() Тогда
					мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ТекСклад));
					ТекСтрока.НомерСтрокиПоСкладу = мсв.Количество();
				КонецЕсли;	
				//КонецЦикла;	
				//popn+
				//dps+ 15.05.08 147820
				Если ПравоИзменения Тогда
					Для Каждого ЭлементСписка Из сзФирмы Цикл
						мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Фирма, Склад, Номенклатура", Фирма, ТекСклад, ТекНоменклатура));
						Если мсв.Количество() > 0 Тогда
							Для Каждого Эл Из мсв Цикл
								Эл.Количество = 0;
							КонецЦикла;
							Продолжить;
						КонецЕсли;
						НоваяСтрокаФирма  = Объект.СоставПоФирмам.Добавить();
						НоваяСтрокаФирма.Номенклатура     = ТекСтрока.Номенклатура;
						НоваяСтрокаФирма.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
						НоваяСтрокаФирма.Склад            = ТекСтрока.Склад;                        
						НоваяСтрокаФирма.Фирма            = ЭлементСписка.Значение;
					КонецЦикла;
				Иначе	
					Фирма = ОпределитьФирму(ТекСтрока.Номенклатура);
					мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Фирма, Склад, Номенклатура", Фирма, ТекСклад, ТекНоменклатура));
					Если мсв.Количество() > 0 Тогда
						Для Каждого Эл Из мсв Цикл
							Эл.Количество = 0;
						КонецЦикла;
						Продолжить;
					КонецЕсли;
					НоваяСтрокаФирма  = Объект.СоставПоФирмам.Добавить();
					НоваяСтрокаФирма.Номенклатура     = ТекСтрока.Номенклатура;
					НоваяСтрокаФирма.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
					НоваяСтрокаФирма.Склад            = ТекСтрока.Склад;                        
					НоваяСтрокаФирма.Фирма            = Фирма;
				КонецЕсли;
				//dps- 15.05.08  147820
			КонецЕсли;
		КонецЕсли;
		// Шилов М.В. 13.02.14
		ТекСтрокаПоФирмам = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.СоставПоФирмам,СтандартнаяОбработка,Количество,,"СоставПоФирмам");
		Если ТекСтрокаПоФирмам <> Неопределено Тогда
			//ТекСтрокаПоФирмам.КоличествоРазница = ТекСтрокаПоФирмам.Количество - ТекСтрокаПоФирмам.КоличествоУчет;
			//мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка")));
			//Для каждого с из мсв Цикл
			ТекСтрокаПоФирмам.Склад = ТекСклад;
			//Если добавлена новая строка, то установим ей свой номер
			//Если ТекСтрокаПоФирмам.НомерСтроки = Объект.СоставПоФирмам.Количество() Тогда
			//	мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад",ТекСклад));
			//	СоставПоФирмам.НомерСтрокиПоСкладу = мсв.Количество();
			//КонецЕсли;
		КонецЕсли; // Шилов М.В. 13.02.14
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ПолучитьНоменклатуруГруппы(Номенклатура)
    ТаблицаНоменклатуры.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка КАК Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	СпрНоменклатура.Группа <> 1
		|	И СпрНоменклатура.Транзакционный
		|	И СпрНоменклатура.Учитываемый
		|	И СпрНоменклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|	И СпрНоменклатура.Ссылка В ИЕРАРХИИ(&Родитель)";
	Запрос.УстановитьПараметр("Родитель",Номенклатура);	
	Результат = Запрос.Выполнить();

	ТаблицаНоменклатуры.Загрузить(Результат.Выгрузить());
КонецПроцедуры

&НаКлиенте
процедура Установитьпараметры(ПодборНоменклатуры, ТекСклад, ТолькоОтрицательныеОстатки, СписокНомеклатуры)
	
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("МестоХранения", ТекСклад);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ТолькоОтрицательныеОстатки", ТолькоОтрицательныеОстатки);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", СписокНомеклатуры);
	
конецпроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	УстановитьПараметры(ПодборНоменклатуры, ТекСклад, Объект.ТолькоОтрицательныеОстатки, СписокНомеклатуры);
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервереБезКонтекста
Функция получитьНастройкуПодбора(Ссылка, ИмяФормы)
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Ссылка.Метаданные().Имя, ИмяФормы);
конецфункции

&НаКлиенте
Процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора(Объект.Ссылка, ЭтаФорма.ИмяФормы);
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если ОбщегоНазначенияСервер.ВГрафикеИнвентаризацийЕстьГруппы(Объект.ДокОснование) Тогда
		Сообщить("Документ создан на основании Графика Инвентаризаций. Добавлять строки запрещено." );
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры
//Конец Процедуры и функции для организации подбора

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "BarCodeScaner" И Событие = "BarCodeValue" Тогда
		Если Не ВводДоступен() Тогда
			КомпонентаСканераШК.СобытиеОбработано();
			Возврат;   
		КонецЕсли;
		СтруктураПодбора = ПолучитьСтруктуруЗапросаПодбора();
		СтрокаТЧ = РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВДокументах(ЭтаФорма,Объект,Элементы.Состав,Данные,СтруктураПодбора);
		КомпонентаСканераШК.СобытиеОбработано();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗапросаПодбора() Экспорт
	СтруктураПодбора = Новый Структура;
	СтруктураПодбора.Вставить("ТекстЗапроса",ПодборНоменклатуры.ТекстЗапроса);
	СтруктураПодбора.Вставить("Параметры",ПодборНоменклатуры.Параметры);
	Возврат СтруктураПодбора;
КонецФункции	

&НаКлиенте
Процедура ЗаполнитьЦеныЗакупки(Команда)
	
	ПолучитьЦеныЗакупки();
	ПолучитьСебестоимость();//для тех товаров, по которым не смогли определить цену закупки, хотя и здесь шансов не много
	//popn+
	ПолучитьЦеныПоставщика();//если уж даже 2 предыдущих процедуры не заполнили цены - то попытаемся их взять из цен номенклатуры контрагента
	Элементы.СоставПоФирмам.Обновить();
	//popn-
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЦеныЗакупки()
	
	тз=Объект.СоставПоФирмам.Выгрузить();
	тзФирмы = Объект.СоставПоФирмам.Выгрузить();
	тзФирмы.Свернуть("Фирма","");
	мсвфирмы = тзФирмы.ВыгрузитьКолонку("Фирма");
	Если мсвфирмы.Количество() = 1 Тогда
		тз2 = РаботаСФормамиСервер.ПолучитьЦеныЗакупки(тз,Объект.Дата,мсвфирмы[0],Объект.СтруктурнаяЕдиница);
		мсв=Новый Массив();
		Для каждого с из Объект.СоставПоФирмам цикл
			мсв = тз2.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",с.Номенклатура,с.ЕдиницаИзмерения));
			Если мсв.Количество() > 0 Тогда
				с_тз2 = мсв[0];
				//Если с.Количество > с.КоличествоУчет Тогда
				с.ЦенаИзлишка    = с_тз2.Цена;
				с.ЦенаИзлишкаУпр = с_тз2.ЦенаУпр;
				//Иначе
				//	с.ЦенаИзлишка    = 0;
				//	с.ЦенаИзлишкаУпр = 0;
				//КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	Иначе
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	Состав.Номенклатура,
		|	Состав.ЕдиницаИзмерения,
		|	Состав.Фирма
		|ПОМЕСТИТЬ Состав
		|ИЗ
		|	&Состав КАК Состав";
        Запрос.УстановитьПараметр("Состав",тз);
		Запрос.Выполнить();
		
		Для каждого эл из мсвФирмы Цикл
			Запрос.Текст="
			|ВЫБРАТЬ
			|	Состав.Номенклатура,
			|	Состав.ЕдиницаИзмерения
			|ИЗ
			|	Состав КАК Состав
			|ГДЕ
			| Состав.Фирма = &Фирма";
			Запрос.УстановитьПараметр("Фирма",эл);
			тз1 =  Запрос.Выполнить().Выгрузить();
			
			тз2 = РаботаСФормамиСервер.ПолучитьЦеныЗакупки(тз1,Объект.Дата,эл,Объект.СтруктурнаяЕдиница);
			мсв=Новый Массив();
			
			мсвСтрокиПоФирме = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Фирма",эл));
			
			Для каждого с из мсвСтрокиПоФирме цикл
				мсв = тз2.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",с.Номенклатура,с.ЕдиницаИзмерения));
				Если мсв.Количество() > 0 Тогда
					с_тз2 = мсв[0];
					//Если с.Количество > с.КоличествоУчет Тогда
					с.ЦенаИзлишка    = с_тз2.Цена;
					с.ЦенаИзлишкаУпр = с_тз2.ЦенаУпр;
					//Иначе
					//	с.ЦенаИзлишка    = 0;
					//	с.ЦенаИзлишкаУпр = 0;
					//КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСебестоимость()

	Запрос = Новый Запрос;
	Запрос.Текст=
		"ВЫБРАТЬ
		|	Состав.НомерСтроки,
		|	Состав.Номенклатура,
		|	Состав.ЕдиницаИзмерения,
		|	Состав.ЦенаИзлишка,
		|	Состав.ЦенаИзлишкаУпр,
		|	Состав.Склад,
		|	Состав.Фирма
		|ПОМЕСТИТЬ Состав
		|ИЗ
		|	&Состав КАК Состав
		|ГДЕ
		|	(Состав.ЦенаИзлишка = 0
		|			ИЛИ Состав.ЦенаИзлишкаУпр = 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Состав.НомерСтроки,
		|	ВЫБОР
		|		КОГДА Состав.ЦенаИзлишка = 0
		|			ТОГДА ОстаткиНоменклатурыОстатки.СуммаОстаток / ОстаткиНоменклатурыОстатки.КоличествоОстаток * ЕдиницыИзмерения.Коэффициент
		|		ИНАЧЕ Состав.ЦенаИзлишка
		|	КОНЕЦ КАК ЦенаИзлишка,
		|	ВЫБОР
		|		КОГДА Состав.ЦенаИзлишкаУпр = 0
		|			ТОГДА ОстаткиНоменклатурыОстатки.СуммаУпрОстаток / ОстаткиНоменклатурыОстатки.КоличествоОстаток * ЕдиницыИзмерения.Коэффициент
		|		ИНАЧЕ Состав.ЦенаИзлишкаУпр
		|	КОНЕЦ КАК ЦенаИзлишкаУпр
		|ИЗ
		|	Состав КАК Состав
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&Период,
		|				(Номенклатура, МестоХранения, Фирма) В
		|					(ВЫБРАТЬ
		|						Состав.Номенклатура,
		|						Состав.Склад,
		|						Состав.Фирма
		|					ИЗ
		|						Состав КАК Состав)) КАК ОстаткиНоменклатурыОстатки
		|		ПО Состав.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|			И Состав.Склад = ОстаткиНоменклатурыОстатки.МестоХранения
		|			И Состав.Фирма = ОстаткиНоменклатурыОстатки.Фирма
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|		ПО Состав.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток <> 0
		|	И (ОстаткиНоменклатурыОстатки.СуммаОстаток <> 0
		|			ИЛИ ОстаткиНоменклатурыОстатки.СуммаУпрОстаток <> 0)";
	Запрос.УстановитьПараметр("Состав", Объект.СоставПоФирмам.Выгрузить());
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		//сСоставПоФирмам = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("НомерСтроки", Выборка.НомерСтроки))[0];
		сСоставПоФирмам = Объект.СоставПоФирмам[Выборка.НомерСтроки-1];
		//Если сСоставПоФирмам.Количество > сСоставПоФирмам.КоличествоУчет Тогда
		сСоставПоФирмам.ЦенаИзлишка    = Выборка.ЦенаИзлишка;
		сСоставПоФирмам.ЦенаИзлишкаУпр = Выборка.ЦенаИзлишкаУпр;
		//Иначе
		//	сСоставПоФирмам.ЦенаИзлишка    = 0;
		//	сСоставПоФирмам.ЦенаИзлишкаУпр = 0;
		//КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЦеныПоставщика()

	Запрос = Новый Запрос;
	Запрос.Текст=
		"ВЫБРАТЬ
		|	Состав.НомерСтроки,
		|	Состав.Номенклатура,
		|	Состав.ЕдиницаИзмерения,
		|	Состав.ЦенаИзлишка,
		|	Состав.ЦенаИзлишкаУпр,
		|	Состав.Склад,
		|	Состав.Фирма
		|ПОМЕСТИТЬ Состав
		|ИЗ
		|	&Состав КАК Состав
		|ГДЕ
		|	(Состав.ЦенаИзлишка = 0
		|			ИЛИ Состав.ЦенаИзлишкаУпр = 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Состав.НомерСтроки,
		|	ВЫБОР
		|		КОГДА Состав.ЦенаИзлишка = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
		|						ТОГДА НоменклатураКонтрагента.Цена
		|					ИНАЧЕ НоменклатураКонтрагента.Цена * (100 + НоменклатураКонтрагента.Номенклатура.СтавкаНДС.Ставка) / 100
		|				КОНЕЦ
		|		ИНАЧЕ Состав.ЦенаИзлишка
		|	КОНЕЦ КАК ЦенаИзлишка,
		|	ВЫБОР
		|		КОГДА Состав.ЦенаИзлишкаУпр = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВключатьНДСВЦеныКонтрагентов.Значение = ИСТИНА
		|						ТОГДА НоменклатураКонтрагента.Цена
		|					ИНАЧЕ НоменклатураКонтрагента.Цена * (100 + НоменклатураКонтрагента.Номенклатура.СтавкаНДС.Ставка) / 100
		|				КОНЕЦ
		|		ИНАЧЕ Состав.ЦенаИзлишкаУпр
		|	КОНЕЦ КАК ЦенаИзлишкаУпр
		|ИЗ
		|	Состав КАК Состав
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|		ПО Состав.Номенклатура = НоменклатураКонтрагента.Номенклатура
		|			И (НоменклатураКонтрагента.ОсновнойПоставщик),
		|	Константа.ВключатьНДСВЦеныКонтрагентов КАК ВключатьНДСВЦеныКонтрагентов";
		
	Запрос.УстановитьПараметр("Состав", Объект.СоставПоФирмам.Выгрузить());
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		//сСоставПоФирмам = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("НомерСтроки", Выборка.НомерСтроки))[0];
		сСоставПоФирмам = Объект.СоставПоФирмам[Выборка.НомерСтроки-1];
		//Если сСоставПоФирмам.Количество > сСоставПоФирмам.КоличествоУчет Тогда
		сСоставПоФирмам.ЦенаИзлишка    = Выборка.ЦенаИзлишка;
		сСоставПоФирмам.ЦенаИзлишкаУпр = Выборка.ЦенаИзлишкаУпр;
		//Иначе
		//	сСоставПоФирмам.ЦенаИзлишка    = 0;
		//	сСоставПоФирмам.ЦенаИзлишкаУпр = 0;
		//КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстатки(Команда)
	//стрВопрос = "Установить значение фактического количества равное учетному количеству?";
	//ОбновитьОстаткиСервер(Истина,Вопрос(стрВопрос,РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да);
	ОбновитьОстаткиСервер(Истина,Ложь);
	Элементы.Состав.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОбновитьОстаткиСервер(флОбновления,флПерезаполнятьФакт, флТолькоОтрицательныеОстатки = Ложь)
	
	//++БИТ БВО Удаление лишних строк 	
	Объект.СоставПоФирмам.Очистить();
	//--БИТ БВО			
	
	ОтборПоГруппам = Объект.ГруппыНоменклатуры.Количество()>0;
	Запрос = Новый Запрос;
	РежимРевизор = ПравоИзменения();   //dps+  15.05.08 147820 тут и далее с этой переменной
	Если флОбновления Тогда		
		Текст = 
		"ВЫБРАТЬ
		|	врСостав.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ втНоменклатура
		|ИЗ
		|	&врСостав КАК врСостав
		|;
		|ВЫБРАТЬ
		|	Организации.Ссылка КАК Фирма
		|ПОМЕСТИТЬ втФирмы
		|ИЗ
		|	Справочник.Организации КАК Организации"+?(РежимРевизор,"
		|ГДЕ
		|	Организации.Ссылка В(&Фирмы)","")+"
		|;
		|ВЫБРАТЬ
		|	Склады.Ссылка КАК Склад
		|ПОМЕСТИТЬ втСклады
		|ИЗ
		|	Справочник.Склады КАК Склады"+?(РежимРевизор,"
		|ГДЕ
		|	Склады.Ссылка В(&Склады)","")+"
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.МестоХранения КАК МестоХранения,
		|	ОстаткиНоменклатурыОстатки.Фирма,
		//++БИТ БВО №0000129900
		|	ОстаткиНоменклатурыОстатки.Статус,
		|	ВЫБОР КОГДА ОстаткиНоменклатурыОстатки.Статус = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
		|		ТОГДА 1
		|	КОГДА ОстаткиНоменклатурыОстатки.Статус = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
		|		ТОГДА 2
		| 	ИНАЧЕ 3
		|	КОНЕЦ КАК ПорядокСортировкиПоСтатусу
		//--БИТ БВО №0000129900
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&Дата,
		|			Номенклатура В
		|					(ВЫБРАТЬ
		|						с.Номенклатура
		|					ИЗ втНоменклатура КАК с)"+?(РежимРевизор," И МестоХранения В (&Склады) И Фирма В (&Фирмы)","")+") КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток <> 0
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
	    |    втСклады.Склад,
	    |    втФирмы.Фирма,
	    |    втНоменклатура.Номенклатура
		|ПОМЕСТИТЬ втФирмыСкладыНоменклатура
        |ИЗ
	    |    втФирмы КАК втФирмы,
	    |    втСклады КАК втСклады,
	    |    втНоменклатура КАК втНоменклатура
		|СГРУППИРОВАТЬ ПО
		|    втСклады.Склад,
	    |    втФирмы.Фирма,
	    |    втНоменклатура.Номенклатура
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втФирмыСкладыНоменклатура.Склад КАК Склад,
		|	втФирмыСкладыНоменклатура.Фирма КАК Фирма,
		//++БИТ БВО №0000129900
		|	втОстатки.Статус КАК Статус,
		|	втОстатки.ПорядокСортировкиПоСтатусу КАК ПорядокСортировкиПоСтатусу,
		//--БИТ БВО №0000129900
		|	втФирмыСкладыНоменклатура.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(втОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	втФирмыСкладыНоменклатура КАК втФирмыСкладыНоменклатура
		|"+?(РежимРевизор,"ЛЕВОЕ","ВНУТРЕННЕЕ")+"  СОЕДИНЕНИЕ втОстатки КАК втОстатки       
		|		ПО (втФирмыСкладыНоменклатура.Склад = втОстатки.МестоХранения)
		|           И (втФирмыСкладыНоменклатура.Фирма = втОстатки.Фирма)
		|           И (втФирмыСкладыНоменклатура.Номенклатура = втОстатки.Номенклатура)
		//++БИТ БВО 2015-10-13 должны попадать только позиции с остатком
		|ГДЕ
		|	втОстатки.КоличествоОстаток <> 0
		//--БИТ БВО 2015-10-13 должны попадать только позиции с остатком
		//++БИТ БВО №0000129900
		|УПОРЯДОЧИТЬ ПО		
		|	Склад,
		|	Номенклатура,
		|	Фирма,
		|	втОстатки.ПорядокСортировкиПоСтатусу ВОЗР
		//--БИТ БВО №0000129900
		|ИТОГИ
		|	СУММА(КоличествоОстаток)
		|ПО
		|	Склад,
		|	Номенклатура";
						
		Запрос.УстановитьПараметр("врСостав",Объект.Состав.Выгрузить());	
	Иначе
		//ШиловМВ 04.07.14 №000120276++
		Текст = 
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ПОМЕСТИТЬ втФирмы
		|ИЗ
		|	Справочник.Организации КАК Организации"+?(РежимРевизор,"
		|ГДЕ
		|	Организации.Ссылка В(&Фирмы)","")+"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.МестоХранения КАК МестоХранения,
		|	ОстаткиНоменклатурыОстатки.Фирма,
		//++БИТ БВО №0000129900
		|	ОстаткиНоменклатурыОстатки.Статус,
		|	ВЫБОР КОГДА ОстаткиНоменклатурыОстатки.Статус = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
		|		ТОГДА 1
		|	КОГДА ОстаткиНоменклатурыОстатки.Статус = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
		|		ТОГДА 2
		| 	ИНАЧЕ 3
		|	КОНЕЦ КАК ПорядокСортировкиПоСтатусу
		//--БИТ БВО №0000129900
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&Дата,"+?(РежимРевизор,"
		|			МестоХранения В (&Склады)
		|				И Фирма В (&Фирмы)","")+"        
		|		"+?(ОтборПоГруппам,?(РежимРевизор,"И ","")+"НОМЕНКЛАТУРА В ИЕРАРХИИ(&МассивГрупп)","")+") КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОстатки.Номенклатура КАК Номенклатура,
		|	СУММА(ВЫБОР
		|			КОГДА втОстатки.Фирма = втФирмы.Ссылка
		|				ТОГДА втОстатки.КоличествоОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоОстаток,
		|	втОстатки.МестоХранения КАК Склад,
		//++БИТ БВО №0000129900
		|	втОстатки.Статус КАК Статус,
		|	втОстатки.ПорядокСортировкиПоСтатусу КАК ПорядокСортировкиПоСтатусу,
		//--БИТ БВО №0000129900
		|	втФирмы.Ссылка КАК Фирма
		|ИЗ
		|	втФирмы КАК втФирмы
		|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки"+?(РежимРевизор,"
		|		ПО (ИСТИНА)","
		|		ПО втФирмы.Ссылка = втОстатки.Фирма");    

		
		Текст = Текст + "
		|	ГДЕ
		|		НЕ втОстатки.Номенклатура ЕСТЬ NULL";
		
		Если флТолькоОтрицательныеОстатки Тогда	
			Текст = Текст + "
			|	И втОстатки.КоличествоОстаток < 0";
		//++БИТ БВО 2015-10-13 должны попадать только позиции с остатком
		Иначе
			Текст = Текст + "
			|	И втОстатки.КоличествоОстаток <> 0";
		КонецЕсли;
		//--БИТ БВО 2015-10-13 должны попадать только позиции с остатком
		
		Текст = Текст + "
		|СГРУППИРОВАТЬ ПО
		|	втОстатки.Номенклатура,
		|	втОстатки.МестоХранения,
		|	втФирмы.Ссылка,
		//++БИТ БВО №0000129900
		|	втОстатки.Статус,
		|	втОстатки.ПорядокСортировкиПоСтатусу
		|УПОРЯДОЧИТЬ ПО		
		|	Склад,
		|	Номенклатура,
		|	Фирма,
		|	втОстатки.ПорядокСортировкиПоСтатусу ВОЗР
		//--БИТ БВО №0000129900
		|ИТОГИ
		|	СУММА(КоличествоОстаток)
		|ПО
		|	Склад,
		|	Номенклатура";		
		//ШиловМВ 04.07.14 №000120276--
	КонецЕсли;
	
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Дата",?(Не ЗначениеЗаполнено(Параметры.Ключ),ТекущаяДата(),Объект.Дата));   //++Минин 0000126747 15-05-13 если документ новый до срез по остаткам на текущую дату.
	Запрос.УстановитьПараметр("Склады",сзСклады);
	Запрос.УстановитьПараметр("Фирмы",сзФирмы);
	Если ОтборПоГруппам Тогда
		МассивГрупп = Новый Массив;
		Для Каждого СтрокаДФ из Объект.ГруппыНоменклатуры Цикл
			МассивГрупп.Добавить(СтрокаДФ.ГруппаНоменклатуры);
		КонецЦикла;
		Запрос.УстановитьПараметр("МассивГрупп",МассивГрупп);
	КонецЕсли;
	ВыборкаСклад = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСклад.Следующий() Цикл
		чНомерСтроки = 1;
		ВыборкаНоменклатура = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			Если флОбновления Тогда
				//++БИТ БВО №0000129900
				мсв=Объект.Состав.НайтиСтроки(Новый Структура("Номенклатура,Склад",ВыборкаНоменклатура.Номенклатура,ВыборкаНоменклатура.Склад));
				//мсв=Объект.Состав.НайтиСтроки(Новый Структура("Номенклатура,Склад,ТипРеализацииТовара",ВыборкаНоменклатура.Номенклатура,ВыборкаНоменклатура.Склад,ВыборкаСтатусы.Статус));
				//--БИТ БВО №0000129900					
				Если мсв.Количество()>0 Тогда
					СтрокаСостава = мсв[0];					
					СтрокаСостава.КоличествоУчет = ВыборкаНоменклатура.КоличествоОстаток;												
					Если флПерезаполнятьФакт Тогда							
						СтрокаСостава.Количество = ВыборкаНоменклатура.КоличествоОстаток;														
					КонецЕсли;																																			
				КонецЕсли;
			Иначе
				СтрокаСостава = Объект.Состав.Добавить();
				СтрокаСостава.НомерСтрокиПоСкладу = чНомерСтроки;
				СтрокаСостава.Номенклатура        = ВыборкаНоменклатура.Номенклатура;
				СтрокаСостава.Склад               = ВыборкаНоменклатура.Склад;
				СтрокаСостава.ЕдиницаИзмерения    = ОбработкаТабличныхЧастейСервер.ПолучитьЕдиницуИзмеренияНоменклатурыПоУмолчанию(ВыборкаНоменклатура.Номенклатура,Ложь);
				//++БИТ БВО №0000129900
				СтрокаСостава.КоличествоУчет      = ВыборкаНоменклатура.КоличествоОстаток;
				Если флПерезаполнятьФакт Тогда						
					СтрокаСостава.Количество      = ВыборкаНоменклатура.КоличествоОстаток;												
				КонецЕсли;					
				//СтрокаСостава.КоличествоУчет      = ВыборкаСтатусы.КоличествоОстаток;					
				//Если флПерезаполнятьФакт Тогда						
				//	СтрокаСостава.Количество      = ВыборкаСтатусы.КоличествоОстаток;						
				//КонецЕсли;										
				//СтрокаСостава.ТипРеализацииТовара = ВыборкаСтатусы.Статус;
				//--БИТ БВО №0000129900
				чНомерСтроки = чНомерСтроки + 1;
			КонецЕсли;	
			
			Если СтрокаСостава = Неопределено Тогда
				Продолжить;
			КонецЕсли;
					
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();			
			Пока ВыборкаДетальные.Следующий() Цикл
				//++БИТ БВО №0000129900
				//мсв1=Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Номенклатура,Склад,Фирма",ВыборкаНоменклатура.Номенклатура,ВыборкаНоменклатура.Склад,ВыборкаФирмы.Фирма));
				мсв1=Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Номенклатура,Склад,Фирма,ТипРеализацииТовара",ВыборкаНоменклатура.Номенклатура,ВыборкаНоменклатура.Склад,ВыборкаДетальные.Фирма,ВыборкаДетальные.Статус));
				//--БИТ БВО №0000129900
				Если мсв1.Количество()>0 Тогда
					мсв1[0].КоличествоУчет = ВыборкаДетальные.КоличествоОстаток;
					Если флПерезаполнятьФакт Тогда
						мсв1[0].Количество = ВыборкаДетальные.КоличествоОстаток;
					КонецЕсли;	
				Иначе
					//добавим строку с фирмой
					с_СоставПоФирмам = Объект.СоставПоФирмам.Добавить();
					с_СоставПоФирмам.Номенклатура     = ВыборкаНоменклатура.Номенклатура;
					с_СоставПоФирмам.ЕдиницаИзмерения = СтрокаСостава.ЕдиницаИзмерения;
					с_СоставПоФирмам.КоличествоУчет   = ВыборкаДетальные.КоличествоОстаток;
					Если флПерезаполнятьФакт Тогда
						с_СоставПоФирмам.Количество   = ВыборкаДетальные.КоличествоОстаток;
					КонецЕсли;	
					с_СоставПоФирмам.Склад            = ВыборкаНоменклатура.Склад;
					с_СоставПоФирмам.Фирма            = ВыборкаДетальные.Фирма;
					//++БИТ БВО №0000129900
					с_СоставПоФирмам.ТипРеализацииТовара = ВыборкаДетальные.Статус;
					//--БИТ БВО №0000129900
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;	
	КонецЦикла;	 		
	//пересчет КоличествоРазница
	Для каждого СтрокаСостава Из Объект.Состав Цикл		
		//++БИТ БВО - Теперь СоставПоФирмам очищается, можно не обращать внимания на этот флаг
		////popn+
		//Если флПерезаполнятьФакт Тогда
		//--БИТ БВО
			//++БИТ БВО №0000129900
			//мНайденныеСтроки = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад, Номенклатура", СтрокаСостава.Склад, СтрокаСостава.Номенклатура));
			Если ЗначениеЗаполнено(СтрокаСостава.ТипРеализацииТовара) Тогда
				мНайденныеСтроки = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад, Номенклатура, ТипРеализацииТовара", СтрокаСостава.Склад, СтрокаСостава.Номенклатура, СтрокаСостава.ТипРеализацииТовара));
			Иначе
				мНайденныеСтроки = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад, Номенклатура", СтрокаСостава.Склад, СтрокаСостава.Номенклатура));
			КонецЕсли;
			//--БИТ БВО №0000129900
			Если мНайденныеСтроки.Количество() > 0 Тогда
				ОбработкаТабличныхЧастейКлиентСервер.РаспределитьКоличествоПоСтрокам(мНайденныеСтроки, Объект.МетодРазнесенияКоличества, СтрокаСостава.Количество);
			КонецЕсли; 
			ОбработкаТабличныхЧастейКлиентСервер.РаспределитьКоличествоПоСтрокам(мНайденныеСтроки, Объект.МетодРазнесенияКоличества, СтрокаСостава.Количество);
		//++БИТ БВО - Теперь СоставПоФирмам очищается, можно не обращать внимания на этот флаг
		//КонецЕсли;		
		////popn-
		//--БИТ БВО
		СтрокаСостава.КоличествоРазница = СтрокаСостава.Количество - СтрокаСостава.КоличествоУчет;
	КонецЦикла; 
сзСклады = ЗаполнитьСписокСкладов();
Если сзСклады.Количество() > 0 Тогда
	текСклад = сзСклады[0].Значение;
КонецЕсли;	
СформироватьСтраницыПоСкладам();
КонецПроцедуры	

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаКлиенте
Процедура УбратьГруппыИзПодбора(Команда)
	выполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,ВидСравненияКомпоновкиДанных.Равно)");
КонецПроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Задача = ЭтаФорма.Параметры.ВыполняемаяЗадача;
	Если ЗначениеЗаполнено(Задача) Тогда
		УправлениеБизнесПроцессамиСервер.ВыполнитьЗадачу(Задача);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекСклад(УсловиеНаКоличествоСкладов=1)
	
	УстановитьПараметры(ПодборНоменклатуры, ТекСклад, Объект.ТолькоОтрицательныеОстатки, СписокНомеклатуры);
	//popn+
	Если сзСклады.Количество() > УсловиеНаКоличествоСкладов Тогда
		Элементы.Состав.ОтборСтрок= Новый ФиксированнаяСтруктура("Склад",текСклад);
		Элементы.Пересортица.ОтборСтрок= Новый ФиксированнаяСтруктура("Склад",текСклад);	
		Элементы.СоставПоФирмам.ОтборСтрок= Новый ФиксированнаяСтруктура("Склад",текСклад);
		Элементы.ПересортицаПоФирмам.ОтборСтрок= Новый ФиксированнаяСтруктура("Склад",текСклад);
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьСтраницыПоСкладам()
	
	//удалим кнопки
	
	чКол = Элементы.ГруппаКоманднаяПанельСклады.ПодчиненныеЭлементы.Количество();
	Если чКол >  0 Тогда
		Для сч=1 По чКол Цикл
			Элементы.Удалить(Элементы["КнопкаСклад"+сч]);
			Команды.Удалить(Команды["Склад"+сч]);
		КонецЦикла;
	КонецЕсли;	
	
	сч=1;
	Для каждого эл из сзСклады Цикл
		Э = Элементы.Вставить("КнопкаСклад"+Сч,Тип("КнопкаФормы"),Элементы.ГруппаКоманднаяПанельСклады);
		Э.Заголовок = эл.Значение.Наименование;
		Э.Видимость = Истина;
		Команда = ЭтаФорма.Команды.Добавить("Склад"+сч);
		Команда.Действие = "Команда1";
		Э.ИмяКоманды = "Склад"+сч;
		Если ТекСклад = эл.Значение Тогда
			Э.Пометка = истина;
		Иначе
			Э.Пометка= ложь;
		КонецЕсли;
		сч=сч+1;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Функция ЗаполнитьСписокСкладов()
	
	сз = новый СписокЗначений;
	тз=объект.Состав.Выгрузить(,"Склад");
	тз.Свернуть("Склад","");
	
	Для каждого стр из тз Цикл
		сз.Добавить(стр.Склад);
	КонецЦикла;	
	
	Возврат сз;
	
КонецФункции	

//popn+
Функция ЗаполнитьСписокФирм()
	
	сз = новый СписокЗначений;
	тз=объект.СоставПоФирмам.Выгрузить(,"Фирма");
	тз.Свернуть("Фирма","");
	
	Для каждого стр из тз Цикл
		сз.Добавить(стр.Фирма);
	КонецЦикла;	
	
	Возврат сз;
	
КонецФункции
//popn-

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Задача = ЭтаФорма.Параметры.ВыполняемаяЗадача;
	Если ЗначениеЗаполнено(Задача) Тогда
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Задача,"Выполнена") Тогда
			Оповестить("ЗадачаВыполнена");
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	чНомер =  Число(Прав(Команда.Имя,1));
	ОпределитьТекущийСкладПоНомеру(чНомер);
	УстановитьТекСклад();
	Для каждого эл из Элементы.ГруппаКоманднаяПанельСклады.ПодчиненныеЭлементы Цикл
		эл.Пометка = Ложь;
	КонецЦикла;	
	Элементы["КнопкаСклад"+чНомер].Пометка=Истина;
	
	
	Если Элементы.Состав.ТекущиеДанные = Неопределено Тогда
		
		мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ТекСклад));
		Если мсв.Количество() > 0 Тогда
			Элементы.Состав.ТекущаяСтрока = Объект.Состав.Индекс(мсв[0]);
		КонецЕСли;	
		
	КонецЕсли;	
	Если Элементы.Состав.ТекущиеДанные <> Неопределено Тогда
		//++БИТ БВО №0000129900	
		//УстановитьОтборПоНоменклатуреВСоставПоФирмам(Элементы.Состав.ТекущиеДанные.Номенклатура);
		УстановитьОтборПоНоменклатуреВСоставПоФирмам(Элементы.Состав.ТекущиеДанные.Номенклатура, Элементы.Состав.ТекущиеДанные.ТипРеализацииТовара);
		//--БИТ БВО №0000129900	
	КонецЕСли;	

КонецПроцедуры

&НаСервере
Процедура ОпределитьТекущийСкладПоНомеру(чНомер)
	
	ТекСклад = сзСклады[чНомер-1].Значение;
	
	
КонецПроцедуры	

&НаКлиенте
Процедура НастройкаСкладов(Команда)
	
	сз = ПолучитьСписокСкладовСтруктурнойЕдиницы(Объект.СтруктурнаяЕдиница);
	Для каждого эл из сзСклады Цикл
		эл_сз = сз.НайтиПоЗначению(эл.Значение);
		Если эл_сз <> Неопределено Тогда
			эл_сз.Пометка = Истина;
		КонецЕсли;	
	КонецЦикла;	
	
	Если сз.ОтметитьЭлементы() Тогда
		Для каждого эл_сз из сз Цикл
			
			эл_сзСклады = сзСклады.НайтиПоЗначению(эл_сз.Значение);
			
			Если  эл_сзСклады = Неопределено Тогда 
				Если  эл_сз.Пометка Тогда
					
					сзСклады.Добавить(эл_сз.Значение);
					
				КонецЕсли;
			Иначе
				
				Если НЕ  эл_сз.Пометка Тогда
					
					сзСклады.Удалить(эл_сзСклады);
					мсв=Объект.Состав.НайтиСтроки(Новый Структура("Склад",эл_сзСклады.Значение));
					Для каждого эл из мсв Цикл
						Объект.Состав.Удалить(эл);
					КонецЦикла;	
					мсв=Объект.Пересортица.НайтиСтроки(Новый Структура("Склад",эл_сзСклады.Значение));
					Для каждого эл из мсв Цикл
						Объект.Пересортица.Удалить(эл);
					КонецЦикла;
					мсв=Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад",эл_сзСклады.Значение));
					Для каждого эл из мсв Цикл
						Объект.СоставПоФирмам.Удалить(эл);
					КонецЦикла;
					мсв=Объект.ПересортицаПоФирмам.НайтиСтроки(Новый Структура("Склад",эл_сзСклады.Значение));
					Для каждого эл из мсв Цикл
						Объект.ПересортицаПоФирмам.Удалить(эл);
					КонецЦикла;

					
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
		
		Если НЕ ЗначениеЗаполнено(ТекСклад) Тогда
			
			Если сзСклады.Количество()>0 Тогда
				ТекСклад = сзСклады[0].Значение;
			КонецЕсли;
			
		Иначе
			
			Если сзСклады.НайтиПоЗначению(ТекСклад)=Неопределено Тогда
				Если сзСклады.Количество()>0 Тогда
					ТекСклад = сзСклады[0].Значение;
					
				Иначе
					ТекСклад = "";
				КонецЕсли;	
				
			КонецЕсли;	
				
		КонецЕсли;	
		СформироватьСтраницыПоСкладам();
		УстановитьТекСклад();
		УстановитьВидимость();
	Иначе
		Возврат;
	КонецЕсли;	
	

	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокСкладовСтруктурнойЕдиницы(се)
	
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Склады.Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Владелец = &Владелец
	|	И (НЕ Склады.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склады.Наименование");
	Запрос.УстановитьПараметр("Владелец",се);
	сз = Новый СписокЗначений;
	сз.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	Возврат сз;
	
КонецФункции	

&НаКлиенте
Процедура СоставПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Состав.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	//++БИТ БВО №0000129900	
	УстановитьОтборПоНоменклатуреВСоставПоФирмам(Элементы.Состав.ТекущиеДанные.Номенклатура);
	//УстановитьОтборПоНоменклатуреВСоставПоФирмам(Элементы.Состав.ТекущиеДанные.Номенклатура, Элементы.Состав.ТекущиеДанные.ТипРеализацииТовара);
	//--БИТ БВО №0000129900	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоНоменклатуреВСоставПоФирмам(текНоменклатура, текСтатус = Неопределено)
	
	//++БИТ БВО №0000129900	
	//Элементы.СоставПоФирмам.ОтборСтрок = Новый ФиксированнаяСтруктура("Склад,Номенклатура",текСклад,текНоменклатура);
	Если текСтатус = Неопределено Тогда
		Элементы.СоставПоФирмам.ОтборСтрок = Новый ФиксированнаяСтруктура("Склад,Номенклатура",текСклад,текНоменклатура);
	Иначе
		Элементы.СоставПоФирмам.ОтборСтрок = Новый ФиксированнаяСтруктура("Склад,Номенклатура,ТипРеализацииТовара",текСклад,текНоменклатура,текСтатус);
	КонецЕсли;
	//--БИТ БВО №0000129900
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоПересортицеВПересортицеПоФирмам(текНоменклатура1, текНоменклатура2)
	
	Элементы.ПересортицаПоФирмам.ОтборСтрок = Новый ФиксированнаяСтруктура("Склад, Номенклатура1, Номенклатура2", текСклад, текНоменклатура1, текНоменклатура2);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьТекСклад();
    УстановитьВидимость();
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаКлиенте
Процедура СоставПоФирмамПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда					
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПоФирмамПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
		Если Не ТекущиеДанные = Неопределено Тогда					
			Элемент.Текущиеданные.Номенклатура = ТекущиеДанные.Номенклатура;
			Элемент.Текущиеданные.ЕдиницаИзмерения = ТекущиеДанные.ЕдиницаИзмерения;
			Элемент.Текущиеданные.Склад = ТекущиеДанные.Склад;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МетодРазнесенияКоличестваПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииМетодаРазнесенияКоличества(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПоФирмамКоличествоПриИзменении(Элемент)
	ТекСтрока = Элементы.СоставПоФирмам.ТекущиеДанные;
	//++БИТ БВО №0000129900	
	//ОбновитьКоличествоСоставаНаСервере(ТекСтрока.Склад,ТекСтрока.Номенклатура);	
	ОбновитьКоличествоСоставаНаСервере(ТекСтрока.Склад,ТекСтрока.Номенклатура,ТекСтрока.ТипРеализацииТовара);	
	//--БИТ БВО №0000129900	
	Элементы.Состав.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоСоставаНаСервере(Склад,Номенклатура, Статус = Неопределено)
	
	//++БИТ БВО №0000129900	
	//мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура",Склад,Номенклатура));
	Если ЗначениеЗаполнено(Статус) Тогда
		мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура,ТипРеализацииТовара",Склад,Номенклатура,Статус));
	Иначе
		мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура",Склад,Номенклатура));
	КонецЕсли;
	//--БИТ БВО №0000129900	
	чКолВсего = 0;
	Для каждого Строка из мсв Цикл
		чКолВсего = чКолВсего + Строка.Количество;
	КонецЦикла;	
	
	//++БИТ БВО №0000129900	
	//мсв2 = Объект.Состав.НайтиСтроки(Новый Структура("Склад,Номенклатура",Склад,Номенклатура));
	Если ЗначениеЗаполнено(Статус) Тогда
		мсв2 = Объект.Состав.НайтиСтроки(Новый Структура("Склад,Номенклатура,ТипРеализацииТовара",Склад,Номенклатура,Статус));
	Иначе
		мсв2 = Объект.Состав.НайтиСтроки(Новый Структура("Склад,Номенклатура",Склад,Номенклатура));
	КонецЕсли;
	//--БИТ БВО №0000129900	
	Если мсв2.Количество() > 0 Тогда
		мсв2[0].Количество = чКОлВсего;
		мсв2[0].КоличествоРазница = мсв2[0].Количество - мсв2[0].КоличествоУчет;
	КонецЕсли;
	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	Если Объект.Состав.Количество() > 0 Тогда
		стрВопрос = "Табличная часть будет перезаполнена. Продолжить?";
		Если Вопрос(стрВопрос,РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Объект.Состав.Очистить();
	Объект.СоставПоФирмам.Очистить();
	Объект.Пересортица.Очистить();
	Объект.ПересортицаПоФирмам.Очистить();
	//++БИТ БВО 2015-08-20, количество в табличных частях не должно заполняться (только учетное)
	//ОбновитьОстаткиСервер(Ложь,Истина,Объект.ТолькоОтрицательныеОстатки);
	ОбновитьОстаткиСервер(Ложь,Ложь,Объект.ТолькоОтрицательныеОстатки);
	//--БИТ БВО 2015-08-20
	Элементы.Состав.ТекущаяСтрока = 0;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередУдалением(Элемент, Отказ)
	
	Если ОбщегоНазначенияСервер.ВГрафикеИнвентаризацийЕстьГруппы(Объект.ДокОснование) Тогда
		Сообщить("Документ создан на основании Графика Инвентаризаций. Удалять строки запрещено." );
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	//popn+
	//ТекСтрокаСостав = Элементы.Состав.ТекущиеДанные;
	//мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура",ТекСтрокаСостав.Склад,ТекСтрокаСостав.Номенклатура));
	//Для каждого эл из мсв Цикл
	//	Объект.СоставПоФирмам.Удалить(эл);
	//КонецЦикла;	
	
	МассивУдаляемыхСтрок = Элементы.Состав.ВыделенныеСтроки;
	Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
		ТекСтрокаСостав = Элемент.ДанныеСтроки(УдаляемаяСтрока);
		мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура",ТекСтрокаСостав.Склад,ТекСтрокаСостав.Номенклатура));
		Для каждого эл из мсв Цикл
			Объект.СоставПоФирмам.Удалить(эл);
		КонецЦикла;		
	КонецЦикла;
	//popn-
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПоФирмамПередУдалением(Элемент, Отказ)
	ТекСтрока = Элементы.СоставПоФирмам.ТекущиеДанные;
	ВремСклад = ТекСтрока.Склад;
	ВремНоменклатура = ТекСтрока.Номенклатура;
КонецПроцедуры

&НаКлиенте
Процедура СоставПоФирмамПослеУдаления(Элемент)
	
	ОбновитьКоличествоСоставаНаСервере(ВремСклад,ВремНоменклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПередНачаломИзменения(Элемент, Отказ)
	
	ТекСтрока = Элементы.Пересортица.ТекущиеДанные;
	ТекСтрока.Склад = ТекСклад;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПоФирмамПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекСтрокаПересортица = Элементы.Пересортица.ТекущиеДанные;
	ТекСтрока = Элементы.ПересортицаПоФирмам.ТекущиеДанные;
	ТекСтрока.Склад = ТекСклад;
	ТекСтрока.Номенклатура1 = ТекСтрокаПересортица.Номенклатура1;
	ТекСтрока.Номенклатура2 = ТекСтрокаПересортица.Номенклатура2;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПередУдалением(Элемент, Отказ)
	ТекСтрокаПересортица = Элементы.Пересортица.ТекущиеДанные;
	мсв = Объект.ПересортицаПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура1,Номенклатура2",ТекСтрокаПересортица.Склад,ТекСтрокаПересортица.Номенклатура1,ТекСтрокаПересортица.Номенклатура2));
	Для каждого эл из мсв Цикл
		Объект.ПересортицаПоФирмам.Удалить(эл);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СоставПослеУдаления(Элемент)
	
	мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ТекСклад));
	сч=1;
	Для каждого ТекСтрока из мсв Цикл
		
		ТекСтрока.НомерСтрокиПоСкладу = сч;
		
		сч = сч + 1;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ТекСклад));
	Если ТекСтрока.НомерСтрокиПоСкладу = мсв.Количество() Тогда
		Возврат;
	Иначе
		чИндекс = мсв.Найти(ТекСтрока);
		мсв[чИндекс+1].НомерСтрокиПоСкладу = ТекСтрока.НомерСтрокиПоСкладу;
		ТекСтрока.НомерСтрокиПоСкладу = ТекСтрока.НомерСтрокиПоСкладу + 1;
		Объект.Состав.Сдвинуть(ТекСтрока.НомерСтроки-1,мсв[чИндекс+1].НомерСтроки - ТекСтрока.НомерСтроки);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ТекСклад));
	Если ТекСтрока.НомерСтрокиПоСкладу = 1 Тогда
		Возврат;
	Иначе
		чИндекс = мсв.Найти(ТекСтрока);
		мсв[чИндекс-1].НомерСтрокиПоСкладу = ТекСтрока.НомерСтрокиПоСкладу;
		ТекСтрока.НомерСтрокиПоСкладу = ТекСтрока.НомерСтрокиПоСкладу - 1;
		Объект.Состав.Сдвинуть(ТекСтрока.НомерСтроки-1,мсв[чИндекс-1].НомерСтроки - ТекСтрока.НомерСтроки);
	КонецЕсли;	

	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = истина;
	мсв = Объект.Пересортица.НайтиСтроки(Новый Структура("Склад",ТекСклад));
	НоваяСтрока                     = Объект.Пересортица.Добавить();
	НоваяСтрока.Склад               = ТекСклад;
	НоваяСтрока.НомерСтрокиПоСкладу = мсв.Количество()+1;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересортицаНоменклатура1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Ф = ПолучитьФорму("Документ.Инвентаризация.Форма.ФормаВыбораНоменклатурыДляПересортицы",,ЭтаФорма);
	Ф.Склад              = ТекСклад;
	Ф.флНедостачиИзлишки = Истина;
	СтрокаТЗ = Ф.ОткрытьМодально();
	Если СтрокаТз <> Неопределено Тогда
		ТекСтрока = Элементы.Пересортица.ТекущиеДанные;
		ТекСтрока.Номенклатура1 = СтрокаТз.Номенклатура;
		Если ЗначениеЗаполнено(ТекСтрока.Количество) Тогда 
			ТекСтрока.Количество    = МИН(СтрокаТз.Количество,ТекСтрока.Количество);
		Иначе
			ТекСтрока.Количество    = СтрокаТз.Количество;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересортицаНоменклатура2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Ф = ПолучитьФорму("Документ.Инвентаризация.Форма.ФормаВыбораНоменклатурыДляПересортицы",,ЭтаФорма);
	Ф.Склад              = ТекСклад;
	Ф.флНедостачиИзлишки = Ложь;
	СтрокаТЗ = Ф.ОткрытьМодально();
	Если СтрокаТз <> Неопределено Тогда
		ТекСтрока = Элементы.Пересортица.ТекущиеДанные;
		ТекСтрока.Номенклатура2 = СтрокаТз.Номенклатура;
		чКолПоМодулю = МАКС(СтрокаТз.Количество,-СтрокаТз.Количество);
		Если ЗначениеЗаполнено(чКолПоМодулю) Тогда 
			ТекСтрока.Количество = МИН(чКолПоМодулю,ТекСтрока.Количество);
		Иначе
			ТекСтрока.Количество = чКолПоМодулю;
		КонецЕсли;	
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
КонецПроцедуры

&НаКлиенте
Процедура ТолькоОтрицательныеОстаткиПриИзменении(Элемент)
	УстановитьПараметры(ПодборНоменклатуры, ТекСклад, Объект.ТолькоОтрицательныеОстатки, СписокНомеклатуры);
КонецПроцедуры

&НаКлиенте
Процедура АнализРезультатов(Команда)
	
	Если Модифицированность Тогда
		Сообщить("Документ необходимо записать");
	Иначе
		СтруктураПараметров = Новый Структура("Ключ", Объект.Ссылка);
		ОткрытьФорму("Документ.Инвентаризация.Форма.ФормаАнализРезультатов", СтруктураПараметров, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИнвентаризациюПоАлкоголю(Команда)
	
	СтруктураПараметров = Новый Структура("Ключ", Объект.Ссылка);
	ОткрытьФорму("Документ.Инвентаризация.Форма.ФормаСозданияИнвентаризацииПоАлкоголю", СтруктураПараметров, ЭтаФорма);	
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоТаблицаПриИзменении(Элемент)
	Если Не Объект.ТолькоТаблица Тогда
		Предупреждение(НСтр("ru = ""При снятии флага остатки по товарам, которых нет в табличной части документа будут обнулены после проведения!""; 
		                    |en = ""When unchecked, Balances of Goods, which are missing from Document Tabular Part, will be set to null upon submittal."""),,НСтр("ru = ""Внимание""; en = ""Attention"""));	
		//{БредовЮГ 2013-09-11 Заполнение ТЧ по определенным группам товаров					
		//{БредовЮГ 2013-09-11 Заполнение ТЧ по определенным группам товаров					
		Объект.ГруппыНоменклатуры.Очистить();
	КонецЕсли;	
	Элементы.ФормаНастройкаГрупп.Доступность = Объект.ТолькоТаблица;					
КонецПроцедуры

&НаКлиенте
Процедура НайтиТоварВСпискеПоШтрихкоду(Команда)
	
	ШК = "";
	Если Не ВвестиЗначение(ШК, НСтр("ru = 'Введите штрихкод'")) Тогда
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ШК) Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура = НайтиНоменклатуруПоШКСервер(ШК);
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ОбработкаТабличныхЧастейКлиент.НайтиВТЧТовар(Номенклатура, ЭтаФорма, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиНоменклатуруПоШКСервер(ШК)

	сткДанныеПоШК = ШтриховыеКоды.ПрочитатьШтрихкод(ШК);
	мНоменклатура = сткДанныеПоШК.мНоменклатура;
	Если мНоменклатура.Количество() = 0 Тогда
		Рез = Справочники.Номенклатура.ПустаяСсылка();
	Иначе
		Рез = мНоменклатура[0];
	КонецЕсли;
	
	Возврат Рез;

КонецФункции

&НаКлиенте
Процедура СписокНомеклатурыПриИзменении(Элемент)
	УстановитьПараметры(ПодборНоменклатуры, ТекСклад, Объект.ТолькоОтрицательныеОстатки, СписокНомеклатуры);
КонецПроцедуры

//popn+
&НаКлиенте
Процедура НастройкаФирмИСкладов(Команда)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("Ключ", Объект.Ссылка);
	СтруктураПараметров.Вставить("сзСклады", сзСклады);
	СтруктураПараметров.Вставить("сзФирмы",  сзФирмы);
	Результат = ОткрытьФормуМодально("Документ.Инвентаризация.Форма.ФормаВыбораФирмИСкладов", СтруктураПараметров);
	
	Если Результат = НЕОПРЕДЕЛЕНО Тогда
		Возврат;
	КонецЕсли;
	
	сзСкладыВрем = Результат.сзСклады;
	сзФирмыВрем  = Результат.сзФирмы;
	
	Для каждого эл_сз из сзСкладыВрем Цикл
		эл_сзСклады = сзСклады.НайтиПоЗначению(эл_сз.Значение);
		Если  эл_сзСклады = Неопределено Тогда 
			Если  эл_сз.Пометка Тогда
				сзСклады.Добавить(эл_сз.Значение);
			КонецЕсли;
		Иначе
			Если НЕ эл_сз.Пометка Тогда
				сзСклады.Удалить(эл_сзСклады);
				мсв=Объект.Состав.НайтиСтроки(Новый Структура("Склад",эл_сзСклады.Значение));
				Для каждого эл из мсв Цикл
					Объект.Состав.Удалить(эл);
				КонецЦикла;	
				мсв=Объект.Пересортица.НайтиСтроки(Новый Структура("Склад",эл_сзСклады.Значение));
				Для каждого эл из мсв Цикл
					Объект.Пересортица.Удалить(эл);
				КонецЦикла;
				мсв=Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад",эл_сзСклады.Значение));
				Для каждого эл из мсв Цикл
					Объект.СоставПоФирмам.Удалить(эл);
				КонецЦикла;
				мсв=Объект.ПересортицаПоФирмам.НайтиСтроки(Новый Структура("Склад",эл_сзСклады.Значение));
				Для каждого эл из мсв Цикл
					Объект.ПересортицаПоФирмам.Удалить(эл);
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	Для каждого эл_сз из сзФирмыВрем Цикл
		эл_сзФирмы = сзФирмы.НайтиПоЗначению(эл_сз.Значение);
		Если  эл_сзФирмы = Неопределено Тогда 
			Если  эл_сз.Пометка Тогда
				сзФирмы.Добавить(эл_сз.Значение);
			КонецЕсли;
		Иначе
			Если НЕ эл_сз.Пометка Тогда
				сзФирмы.Удалить(эл_сзФирмы);
				//мсв=Объект.Состав.НайтиСтроки(Новый Структура("Фирма",эл_сзФирмы.Значение));
				//Для каждого эл из мсв Цикл
				//	Объект.Состав.Удалить(эл);
				//КонецЦикла;	
				//мсв=Объект.Пересортица.НайтиСтроки(Новый Структура("Фирма",эл_сзФирмы.Значение));
				//Для каждого эл из мсв Цикл
				//	Объект.Пересортица.Удалить(эл);
				//КонецЦикла;
				мсв=Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Фирма",эл_сзФирмы.Значение));
				Для каждого эл из мсв Цикл
					Объект.СоставПоФирмам.Удалить(эл);
					ОбновитьКоличествоСоставаПриУдаленииФирмыНаСервере(эл.Склад,эл.Номенклатура);
				КонецЦикла;

				мсв=Объект.ПересортицаПоФирмам.НайтиСтроки(Новый Структура("Фирма",эл_сзФирмы.Значение));
				Для каждого эл из мсв Цикл
					Объект.ПересортицаПоФирмам.Удалить(эл);
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;		
	
	
	Если НЕ ЗначениеЗаполнено(ТекСклад) Тогда
		Если сзСклады.Количество()>0 Тогда
			ТекСклад = сзСклады[0].Значение;
		КонецЕсли;
	Иначе
		Если сзСклады.НайтиПоЗначению(ТекСклад)=Неопределено Тогда
			Если сзСклады.Количество()>0 Тогда
				ТекСклад = сзСклады[0].Значение;
			Иначе
				ТекСклад = "";
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	СформироватьСтраницыПоСкладам();
	УстановитьТекСклад(0);
	УстановитьВидимость();
	
	СоставПриАктивизацииСтроки("");
	ПересортицаПриАктивизацииСтроки("");

КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоСоставаПриУдаленииФирмыНаСервере(Склад,Номенклатура)
	
	мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура",Склад,Номенклатура));
	чКолВсего = 0;
	Для каждого Строка из мсв Цикл
		чКолВсего = чКолВсего + Строка.Количество;
	КонецЦикла;	
	
	мсв2 = Объект.Состав.НайтиСтроки(Новый Структура("Склад,Номенклатура",Склад,Номенклатура));
	Если мсв2.Количество() > 0 Тогда
		мсв2[0].Количество     = чКОлВсего;
		//мсв2[0].КоличествоУчет = чКОлВсего;
		мсв2[0].КоличествоРазница = мсв2[0].Количество - мсв2[0].КоличествоУчет;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура СоставПоФирмамФирмаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; 
	ФормаВыбора = ПолучитьФорму("Справочник.Организации.ФормаВыбора",,Элемент);
	Отбор = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = ФормаВыбора.Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти("Ссылка").Поле;
	Отбор.Использование = Истина;
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	Отбор.ПравоеЗначение = сзФирмы;
	Отбор.Представление = "Все фирмы документа";
	ФормаВыбора.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура СоставПоФирмамФирмаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	текНоменклатура = Элементы.Состав.ТекущиеДанные.Номенклатура;
	Если Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Фирма, Склад, Номенклатура", ВыбранноеЗначение, текСклад, текНоменклатура)).Количество() = 0 Тогда
		текСтрока = Элементы.СоставПоФирмам.ТекущиеДанные;
		текСтрока.Фирма = ВыбранноеЗначение;
	Иначе
		Сообщить("В списке уже присутствует фирма "+Строка(ВыбранноеЗначение));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПоФирмамЦенаИзлишкаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.СоставПоФирмам.ТекущиеДанные;
	СтрокаТабличнойЧасти.ЦенаИзлишкаУпр = СтрокаТабличнойЧасти.ЦенаИзлишка;
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаСостав Тогда
		Элементы.СтраницыПоФирмам.ТекущаяСтраница = Элементы.ГруппаСоставПоФирмам;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПересортица Тогда
		Элементы.СтраницыПоФирмам.ТекущаяСтраница = Элементы.ГруппаПересортицаПоФирмам;
	КонецЕсли;
	Элементы.Состав.ТекущаяСтрока = 0;
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПоФирмамПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.СтраницыПоФирмам.ТекущаяСтраница = Элементы.ГруппаСоставПоФирмам Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаСостав;
	ИначеЕсли Элементы.СтраницыПоФирмам.ТекущаяСтраница = Элементы.ГруппаПересортицаПоФирмам Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПересортица;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПоФирмамФирмаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; 
	ФормаВыбора = ПолучитьФорму("Справочник.Организации.ФормаВыбора",,Элемент);
	Отбор = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = ФормаВыбора.Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти("Ссылка").Поле;
	Отбор.Использование = Истина;
	Отбор.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	Отбор.ПравоеЗначение = сзФирмы;
	Отбор.Представление = "Все фирмы документа";
	ФормаВыбора.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПоФирмамФирмаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	текНоменклатура1 = Элементы.Пересортица.ТекущиеДанные.Номенклатура1;
	текНоменклатура2 = Элементы.Пересортица.ТекущиеДанные.Номенклатура2;
	Если Объект.ПересортицаПоФирмам.НайтиСтроки(Новый Структура("Фирма, Склад, Номенклатура1, Номенклатура2", ВыбранноеЗначение, текСклад, текНоменклатура1, текНоменклатура2)).Количество() = 0 Тогда
		текСтрока = Элементы.ПересортицаПоФирмам.ТекущиеДанные;
		текСтрока.Фирма = ВыбранноеЗначение;
	Иначе
		Сообщить("В списке уже присутствует фирма "+Строка(ВыбранноеЗначение));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Пересортица.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	УстановитьОтборПоПересортицеВПересортицеПоФирмам(Элементы.Пересортица.ТекущиеДанные.Номенклатура1, Элементы.Пересортица.ТекущиеДанные.Номенклатура2);

КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекСтрокаПересортица = Элементы.Пересортица.ТекущиеДанные;
	текНоменклатура1     = ТекСтрокаПересортица.Номенклатура1;
	текНоменклатура2     = ТекСтрокаПересортица.Номенклатура2;
	
	Если текНоменклатура1.Пустая() ИЛИ текНоменклатура2.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из сзФирмы Цикл
		
		мсв = Объект.ПересортицаПоФирмам.НайтиСтроки(Новый Структура("Фирма, Склад, Номенклатура1, Номенклатура2", ЭлементСписка.Значение, ТекСклад, текНоменклатура1, текНоменклатура2));
		Если мсв.Количество() > 0 Тогда
			Для Каждого Эл Из мсв Цикл
				Эл.Количество = 0;
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаФирма  = Объект.ПересортицаПоФирмам.Добавить();
		НоваяСтрокаФирма.Номенклатура1 = текНоменклатура1;
		НоваяСтрокаФирма.Номенклатура2 = текНоменклатура2;
		НоваяСтрокаФирма.Склад         = ТекСклад;
		НоваяСтрокаФирма.Фирма         = ЭлементСписка.Значение;
		НоваяСтрокаФирма.Количество    = 0;
		
	КонецЦикла;
	
	мсвПоФирмам = Объект.ПересортицаПоФирмам.НайтиСтроки(Новый Структура("Склад, Номенклатура1, Номенклатура2", ТекСклад, текНоменклатура1, текНоменклатура2));
	Если мсвПоФирмам.Количество() > 0 Тогда
		мсвПоФирмам[0].Количество = ТекСтрокаПересортица.Количество;
	КонецЕсли;
		
	ПересортицаПриАктивизацииСтроки("");

КонецПроцедуры

&НаКлиенте
Процедура ПересортицаПоФирмамКоличествоПриИзменении(Элемент)
	
	ТекСтрокаПересортица = Элементы.Пересортица.ТекущиеДанные;
	МаксимальноеКоличество = ТекСтрокаПересортица.Количество;
	ИтоговоеКоличество = 0;
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Номенклатура1",ТекСтрокаПересортица.Номенклатура1);
	СтруктураОтбора.Вставить("Номенклатура2",ТекСтрокаПересортица.Номенклатура2);
	СтруктураОтбора.Вставить("Склад",ТекСклад);
	
	мсв = Объект.ПересортицаПоФирмам.НайтиСтроки(СтруктураОтбора);
	Для каждого эл из мсв Цикл
		ИтоговоеКоличество = ИтоговоеКоличество + эл.Количество;
	КонецЦикла;
	
	Если ИтоговоеКоличество > МаксимальноеКоличество Тогда
		Состояние("Для строки пересортицы номенклатуры """+Строка(ТекСтрокаПересортица.Номенклатура1)+""" и """+Строка(ТекСтрокаПересортица.Номенклатура2)+""" итог количества по фирмам не может превышать "+Строка(МаксимальноеКоличество),,,БиблиотекаКартинок.Предупреждение32);
		Элементы.ПересортицаПоФирмам.ТекущиеДанные.Количество = 0;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПересортицаКоличествоПриИзменении(Элемент)
	
	ТекСтрокаПересортица = Элементы.Пересортица.ТекущиеДанные;
	КоличествоПересортица = ТекСтрокаПересортица.Количество;
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Номенклатура",ТекСтрокаПересортица.Номенклатура1);
	СтруктураОтбора.Вставить("Склад",ТекСклад);
	мсв = Объект.Состав.НайтиСтроки(СтруктураОтбора);
	
	МаксимальноеКоличествоИзлишек = 0;
	Для каждого эл из мсв Цикл
		МаксимальноеКоличествоИзлишек = МаксимальноеКоличествоИзлишек + эл.КоличествоРазница;
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Номенклатура",ТекСтрокаПересортица.Номенклатура2);
	СтруктураОтбора.Вставить("Склад",ТекСклад);
	мсв = Объект.Состав.НайтиСтроки(СтруктураОтбора);
	
	МаксимальноеКоличествоНедостача = 0;
	Для каждого эл из мсв Цикл
		МаксимальноеКоличествоНедостача = МаксимальноеКоличествоНедостача + МАКС(эл.КоличествоРазница,-эл.КоличествоРазница);
	КонецЦикла;
	
	МаксимальноеКоличествоПересортица = Мин(МаксимальноеКоличествоИзлишек,МаксимальноеКоличествоНедостача);
	
	Если КоличествоПересортица > МаксимальноеКоличествоПересортица Тогда
		Состояние("Для строки пересортицы номенклатуры """+Строка(ТекСтрокаПересортица.Номенклатура1)+""" и """+Строка(ТекСтрокаПересортица.Номенклатура2)+""" количество не может превышать "+Строка(МаксимальноеКоличествоПересортица),,,БиблиотекаКартинок.Предупреждение32);
		Элементы.Пересортица.ТекущиеДанные.Количество = МаксимальноеКоличествоПересортица;
	КонецЕсли;
	
КонецПроцедуры
//popn-

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//++БИТ БВО
	//Если НЕ ТекущийОбъект.ДокОснование.Пустая() Тогда
	Если НЕ ТекущийОбъект.ДокОснование.Пустая() И ЗначениеЗаполнено(ТекущийОбъект.ДокОснование.ТипПередачиРезультатов) Тогда
	//--БИТ БВО
		ТекущийОбъект.ТипПередачиРезультатов = ТекущийОбъект.ДокОснование.ТипПередачиРезультатов;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеКоличестваСоставаНаСервере(Склад,Номенклатура,Количество)
	
	//получим строки по тек складу
	мсв=Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура",Склад,Номенклатура));
	чКолСтрок = мсв.Количество();
	
	Если Объект.МетодРазнесенияКоличества = Перечисления.МетодРаспределенияКоличестваМеждуФирмами.ВРавныхДолях Тогда
		
		чКолНаСтроку = Окр(Количество / чКолСтрок , 3);
		чКолРаспределили = 0;
		Для каждого Строка из мсв Цикл
			Строка.Количество = чКолНаСтроку;
			чКолРаспределили = чКолРаспределили + чКолНаСтроку;
		КонецЦикла;
		Если чКолСтрок > 0 Тогда
			Если Количество <> чКолРаспределили Тогда
				мсв[0].Количество = мсв[0].Количество + Количество - чКолРаспределили;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Объект.МетодРазнесенияКоличества = Перечисления.МетодРаспределенияКоличестваМеждуФирмами.ВсеНаБольшееКоличество Тогда
		
		чМаксКол = 0;
		СтрокаМакс = Неопределено;
		Для каждого Строка из мсв Цикл
			Если чМаксКол <= Строка.КоличествоУчет Тогда
				чМаксКол = Строка.КоличествоУчет;
				СтрокаМакс = Строка;
			КонецЕсли;	
			Строка.Количество = 0;
		КонецЦикла;
		
		Если  СтрокаМакс <> Неопределено Тогда
			
			СтрокаМакс.Количество = Количество;
			
		КонецЕсли;
		 
		
	ИначеЕсли Объект.МетодРазнесенияКоличества = Перечисления.МетодРаспределенияКоличестваМеждуФирмами.ПропорциональноУчетномуКоличеству Тогда
		
		чКолУчетноеИтого=0;
		Для каждого Строка из мсв Цикл
			чКолУчетноеИтого = чКолУчетноеИтого + Строка.КоличествоУчет;
		КонецЦикла;
		Если чКолУчетноеИтого = 0 Тогда
			Возврат;
		КонецЕСли;	
			
		чКолРаспределили = 0;
		Для каждого Строка из мсв Цикл
			чКолНаСтроку = Окр(Количество * Строка.КоличествоУчет / чКолУчетноеИтого , 3);
			Строка.Количество = чКолНаСтроку;
			чКолРаспределили = чКолРаспределили + чКолНаСтроку;
		КонецЦикла;
		Если чКолСтрок > 0 Тогда
			Если Количество <> чКолРаспределили Тогда
				мсв[0].Количество = мсв[0].Количество + Количество - чКолРаспределили;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура НайтиТоварВСписке(Команда)
	
	//ФормаПоискТовара = ПолучитьФорму("Документ.Инвентаризация.Форма.ФормаПоискТовара",,ЭтаФорма);
	ФормаПоискТовара = ПолучитьФорму("ОбщаяФорма.ФормаПоискТовара",,ЭтаФорма);
	Результат = ФормаПоискТовара.ОткрытьМодально();
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Действие = "ОтменитьПоиск" Тогда
			ОтменитьПоискТовараВСписке(Неопределено);
		ИначеЕсли Результат.Действие = "Найти" Тогда
			Элементы.Состав.ОтборСтрок = Новый ФиксированнаяСтруктура("Склад, Номенклатура", текСклад, Результат.Номенклатура);
		КонецЕсли;
	Иначе//Если Результат = Неопределено Тогда	//форма закрыта
		//ничего не делаем
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоискТовараВСписке(Команда)
	Элементы.Состав.ОтборСтрок = Новый ФиксированнаяСтруктура("Склад",текСклад);
КонецПроцедуры

//++Минин
&НаКлиенте
Процедура ПоискПоШтрихКоду(Команда)Экспорт 
	ШтрихКод = "";
	Если ВвестиСтроку(ШтрихКод,"Введите штрихкод",20,Ложь) Тогда //ОткрытьФормуМодально("ОбщаяФорма.ФормаПоискПоШтрихКоду");
		ПоискНоменклатуры(ШтрихКод);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоискНоменклатуры(ШтрихКод) 
	Номенклатура = Справочники.Номенклатура.НайтиПоКоду(ШтрихКод);
	Если НЕ Номенклатура.Пустая() и НЕ Номенклатура.Транзакционный Тогда 
		Элементы.ПодборНоменклатуры.ТекущаяСтрока = Номенклатура.Родитель;
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Товар с кодом "+Штрихкод+" не найден");
	КонецЕсли;
КонецПроцедуры
//--Минин

//{БредовЮГ 2013-09-03 Работа с ТСД
&НаСервере
Функция ПоместитьВовременноеХранилищеНаСервере()
	тзШаблон = Новый ТаблицаЗначений;
	тзШаблон.Колонки.Добавить("Номенклатура");
	тзШаблон.Колонки.Добавить("Количество");
	Возврат ПоместитьВоВременноеХранилище(тзШаблон,ЭтаФорма.УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ОбработатьРезультатТСДНаСервере(АдресХранилища)
	//Шилов М.В. 17.02.14
	ТЗСостав=Объект.Состав.Выгрузить();
	ТЗСостав.ЗаполнитьЗначения(0,"Количество");
	Объект.Состав.Загрузить(ТЗСостав);
	ТЗСоставПоФирмам=Объект.СоставПоФирмам.Выгрузить();
	ТЗСоставПоФирмам.ЗаполнитьЗначения(0,"Количество");
	Объект.СоставПоФирмам.Загрузить(ТЗСоставПоФирмам);
	//Шилов М.В. 17.02.14
	тзРезультат = ПолучитьИзВременногоХранилища(АдресХранилища);		
	ПравоИзменения = ПравоИзменения();
	Для Каждого СтрокаТЗ из тзРезультат Цикл
		МассивСтрок = Объект.Состав.НайтиСтроки(Новый Структура("Номенклатура",СтрокаТЗ.Номенклатура));
		Если МассивСтрок.Количество()=0 Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Номенклатура = СтрокаТЗ.Номенклатура;
			СтруктураДанных = Новый Структура;    
			СтруктураДанных.Вставить("Номенклатура",	 НоваяСтрока.Номенклатура);
			СтруктураДанных.Вставить("ЕдиницаИзмерения", НоваяСтрока.ЕдиницаИзмерения);
			СтруктураДанных.Вставить("Коэффициент",1);
			ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
			НоваяСтрока.Количество = СтрокаТЗ.Количество;
			СтруктураДанных.Вставить("Количество",НоваяСтрока.Количество);
			СтруктураДанных.Вставить("ЕдиницаВеса",НоваяСтрока.ЕдиницаВеса);
			СтруктураДанных.Вставить("Вес",НоваяСтрока.Вес);
			ОбработкаТабличныхЧастейСервер.ЗаполнитьВесТовара(СтруктураДанных);
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
			НоваяСтрока.Склад = ТекСклад;
			мсв = Объект.Состав.НайтиСтроки(Новый Структура("Склад",ТекСклад));
			НоваяСтрока.НомерСтрокиПоСкладу = мсв.Количество();
			НоваяСтрока.КоличествоРазница = НоваяСтрока.Количество - НоваяСтрока.КоличествоУчет;
			// заполняем тч СоставПоФирмам
			НоваяСтрока = Объект.СоставПоФирмам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
			НоваяСтрока.Склад = ТекСклад;
			Если ПравоИзменения Тогда 
				НоваяСтрока.Фирма = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Организация;
			Иначе
				НоваяСтрока.Фирма = ОпределитьФирму(НоваяСтрока.Номенклатура);
			КонецЕсли;
		Иначе
			МассивСтрок[0].Количество = СтрокаТЗ.Количество;	
			
			мсв = Объект.СоставПоФирмам.НайтиСтроки(Новый Структура("Склад,Номенклатура",ТекСклад,СтрокаТЗ.Номенклатура));
			Если мсв.Количество()>0 тогда
				мсв[0].Количество = СтрокаТЗ.Количество;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеИзТСД(Команда)
	//Предупреждение("Данная функция еще в разработке");
	Если НЕ ЗначениеЗаполнено(ТекСклад) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо выбрать склад");
	КонецЕсли;
	Если Вопрос("Заполнить данными из терминала ?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
		АдресХранилища = ПоместитьВовременноеХранилищеНаСервере();
		ФормаОбработки = ПолучитьФорму("ОбщаяФорма.Izh_ФормаСверткаТерминалов",Новый Структура("АдресХранилища",АдресХранилища),ЭтаФорма.УникальныйИдентификатор);
		Если ФормаОбработки.ОткрытьМодально() = Истина Тогда
			ОбработатьРезультатТСДНаСервере(АдресХранилища);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция ПоместитьВоВременноеХранилищеНаСервереГруппы()
	Возврат ПоместитьВоВременноеХранилище(Объект.ГруппыНоменклатуры.Выгрузить(),ЭтаФорма.УникальныйИдентификатор);	
КонецФункции

&НаСервере
Процедура ЗаписатьГруппыНаСервере(ВходящийАдрес)
	Объект.ГруппыНоменклатуры.Очистить();
	Объект.ГруппыНоменклатуры.Загрузить(ПолучитьИзВременногоХранилища(ВходящийАдрес));
КонецПроцедуры
&НаКлиенте                            
Процедура НастройкаГрупп(Команда)
	АдресХранилища = ПоместитьВоВременноеХранилищеНаСервереГруппы();
	Результат = ОткрытьФормуМодально("Документ.Инвентаризация.Форма.ФормаВыбораГрупп",Новый Структура("АдресХранилища",АдресХранилища));
	Если Результат = Истина Тогда
		ЗаписатьГруппыНаСервере(АдресХранилища);
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры
//Котлячкова++  26,11,13 Наряд 000099768
&НаКлиенте
Процедура ВидКоррекцииОприходованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 СтандартнаяОбработка=Ложь;
 
 	ФормаВыбора = ПолучитьФорму("Справочник.ВидыСписания.ФормаВыбора",,Элемент);
	
	ОтборПоВидуКоррекции = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоВидуКоррекции.ЛевоеЗначение = ФормаВыбора.Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти("ВидКоррекции").Поле;
	ОтборПоВидуКоррекции.Использование = Истина;
	ОтборПоВидуКоррекции.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборПоВидуКоррекции.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.Izh_ВидыКоррекций.Излишки");
	ОтборПоВидуКоррекции.Представление = "Доступные виды списания";
	
	ФормаВыбора.Открыть();


КонецПроцедуры

&НаКлиенте
Процедура ВидКоррекцииСписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 СтандартнаяОбработка=Ложь;
 
 	ФормаВыбора = ПолучитьФорму("Справочник.ВидыСписания.ФормаВыбора",,Элемент);
	
	ОтборПоВидуКоррекции = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоВидуКоррекции.ЛевоеЗначение = ФормаВыбора.Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти("ВидКоррекции").Поле;
	ОтборПоВидуКоррекции.Использование = Истина;
	ОтборПоВидуКоррекции.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборПоВидуКоррекции.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.Izh_ВидыКоррекций.Списание");
	ОтборПоВидуКоррекции.Представление = "Доступные виды списания";
	
	ФормаВыбора.Открыть();


КонецПроцедуры

//dps+  15.05.08 147820
&НаСервереБезКонтекста
Функция ОпределитьФирму(Номенклатура)
	тзПерепродажа = Перепродажа(Номенклатура);
	Если ЗначениеЗаполнено(тзПерепродажа) И тзПерепродажа[0].ТипДоговора = Перечисления.ТипыДоговоров.Комиссия Тогда 
		тзТоварОбщепита = ТоварОбщепита(Номенклатура);
		Если тзТоварОбщепита.Количество()=0 Тогда 
			Возврат тзПерепродажа[0].ФирмаПолучатель;
		Иначе 
			Возврат ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Организация; 
		КонецЕсли;	
	Иначе 
		Возврат ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Организация; 
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПравоИзменения()
	Возврат ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад ИЛИ РольДоступна("КонтроллерРевизор"); 
КонецФункции

&НаСервереБезКонтекста
Функция ТоварОбщепита(Номенклатура)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	(Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппыОбщепита)
	|			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппыТараОбщепита))
	|	И Номенклатура.Ссылка В(&Ссылка)");
	Запрос.УстановитьПараметр("ГруппыОбщепита",Справочники.Номенклатура.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыПроизводство)));
	Запрос.УстановитьПараметр("ГруппыТараОбщепита",Справочники.Номенклатура.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодГруппыТараПроизводство)));
	Запрос.УстановитьПараметр("Ссылка",Номенклатура);
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
		
&НаСервереБезКонтекста
Функция Перепродажа(Номенклатура)
	Возврат РегистрыСведений.Перепродажа.ПравилаПерепродажи(Номенклатура,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
КонецФункции

