

Функция ПровестиПеремещение(Объект,Режим)
	
	ПеремещениеРасход = Перечисления.КодыОпераций.ПеремещениеРасход;
	ПеремещениеПриход = Перечисления.КодыОпераций.ПеремещениеПриход;
	
	прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	тзОстаткиНоменклатуры = Объект.Движения.ОстаткиНоменклатуры.Выгрузить();
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	
	тзРеализация = Неопределено;

	флВозврата = Ложь;
		
	// Установка исключительной блокировки контролируемых остатков 
	Запрос=Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ПеремещениеСостав.Номенклатура,
	|	ПеремещениеСостав.Ссылка.Склад КАК МестоХранения,
	|	ПеремещениеСостав.Ссылка.Фирма КАК Фирма,
	|	СУММА(ВЫРАЗИТЬ(ПеремещениеСостав.Количество * ПеремещениеСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	|	СУММА(0) КАК Сумма,
	|	СУММА(0) КАК СуммаНДС,
	|	ПеремещениеСостав.Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ врСостав
	|ИЗ
	|	Документ.Перемещение.Состав КАК ПеремещениеСостав
	|ГДЕ
	|	ПеремещениеСостав.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеСостав.Номенклатура,
	|	ПеремещениеСостав.Ссылка.Склад,
	|	ПеремещениеСостав.Ссылка.Фирма
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	врСостав.Номенклатура,
	|	врСостав.МестоХранения,
	|	врСостав.Фирма
	|ИЗ
	|	врСостав КАК врСостав";
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	тз=Запрос.Выполнить().Выгрузить();
	тз.Свернуть("Номенклатура,МестоХранения,Фирма");
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = тз;
	Для каждого к из тз.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	Параметры = Новый Структура;
	Параметры.Вставить("Запрос",Запрос);
	Параметры.Вставить("Объект",Объект);
	Параметры.Вставить("КодОперации",ПеремещениеРасход);
	Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
	Параметры.Вставить("тзРеализация",тзРеализация);
	Параметры.Вставить("РежимПроведения",Режим);
	Параметры.Вставить("Фирма",Объект.Фирма);
	флВозврата = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);
	чКол = тзОстаткиНоменклатуры.Количество();
	Для Сч=1 по чКол Цикл
		Стр = тзОстаткиНоменклатуры[Сч-1];
		Новая_стр = тзОстаткиНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(Новая_стр,Стр);
		Новая_стр.МестоХранения = Объект.СкладПолучатель;
		Новая_стр.ВидДвижения = ВидДвиженияНакопления.Приход;
		Новая_стр.КодОперации = ПеремещениеПриход;
	КонецЦикла;	
	
	тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,Комитент,КодОперации","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр");
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
	
	//popn+
	//УчетАлкоголя = УчетАлкогольнойПродукции.ВестиУчетАлкоголя();
	//Если УчетАлкоголя Тогда
	//	УчетАлкогольнойПродукции.СформироватьРасходПоУчетуАлкоголя(Объект,ПеремещениеРасход);
	//Иначе
	//	УчетАлкогольнойПродукции.ОчиститьДвиженияПоУчетуАлкоголя(Объект);
	//КонецЕсли;
	
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;

	Возврат флВозврата;
	
КонецФункции


Процедура ОбработкаПроведения(Отказ, Режим)
	//БредовЮГ+ 2013-07-09 Проверка на проведения текущим днем
	Если НЕ РольДоступна("ПолныеПрава") Тогда
		Если НачалоДня(ЭтотОбъект.Дата) <> НачалоДня(ТекущаяДата()) Тогда
			ВызватьИсключение "Провести документ можно только текущим днем";
		КонецЕсли;
	КонецЕсли;
	//БредовЮГ- 2013-07-09 Проверка на проведения текущим днем
	
	Отказ = ПровестиПеремещение(ЭтотОбъект,Режим);
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		
		Склад = ДанныеЗаполнения.Склад;
		СтруктурнаяЕдиница = Склад.Владелец;
		фирма = ДанныеЗаполнения.Фирма;
		ДокОснование = ДанныеЗаполнения;
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	СУММА(ПриходнаяНакладнаяСостав.Количество) КАК Количество,
		|	ПриходнаяНакладнаяСостав.Коэффициент
		|ИЗ
		|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		|	И ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	ПриходнаяНакладнаяСостав.Коэффициент");
		Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
		Состав.Загрузить(Запрос.Выполнить().Выгрузить());
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Перемещение") Тогда
		
		Склад = ДанныеЗаполнения.СкладПолучатель;
		СтруктурнаяЕдиница = ДанныеЗаполнения.СтруктурнаяЕдиница;
		СкладПолучатель = ДанныеЗаполнения.Склад;
		фирма = ДанныеЗаполнения.Фирма;
		ДокОснование = ДанныеЗаполнения;
		Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());

//{БредовЮГ 21-03-2013	

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Источник") И ДанныеЗаполнения.Источник = "ДанныеТСД" Тогда
			Если ДанныеЗаполнения.Свойство("Склад") Тогда
				Склад = ДанныеЗаполнения.Склад;
				СтруктурнаяЕдиница = Склад.Владелец;
			КонецЕсли;
			Если ДанныеЗаполнения.Свойство("СкладПолучатель") Тогда
				СкладПолучатель = ДанныеЗаполнения.СкладПолучатель;
			КонецЕсли;
			Для каждого сСостава Из Состав Цикл
				сСостава.Количество = 0;
			КонецЦикла;
			Для каждого эл Из ДанныеЗаполнения.Состав Цикл	//массив структур
				НайденныеСтроки = Состав.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения", эл.Номенклатура, эл.ЕдиницаИзмерения));
					Если НайденныеСтроки.Количество() = 0 Тогда
					сСостава = Состав.Добавить();
					ЗаполнитьЗначенияСвойств(сСостава, эл);//ключи Эл - "Номенклатура, ЕдиницаИзмерения, Количество, Коэффициент, Цена, Сумма"
				Иначе
					сСостава = НайденныеСтроки[0];
					сСостава.Количество = эл.Количество;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказВнешний") Тогда
		Склад = ДанныеЗаполнения.Склад;
		фирма = ДанныеЗаполнения.Фирма;
		ДокОснование = ДанныеЗаполнения;
		Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
	//Бредов 21-03-2013}	
	//{БредовЮГ 17-07-2013	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		Склад = ДанныеЗаполнения.Склад;
		фирма = ДанныеЗаполнения.Фирма;
		ДокОснование = ДанныеЗаполнения;
		Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
	//Бредов 17-07-2013}	
	КонецЕсли;	
    	          
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент() Экспорт
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СтруктурнаяЕдиница = Склад.Владелец;
КонецПроцедуры
