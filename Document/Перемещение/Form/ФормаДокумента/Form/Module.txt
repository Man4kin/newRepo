

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры


&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
	Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество);
		ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Установитьпараметры();
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "BarCodeScaner" И Событие = "BarCodeValue" Тогда
		Если Не ВводДоступен() Тогда
			КомпонентаСканераШК.СобытиеОбработано();
			Возврат;   
		КонецЕсли;
		СтруктураПодбора = ПолучитьСтруктуруЗапросаПодбора();
		СтрокаТЧ = РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВДокументах(ЭтаФорма,Объект,Элементы.Состав,Данные,СтруктураПодбора);
		КомпонентаСканераШК.СобытиеОбработано();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗапросаПодбора() Экспорт
	СтруктураПодбора = Новый Структура;
	СтруктураПодбора.Вставить("ТекстЗапроса",ПодборНоменклатуры.ТекстЗапроса);
	СтруктураПодбора.Вставить("Параметры",ПодборНоменклатуры.Параметры);
	Возврат СтруктураПодбора;
КонецФункции	


//Конец Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
		Настройки = ПолучитьНастройкуПодбора();
		ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

  
&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Объект.Проведен Тогда
		Оповестить("ПроведенДокументПеремещение",,Объект.Ссылка);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Отказ = Не ЭтаФорма.ПроверитьЗаполнение();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	//Бредов+ 2013-07-08 Поставили временно, а то какая то херня происходит с остатками, правка задним числом
	//Элементы.Дата.Доступность = РольДоступна("ПолныеПрава");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Объект.Проведен  И НЕ ТолькоПросмотр Тогда
			Если НЕ РольДоступна("ПолныеПрава") Тогда
				Если НачалоДня(Объект.Дата)<>НачалоДня(ТекущаяДата()) Тогда
					ТолькоПросмотр = Истина;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//Бредов- 2013-07-08
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры


Процедура Установитьпараметры()
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Фирма", Объект.Фирма);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("МестоХранения", Объект.Склад);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", СписокНомеклатуры);
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПриИзменении(Элемент)
	Установитьпараметры();
КонецПроцедуры

&НаКлиенте
Процедура СписокНомеклатурыПриИзменении(Элемент)
	УстановитьПараметры();
КонецПроцедуры

&НаКлиенте
Процедура СкладПолучательПриИзменении(Элемент)
	Если Объект.Склад = Объект.СкладПолучатель Тогда
		Сообщить("Склад отправитель и Склад получатель совпадают!");
		Объект.СкладПолучатель = Неопределено;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	Если Объект.Склад = Объект.СкладПолучатель Тогда
		Сообщить("Склад отправитель и Склад получатель совпадают!");
		Объект.Склад = Неопределено;
	Иначе
		СкладВладелец = ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(Объект.Склад,"Владелец");
		СкладПолучательВладелец = ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(Объект.СкладПолучатель,"Владелец");
		Объект.СтруктурнаяЕдиница = СкладВладелец;
		Если НЕ Объект.Склад.Пустая() И НЕ Объект.СкладПолучатель.Пустая() И СкладВладелец <> СкладПолучательВладелец Тогда
			Сообщить("Структурная единица Склада отправителя и Склада получателя не совпадают!");
			Объект.СкладПолучатель = Неопределено;
		КонецЕсли;
	КонецЕсли;
	Установитьпараметры();
КонецПроцедуры

//++Минин
&НаКлиенте
Процедура ПоискПоШтрихКоду(Команда)Экспорт 
	ШтрихКод = "";
	Если ВвестиСтроку(ШтрихКод,"Введите штрихкод",20,Ложь) Тогда //ОткрытьФормуМодально("ОбщаяФорма.ФормаПоискПоШтрихКоду");
		ПоискНоменклатуры(ШтрихКод);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоискНоменклатуры(ШтрихКод) 
	Номенклатура = Справочники.Номенклатура.НайтиПоКоду(ШтрихКод);
	Если НЕ Номенклатура.Пустая() и НЕ Номенклатура.Транзакционный Тогда 
		Элементы.ПодборНоменклатуры.ТекущаяСтрока = Номенклатура.Родитель;
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Товар с кодом "+Штрихкод+" не найден");
	КонецЕсли;
КонецПроцедуры

//--Минин

//{БредовЮГ	2013-08-01
&НаСервере
Функция ПоместитьВовременноеХранилищеНаСервере()
	тзШаблон = Новый ТаблицаЗначений;
	тзШаблон.Колонки.Добавить("Номенклатура");
	тзШаблон.Колонки.Добавить("Количество");
	Возврат ПоместитьВоВременноеХранилище(тзШаблон,ЭтаФорма.УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ОбработатьРезультатТСДНаСервере(АдресХранилища)
	тзРезультат = ПолучитьИзВременногоХранилища(АдресХранилища);		
	Для Каждого СтрокаТЗ из тзРезультат Цикл
		МассивСтрок = Объект.Состав.НайтиСтроки(Новый Структура("Номенклатура",СтрокаТЗ.Номенклатура));
		Если МассивСтрок.Количество()=0 Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Номенклатура = СтрокаТЗ.Номенклатура;
			СтруктураДанных = Новый Структура;    
			СтруктураДанных.Вставить("Номенклатура",	 НоваяСтрока.Номенклатура);
			СтруктураДанных.Вставить("ЕдиницаИзмерения", НоваяСтрока.ЕдиницаИзмерения);
			СтруктураДанных.Вставить("Коэффициент",НоваяСтрока.Коэффициент);
			ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
			НоваяСтрока.Количество = СтрокаТЗ.Количество;
		Иначе
			МассивСтрок[0].Количество = СтрокаТЗ.Количество;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьИЗТСД(Команда)
	Если Вопрос("Заполнить данными из терминала ?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
		АдресХранилища = ПоместитьВоВременноеХранилищеНаСервере();
		ФормаОбработки = ПолучитьФорму("Обработка.Izh_ТСД.Форма.ФормаОбработки",Новый Структура("АдресХранилища,ВидДействия,ВнешнийВызов,СтруктураПараметров",АдресХранилища,"Инвентаризация",Истина,Новый Структура("ТипДействия","ВыгрузкаИзТСД")),ЭтаФорма.УникальныйИдентификатор);
		ФормаОбработки.ОткрытьМодально();
		ОбработатьРезультатТСДНаСервере(АдресХранилища);
	КонецЕсли;
КонецПроцедуры

//БредовЮГ	2013-08-01 }