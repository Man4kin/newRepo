Функция ПечатьНакладная(МассивОбъектов,ОбъектыПечати) экспорт
	СтрукРеквизитыШапки = новый Структура();
	СтрукРеквизитыШапки.вставить("Фирма","Фирма");
	СтрукРеквизитыШапки.Вставить("СтруктурнаяЕдиница","Структурная единица");
	СтрукРеквизитыШапки.вставить("Контрагент","Контрагент");
	СтрукРеквизитыТабЧасти = новый Структура;
	СтрукРеквизитыТабЧасти.Вставить("НомерСтроки");
	СтрукРеквизитыТабЧасти.Вставить("Номенклатура");
	СтрукРеквизитыТабЧасти.Вставить("ЕдиницаИзмерения");
	СтрукРеквизитыТабЧасти.Вставить("Количество");
	СтрукРеквизитыТабЧасти.Вставить("Цена");
	СтрукРеквизитыТабЧасти.Вставить("Сумма",Истина);
	СтрукРеквизитыТабЧасти.Вставить("ДатаПоставки");
	ТабДок = ОбработкаПечатиСервер.ПечатьНакладнойОбщая(МассивОбъектов,ОбъектыПечати,"Состав",СтрукРеквизитыШапки,СтрукРеквизитыТабЧасти);
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	Возврат ТабДок;
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,
	ОбъектыПечати, ПараметрыВывода) Экспорт
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Накладная", "Накладная",ПечатьНакладная(массивОбъектов,ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

Функция СформироватьПакетДокументов(ДокСсылка,МассивДокументов)   Экспорт
	Если ЕстьПакетДокументов(ДокСсылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("На "+ДокСсылка+" пакет документов уже сформирован !");
		Возврат Ложь;
	КонецЕсли;
	МассивДокументов = Новый Массив;
	ТекДата = ТекущаяДата();
	// формируем документы
	//НачатьТранзакцию(); // убираем, всегда должны формироваться документы
	// смотрим, не склад фруктов ?
	Если ДокСсылка.Склад<>Справочники.Склады.НайтиПоКоду(103) Тогда
		СтруктураКонстант = Разработка_Ижтрейдинг_Сервер.ПолучитьЗначениеКонстанты("ЗагрузкаЗаказаПоставщика",);
		// находим документ перемещения на склад резерва.
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Перемещение.Ссылка
		|ИЗ
		|	Документ.Перемещение КАК Перемещение
		|ГДЕ
		|	Перемещение.ДокОснование = &ДокОснование
		|	И Перемещение.СкладПолучатель = &СкладПолучатель");
		Запрос.УстановитьПараметр("ДокОснование",ДокСсылка);
		Запрос.УстановитьПараметр("СкладПолучатель",СтруктураКонстант.СкладРезерва);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У документа "+ДокСсылка+" не найден подчиненный документ перемещения в резерв",ДокСсылка);
			Возврат Ложь;
		КонецЕсли;
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ДокПеремещения = Выборка.Ссылка;
		
		ОбъектПеремещение = Документы.Перемещение.СоздатьДокумент();
		ОбъектПеремещение.Основание = "Возврат из резерва";
		ОбъектПеремещение.Заполнить(ДокПеремещения);
		ОбъектПеремещение.Дата = ТекДата-10;
		ОбъектПеремещение.ДокОснование = ДокСсылка;
		ОбъектПеремещение.СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
		ОбъектПеремещение.Комментарий = "Сформировано в "+ТекущаяДата();
		//{БредовЮГ 2014-11-26 Исправление моей ошибки
		ОбъектПеремещение.ДополнительныеСвойства.вставить("НеМенятьВремя",Истина);
		//БредовЮГ 2014-11-26 Исправление моей ошибки}
		ОбъектПеремещение.Автор = ПараметрыСеанса.ТекущийПользователь;
		Попытка
			//{БредовЮГ 2014-12-07 Наряд№000136217
			//ОбъектПеремещение.Записать(РежимЗаписиДокумента.Проведение);
			ОбъектПеремещение.Записать(РежимЗаписиДокумента.Запись);
			//БредовЮГ 2014-12-07 Наряд№000136217}
		Исключение
			//ОтменитьТранзакцию();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка при формировании перемещения из резерва :"+ОписаниеОшибки());
			ОбъектПеремещение.Записать(РежимЗаписиДокумента.Запись);
			//Возврат Ложь;
		КонецПопытки;
		МассивДокументов.Добавить(ОбъектПеремещение);
	КонецЕсли;
	ОбъектРеализация = Документы.РасходнаяНакладная.СоздатьДокумент();
	ОбъектРеализация.Заполнить(ДокСсылка);
	ОбъектРеализация.Дата = ТекДата+1;
	ОбъектРеализация.Склад = ДокСсылка.Склад;
	ОбъектРеализация.СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	ОбъектРеализация.Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбъектРеализация.Проведен = Истина;
	Попытка
		//{БредовЮГ 2014-12-07 Наряд№000136217
		//ОбъектРеализация.Записать(РежимЗаписиДокумента.Проведение);
		ОбъектРеализация.Записать(РежимЗаписиДокумента.Запись);
		//БредовЮГ 2014-12-07 Наряд№000136217}
		
	Исключение
		//ОтменитьТранзакцию();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка при формировании расходной накладной  :"+ОписаниеОшибки());
		ОбъектРеализация.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;
	МассивДокументов.Добавить(ОбъектРеализация);
	//ЗафиксироватьТранзакцию();
	Для Каждого ЭлементМассива из МассивДокументов Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сформирован документ "+ЭлементМассива.Ссылка,ЭлементМассива);
	КонецЦикла;
	Возврат Истина;
КонецФункции

Функция ЕстьПакетДокументов(ВходящаяСсылка) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РасходнаяНакладная.Ссылка
	|ИЗ
	|	Документ.РасходнаяНакладная КАК РасходнаяНакладная
	|ГДЕ
	|	РасходнаяНакладная.ДокОснование = &ДокОснование");
	Запрос.УстановитьПараметр("ДокОснование",ВходящаяСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();
КонецФункции