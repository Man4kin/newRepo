


&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Объект.EDIПровайдер.Пустая() И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") И Объект.Контрагент.ПодтверждениеЗаказаEDI Тогда	
		Узел = ОбменДаннымиEDIСервер.ПолучитьУзелРегистрацииEDIПоставщик(Объект.EDIПровайдер);
		Если Узел <> Неопределено Тогда
			ТолькоПросмотр = ОбменДаннымиEDIСервер.ЗапрещеноРедактироватьEDI(Узел,Объект.Ссылка,ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	Для Каждого Строка Из Объект.Состав Цикл
		Строка.ТипНоменклатурыСтрока = ТипЗнч(Строка.Номенклатура) = Тип("Строка");
	КонецЦикла;
	// {Бредов 2013-06-03 даем доступ на редактирование только администраторам и ревизорам
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда // новый документ
		ТолькоПросмотр = НЕ (РольДоступна("ПолныеПрава") или РольДоступна("КонтроллерРевизор"));
	КонецЕсли;
	//Бредов 2013-06-03 даем доступ на редактирование только администраторам и ревизорам}
	
	//{КотлячковаЕВ 2014-05-13 08:52:35 Наряд № 000115681
	Если ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ВнутреннееПеремещение=Объект.Контрагент.Организация=Объект.Фирма;
	Иначе 
		ВнутреннееПеремещение=Ложь;
	КонецЕсли;
	Элементы.ЗапросЦенRPM.Доступность=не ВнутреннееПеремещение;
	//КотлячковаЕВ 2014-05-13 08:52:35 }

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры


//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество);
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);
		Если ТекСтрока <> Неопределено Тогда
			ТекСтрока.ДатаПоставки = Объект.Дата+3600*24;
			ТекСтрока.Код = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ТекСтрока.Номенклатура,"Код");
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	установитьпараметры();
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "BarCodeScaner" И Событие = "BarCodeValue" Тогда
		Если Не ВводДоступен() Тогда
			КомпонентаСканераШК.СобытиеОбработано();
			Возврат;   
		КонецЕсли;
		СтруктураПодбора = ПолучитьСтруктуруЗапросаПодбора();
		СтрокаТЧ = РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВДокументах(ЭтаФорма,Объект,Элементы.Состав,Данные,СтруктураПодбора);
		КомпонентаСканераШК.СобытиеОбработано();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗапросаПодбора() Экспорт
	СтруктураПодбора = Новый Структура;
	СтруктураПодбора.Вставить("ТекстЗапроса",ПодборНоменклатуры.ТекстЗапроса);
	СтруктураПодбора.Вставить("Параметры",ПодборНоменклатуры.Параметры);
	Возврат СтруктураПодбора;
КонецФункции	


&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

//Конец Процедуры и функции для организации подбора



&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры

//{БредовЮГ подбор для контрагентов общепита
&НаСервереБезКонтекста
Функция ЭтоКонтрагентОбщепита(ВходящийКонтрагент) 
	Если ТипЗнч(ВходящийКонтрагент) <> Тип("СправочникСсылка.Контрагенты") Тогда 
		Возврат Ложь;
	КонецЕсли;
	Если ВходящийКонтрагент.Пустая() Тогда Возврат Ложь; КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка В ИЕРАРХИИ(&ГруппаОбщепита)
	|	И Контрагенты.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",ВходящийКонтрагент);
	Запрос.УстановитьПараметр("ГруппаОбщепита",Справочники.Контрагенты.НайтиПоКоду(15335));
	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой();
КонецФункции
//БредовЮГ}

&НаСервере
процедура Установитьпараметры()
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СтруктурнаяЕдиница", Объект.Склад.Владелец);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ТекущееВремя", ТекущаяДата());
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("КонтрагентФирма", Объект.Фирма.Контрагент);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ОтгрузкаНашимСЕ", ЗначениеЗаполнено(Объект.Фирма.Контрагент) И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы"));
	//{БредовЮГ подбор для контрагентов общепита
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ОтгрузкаНашимОбщепиту", ЭтоКонтрагентОбщепита(Объект.Контрагент));
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ДатаДокумента", ?(ЗначениеЗаполнено(Объект.Ссылка),Объект.Дата,ТекущаяДата()));
	//БредовЮГ}
	
	//{КотлячковаЕВ 2014-05-12 08:35:42 Наряд №000115681
	Если ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ВнутреннееПеремещение=Объект.Контрагент.Организация=Объект.Фирма;
	Иначе 
		ВнутреннееПеремещение=Ложь;
	КонецЕсли;
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ВнутреннееПеремещение", ВнутреннееПеремещение);
	//КотлячковаЕВ 2014-05-12 08:35:42 }

конецпроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	загрузитьНастройкиПодбора();
	//Если ЭтаФорма.ВладелецФормы.Имя = "СписокДляПроизводства" Тогда
	//	НовыйПараметр1 = Новый ПараметрВыбора("ВидСклада", ПредопределенноеЗначение("Перечисление.ВидыСкладов.Производство"));
	//	НовыйПараметр2 = Новый ПараметрВыбора("ТолькоТекущаяСЕ", Истина);
	//	НовыйМассив = Новый Массив();
	//	НовыйМассив.Добавить(НовыйПараметр1);
	//	НовыйМассив.Добавить(НовыйПараметр2);
	//	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	//	Элементы.Склад.ПараметрыВыбора = НовыеПараметры;
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаКлиенте
Процедура СоставЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставСтавкаНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставСуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.ВыбиратьТип = Объект.Контрагент = Неопределено;
КонецПроцедуры


&НаКлиенте
Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)
	Объект.Контрагент = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ФирмаПриИзменении(Элемент)
	Установитьпараметры();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Установитьпараметры();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Установитьпараметры();
КонецПроцедуры

//++Минин
&НаКлиенте
Процедура ПоискПоШтрихКоду(Команда)Экспорт 
	ШтрихКод = "";
	Если ВвестиСтроку(ШтрихКод,"Введите штрихкод",20,Ложь) Тогда //ОткрытьФормуМодально("ОбщаяФорма.ФормаПоискПоШтрихКоду");
		ПоискНоменклатуры(ШтрихКод);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоискНоменклатуры(ШтрихКод) 
	Номенклатура = Справочники.Номенклатура.НайтиПоКоду(ШтрихКод);
	Если НЕ Номенклатура.Пустая() и НЕ Номенклатура.Транзакционный Тогда 
		Элементы.ПодборНоменклатуры.ТекущаяСтрока = Номенклатура.Родитель;
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Товар с кодом "+Штрихкод+" не найден");
	КонецЕсли;
КонецПроцедуры
//--Минин

//++Минин
&НаКлиенте
Процедура ЗапросЦенRPM(Команда)
	Если ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда  
		Структура = Новый Структура("Состав, Контрагент");
		Структура.Вставить("АдресТаблицы",ЗапихнутьТЧВХранилище());
		Структура.Вставить("Контрагент",Объект.Контрагент);
		Результат = ОткрытьФормуМодально("ОбщаяФорма.ФормаЦенRPM",Структура,ЭтаФорма);
		Если Не Результат=Неопределено Тогда 
			Для Каждого Стр из Результат Цикл
				СтрТзСостав = Объект.Состав.НайтиСтроки(Новый Структура("Номенклатура",Стр.Номенклатура));
				СтрТзСостав[0].Цена = Стр.ЦенаRPM;
				ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(СтрТзСостав[0]);
			КонецЦикла;
		КонецЕсли;
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для данного контрагента запрос цен в RPM невозможен");
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ЗапихнутьТЧВХранилище()
	ОбъектДок = РеквизитФормыВЗначение("Объект");
	Возврат ПоместитьВоВременноеХранилище(ОбъектДок.Состав.Выгрузить(,"Номенклатура,Цена"),ЭтаФорма.УникальныйИдентификатор);
КонецФункции


&НаКлиенте
Процедура СписокНомеклатурыПриИзменении(Элемент)
	УстановитьПараметры();
КонецПроцедуры
//--Минин