
Функция ПровестиКорректировкуПоступления(Объект,РежимПроведения)
	
	соСтоимостьУслуг = Неопределено;
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	//serg  25.12.2013
	Для Каждого Стр Из ЭтотОбъект.Состав Цикл
		Если  Не ЗначениеЗаполнено(Стр.Цена)Тогда
			Сообщить ("Не заполнена цена в строке:" + " " + Стр.НомерСтроки);
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;	
	//serg	25.12.2013 
	
	//Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
	
	ИсходныйДокументПоступления = УчетНДС.ПолучитьИсправляемыйДокументПоступления(Объект.ДокументПоступления, Истина);
	ИсходныйСклад = ИсходныйДокументПоступления.Склад;
	ИсходныйСтатус = ИсходныйДокументПоступления.ТипДоговора;
	ИсходныйКурс = ИсходныйДокументПоступления.Курс;
	
	Запрос=Новый Запрос(
	"ВЫБРАТЬ
	|	ИСТИНА КАК Активность,
	|	&ВидДвиженияПриход КАК ВидДвижения,
	|	КорректировкаПоступленияСостав.Ссылка.Дата КАК Период,
	|	КорректировкаПоступленияСостав.Ссылка.Ссылка КАК Регистратор,
	|	КорректировкаПоступленияСостав.Номенклатура,
	|	&ИсходныйСклад КАК МестоХранения,
	|	КорректировкаПоступленияСостав.Ссылка.Фирма,
	|	ВЫБОР
	|		КОГДА &ИсходныйСтатус = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|			ТОГДА КорректировкаПоступленияСостав.Ссылка.Контрагент
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ КАК Комитент,
	|	&ИсходныйСтатус КАК Статус,
	|	СУММА(ВЫРАЗИТЬ((КорректировкаПоступленияСостав.Количество - КорректировкаПоступленияСостав.КоличествоДоИзменения) * КорректировкаПоступленияСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	|	СУММА(ВЫРАЗИТЬ((КорректировкаПоступленияСостав.Сумма - КорректировкаПоступленияСостав.СуммаДоИзменения)* &ИсходныйКурс КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ((КорректировкаПоступленияСостав.Сумма - КорректировкаПоступленияСостав.СуммаДоИзменения) * &ИсходныйКурс КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
	|	СУММА(ВЫРАЗИТЬ((КорректировкаПоступленияСостав.СуммаНДС - КорректировкаПоступленияСостав.СуммаНДСДоИзменения) * &ИсходныйКурс КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	СУММА(ВЫРАЗИТЬ((КорректировкаПоступленияСостав.СуммаНДС - КорректировкаПоступленияСостав.СуммаНДСДоИзменения) * &ИсходныйКурс КАК ЧИСЛО(15, 2))) КАК СуммаНДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.КорректировкаПоступления) КАК КодОперации,
	|	КорректировкаПоступленияСостав.Ссылка.Контрагент
	|ИЗ
	|	Документ.КорректировкаПоступления.Состав КАК КорректировкаПоступленияСостав
	|ГДЕ
	|	КорректировкаПоступленияСостав.Ссылка = &Ссылка
	|	И КорректировкаПоступленияСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаПоступленияСостав.Номенклатура,
	|	КорректировкаПоступленияСостав.Ссылка.Ссылка,
	|	КорректировкаПоступленияСостав.Ссылка.Дата,
	|	КорректировкаПоступленияСостав.Ссылка.Фирма,
	|   &ИсходныйСклад,
	|	КорректировкаПоступленияСостав.Ссылка.Контрагент,
	|	ВЫБОР
	|		КОГДА &ИсходныйСтатус = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|			ТОГДА КорректировкаПоступленияСостав.Ссылка.Контрагент
	|		ИНАЧЕ неопределено
	|	КОНЕЦ,
	|	&ИсходныйСтатус");
	Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ИсходныйСклад",ИсходныйСклад);
	Запрос.УстановитьПараметр("ИсходныйСтатус",ИсходныйСтатус);
	Запрос.УстановитьПараметр("ИсходныйКурс",ИсходныйКурс);
	тз = Запрос.Выполнить().Выгрузить();
	тз.Колонки.Добавить("СтоимостьУслуг");
	соСтоимостьУслуг = Новый Соответствие;
	
	чИтогСумма    = тз.Итог("Сумма");
	Если чИтогСумма <> 0 Тогда
		
		//услуги
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА((КорректировкаПоступленияСостав.СуммаНДС - КорректировкаПоступленияСостав.СуммаНДСДоИзменения) * КорректировкаПоступленияСостав.Ссылка.ИсправляемыйДокумент.Курс) КАК ЧИСЛО(15, 2)), 0) КАК СуммаНДС,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА((КорректировкаПоступленияСостав.Сумма  - КорректировкаПоступленияСостав.СуммаДоИзменения)* КорректировкаПоступленияСостав.Ссылка.ИсправляемыйДокумент.Курс) КАК ЧИСЛО(15, 2)), 0) КАК Сумма
		|ИЗ
		|	Документ.КорректировкаПоступления.Состав КАК КорректировкаПоступленияСостав
		|ГДЕ
		|	КорректировкаПоступленияСостав.Ссылка = &Ссылка
		|	И КорректировкаПоступленияСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)");
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		
		чСуммаУслуг    = 0;
		чСуммаНДСУслуг = 0;
		в=Запрос.Выполнить().Выбрать();
		Если в.Следующий() Тогда
			чСуммаУслуг    = в.Сумма;
			чСуммаНДСУслуг = в.СуммаНДС;
		КонецЕсли;
		
		чИтогСуммаНДС = тз.Итог("СуммаНДС");
		строка_макс=неопределено;
		строка_максНДС=неопределено;
		чСуммаМакс    = 0;
		чСуммаМаксНДС = 0;
		Для каждого с из тз Цикл
			
			к = с.Сумма / чИтогСумма;
			чТекСуммаУслуг    = Окр(чСуммаУслуг    * к,2);
			чТекСуммаУслугНДС = Окр(чСуммаНДСУслуг * к,2);
			
			с.Сумма = с.Сумма + чТекСуммаУслуг;
			
			Если с.Количество <> 0 Тогда
				соСтоимостьУслуг.Вставить(с.Номенклатура,Окр(чТекСуммаУслуг / с.Количество,2));
			КонецЕсли;
			
			с.СтоимостьУслуг = чТекСуммаУслуг;
			
			с.СуммаНДС   = с.СуммаНДС   + чТекСуммаУслугНДС;
			Если чСуммаМакс < с.Сумма Тогда
				строка_макс = с;
				чСуммаМакс  = с.Сумма;
			КонецЕсли;	 
			Если чСуммаМаксНДС < с.СуммаНДС Тогда
				строка_максНДС = с;
				чСуммаМаксНДС  = с.СуммаНДС;
			КонецЕсли;
			с.СуммаУпр = с.Сумма;
			с.СуммаНДСУпр   = с.СуммаНДС;
		КонецЦикла;	
		
		//разницы возникающие при пропорциональном распределении относим на строку с максимальной суммой
		чРазница = чСуммаУслуг + чИтогСумма - тз.Итог("Сумма");
		Если чРазница <> 0 и строка_макс <> Неопределено Тогда
			строка_макс.Сумма = строка_макс.Сумма + чРазница;
			соСтоимостьУслуг.Вставить(строка_макс.Номенклатура,Окр((строка_макс.СтоимостьУслуг+чРазница)/строка_макс.Количество,2));
			строка_макс.СуммаУпр = строка_макс.Сумма;
		КонецЕсли;	
		
		чРазницаНДС = чСуммаНДСУслуг + чИтогСуммаНДС - тз.Итог("СуммаНДС");
		Если чРазницаНДС <> 0 и строка_максНДС <> Неопределено Тогда
			строка_макс.СуммаНДС = строка_макс.СуммаНДС + чРазницаНДС;
			строка_макс.СуммаНДСУпр = строка_макс.СуммаНДС; 
		КонецЕсли;
		
	КонецЕсли;
	
	//КонецЕсли;
	
	//закупочные цены
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КорректировкаПоступленияСостав.Ссылка КАК Регистратор,
	|	КорректировкаПоступленияСостав.Ссылка.Дата КАК Период,
	|	КорректировкаПоступленияСостав.Номенклатура,
	|	КорректировкаПоступленияСостав.ЕдиницаИзмерения,
	|	СРЕДНЕЕ(ВЫРАЗИТЬ(КорректировкаПоступленияСостав.Цена * КорректировкаПоступленияСостав.Ссылка.ИсправляемыйДокумент.Курс КАК ЧИСЛО(15, 2))) КАК Цена,
	|	СРЕДНЕЕ(ВЫРАЗИТЬ(КорректировкаПоступленияСостав.Цена * КорректировкаПоступленияСостав.Ссылка.ИсправляемыйДокумент.Курс КАК ЧИСЛО(15, 2))) КАК ЦенаУпр,
	|	СРЕДНЕЕ(ВЫРАЗИТЬ(КорректировкаПоступленияСостав.СуммаНДС * КорректировкаПоступленияСостав.Ссылка.ИсправляемыйДокумент.Курс / КорректировкаПоступленияСостав.Количество КАК ЧИСЛО(15, 3))) КАК СуммаНДС,
	|	СРЕДНЕЕ(ВЫРАЗИТЬ(КорректировкаПоступленияСостав.СуммаНДС * КорректировкаПоступленияСостав.Ссылка.ИсправляемыйДокумент.Курс / КорректировкаПоступленияСостав.Количество КАК ЧИСЛО(15, 3))) КАК СуммаНДСУпр,
	|	КорректировкаПоступленияСостав.Ссылка.Фирма,
	|	КорректировкаПоступленияСостав.Ссылка.СтруктурнаяЕдиница
	|ИЗ
	|	Документ.КорректировкаПоступления.Состав КАК КорректировкаПоступленияСостав
	|ГДЕ
	|	КорректировкаПоступленияСостав.Ссылка = &Ссылка
	|	И КорректировкаПоступленияСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|	И КорректировкаПоступленияСостав.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаПоступленияСостав.Номенклатура,
	|	КорректировкаПоступленияСостав.ЕдиницаИзмерения,
	|	КорректировкаПоступленияСостав.Ссылка,
	|	КорректировкаПоступленияСостав.Ссылка.Дата,
	|	КорректировкаПоступленияСостав.Ссылка.Фирма");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	
	тзЦены = Запрос.Выполнить().Выгрузить();
	Если соСтоимостьУслуг <> Неопределено Тогда
		тзЦены.Колонки.Добавить("СтоимостьУслуг");
		Для каждого с_тзЦены из тзЦены Цикл
			с_тзЦены.СтоимостьУслуг = соСтоимостьУслуг.Получить(с_тзЦены.Номенклатура);
		КонецЦикла;
	КонецЕсли;	
	
	//popn+
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Количество", 0);
	ПараметрыОтбора.Вставить("Сумма", 0);
	ПараметрыОтбора.Вставить("СуммаНДС", 0);
	ПараметрыОтбора.Вставить("СуммаУпр", 0);
	ПараметрыОтбора.Вставить("СуммаНДСУпр", 0);
	
	НайденныеСтроки = тз.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого ТекСтрока Из НайденныеСтроки Цикл
		тз.Удалить(ТекСтрока);
	КонецЦикла;
	//popn-
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тз);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тз);
	Объект.Движения.ЦеныНоменклатурыЗакупочные.Загрузить(тзЦены);
	
	//popn+
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тз, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тз, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	Объект.Движения.ЦеныНоменклатурыЗакупочные.Записывать=Истина;
	
	Возврат Ложь;
	
КонецФункции	

Процедура ЗаполнитьПоПриходнойНакладнойИКорректировкеПоступления(ДанныеЗаполнения)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") 
		И ТипЗнч(ДанныеЗаполнения.Грузоотправитель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
		Тогда
		Если ДанныеЗаполнения.Грузоотправитель.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='На основании документа %1 запрещено создавать корректировки поступления, так как структурная единица %2 в режиме ""Продуктив""'"),
			ДанныеЗаполнения,
			ДанныеЗаполнения.Грузоотправитель);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	КонецЕсли;
	
	стрИмяВидаДокумента = ДанныеЗаполнения.Метаданные().Имя;
	
	ДокументСсылка = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ДанныеЗаполнения, Ложь);
	
	ЭтотОбъект.Фирма               = ДанныеЗаполнения.Фирма;
	ЭтотОбъект.СтруктурнаяЕдиница  = ДанныеЗаполнения.СтруктурнаяЕдиница;
	ЭтотОбъект.Контрагент          = ДанныеЗаполнения.Контрагент;
	ЭтотОбъект.ДокументПоступления = ДанныеЗаполнения;
	ЭтотОбъект.НомерДокумента = ДанныеЗаполнения.НомерДокумента;
	ЭтотОбъект.ДатаДокумента = ДанныеЗаполнения.ДатаДокумента;
	ЭтотОбъект.НомерСФ = ДанныеЗаполнения.НомерСФ;
	ЭтотОбъект.ДатаСФ = ДанныеЗаполнения.ДатаСФ;
	
	ДокументПоступленияСсылка = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ЭтотОбъект.ДокументПоступления, Истина);
	Если ЭтотОбъект.РежимКорректировки = Перечисления.РежимыКорректировок.СогласованноеИзменение Тогда
		ЭтотОбъект.ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ЭтотОбъект.ДокументПоступления, Истина);
	Иначе
		ЭтотОбъект.ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ЭтотОбъект.ДокументПоступления, Ложь);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапрос =
	"ВЫБРАТЬ
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
	|	ПриходнаяНакладнаяСостав.Количество,
	|	ПриходнаяНакладнаяСостав.Количество КАК КоличествоДоИзменения,
	|	ПриходнаяНакладнаяСостав.Коэффициент,
	|	ПриходнаяНакладнаяСостав.Цена,
	|	ПриходнаяНакладнаяСостав.Цена КАК ЦенаДоИзменения,
	|	ПриходнаяНакладнаяСостав.ЦенаБезНДС,
	|	ПриходнаяНакладнаяСостав.ЦенаБезНДС КАК ЦенаБезНДСДоИзменения,
	|	ПриходнаяНакладнаяСостав.СуммаНДС,
	|	ПриходнаяНакладнаяСостав.СуммаНДС КАК СуммаНДСДоИзменения,
	|	ПриходнаяНакладнаяСостав.Сумма,
	|	ПриходнаяНакладнаяСостав.Сумма КАК СуммаДоИзменения,
	|	ПриходнаяНакладнаяСостав.СуммаБезНДС,
	|	ПриходнаяНакладнаяСостав.СуммаБезНДС КАК СуммаБезНДСДоИзменения,
	|	ПриходнаяНакладнаяСостав.СтавкаНДС,
	|	ПриходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДСДоИзменения,";
	Если стрИмяВидаДокумента = "КорректировкаПоступления" Тогда
		ТекстЗапрос = ТекстЗапрос + "
		|	ПриходнаяНакладнаяСостав.КоличествоДоКорректировки  КАК КоличествоДоКорректировки,
		|	ПриходнаяНакладнаяСостав.ЦенаДоКорректировки        КАК ЦенаДоКорректировки,
		|	ПриходнаяНакладнаяСостав.ЦенаБезНДСДоКорректировки  КАК ЦенаБезНДСДоКорректировки,
		|	ПриходнаяНакладнаяСостав.СуммаДоКорректировки       КАК СуммаДоКорректировки,
		|	ПриходнаяНакладнаяСостав.СуммаБезНДСДоКорректировки КАК СуммаБезНДСДоКорректировки,
		|	ПриходнаяНакладнаяСостав.СуммаНДСДоКорректировки    КАК СуммаНДСДоКорректировки,";
	КонецЕсли;
	ТекстЗапрос = ТекстЗапрос + "
	|	ПриходнаяНакладнаяСостав.Вес,
	|	ПриходнаяНакладнаяСостав.ЕдиницаВеса
	|ИЗ
	|	Документ."+стрИмяВидаДокумента+".Состав КАК ПриходнаяНакладнаяСостав
	|ГДЕ
	|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
	Запрос.Текст = ТекстЗапрос; 
	ЭтотОбъект.Состав.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//{{ШиловМВ 27.10.14 №000131251
	//{БредовЮГ	2014-11-18 Наряд №000134204
	
	ТекСтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		//Если ПараметрыСеанса.ИспользованиеЦВД Тогда
		ТекстСообщения = НСтр("ru='Ввод документа возможен только в RS.Center.'");
		ВызватьИсключение ТекстСообщения;
		//КонецЕсли;	
	КонецЕсли;
	//ШиловМВ 27.10.14 №000131251}}
	//БредовЮГ	2014-11-18 Наряд №000134204}
	
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаПоступления")  Тогда
		//ШиловМВ 03.04.14 вторично, вводить на основании ПН и КП с признаком ОбработанЦВД
		//ШиловМВ 08.05.14 №000115531 ПН и КП д.б. проведены
		//{БредовЮГ	2014-11-18 Наряд №000134204
		//Если НЕ ДанныеЗаполнения.ОбработанЦВД ИЛИ НЕ ДанныеЗаполнения.Проведен Тогда
		Если НЕ ДанныеЗаполнения.Проведен Тогда
			//БредовЮГ	2014-11-18 Наряд №000134204	}
			//ШиловМВ 08.05.14
			ТекстСообщения=
			НСтр("ru = 'Документ Корректировка поступления необходимо вводить на основании проведенных документов ""Приходная накладная"" или ""Корректировка поступления""!'");
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		//ШиловМВ 03.04.14
		ЗаполнитьПоПриходнойНакладнойИКорректировкеПоступления(ДанныеЗаполнения);
	КонецЕсли;	
	
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()Экспорт
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если (НЕ ПараметрыСеанса.ЭтоЦентр И НЕ ПараметрыСеанса.ИспользованиеЦВД) ИЛИ ТипЗнч(ЭтотОбъект.Контрагент) <> Тип("СправочникСсылка.Контрагенты") Тогда
		ОбработанЦВД = Истина;
	КонецЕсли;
	СуммаИтого    = Состав.Итог("Сумма");
	СуммаНДСИтого = Состав.Итог("СуммаНДС");
	ОбработатьСуммыДокорректировки();
	СтруктурнаяЕдиница = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ДокументПоступления, Ложь).СтруктурнаяЕдиница;
КонецПроцедуры

Процедура ПроверитьПоследовательностьКорректировки(Отказ)
	
	Если РежимКорректировки = Перечисления.РежимыКорректировок.ИсправлениеОшибки Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);
		Запрос.УстановитьПараметр("ЭтотДокумент", Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаПоступления.Ссылка
		|ИЗ
		|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
		|ГДЕ
		|	КорректировкаПоступления.ДокументПоступления = &ДокументПоступления
		|	И КорректировкаПоступления.РежимКорректировки <> ЗНАЧЕНИЕ(Перечисление.РежимыКорректировок.СогласованноеИзменение)
		|	И КорректировкаПоступления.Ссылка <> &ЭтотДокумент
		|	И КорректировкаПоступления.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	КорректировкаПоступления.Дата УБЫВ";
		
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Сообщить("К документу "+ ДокументПоступления +" введено больше одного корректировочного документа с видом операции ""Исправление первичных документов"". 
			|Каждую последующую корректировку следует вводить на основании предыдущей.");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПроверитьПоследовательностьКорректировки()


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//++Минин 0000144432 2015-11-05
	ПроверитьИзмененияВДокументе(Отказ);
	Если Отказ Тогда 
		ВызватьИсключение "Провести документ можно только при наличии корректировок в табличной части";
	КонецЕсли;
	//--Минин 0000144432 2015-11-05
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		ПроверитьПоследовательностьКорректировки(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		Отказ = ПровестиКорректировкуПоступления(ЭтотОбъект,РежимПроведения);
	КонецЕсли;
	//popn+
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		ОформитьПерепродажу();
	КонецЕсли;
	//popn-
	//{ СИТЕК БрыляковЕЮ 2015-05-05  
	// Исходный текст --> 
	//Если ПараметрыСеанса.ИспользованиеЦВД И НЕ ОбменДанными.Загрузка Тогда
	//	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда	
	//		//{БредовЮГ 2014-11-24 Наряд №000134783
	//		//Если (ПараметрыСеанса.ЭтоЦентр) ИЛИ (НЕ ПараметрыСеанса.ЭтоЦентр И ЭтотОбъект.ОбработанЦВД = Ложь) Тогда
	//		Если НЕ (ЭтотОбъект.ДополнительныеСвойства.свойство("ОбменЦВД") И ЭтотОбъект.ДополнительныеСвойства.ОбменЦВД) Тогда
	//		//БредовЮГ 2014-11-24 Наряд №000134783}
	//			Узел = ПланыОбмена.ОбменЦВД.НайтиПоКоду(1);
	//			Если НЕ Узел.Пустая() Тогда
	//				ПланыОбмена.ЗарегистрироватьИзменения(Узел,ЭтотОбъект);
	//			КонецЕсли;
	//		//{БредовЮГ 2014-11-24 Наряд №000134783	
	//		КонецЕсли;
	//		//БредовЮГ 2014-11-24 Наряд №000134783}
	//	КонецЕсли;
	//КонецЕсли;
	// <-- Исходный текст 
	// СИТЕК БрыляковЕЮ 2015-05-05 }
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбработанЦВД = Ложь;
КонецПроцедуры


Процедура ОбработатьСуммыДокорректировки()
	
	ИсправлениеКорректировки = ЗначениеЗаполнено(ИсправляемыйДокумент) И (ТипЗнч(ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаПоступления")) И (ОбщегоНазначения.ПолучитьЗначениеРеквизита(ИсправляемыйДокумент, "РежимКорректировки") = Перечисления.РежимыКорректировок.СогласованноеИзменение);
	
	Если РежимКорректировки = Перечисления.РежимыКорректировок.СогласованноеИзменение Тогда
		
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("КоличествоДоИзменения"),	"КоличествоДоКорректировки");
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("ЦенаДоИзменения"),			"ЦенаДоКорректировки");
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("ЦенаБезНДСДоИзменения"),	"ЦенаБезНДСДоКорректировки");
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("СуммаДоИзменения"),		"СуммаДоКорректировки");
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("СуммаБезНДСДоИзменения"),	"СуммаБезНДСДоКорректировки");
		Состав.ЗагрузитьКолонку(Состав.ВыгрузитьКолонку("СуммаНДСДоИзменения"),		"СуммаНДСДоКорректировки");
		
	ИначеЕсли Не ИсправлениеКорректировки Тогда
		
		Для Каждого СтрокаТаблицы из Состав Цикл
			СтрокаТаблицы.КоличествоДоКорректировки  = 0;
			СтрокаТаблицы.ЦенаДоКорректировки        = 0;
			СтрокаТаблицы.ЦенаБезНДСДоКорректировки  = 0;
			СтрокаТаблицы.СуммаДоКорректировки       = 0;
			СтрокаТаблицы.СуммаБезНДСДоКорректировки = 0;
			СтрокаТаблицы.СуммаНДСДоКорректировки    = 0;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

//popn+
Функция ОформитьПерепродажу()
	
	ИсходныйДокументПоступления = УчетНДС.ПолучитьИсправляемыйДокументПоступления(ЭтотОбъект.ДокументПоступления, Истина);
	ИсходныйСклад = ИсходныйДокументПоступления.Склад;
	ИсходныйКурс = ИсходныйДокументПоступления.Курс;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество - Состав.КоличествоДоИзменения КАК Количество,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ФирмаПродажи
	|	КОНЕЦ КАК ФирмаПерепродажи,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ПроцентПрибыли
	|	КОНЕЦ КАК ПроцентПрибыли,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ТипДоговора
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ТипДоговора
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ТипДоговора
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ТипДоговора
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ТипДоговора
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ТипДоговора
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ТипДоговора
	|	КОНЕЦ КАК ТипДоговора
	|ИЗ
	|	Документ.КорректировкаПоступления.Состав КАК Состав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа1
	|		ПО Состав.Номенклатура.Код = Перепродажа1.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа2
	|		ПО Состав.Номенклатура.Родитель.Код = Перепродажа2.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа3
	|		ПО Состав.Номенклатура.Родитель.Родитель.Код = Перепродажа3.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа4
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Код = Перепродажа4.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа5
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Родитель.Код = Перепродажа5.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа6
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Родитель.Родитель.Код = Перепродажа6.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа7
	|		ПО (Перепродажа7.ГруппаНоменклатуры = &ПустаяСтрока)
	|ГДЕ
	|	Состав.Ссылка = &Ссылка
	|	И Состав.Количество <> Состав.КоличествоДоИзменения
	|	И (НЕ ВЫБОР
	|				КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа1.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа2.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа3.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа4.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа5.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа6.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа7.ФирмаПродажи
	|			КОНЕЦ ЕСТЬ NULL )
	|
	|СГРУППИРОВАТЬ ПО
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество - Состав.КоличествоДоИзменения,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ФирмаПродажи
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ПроцентПрибыли
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ТипДоговора
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ТипДоговора
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ТипДоговора
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ТипДоговора
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ТипДоговора
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ТипДоговора
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ТипДоговора
	|	КОНЕЦ
	|ИТОГИ ПО
	|	ФирмаПерепродажи,
	|	ТипДоговора");
	Запрос.УстановитьПараметр("ПустаяСтрока","                    ");
	Запрос.УстановитьПараметр("Дата",ЭтотОбъект.Дата);
	Запрос.УстановитьПараметр("Фирма",ЭтотОбъект.Фирма);
	Запрос.УстановитьПараметр("СЕ",ЭтотОбъект.СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	
	//{ СИТЕК БрыляковЕЮ 2014-10-23  
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество - Состав.КоличествоДоИзменения КАК Количество,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС
	|ПОМЕСТИТЬ ВТ_Состав
	|ИЗ
	|	Документ.КорректировкаПоступления.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &Ссылка
	|	И Состав.Количество <> Состав.КоличествоДоИзменения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	Запрос.Выполнить();
	ПравилаПерепродажи = РегистрыСведений.Перепродажа.ПравилаДляОформленияПерепродажиВДокументах(Запрос.МенеджерВременныхТаблиц, СтруктурнаяЕдиница, Фирма, Дата);
	// СИТЕК БрыляковЕЮ 2014-10-23 }
	
	//найдем уже созданные документ перепродажи
	
	тз = ПолучитьДокументыПерепродажи();
	
	//{ СИТЕК БрыляковЕЮ 2014-10-23  
	// Исходный текст --> 
	//ВыборкаФирмы=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	// <-- Исходный текст 
	ВыборкаФирмы = ПравилаПерепродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	// СИТЕК БрыляковЕЮ 2014-10-23 }
	Пока ВыборкаФирмы.Следующий() Цикл
		
		//{Ситек ДойниковПВ 2015-10-28 Если фирма покупки совпадает с фирмой продажи, ПередачаТоваровМеждуФирмами не формируем.} 
		Если ЭтотОбъект.Фирма = ВыборкаФирмы.ФирмаПерепродажи Тогда
			Продолжить;
		КонецЕсли;	
		//}Ситек ДойниковПВ 2015-10-28
		
		ВыборкаТипДоговора=ВыборкаФирмы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаТипДоговора.Следующий() Цикл
			
			//определим ссылку на уже существующий документ перепродажи
			ФлагУдаления = ЛОЖЬ;
			мсв = тз.НайтиСтроки(Новый Структура("ФирмаПолучатель,Фирма,ТипДоговора,Возврат",ЭтотОбъект.Фирма,ВыборкаТипДоговора.ФирмаПерепродажи,ВыборкаТипДоговора.ТипДоговора,ИСТИНА));//ШиловМВ 10.10.14 №000130241
			Если мсв.Количество() > 0 Тогда
				ДокОбъектВозврат = мсв[0].Ссылка.ПолучитьОбъект();
				//удалим ссылку из таблицы
				ФлагУдаления = ИСТИНА;
			Иначе
				ДокОбъектВозврат = Документы.ПередачаТоваровМеждуФирмами.СоздатьДокумент();
			КонецЕсли;	
			
			ДокОбъектВозврат.Возврат = ИСТИНА;
			ДокОбъектВозврат.Валюта = ЭтотОбъект.СтруктурнаяЕдиница.Валюта;
			ДокОбъектВозврат.Дата   = ЭтотОбъект.Дата;
			ДокОбъектВозврат.ДокОснование = ЭтотОбъект.Ссылка;
			ДокОбъектВозврат.ПометкаУдаления=Ложь;
			ДокОбъектВозврат.Кратность = 1;
			ДокОбъектВозврат.Курс = ИсходныйКурс;
			ДокОбъектВозврат.Склад = ИсходныйСклад;
			ДокОбъектВозврат.СтруктурнаяЕдиница = ЭтотОбъект.СтруктурнаяЕдиница;
			ДокОбъектВозврат.ТипДоговора = ВыборкаТипДоговора.ТипДоговора;
			//{{ШиловМВ 10.10.14 №000130241
			ДокОбъектВозврат.ФирмаПолучатель = ЭтотОбъект.Фирма;
			ДокОбъектВозврат.Фирма = ВыборкаТипДоговора.ФирмаПерепродажи;
			//ШиловМВ 10.10.14 №000130241}}
			
			ДокОбъектВозврат.Состав.Очистить();
			ВыборкаСостав = ВыборкаТипДоговора.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСостав.Следующий() Цикл
				Если ВыборкаСостав.Количество < 0 Тогда
					НоваяСтрока = ДокОбъектВозврат.Состав.Добавить();
					НоваяСтрока.ЕдиницаИзмерения = ВыборкаСостав.ЕдиницаИзмерения;
					НоваяСтрока.Количество = -ВыборкаСостав.Количество;
					НоваяСтрока.Коэффициент  = ВыборкаСостав.Коэффициент;
					НоваяСтрока.Номенклатура = ВыборкаСостав.Номенклатура;
					НоваяСтрока.СтавкаНДС    = ВыборкаСостав.СтавкаНДС;
					чЦена = ВыборкаСостав.Цена + Окр(ВыборкаСостав.Цена * ВыборкаСостав.ПроцентПрибыли / 100,2);
					НоваяСтрока.Цена     = чЦена;
					НоваяСтрока.Сумма    = Окр(-ВыборкаСостав.Количество * чЦена, 2); 
					НоваяСтрока.СуммаНДС    = Окр(НоваяСтрока.Сумма * НоваяСтрока.СтавкаНДС.Ставка /(100 + НоваяСтрока.СтавкаНДС.Ставка),2);
				КонецЕсли; 
			КонецЦикла;
			
			Если ДокОбъектВозврат.Состав.Количество() > 0 Тогда
				ДокОбъектВозврат.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
				Если ФлагУдаления Тогда
					тз.Удалить(мсв[0]);
				КонецЕсли;
			КонецЕсли;
			
			ФлагУдаления = ЛОЖЬ;
			//определим ссылку на уже существующий документ перепродажи
			мсв = тз.НайтиСтроки(Новый Структура("Фирма,ФирмаПолучатель,ТипДоговора,Возврат",ЭтотОбъект.Фирма,ВыборкаТипДоговора.ФирмаПерепродажи,ВыборкаТипДоговора.ТипДоговора,ЛОЖЬ));
			Если мсв.Количество() > 0 Тогда
				ДокОбъект = мсв[0].Ссылка.ПолучитьОбъект();
				//удалим ссылку из таблицы
				ФлагУдаления = ИСТИНА;
			Иначе
				ДокОбъект = Документы.ПередачаТоваровМеждуФирмами.СоздатьДокумент();
			КонецЕсли;	
			
			ДокОбъект.Возврат = ЛОЖЬ;
			ДокОбъект.Валюта = ЭтотОбъект.СтруктурнаяЕдиница.Валюта;
			ДокОбъект.Дата   = ЭтотОбъект.Дата;
			ДокОбъект.ДокОснование = ЭтотОбъект.Ссылка;
			ДокОбъект.ПометкаУдаления=Ложь;
			ДокОбъект.Кратность = 1;
			ДокОбъект.Курс = ИсходныйКурс;
			ДокОбъект.Склад = ИсходныйСклад;
			ДокОбъект.СтруктурнаяЕдиница = ЭтотОбъект.СтруктурнаяЕдиница;
			ДокОбъект.ТипДоговора = ВыборкаТипДоговора.ТипДоговора;
			ДокОбъект.Фирма = ЭтотОбъект.Фирма;
			ДокОбъект.ФирмаПолучатель = ВыборкаТипДоговора.ФирмаПерепродажи;
			
			ДокОбъект.Состав.Очистить();
			ВыборкаСостав = ВыборкаТипДоговора.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСостав.Следующий() Цикл
				Если ВыборкаСостав.Количество > 0 Тогда
					НоваяСтрока = ДокОбъект.Состав.Добавить();
					НоваяСтрока.ЕдиницаИзмерения = ВыборкаСостав.ЕдиницаИзмерения;
					НоваяСтрока.Количество = ВыборкаСостав.Количество;
					НоваяСтрока.Коэффициент  = ВыборкаСостав.Коэффициент;
					НоваяСтрока.Номенклатура = ВыборкаСостав.Номенклатура;
					НоваяСтрока.СтавкаНДС    = ВыборкаСостав.СтавкаНДС;
					чЦена = ВыборкаСостав.Цена + Окр(ВыборкаСостав.Цена * ВыборкаСостав.ПроцентПрибыли / 100,2);
					НоваяСтрока.Цена     = чЦена;
					НоваяСтрока.Сумма    = Окр(ВыборкаСостав.Количество * чЦена, 2); 
					НоваяСтрока.СуммаНДС    = Окр(НоваяСтрока.Сумма * НоваяСтрока.СтавкаНДС.Ставка /(100 + НоваяСтрока.СтавкаНДС.Ставка),2);
				КонецЕсли; 
			КонецЦикла;
			
			Если ДокОбъект.Состав.Количество() > 0 Тогда
				ДокОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
				Если ФлагУдаления Тогда
					тз.Удалить(мсв[0]);
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого с из тз цикл
		
		ДокОбъект = с.Ссылка.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЦикла;	
	
КонецФункции	

Функция УдалитьДокументыПерепродажи()
	тз = ПолучитьДокументыПерепродажи();
	Для каждого с из тз Цикл
		Попытка
			ДокОбъект = с.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат Истина;
		КонецПопытки;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Функция ПолучитьДокументыПерепродажи()
	ЗапросДокументы = Новый Запрос(
	"ВЫБРАТЬ
	|	СтруктураПодчиненности.Ссылка,
	|	СтруктураПодчиненности.Ссылка.Фирма КАК Фирма,
	|	СтруктураПодчиненности.Ссылка.ФирмаПолучатель КАК ФирмаПолучатель,
	|	СтруктураПодчиненности.Ссылка.ТипДоговора КАК ТипДоговора,
	|	СтруктураПодчиненности.Ссылка.Возврат КАК Возврат
	|ИЗ
	|	КритерийОтбора.СтруктураПодчиненности(&ДокументОснование) КАК СтруктураПодчиненности
	|ГДЕ
	|	СтруктураПодчиненности.Ссылка ССЫЛКА Документ.ПередачаТоваровМеждуФирмами");
	ЗапросДокументы.УстановитьПараметр("ДокументОснование",ЭтотОбъект.Ссылка);
	тз = ЗапросДокументы.Выполнить().Выгрузить();
	Возврат тз;
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		Отказ = УдалитьДокументыПерепродажи();
	КонецЕсли;
КонецПроцедуры
//popn-

//++Минин 0000144432 2015-11-05
Процедура ПроверитьИзмененияВДокументе(Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КорректировкаПоступленияСостав.НомерСтроки
	|ИЗ
	|	Документ.КорректировкаПоступления.Состав КАК КорректировкаПоступленияСостав
	|ГДЕ
	|	КорректировкаПоступленияСостав.Ссылка = &Ссылка
	|	И (КорректировкаПоступленияСостав.Количество <> КорректировкаПоступленияСостав.КоличествоДоИзменения
	|			ИЛИ КорректировкаПоступленияСостав.Цена <> КорректировкаПоступленияСостав.ЦенаДоИзменения
	|			ИЛИ КорректировкаПоступленияСостав.СуммаНДС <> КорректировкаПоступленияСостав.СуммаНДСДоИзменения
	|			ИЛИ КорректировкаПоступленияСостав.Сумма <> КорректировкаПоступленияСостав.СуммаДоИзменения
	|			ИЛИ КорректировкаПоступленияСостав.СтавкаНДС <> КорректировкаПоступленияСостав.СтавкаНДСДоИзменения)";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Отказ=Истина;
	КонецЕсли;
КонецПроцедуры
//--Минин 0000144432 2015-11-05