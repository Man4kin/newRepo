&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЦенаБезНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуБезНДСВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Элементы.Состав.ТекущиеДанные, ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СуммаБезНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыБезНДСВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() И НЕ Параметры.Свойство("КлючПН") Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДокументПоступления) Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Документ Корректировка поступления необходимо вводить на основании документов ""Приходная накладная"" или ""Корректировка поступления""!'"));
			Возврат;
		Иначе
			ДокументСсылка = УчетНДС.ПолучитьИсправляемыйДокументПоступления(Объект.ДокументПоступления, Ложь);
			ДокументОснование = Документы.КорректировкаПоступления.ПолучитьПоследнийКорректирующийДокумент(ДокументСсылка, Объект.Ссылка);
			Если Объект.ДокументПоступления <> ДокументОснование 
				И Объект.ДокументПоступления.Дата < ДокументОснование.Дата Тогда
				ПоследнийДокументИсправления = ДокументОснование;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	//{БредовЮГ 2014-12-03 Наряд№000135628
	Элементы.Izh_ОбработанЦВД.Видимость = ПараметрыСеанса.ЭтоЦентр;
	Izh_ОбработанЦВД = РегистрыСведений.Izh_СостояниеДокумента.ДокументЗафиксированВСостоянии(Объект,Перечисления.Izh_СостояниеДокумента.ПроверенЦВД);
	//БредовЮГ 2014-12-03 Наряд№000135628}
	//Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
	//	Элементы.ОбработанЦВД.Доступность = Ложь;
	//	Элементы.ОбработанЦВД.Видимость = ПараметрыСеанса.ИспользованиеЦВД;
	//КонецЕсли;
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	Элементы.кнпДвижения.Видимость = ПараметрыСеанса.ЭтоЦентр;
	//{{ШиловМВ 27.10.14 №000131251
	//Если ПараметрыСеанса.ИспользованиеЦВД Тогда
	//	Элементы.СоставЕдиницаИзмерения.ТолькоПросмотр = Истина;
	//	Элементы.СоставВес.ТолькоПросмотр = Истина;
	//	Элементы.СоставЕдиницаВеса.ТолькоПросмотр = Истина;
	//	Если ПараметрыСеанса.ЭтоЦентр Тогда
	//		Элементы.СоставКоличество.ТолькоПросмотр = Истина;
	//	Иначе
	//		Элементы.СоставЦена.ТолькоПросмотр = Истина;
	//		Элементы.СоставСумма.ТолькоПросмотр = Истина;
	//		Элементы.СоставСтавкаНДС.ТолькоПросмотр = Истина;
	//		Элементы.СоставСуммаНДС.ТолькоПросмотр = Истина;
	//	КонецЕсли;
	//КонецЕсли;
	//ШиловМВ 27.10.14 №000131251}}
	//{БредовЮГ 2014-11-18 Наряд №000134204
	//Если ПараметрыСеанса.ИспользованиеЦВД Тогда
	//ТекСтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	//Если ПараметрыСеанса.ЭтоЦентр Тогда
	//	Элементы.СоставЕдиницаИзмерения.ТолькоПросмотр = Истина;
	//	Элементы.СоставВес.ТолькоПросмотр = Истина;
	//	Элементы.СоставЕдиницаВеса.ТолькоПросмотр = Истина;
	//	Элементы.СоставКоличество.ТолькоПросмотр = Истина;
	//КонецЕсли;
	//КонецЕсли;
	//БредовЮГ 2014-11-18 Наряд №000134204}
	Элементы.кнпДвижения.Пометка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюЭлементов()
	ИсправлениеКорректировки = ЭтоИсправлениеКорректировки();
конецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(ПоследнийДокументИсправления) Тогда
		ТекстВопроса = НСтр("ru = 'Для указанного документа существуют более поздние корректировки.
								|Использовать последнюю введенную корректировку?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			УстановитьДокументПоступления(ПоследнийДокументИсправления);
		//++Минин 0000144001 2015-10-30
		Иначе 
			Отказ = Истина;
		//--Минин 0000144001 2015-10-30
		КонецЕсли;
	КонецЕсли;

	УправлениеДоступностьюЭлементов();
	УстановитьВидимостьДвижений();
КонецПроцедуры

&НаСервере
Процедура УстановитьДокументПоступления(НовыйДокументПоступления)
	
	Объект.ДокументПоступления = НовыйДокументПоступления;
	Документы.КорректировкаПоступления.ЗаполнитьПоДокументу(Объект);
	
КонецПроцедуры

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	БезНДС = ПолучитьСтавкуБезНДС();
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка);	
		Если ТекСтрока <> Неопределено Тогда
			Если ПолучитьНеПлательщикНДС() Тогда
				//popn+
				ТекСтрока.СтавкаНДС = БезНДС;
				Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
					ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
				КонецЕсли;
				//popn-
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтавкуБезНДС()
	Возврат Справочники.СтавкиНДС.БезНДС;
КонецФункции

&НаСервере
Функция ПолучитьНеПлательщикНДС()
	Возврат Объект.Контрагент.НеПлательщикНДС;
КонецФункции

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ПараметрыФормы = ПодготовитьПараметрыДляПодбора();
	Если ОткрытьФормуМодально("ОбщаяФорма.ПодборНоменклатуры",Новый Структура("СтруктураПараметров",ПараметрыФормы),ЭтаФорма) <> "ОК" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	БезНДС = ПолучитьСтавкуБезНДС();
	ОбработатьПодборНаСервере(ПараметрыФормы.АдресВременногоХранилища);
	
	Для Каждого Строка Из ВыбраннаяНоменклатура Цикл
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Строка,Элементы.состав,СтандартнаяОбработка,Строка.Количество);
		Если ТекСтрока <> Неопределено Тогда
			Если ПолучитьНеПлательщикНДС() Тогда
				//popn+
				ТекСтрока.СтавкаНДС = БезНДС;
				Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
					ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
				КонецЕсли;
				//popn-
			КонецЕсли;	
		КонецЕсли;	

	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстЗапросаПодбораНоменклатуры()
	Возврат "ВЫБРАТЬ
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	МАКСИМУМ(НоменклатураКонтрагентаСрезПоследних.Цена) КАК Цена,
	|	СписокНоменклатуры.Группа,
	|	ВЫБОР
	|		КОГДА СписокНоменклатуры.ПометкаУдаления
	|			ТОГДА ВЫБОР
	|					КОГДА СписокНоменклатуры.Группа = 0
	|						ТОГДА 2
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНоменклатуры.Группа = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка,
	|	СписокНоменклатуры.Ссылка КАК Номенклатура,
	|	СписокНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагентаСрезПоследних
	|		ПО СписокНоменклатуры.Ссылка = НоменклатураКонтрагентаСрезПоследних.Номенклатура
	|			И (НоменклатураКонтрагентаСрезПоследних.Контрагент = &Контрагент)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							НоменклатураКонтрагентаСрезПоследних.Номенклатура
	|						ИЗ
	|							РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагентаСрезПоследних
	|						ГДЕ
	|							НоменклатураКонтрагентаСрезПоследних.Контрагент = &Контрагент
	|							И (НоменклатураКонтрагентаСрезПоследних.ДатаПрекращенияПоставок > &ДатаДокумента
	|								ИЛИ НоменклатураКонтрагентаСрезПоследних.ДатаПрекращенияПоставок = ДАТАВРЕМЯ(1, 1, 1)))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							СтатусыНоменклатуры.Номенклатура
	|						ИЗ
	|							РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	|						ГДЕ
	|							СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|							И СтатусыНоменклатуры.Статус = ЗНАЧЕНИЕ(перечисление.статусытоваров.активный))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	СписокНоменклатуры.Группа,
	|	СписокНоменклатуры.ПометкаУдаления,
	|	СписокНоменклатуры.Ссылка,
	|	СписокНоменклатуры.Ссылка";
КонецФункции

&НаСервере
Функция ПодготовитьПараметрыДляПодбора()
	СтруктураПараметровПодбора = Новый Структура("ТекстЗапроса,Параметры,АдресВременногоХранилища",);
	СтруктураПараметровПодбора.АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Неопределено,ЭтаФорма.УникальныйИдентификатор);
	СтруктураПараметровПодбора.ТекстЗапроса = ТекстЗапросаПодбораНоменклатуры();
	СтруктураПараметрыЗапроса = Новый Структура();
	СтруктураПараметрыЗапроса.Вставить("Структурнаяединица",объект.структурнаяЕдиница);
	СтруктураПараметрыЗапроса.Вставить("Контрагент",объект.Контрагент);
	СтруктураПараметрыЗапроса.Вставить("датадокумента",объект.Дата);
	СтруктураПараметровПодбора.Параметры = СтруктураПараметрыЗапроса;
	Возврат СтруктураПараметровПодбора;	
КонецФункции

&НаСервере
Процедура ОбработатьПодборНаСервере(АдресХранилища)
	тзЗначений = ПолучитьИзВременногоХранилища(АдресХранилища);
	ЗначениеВРеквизитФормы(тзЗначений,"ВыбраннаяНоменклатура");
КонецПроцедуры




&НаСервереБезКонтекста
Функция ПолучитьПустуюСсылкуКонтрагента()
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();
	
КонецФункции


&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
		ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура РежимКорректировкиПриИзменении(Элемент)
	УправлениеДоступностьюЭлементов();
КонецПроцедуры


&НаСервере
Функция ЭтоИсправлениеКорректировки()
	
	ИсправлениеКорректировки = ЗначениеЗаполнено(Объект.ИсправляемыйДокумент)
		И (ТипЗнч(Объект.ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаПоступления"))
		И (Объект.ИсправляемыйДокумент.РежимКорректировки
			= Перечисления.РежимыКорректировок.СогласованноеИзменение);
	Возврат ИсправлениеКорректировки;
	
КонецФункции


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ЗапросПоОбороту(Команда=Неопределено)
	Элементы.кнпДвижения.Пометка = НЕ Элементы.кнпДвижения.Пометка;
	УстановитьВидимостьДвижений();
	Если Элементы.кнпДвижения.Пометка И ТаблицаДвижений.Количество()=0 Тогда
		ЗапросПоОборотуНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДвижений()
	Элементы.ТаблицаДвижений.Видимость = Элементы.кнпДвижения.Пометка;
КонецПроцедуры

&НаСервере
Процедура ЗапросПоОборотуНаСервере()
	ПервичныйДокументПоступления = УчетНДС.ПолучитьИсправляемыйДокументПоступления(Объект.ДокументПоступления, Истина);
	ДатаНачала = ПервичныйДокументПоступления.Дата;
	ДатаОкончания = Объект.Дата;
	СтруктурнаяЕдиница = Объект.СтруктурнаяЕдиница;
	Склад = ПервичныйДокументПоступления.Склад;
	Фирма = Объект.Фирма;
	МассивНоменклатуры = Новый Массив;
	Для Каждого СтрокаТЧ из Объект.Состав Цикл
		Если СтрокаТЧ.Количество <> СтрокаТЧ.КоличествоДоИзменения ИЛИ СтрокаТЧ.Цена <> СтрокаТЧ.ЦенаДоИзменения 
			ИЛИ  СтрокаТЧ.СуммаНДС <> СтрокаТЧ.СуммаНДСДоИзменения ИЛИ  СтрокаТЧ.Сумма <> СтрокаТЧ.СуммаДоИзменения 
			ИЛИ СтрокаТЧ.СтавкаНДС <> СтрокаТЧ.СтавкаНДСДоИзменения	ИЛИ СтрокаТЧ.СуммаБезНДС <> СтрокаТЧ.СуммаБезНДСДоИзменения Тогда
			МассивНоменклатуры.Добавить(СтрокаТЧ.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	Если МассивНоменклатуры.Количество()<>0 Тогда
		тзДвижений=Izh_ОбменДаннымиRests.ОтправкаЗапроса_ReceiveRegisterRecords(ДатаНачала,ДатаОкончания,Фирма,Склад,СтруктурнаяЕдиница,МассивНоменклатуры);
		ЗначениеВДанныеФормы(тзДвижений,ТаблицаДвижений);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекДанные <> Неопределено И Элементы.кнпДвижения.Пометка Тогда
		Элементы.ТаблицаДвижений.ОтборСтрок= Новый ФиксированнаяСтруктура("Номенклатура",ТекДанные.Номенклатура);
	КонецЕсли;	
КонецПроцедуры

//{БредовЮГ 2015-07-23 Наряд 000157632 от 23.07.2015 10:43:36
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Izh_ОбщегоНазначенияСервер.ПроверитьМПЦ(ТекущийОбъект,"Состав","Контрагент",Отказ);
КонецПроцедуры
//БредовЮГ  2015-07-23 Наряд 000157632 от 23.07.2015 10:43:36} 