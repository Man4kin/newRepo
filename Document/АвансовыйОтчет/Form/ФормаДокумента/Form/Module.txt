
&НаКлиенте
Процедура Валюта(Команда)
	РаботаСФормамиКлиент.ОткрытьФормуВводаВалютыКурса(Объект);
	ОбновитьПредставлениеВалюты();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеВалюты()
	Если Объект.Курс = 1 Тогда
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = Объект.Валюта;
	Иначе
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = ""+Объект.Валюта+" "+Объект.Курс;
	КонецЕсли;	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ИспользованиеВалюты(СтруктурнаяЕдиница)
	Возврат ПолучитьФункциональнуюОпцию("ИспользованиеВалюты",Новый Структура("СтруктурнаяЕдиница,ПараметрСтруктурнойЕдиницы",СтруктурнаяЕдиница,ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеВалюты));
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКурсВалютыНаДату(Валюта,Дата)
	Возврат РаботаСКурсамиВалютКлиентСервер.ПолучитьКурсВалютыНаДату(Валюта,Дата);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВалютуСтруктурнойЕдиницы(се)
	Возврат се.Валюта;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	РассчитатьПредыдущийАванс();
КонецПроцедуры

&НаСервере
Процедура РассчитатьПредыдущийАванс()
	Если Объект.Сотрудник.Пустая() ИЛИ Объект.Фирма.Пустая() ИЛИ Объект.Валюта.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДенежныеСредстваОстатки.СуммаОстаток ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ДенежныеСредстваОстатки.СуммаОстаток
	|	КОНЕЦ КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(
	|			&ДатаОстатков,
	|			Фирма = &Фирма
	|				И ДенежнаяЯчейка = &Сотрудник и Валюта=&Валюта) КАК ДенежныеСредстваОстатки";
	Запрос.УстановитьПараметр("ДатаОстатков", Объект.Дата);
	Запрос.УстановитьПараметр("Фирма", Объект.Фирма);
	Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
	Запрос.УстановитьПараметр("Валюта", Объект.Валюта);
	
	чИтогоВыданоПоОрдерам = Объект.Авансы.Итог("Сумма");
	
	Результат = Запрос.Выполнить();
	табл = Результат.Выгрузить();
	Если Результат.Пустой() Тогда
		чСуммаОстатка = -чИтогоВыданоПоОрдерам;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		чСуммаОстатка = Выборка.СуммаОстаток - чИтогоВыданоПоОрдерам;
	КонецЕсли;
	
	Если чСуммаОстатка < 0 Тогда
		Объект.ПредыдущийАванс = -чСуммаОстатка;
		Объект.ПерерасходПоПредыдущемуАвансу = Истина;
	Иначе
		Объект.ПредыдущийАванс = чСуммаОстатка;
		Объект.ПерерасходПоПредыдущемуАвансу = Ложь;
	КонецЕсли;

	
	
КонецПроцедуры	

&НаКлиенте
Процедура АвансыРКОПриИзменении(Элемент)
	ТекСтрока = Элементы.Авансы.ТекущиеДанные;
	
	струкРКО = ПолучитьДанныеРКО(ТекСтрока.РКО);
	
	ТекСтрока.Сумма = струкРКО.Сумма;
	
	Если Объект.Фирма.Пустая() Тогда
		Объект.Фирма = струкРКО.Фирма;
	КонецЕсли;
	Если Объект.Сотрудник.Пустая() Тогда
		Объект.Сотрудник = струкРКО.Сотрудник;
	КонецЕсли;
	Если Объект.Валюта.Пустая() Тогда
		Объект.Валюта = струкРКО.Валюта;
	КонецЕсли;
		
	РассчитатьПредыдущийАванс();

КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеРКО(РКО)
	
	Возврат Новый Структура("Сумма,Сотрудник,Валюта,Фирма",РКО.Сумма,РКО.Аналитика,РКО.Валюта,РКО.Фирма);
	
КонецФункции	

&НаКлиенте
Процедура СоставСуммаПоОтчетуПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока.Сумма = 0 Тогда 
		ТекСтрока.Сумма = ТекСтрока.СуммаПоОтчету;
	КонецЕсли;	
КонецПроцедуры

//popn+
&НаКлиенте
Процедура СоставСтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	СтатьяДДС = ТекСтрока.СтатьяДвиженияДенежныхСредств;
	ТекСтрока.КлассификаторДДС = ПолучитьНаСервереКлассификаторСтатьиДДС(СтатьяДДС);
	ОпределитьТипИДоступностьАналитикиВТекущейСтроке(ТекСтрока);
КонецПроцедуры

&НаСервере
Функция ПолучитьНаСервереКлассификаторСтатьиДДС(СтатьяДДС)
	Возврат СтатьяДДС.КлассификацияДенежнойОперацииПоУмолчанию;
КонецФункции

&НаСервере
Функция ПолучитьНаСервереТипАналитики(КлассификаторДДС)
	Если ЗначениеЗаполнено(КлассификаторДДС) Тогда
		Возврат КлассификаторДДС.ТипЗначения;
	Иначе
		Возврат Новый ОписаниеТипов();
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СоставСтатьяДвиженияДенежныхСредствНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
	ФормаВыбора = ПолучитьФорму("Справочник.СтатьиДвиженияДенежныхСредств.ФормаВыбора",,Элемент);
	
	ОтборКлассификацияДенежнойОперацииПоУмолчанию = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборКлассификацияДенежнойОперацииПоУмолчанию.ЛевоеЗначение = ФормаВыбора.Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти("КлассификацияДенежнойОперацииПоУмолчанию").Поле;
	ОтборКлассификацияДенежнойОперацииПоУмолчанию.Использование = Истина;
	ОтборКлассификацияДенежнойОперацииПоУмолчанию.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	СписокДоступныхЗначений = Новый СписокЗначений;
	СписокДоступныхЗначений.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.КлассификаторДДС.РасчетыСПоставщиками"));
	СписокДоступныхЗначений.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.КлассификаторДДС.ПрочиеВыплатыИПоступления"));
	ОтборКлассификацияДенежнойОперацииПоУмолчанию.ПравоеЗначение = СписокДоступныхЗначений;
	ОтборКлассификацияДенежнойОперацииПоУмолчанию.Представление = "Доступные для АО классификации";
	
	ФормаВыбора.Открыть();

	//УсловияОтбора = Новый Структура("КлассификацияДенежнойОперацииПоУмолчанию",ПредопределенноеЗначение("ПланВидовХарактеристик.КлассификаторДДС.РасчетыСПоставщиками"));
	//ПараметрыФормы = Новый Структура("Отбор", УсловияОтбора);
	//ОткрытьФорму("Справочник.СтатьиДвиженияДенежныхСредств.ФормаВыбора",ПараметрыФормы,Элемент);
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
	КонецЕсли;	
КонецПроцедуры
//popn-

//+Зернятко А.В.@09.08.2013 - //RS-106. Основное направление инкассации
&НаСервере
Функция ПолучитьНаСервереКлассификаторДДС(ИмяКлассификатораДДС)
	Возврат ПланыВидовХарактеристик.КлассификаторДДС[ИмяКлассификатораДДС];
КонецФункции

&НаСервере
Функция ПолучитьНаСервереТипАналитикиСтатьиДДС(СтатьяДДС)
	Если ЗначениеЗаполнено(СтатьяДДС.ТипАналитики) ТОгда
		Возврат Новый ОписаниеТипов(СтатьяДДС.ТипАналитики);
	Иначе
		Возврат Новый ОписаниеТипов();
	КонецЕсли;	
КонецФункции

&НаКлиенте
Процедура ОпределитьТипИДоступностьАналитикиВТекущейСтроке(ТекСтрока)
	Если ТекСтрока.КлассификаторДДС = ПолучитьНаСервереКлассификаторДДС("ПрочиеВыплатыИПоступления") ТОгда
		ЭтаФорма.Элементы.СоставАналитикаЗатрат.ОграничениеТипа = ПолучитьНаСервереТипАналитикиСтатьиДДС(ТекСтрока.СтатьяДвиженияДенежныхСредств);
	Иначе
		ЭтаФорма.Элементы.СоставАналитикаЗатрат.ОграничениеТипа = ПолучитьНаСервереТипАналитики(ТекСтрока.КлассификаторДДС);
	КонецЕсли;
	ЭтаФорма.Элементы.СоставАналитикаЗатрат.ТолькоПросмотр = ЭтаФорма.Элементы.СоставАналитикаЗатрат.ОграничениеТипа = Новый ОписаниеТипов();
КонецПроцедуры

&НаКлиенте
Процедура СоставПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено ТОгда
		ОпределитьТипИДоступностьАналитикиВТекущейСтроке(ТекСтрока);
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры
///Зернятко А.В.@ - конец блока 
