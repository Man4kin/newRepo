
// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьАО1(МассивОбъектов,ОбъектыПечати)  экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвансовыйОтчет_АвансовыйОтчет";
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.АвансовыйОтчет.АО1");
	НомерСтрокиНачало = 0;
	для каждого док из массивобъектов цикл
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	"""" КАК ДолжностьПодотчетногоЛицаПредставление,
		|	АвансовыйОтчет.Валюта.Представление КАК ПредставлениеВалютыДокумента,
		|	"""" КАК ТабельныйНомер,
		|	АвансовыйОтчет.Фирма КАК ПредставлениеОрганизации,
		|	АвансовыйОтчет.Фирма КАК Фирма,
		|	АвансовыйОтчет.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница, //+Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		|	АвансовыйОтчет.Дата КАК Дата,
		|	АвансовыйОтчет.СтруктурнаяЕдиница.Наименование КАК ПредставлениеПодразделения,
		|	"""" КАК ОрганизацияПоОКПО,
		|	АвансовыйОтчет.НазначениеАванса,
		|	АвансовыйОтчет.Сотрудник,
		|	"""" КАК СотрудникФИО,
		|	"""" КАК СотрудникИмя,
		|	"""" КАК СотрудникОтчество,
		|	АвансовыйОтчет.КоличествоПриложенныхДокументов,
		|	АвансовыйОтчет.КоличествоПриложенныхЛистов
		|ИЗ
		|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
		|ГДЕ
		|	АвансовыйОтчет.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Док.Ссылка);
		
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		// ТИТУЛЬНЫЙ ЛИСТ
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		//Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Док.ссылка.Фирма,Док.ссылка.Дата);
		Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма,Шапка.Дата,Шапка.СтруктурнаяЕдиница);
		///Зернятко А.В.@ - конец блока
		ОбластьМакета.Параметры.Заполнить(Руководители);
		ОбластьМакета.Параметры.РуководительПредставление=Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ДолжностьРуководителяПредставление=Руководители.РуководительДолжность;
		ОбластьМакета.Параметры.ГлавныйБухгалтерПредставление=Руководители.ФИОГлавногоБухгалтера;
		ОбластьМакета.Параметры.КассирПредставление=Руководители.ФИОКассира;
		
		ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица=
		Шапка.СотрудникФИО+" "+Шапка.СотрудникИмя+" "+Шапка.СотрудникОтчество;
		
		ОбластьМакета.Параметры.НомерДокумента=Док.Номер;
		ОбластьМакета.Параметры.ДатаДокумента=Док.Дата;
		
		ПолученоИзКассы = Док.Авансы.Итог("Сумма");
		
		//ДанныеВал=ОмОбщиеПроцедурыИФункции.ПолучитьКурсВалюты(Валюта, Дата);
		
		//Если НЕ (Валюта = справочники.Валюты.рубльВалютаРегламентированногоУчета) Тогда
		//	//Если валюта документа не рубли - выводим ПолученоИзКассыВВалюте
		//	ОбластьМакета.Параметры.ПолученоИзКассыВВалюте=ПолученоИзКассы;
		//	//Здесь все переменные которые надо пересчитать в рубли
		//	ПредАванс=ПредыдущийАванс*ДанныеВал;	
		//	ПолученоИзКассы=ПолученоИзКассы*ДанныеВал;
		//	Израсходовано =ИтогоСумма*ДанныеВал;
		//Иначе
		Израсходовано =Док.ИтогоСумма; //переменная Израсходовано должна появиться при любой валюте
		ПредАванс=Док.ПредыдущийАванс; //новая переменная - нельзя чтобы изменялся реквизит документа при печати
		//КонецЕсли;
		
		ОбластьМакета.Параметры.ИтогоПолучено=ПолученоИзКассы;
		ОбластьМакета.Параметры.ПолученоИзКассы=ПолученоИзКассы;
		ОбластьМакета.Параметры.Израсходовано=Израсходовано;
		
		Если  Док.ПерерасходПоПредыдущемуАвансу Тогда
			ОбластьМакета.Параметры.НачальныйПерерасход=ПредАванс; // используется новая переменная
			СуммаДоДокумента=-ПредАванс;
		Иначе  //Остаток
			ОбластьМакета.Параметры.НачальныйОстаток=ПредАванс; // используется новая переменная
			СуммаДоДокумента=ПредАванс;
		КонецЕсли;
		
		ОстатокНаКонец=СуммаДоДокумента+ПолученоИзКассы-Израсходовано;
		Если ОстатокНаКонец>=0 Тогда
			ОбластьМакета.Параметры.КонечныйОстаток=ОстатокНаКонец;
		Иначе
			ОбластьМакета.Параметры.КонечныйПерерасход=-ОстатокНаКонец;
		КонецЕсли;
		
		ИспСумма=Окр(Израсходовано, 2);
		РубСумма=Цел(Израсходовано);
		КопСумма=100*(ИспСумма-РубСумма);
		Если КопСумма=0 Тогда
			КопСумма="00";
		КонецЕсли;
		ОбластьМакета.Параметры.ИзрасходованоРуб=РубСумма;
		ОбластьМакета.Параметры.ИзрасходованоКоп=КопСумма;
		ОбластьМакета.Параметры.СуммаОтчетаПрописью = ЧислоПрописью(ИспСумма,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
		
		ЗапросПоПроводкам = Новый Запрос();
		ЗапросПоПроводкам.УстановитьПараметр("Ссылка", Док.Ссылка);
		ЗапросПоПроводкам.Текст = 
		"ВЫБРАТЬ
		|	"""" КАК КоррСчет,
		|	СУММА(АвансовыйОтчетСостав.Сумма) КАК Сумма
		|ИЗ
		|	Документ.АвансовыйОтчет.Состав КАК АвансовыйОтчетСостав
		|ГДЕ
		|	АвансовыйОтчетСостав.Ссылка = &Ссылка";
		ВыборкаПроводок = ЗапросПоПроводкам.Выполнить().Выбрать();
		
		Счетчик = 1;
		Пока ВыборкаПроводок.Следующий() Цикл
			Если Счетчик = 9 тогда
				Прервать;
			КонецЕсли;
			
			//Если Валюта=ВалютаРегламентированногоУчета Тогда
			ОбластьМакета.Параметры["СубСчетДебет"  + (Счетчик)] = ВыборкаПроводок.КоррСчет;
			ОбластьМакета.Параметры["СуммаДебет"    + (Счетчик)] = ВыборкаПроводок.Сумма;
			ОбластьМакета.Параметры["СубСчетКредит" + (Счетчик)] = "71";
			ОбластьМакета.Параметры["СуммаКредит"   + (Счетчик)] = ВыборкаПроводок.Сумма;	
			//Иначе
			//	ОбластьМакета.Параметры["СубСчетДебет"  + (Счетчик)] = ВыборкаПроводок.КоррСчет;
			//	ОбластьМакета.Параметры["СуммаДебет"    + (Счетчик)] = ВыборкаПроводок.Сумма*ДанныеВал;
			//	ОбластьМакета.Параметры["СубСчетКредит" + (Счетчик)] = ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал;
			//	ОбластьМакета.Параметры["СуммаКредит"   + (Счетчик)] = ВыборкаПроводок.Сумма*ДанныеВал;
			//КонецЕсли;
			
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// ОБОРОТНАЯ СТОРОНА
		ЗапросСостав = Новый Запрос();
		ЗапросСостав.УстановитьПараметр("Ссылка", Док.Ссылка);
		ЗапросСостав.Текст = 
		"ВЫБРАТЬ
		|	АвансовыйОтчетСостав.НомерСтроки,
		|	АвансовыйОтчетСостав.ДатаДокументаРасхода,
		|	АвансовыйОтчетСостав.НомерДокументаРасхода,
		|	АвансовыйОтчетСостав.НаименованиеДокументаРасхода,
		|	АвансовыйОтчетСостав.СуммаПоОтчету КАК СуммаПоОтчету,
		|	АвансовыйОтчетСостав.Сумма КАК СуммаКУчету,
		|	"""" КАК КоррСчетПредставление
		|ИЗ
		|	Документ.АвансовыйОтчет.Состав КАК АвансовыйОтчетСостав
		|ГДЕ
		|	АвансовыйОтчетСостав.Ссылка = &Ссылка
		|ИТОГИ
		|	СУММА(СуммаПоОтчету),
		|	СУММА(СуммаКУчету)
		|ПО
		|	ОБЩИЕ";
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Подготавливаем подвал авансовго отчета
		ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакетаПодвал.Параметры.ПредставлениеПодотчетногоЛица=
		Шапка.СотрудникФИО+" "+Шапка.СотрудникИмя+" "+Шапка.СотрудникОтчество;
		
		СоставВыборка =ЗапросСостав.Выполнить().Выбрать();
		Если СоставВыборка.Следующий() Тогда // Общий итог
			//Если Валюта=ВалютаРегламентированногоУчета Тогда
			ОбластьМакетаПодвал.Параметры.ИтогоПоОтчету=СоставВыборка.СуммаПоОтчету;	
			ОбластьМакетаПодвал.Параметры.ИтогоПоУчету=СоставВыборка.СуммаКУчету;	
			//Иначе
			//	ОбластьМакетаПодвал.Параметры.ИтогоПоОтчетуВВалюте=СоставВыборка.СуммаПоОтчету;	
			//	ОбластьМакетаПодвал.Параметры.ИтогоПоУчетуВВалюте=СоставВыборка.СуммаКУчету;
			//	ОбластьМакетаПодвал.Параметры.ИтогоПоОтчету=СоставВыборка.СуммаПоОтчету*ДанныеВал;	
			//	ОбластьМакетаПодвал.Параметры.ИтогоПоУчету=СоставВыборка.СуммаКУчету*ДанныеВал;
			//КонецЕсли;
		КонецЕсли;		
		
		
		// Выводим табличные части
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Пока СоставВыборка.Следующий() Цикл
			ОбластьМакета.Параметры.Заполнить(СоставВыборка);
			ОбластьМакета.Параметры.ДебетСубСчета = СоставВыборка.КоррСчетПредставление;
			//Если Валюта=ВалютаРегламентированногоУчета Тогда
			ОбластьМакета.Параметры.ПоОтчету=СоставВыборка.СуммаПоОтчету;	
			ОбластьМакета.Параметры.ПоУчету=СоставВыборка.СуммаКУчету;	
			//Иначе
			//	ОбластьМакета.Параметры.ПоОтчетуВВалюте=СоставВыборка.СуммаПоОтчету;	
			//	ОбластьМакета.Параметры.ПоУчетуВВалюте=СоставВыборка.СуммаКУчету;
			//	ОбластьМакета.Параметры.ПоОтчету=СоставВыборка.СуммаПоОтчету*ДанныеВал;	
			//	ОбластьМакета.Параметры.ПоУчету=СоставВыборка.СуммаКУчету*ДанныеВал;
			//КонецЕсли;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		//выводим подвал
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы+1;
	конеццикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьАвансовогоОтчета()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,
	ОбъектыПечати, ПараметрыВывода) Экспорт
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АО1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"АО1", "АО-1",ПечатьАО1(массивОбъектов,ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

