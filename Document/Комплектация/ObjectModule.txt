Функция ПровестиКомплектацию(Объект,Режим)
	
	прчКодОперацииПередачаНаКомплектацию     = Перечисления.КодыОпераций.ПередачаНаКомплектацию;
	прчКодОперацииПередачаИзКомплектации     = Перечисления.КодыОпераций.ПередачаИзКомплектации;
	
	прчКупляПродажа   = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия       = Перечисления.ТипыДоговоров.Комиссия;
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	тзОстаткиНоменклатуры = Объект.Движения.ОстаткиНоменклатуры.Выгрузить();
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	тзРеализация = Неопределено;

	флВозврата = Ложь;
	Если ЭтотОбъект.Разукомплектация Тогда
		
		Запрос=Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	Комплектация.Комплект КАК Номенклатура,
		|	Комплектация.Склад КАК МестоХранения,
		|	Комплектация.Фирма КАК Фирма,
		//++БИТ БВО
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа) КАК Статус,
		//--БИТ БВО
		|	СУММА(ВЫРАЗИТЬ(Комплектация.Количество * Комплектация.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
		|	СУММА(0) КАК Сумма,
		|	СУММА(0) КАК СуммаНДС,
		|	СУММА(0) КАК СтавкаНДС
		|ПОМЕСТИТЬ врСостав
		|ИЗ
		|	Документ.Комплектация КАК Комплектация
		|ГДЕ
		|	Комплектация.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Комплектация.Комплект,
		|	Комплектация.Склад,
		|	Комплектация.Фирма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врСостав.Номенклатура,
		|	врСостав.МестоХранения,
		|	врСостав.Фирма
		|ИЗ
		|	врСостав КАК врСостав";
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		тз=Запрос.Выполнить().Выгрузить();
		тз.Свернуть("Номенклатура,МестоХранения,Фирма");
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = тз;
		Для каждого к из тз.Колонки Цикл
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
		КонецЦикла;
		Блокировка.Заблокировать();
		
		Параметры = Новый Структура;
		Параметры.Вставить("Запрос",Запрос);
		Параметры.Вставить("Объект",Объект);
		Параметры.Вставить("КодОперации",прчКодОперацииПередачаНаКомплектацию);
		Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
		Параметры.Вставить("тзРеализация",тзРеализация);
		Параметры.Вставить("РежимПроведения",Режим);
		Параметры.Вставить("Фирма",Объект.Фирма);
		флВозврата = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);

		Запрос=Новый Запрос();
		Запрос.Текст=
		"ВЫБРАТЬ
		|	КомплектацияСостав.Ссылка КАК Регистратор,
		|	КомплектацияСостав.Ссылка.Дата КАК Период,
		|	&ВидДвиженияПриход КАК ВидДвижения,
		//++БИТ БВО №0000129900
		//|	ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа) КАК Статус,
		|	ВЫБОР КОГДА КомплектацияСостав.ТипРеализацииТовара = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ПустаяСсылка) ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
		|			ИНАЧЕ КомплектацияСостав.ТипРеализацииТовара
		|	КОНЕЦ КАК Статус,		
		//--БИТ БВО №0000129900
		|	КомплектацияСостав.Номенклатура,
		|	КомплектацияСостав.ЕдиницаИзмерения,
		|	ИСТИНА КАК Активность,
		|	КомплектацияСостав.Ссылка.Склад КАК МестоХранения,
		|	КомплектацияСостав.Ссылка.Фирма КАК Фирма,
		|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПередачаИзКомплектации) КАК КодОперации,
		|	НЕОПРЕДЕЛЕНО КАК Комитент,		
		|	СУММА(КомплектацияСостав.Сумма) КАК Сумма,
		|	СУММА(КомплектацияСостав.СуммаУпр) КАК СуммаУпр,
		|	СУММА(КомплектацияСостав.СуммаНДС) КАК СуммаНДС,
		|	СУММА(КомплектацияСостав.СуммаНДСУпр) КАК СуммаНДСУпр,		
		|	СУММА(ВЫРАЗИТЬ(КомплектацияСостав.Количество * КомплектацияСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество
		|ПОМЕСТИТЬ т
		|ИЗ
		|	Документ.Комплектация.Состав КАК КомплектацияСостав
		|ГДЕ
		|	КомплектацияСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КомплектацияСостав.Ссылка,
		|	КомплектацияСостав.Ссылка.Дата,
		|	КомплектацияСостав.Номенклатура,
		|	КомплектацияСостав.ЕдиницаИзмерения,
		|	КомплектацияСостав.Ссылка.Склад,
		|	КомплектацияСостав.Ссылка.Фирма,
		|	КомплектацияСостав.ТипРеализацииТовара
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	т.Регистратор КАК Регистратор,
		|	т.Период КАК Период,
		|	т.ВидДвижения КАК ВидДвижения,
		|	т.Статус КАК Статус,
		|	т.Номенклатура КАК Номенклатура,
		|	т.Активность КАК Активность,
		|	т.МестоХранения КАК МестоХранения,
		|	т.Фирма КАК Фирма,
		|	т.КодОперации КАК КодОперации,
		|	т.Комитент КАК Комитент,
		|	т.Количество КАК Количество,
		|	т.Сумма КАК Сумма,
		|	т.СуммаУпр КАК СуммаУпр,
		|	т.СуммаНДС КАК СуммаНДС,
		|	т.СуммаНДСУпр КАК СуммаНДСУпр,
		|	0 КАК СуммаПродажи,
		|	0 КАК СуммаНДСПродажи
		|ИЗ
		|	т КАК т";
		
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Запрос.УстановитьПараметр("Дата",Объект.Дата);
		Запрос.УстановитьПараметр("Фирма",Объект.Фирма);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница);
		Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
		тз=Запрос.Выполнить().Выгрузить();
		
		чСумма = тзОстаткиНоменклатуры.Итог("Сумма");
		чСуммаНДС = тзОстаткиНоменклатуры.Итог("СуммаНДС");
		чСуммаУпр = тзОстаткиНоменклатуры.Итог("СуммаУпр");
		чСуммаНДСУпр = тзОстаткиНоменклатуры.Итог("СуммаНДСУпр");
		
		чСуммаБаза = тз.Итог("Сумма");
		чСуммаНДСБаза = тз.Итог("СуммаНДС");
		чСуммаУпрБаза = тз.Итог("СуммаУпр");
		чСуммаНДСУпрБаза = тз.Итог("СуммаНДСУпр");		
		//++БИТ БВО 2015-09-07		
		СтрКомплекта = ?(тзОстаткиНоменклатуры.Количество() > 0, тзОстаткиНоменклатуры[тзОстаткиНоменклатуры.Количество() - 1], Неопределено);
		//--БИТ БВО 2015-09-07
		Для каждого строка_тз из тз	Цикл
			
			Если чСуммаБаза <> 0 Тогда
				чСуммаТек       = Окр(чСумма * строка_тз.Сумма             / чСуммаБаза,2);
			Иначе
				чСуммаТек = 0;
			КонецЕсли;
			Если чСуммаНДСБаза <> 0 Тогда
				чСуммаНДСТек    = Окр(чСуммаНДС * строка_тз.СуммаНДС       / чСуммаНДСБаза,2);
			Иначе
				чСуммаНДСТек = 0;
			КонецЕсли;
			Если чСуммаУпрБаза <> 0 Тогда
				чСуммаУпрТек    = Окр(чСуммаУпр * строка_тз.СуммаУпр       / чСуммаУпрБаза,2);
			Иначе
				чСуммаУпрТек = 0;
			КонецЕсли;	
			Если чСуммаНДСУпрБаза <> 0 Тогда
				чСуммаНДСУпрТек = Окр(чСуммаНДСУпр * строка_тз.СуммаНДСУпр / чСуммаНДСУпрБаза,2);
			Иначе
				чСуммаНДСУпрТек = 0;
			КонецЕсли;
			
			строка_тз.Сумма       = чСуммаТек;
			строка_тз.СуммаНДС    = чСуммаНДСТек;
			строка_тз.СуммаУпр    = чСуммаУпрТек;
			строка_тз.СуммаНДСУпр = чСуммаНДСУпрТек;
			
			//++БИТ БВО 2015-09-07 - составляющие комплекта при разукомплектации должны иметь статус и комитента аналогичного таким же параметрам комплекта
			//Но, пересмотр статусов при проведении противоречит требованиям установки их при заполнении документа, т.к. они могут различаться
			//Нужно будет обсудить и выработать решение
			Если СтрКомплекта <> Неопределено Тогда
				строка_тз.Статус	= СтрКомплекта.Статус;
				строка_тз.Комитент	= СтрКомплекта.Комитент;
			КонецЕсли;
			//--БИТ БВО 2015-09-07
			
		КонецЦикла;
		
		Для каждого строка_тз из тз Цикл
			с_тзОстаткиНоменклатуры = тзОстаткиНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(с_тзОстаткиНоменклатуры,строка_тз);
		КонецЦикла;	
				
	Иначе	
		
		// Установка исключительной блокировки контролируемых остатков 
		Запрос=Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	КомплектацияСостав.Номенклатура,
		|	КомплектацияСостав.Ссылка.Склад КАК МестоХранения,
		|	КомплектацияСостав.Ссылка.Фирма КАК Фирма,
		|	КомплектацияСостав.ТипРеализацииТовара КАК Статус,
		|	СУММА(ВЫРАЗИТЬ(КомплектацияСостав.Количество * КомплектацияСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
		|	СУММА(0) КАК Сумма,
		|	СУММА(0) КАК СуммаНДС,
		|	СУММА(0) КАК СтавкаНДС
		|ПОМЕСТИТЬ врСостав
		|ИЗ
		|	Документ.Комплектация.Состав КАК КомплектацияСостав
		|ГДЕ
		|	КомплектацияСостав.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КомплектацияСостав.Номенклатура,
		|	КомплектацияСостав.Ссылка.Склад,
		|	КомплектацияСостав.Ссылка.Фирма,
		|	КомплектацияСостав.ТипРеализацииТовара
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врСостав.Номенклатура,
		|	врСостав.МестоХранения,
		|	врСостав.Фирма
		|ИЗ
		|	врСостав КАК врСостав";
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		тз=Запрос.Выполнить().Выгрузить();
		тз.Свернуть("Номенклатура,МестоХранения,Фирма");
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = тз;
		Для каждого к из тз.Колонки Цикл
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных(к.Имя, к.Имя);
		КонецЦикла;
		Блокировка.Заблокировать();
		
		Параметры = Новый Структура;
		Параметры.Вставить("Запрос",Запрос);
		Параметры.Вставить("Объект",Объект);
		Параметры.Вставить("КодОперации",прчКодОперацииПередачаНаКомплектацию);
		Параметры.Вставить("тзОстаткиНоменклатуры",тзОстаткиНоменклатуры);
		Параметры.Вставить("тзРеализация",тзРеализация);
		Параметры.Вставить("РежимПроведения",Режим);
		Параметры.Вставить("Фирма",Объект.Фирма);
		флВозврата = ПроведениеДокументов.ПровестиСписаниеПоПартиям(Параметры);
								
		Движение = тзОстаткиНоменклатуры.Добавить();
		Движение.Период = Объект.Дата;
		Движение.Регистратор = Объект.Ссылка;
		Движение.Фирма = Объект.Фирма;
		Движение.МестоХранения = Объект.Склад;
		Движение.Активность = Истина;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Номенклатура = Объект.Комплект;
		Движение.Комитент = Неопределено;
		Движение.Статус = прчКупляПродажа;
		Движение.Количество = Окр(Объект.Количество * Объект.Коэффициент,3);
		Движение.Сумма = тзОстаткиНоменклатуры.Итог("Сумма");
		Движение.СуммаУпр = тзОстаткиНоменклатуры.Итог("СуммаУпр");
		Движение.СуммаНДС = тзОстаткиНоменклатуры.Итог("СуммаНДС");
		Движение.СуммаНДСУпр = тзОстаткиНоменклатуры.Итог("СуммаНДСУпр");
		Движение.КодОперации = прчКодОперацииПередачаИзКомплектации;
		
		//++БИТ БВО 2015-08-28 - При автоматическом создании комплектации из Уценки товаров не учитывался статус, 
		//к тому же в целом необходимо его учитывать
		Если тзОстаткиНоменклатуры.Количество() > 0 Тогда
			Попытка
				ПоследняяСтрока		= тзОстаткиНоменклатуры[тзОстаткиНоменклатуры.Количество() - 2];
				Движение.Комитент	= ПоследняяСтрока.Комитент;
				Движение.Статус		= ПоследняяСтрока.Статус;
			Исключение
			КонецПопытки;
		КонецЕсли;		
		//--БИТ БВО 2015-08-28 - При автоматическом создании комплектации из Уценки товаров не учитывался статус
		
	КонецЕсли;
	 
	тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,ВидДвижения,Фирма,МестоХранения,Номенклатура,Статус,Комитент,КодОперации","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр");
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
	
	//Объект.Движения.Реализация.Загрузить(тзРеализация);
	
	//popn+
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения(Объект.Метаданные().Имя, тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатуры, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	//Объект.Движения.Реализация.Записывать=Истина;


	Возврат флВозврата;
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	Если НЕ ЭтотОбъект.Разукомплектация Тогда
		АвтоПроизводство.СформироватьДокументыГотоваяПродукция(ЭтотОбъект,Режим,Отказ);
	КонецЕсли;
	Отказ = ПровестиКомплектацию(ЭтотОбъект,Режим);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Перемещение") Тогда
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		Фирма = ДанныеЗаполнения.Фирма;
		Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		Фирма = ДанныеЗаполнения.Фирма;
		Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратнаяНакладнаяОтПокупателя") Тогда
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		Фирма = ДанныеЗаполнения.Фирма;
		Состав.Загрузить(ДанныеЗаполнения.Состав.Выгрузить());
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Комплектация") Тогда
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		Фирма = ДанныеЗаполнения.Фирма;
		Комплект = ДанныеЗаполнения.Комплект;
		Количество = ДанныеЗаполнения.Количество;
		ЕдиницаИзмерения = ДанныеЗаполнения.ЕдиницаИзмерения;
		Коэффициент = ДанныеЗаполнения.Коэффициент;
		Разукомплектация = НЕ ДанныеЗаполнения.Разукомплектация;
		
		Если НЕ ДанныеЗаполнения.Разукомплектация Тогда
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	КомплектацияСостав.Номенклатура,
			|	КомплектацияСостав.ЕдиницаИзмерения,
			|	ДвиженияДокумента.СуммаРасход КАК Сумма,
			|	ДвиженияДокумента.СуммаУпрРасход КАК СуммаУпр,
			|	ВЫБОР
			|		КОГДА КомплектацияСостав.Количество = 0
			|			ТОГДА 0
			|		ИНАЧЕ ДвиженияДокумента.СуммаРасход / КомплектацияСостав.Количество
			|	КОНЕЦ КАК Цена,
			|	ДвиженияДокумента.СуммаНДСРасход КАК СуммаНДС,
			|	ВЫБОР
			|		КОГДА КомплектацияСостав.Количество = 0
			|			ТОГДА 0
			|		ИНАЧЕ ДвиженияДокумента.СуммаНДСРасход / КомплектацияСостав.Количество
			|	КОНЕЦ КАК ЦенаНДС,			
			|	ДвиженияДокумента.СуммаНДСУпрРасход КАК СуммаНДСУпр,
			|	ВЫБОР
			|		КОГДА КомплектацияСостав.Количество = 0
			|			ТОГДА 0
			|		ИНАЧЕ ДвиженияДокумента.СуммаНДСУпрРасход / КомплектацияСостав.Количество
			|	КОНЕЦ КАК ЦенаНДСУпр,			
			|	ВЫБОР
			|		КОГДА КомплектацияСостав.Количество = 0
			|			ТОГДА 0
			|		ИНАЧЕ ДвиженияДокумента.СуммаУпрРасход / КомплектацияСостав.Количество
			|	КОНЕЦ КАК ЦенаУпр,
			|	КомплектацияСостав.Количество,
			|	КомплектацияСостав.Коэффициент
			|ИЗ
			|	Документ.Комплектация.Состав КАК КомплектацияСостав
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ОстаткиНоменклатурыОбороты.*
			|		ИЗ
			|			РегистрНакопления.ОстаткиНоменклатуры.Обороты(, , Регистратор, ) КАК ОстаткиНоменклатурыОбороты
			|		ГДЕ
			|			ОстаткиНоменклатурыОбороты.Регистратор = &Ссылка) КАК ДвиженияДокумента
			|		ПО КомплектацияСостав.Номенклатура = ДвиженияДокумента.Номенклатура
			|ГДЕ
			|	КомплектацияСостав.Ссылка = &Ссылка");
			Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
			Состав.Загрузить(Запрос.Выполнить().Выгрузить());
		Иначе
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	КомплектацияСостав.Номенклатура,
			|	КомплектацияСостав.ЕдиницаИзмерения,
			|	КомплектацияСостав.Количество,
			|	КомплектацияСостав.Коэффициент
			|ИЗ
			|	Документ.Комплектация.Состав КАК КомплектацияСостав
			|ГДЕ
			|	КомплектацияСостав.Ссылка = &Ссылка");
			Запрос.УстановитьПараметр("Ссылка",ДанныеЗаполнения);
			Состав.Загрузить(Запрос.Выполнить().Выгрузить());
		КонецЕсли;
	КонецЕсли;
	//++БИТ БВО №0000129900
	ПерераспределитьСоставПоОстаткам();
	//--БИТ БВО №0000129900
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если НЕ ЭтотОбъект.ЭтоНовый() Тогда
	//	Отказ = РаботаСФормамиСервер.ЗапрещеноРедактировать(ЭтотОбъект.Ссылка);
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;	
	СтруктурнаяЕдиница = Склад.Владелец;
КонецПроцедуры

//++БИТ БВО №0000129900
Процедура ПерераспределитьСоставПоОстаткам() Экспорт
		
	Izh_ОбщегоНазначенияСервер.ПерераспределитьСоставПоОстаткам(ЭтотОбъект);
	
КонецПроцедуры
//--БИТ БВО №0000129900