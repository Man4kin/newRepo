

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	УправлениеДоступностьюЭлементов();
КонецПроцедуры

//{БредовЮГ 2015-02-03 Подбор номенклатуры
//Процедуры и функции для организации подбора
&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	
	ПараметрыФормы = ПодготовитьПараметрыДляПодбора();
	Если ОткрытьФормуМодально("ОбщаяФорма.ПодборНоменклатуры",Новый Структура("СтруктураПараметров",ПараметрыФормы),ЭтаФорма) <> "ОК" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОбработатьПодборНаСервере(ПараметрыФормы.АдресВременногоХранилища);
	
	Для Каждого Строка Из ВыбраннаяНоменклатура Цикл
		ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Строка,Элементы.состав,СтандартнаяОбработка,Строка.Количество);
	КонецЦикла;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстЗапросаПодбораНоменклатуры()
	Возврат "ВЫБРАТЬ
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	СписокНоменклатуры.Группа,
	|	ВЫБОР
	|		КОГДА СписокНоменклатуры.ПометкаУдаления
	|			ТОГДА ВЫБОР
	|					КОГДА СписокНоменклатуры.Группа = 0
	|						ТОГДА 2
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНоменклатуры.Группа = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка,
	|	СписокНоменклатуры.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(ОстаткиНоменклатуры.КоличествоОстаток,0) КАК КоличествоОстаток
	|ИЗ
	|	Справочник.Номенклатура КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				,
	|				МестоХранения = &МестоХранения
	|					И Фирма = &Фирма) КАК ОстаткиНоменклатуры
	|		ПО СписокНоменклатуры.Ссылка = ОстаткиНоменклатуры.Номенклатура
	
	|ГДЕ
	|	СписокНоменклатуры.ВидТовара <> &ВидТовара1
	|	И СписокНоменклатуры.ВидТовара <> &ВидТовара2";
КонецФункции

&НаСервере
Функция ПодготовитьПараметрыДляПодбора()
	СтруктураПараметровПодбора = Новый Структура("ТекстЗапроса,Параметры,АдресВременногоХранилища",);
	СтруктураПараметровПодбора.АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Неопределено,ЭтаФорма.УникальныйИдентификатор);
	СтруктураПараметровПодбора.ТекстЗапроса = ТекстЗапросаПодбораНоменклатуры();
	СтруктураПараметрыЗапроса = Новый Структура();
	СтруктураПараметрыЗапроса.Вставить("ВидТовара1", Перечисления.ВидыТоваров.Набор);
	СтруктураПараметрыЗапроса.Вставить("ВидТовара2", Перечисления.ВидыТоваров.НаборПоставщика);
	СтруктураПараметрыЗапроса.Вставить("Фирма", Объект.Фирма);
	СтруктураПараметрыЗапроса.Вставить("МестоХранения", Объект.Склад);
	СтруктураПараметровПодбора.Параметры = СтруктураПараметрыЗапроса;
	Возврат СтруктураПараметровПодбора;	
КонецФункции

&НаСервере
Процедура ОбработатьПодборНаСервере(АдресХранилища)
	тзЗначений = ПолучитьИзВременногоХранилища(АдресХранилища);
	ЗначениеВРеквизитФормы(тзЗначений,"ВыбраннаяНоменклатура");
КонецПроцедуры
//БредовЮГ 2015-02-03 Подбор номенклатуры}
//Конец Процедуры и функции для организации подбора


&НаКлиенте
Процедура ОприходованиеПриИзменении(Элемент)
	ВидимостьПриИзмененииОприходования();
	Если Объект.Разукомплектация Тогда
		Объект.ВидСписания = "";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьПриИзмененииОприходования()
	Элементы.Состав.ПодчиненныеЭлементы.СоставСумма.Видимость    =  Объект.Разукомплектация;
	Элементы.Состав.ПодчиненныеЭлементы.СоставЦена.Видимость     =  Объект.Разукомплектация;
	Элементы.Состав.ПодчиненныеЭлементы.СоставСуммаУпр.Видимость =  Объект.Разукомплектация;
	Элементы.Состав.ПодчиненныеЭлементы.СоставЦенаУпр.Видимость  =  Объект.Разукомплектация;
	Элементы.Состав.ПодчиненныеЭлементы.СоставСуммаНДС.Видимость       =  Объект.Разукомплектация;
	Элементы.Состав.ПодчиненныеЭлементы.СоставСуммаНДСУпр.Видимость    =  Объект.Разукомплектация;
	Элементы.Состав.ПодчиненныеЭлементы.СоставЦенаНДС.Видимость       =  Объект.Разукомплектация;
	Элементы.Состав.ПодчиненныеЭлементы.СоставЦенаНДСУпр.Видимость    =  Объект.Разукомплектация;
	Элементы.СоставЗаполнитьЦеныЗакупки.Доступность = Объект.Разукомплектация;
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидимостьПриИзмененииОприходования();
	
	//++БИТ БВО №0000129900
	//Элементы.СоставТипРеализацииТовара.Видимость = Ложь;
	//--БИТ БВО №0000129900
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "BarCodeScaner" И Событие = "BarCodeValue" Тогда
		Если Не ВводДоступен() Тогда
			КомпонентаСканераШК.СобытиеОбработано();
			Возврат;   
		КонецЕсли;
		//СтруктураПодбора = ПолучитьСтруктуруЗапросаПодбора();
		//СтрокаТЧ = РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВДокументах(ЭтаФорма,Объект,Элементы.Состав,Данные,СтруктураПодбора);
		//КомпонентаСканераШК.СобытиеОбработано();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставКоличествоПриИзменении(Элемент)
	Если Объект.Разукомплектация Тогда
		Пересчет(Элементы.Состав.ТекущиеДанные);
		ПересчетУпр(Элементы.Состав.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставЦенаПриИзменении(Элемент)
	Пересчет(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура Пересчет(ТекСтрока)
	
	ТекСтрока.Сумма = Окр(ТекСтрока.Цена * ТекСтрока.Количество,2);
	ТекСтрока.СуммаНДС = Окр(ТекСтрока.ЦенаНДС * ТекСтрока.Количество,2);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчетУпр(ТекСтрока)
	
	ТекСтрока.СуммаУпр = Окр(ТекСтрока.ЦенаУпр * ТекСтрока.Количество,2);
	ТекСтрока.СуммаНДСУпр = Окр(ТекСтрока.ЦенаНДСУпр * ТекСтрока.Количество,2);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставСуммаПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока.Количество <> 0 Тогда
		ТекСтрока.Цена = Окр(ТекСтрока.Сумма / ТекСтрока.Количество,2);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦеныЗакупки(Команда)
	ПолучитьЦеныЗакупки();
КонецПроцедуры

&НаСервере
Процедура ПолучитьЦеныЗакупки()
	
	тз=Объект.Состав.Выгрузить();
	тз2 = РаботаСФормамиСервер.ПолучитьЦеныЗакупки(тз,Объект.Дата,Объект.Фирма,Объект.Склад.Владелец);
	мсв=Новый Массив();
	Для каждого с из Объект.Состав цикл
		
		мсв = тз2.НайтиСтроки(Новый Структура("Номенклатура,ЕдиницаИзмерения",с.Номенклатура,с.ЕдиницаИзмерения));
		Если мсв.Количество() > 0 Тогда
			
			с_тз2 = мсв[0];
			
			с.Цена  = с_тз2.Цена;
			с.Сумма = Окр(с.Цена*с.Количество,2);
			
			с.ЦенаУпр  = с_тз2.ЦенаУпр;
			с.СуммаУпр = Окр(с.ЦенаУпр*с.Количество,2);
			
			с.ЦенаНДС  = с_тз2.СуммаНДС;
			с.СуммаНДС = Окр(с.ЦенаНДС*с.Количество,2);
			
			с.ЦенаНДСУпр  = с_тз2.СуммаНДСУпр;
			с.СуммаНДСУпр = Окр(с.ЦенаНДСУпр*с.Количество,2);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоставЦенаУпрПриИзменении(Элемент)
	
	ПересчетУпр(Элементы.Состав.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставСуммаУпрПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока.Количество <> 0 Тогда
		ТекСтрока.ЦенаУпр = Окр(ТекСтрока.СуммаУпр / ТекСтрока.Количество,2);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомплектПриИзменении(Элемент)
	Объект.ЕдиницаИзмерения = ПолучитьБазовуюЕдиницуИзмерения(Объект.Комплект);	
	Объект.Коэффициент = 1;
	ПриВыбореНабора();
	УправлениеДоступностьюЭлементов();
КонецПроцедуры

&НаСервере
Процедура ПриВыбореНабора()
	Если Объект.Комплект.ВидТовара = Перечисления.ВидыТоваров.Набор Или Объект.Комплект.ВидТовара = Перечисления.ВидыТоваров.НаборПоставщика Тогда
		Объект.ЕдиницаИзмерения = РаботаСФормамиСервер.ПолучитьБазовуюЕдиницуИзмерения(Объект.Комплект);
		Объект.Коэффициент = Объект.ЕдиницаИзмерения.Коэффициент;
		Если Объект.Количество = 0 Тогда
			Объект.Количество = 1;
		КонецЕсли;	
		Объект.Состав.Очистить();
		Для каждого Строка из Объект.Комплект.СоставНабора Цикл
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Номенклатура = Строка.Компонент;
			НоваяСтрока.Количество = Строка.Количество*Объект.Количество*Объект.Коэффициент;
			НоваяСтрока.ЕдиницаИзмерения = РаботаСФормамиСервер.ПолучитьБазовуюЕдиницуИзмерения(Строка.Компонент);
			НоваяСтрока.Коэффициент = НоваяСтрока.ЕдиницаИзмерения.Коэффициент;
		КонецЦикла;
		Если Объект.Разукомплектация Тогда
			ПолучитьЦеныЗакупки();
		КонецЕсли;	
	КонецЕсли;	 
конецпроцедуры

&НаСервере
Процедура УправлениеДоступностьюЭлементов()
	ФлагТолькоПросмотр = (Объект.Комплект.ВидТовара = Перечисления.ВидыТоваров.Набор Или Объект.Комплект.ВидТовара = Перечисления.ВидыТоваров.НаборПоставщика);
	Элементы.СоставНоменклатура.ТолькоПросмотр = ФлагТолькоПросмотр;
	Элементы.СоставЕдиницаИзмерения.ТолькоПросмотр = ФлагТолькоПросмотр;
	Элементы.СоставКоличество.ТолькоПросмотр = ФлагТолькоПросмотр;
	Элементы.Состав.ИзменятьСоставСтрок = НЕ ФлагТолькоПросмотр;
конецПроцедуры



&НаСервереБезконтекста
Функция ПолучитьБазовуюЕдиницуИзмерения(Номенклатура)
	
	Возврат РаботаСФормамиСервер.ПолучитьБазовуюЕдиницуИзмерения(Номенклатура);
	
КонецФункции	

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияКомплектаПриИзменении(Элемент)
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ЕдиницаИзмерения", Объект.ЕдиницаИзмерения);
	СтруктураДанных.Вставить("Коэффициент");
	ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
	Объект.Коэффициент = СтруктураДанных.Коэффициент;
	ПриИзмененииКоличестваНабора();
КонецПроцедуры


&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	ПриИзмененииКоличестваНабора();
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКоличестваНабора()
	Если Объект.Комплект.ВидТовара = Перечисления.ВидыТоваров.Набор Или Объект.Комплект.ВидТовара = Перечисления.ВидыТоваров.НаборПоставщика Тогда
		Для каждого Строка из Объект.Комплект.СоставНабора Цикл
			Отбор = Новый Структура("Номенклатура",Строка.Компонент);
			НоваяСтрока = Объект.Состав.НайтиСтроки(Отбор);
			Если НоваяСтрока.Количество()>0 Тогда
				НоваяСтрока[0].Количество = Строка.Количество*Объект.Количество*Объект.Коэффициент;
				Если Объект.Разукомплектация Тогда
					НоваяСтрока[0].Сумма = Окр(НоваяСтрока[0].Цена*НоваяСтрока[0].Количество,2);
					НоваяСтрока[0].СуммаУпр = Окр(НоваяСтрока[0].ЦенаУпр*НоваяСтрока[0].Количество,2);
				КонецЕсли;	
			Иначе
				ПриВыбореНабора();
				Прервать;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	 
конецпроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры

//++БИТ БВО №0000129900 2015-06-03
&НаСервере
Процедура ПерераспределитьПоОстаткамНаСервере() Экспорт
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ПерераспределитьСоставПоОстаткам();
	Объект.Состав.Загрузить(ДокументОбъект.Состав.Выгрузить());
		
КонецПроцедуры

&НаКлиенте
Процедура ПерераспределитьПоОстаткам(Команда)
	
	ПерераспределитьПоОстаткамНаСервере();
	Для Каждого СтрокаСостава Из Объект.Состав Цикл
		ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаСостава);
	КонецЦикла;
	
КонецПроцедуры
//--БИТ БВО №0000129900 2015-06-03
