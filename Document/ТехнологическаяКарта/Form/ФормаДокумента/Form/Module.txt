
&НаКлиенте
Процедура ВидПроизводстваПриИзменении(Элемент)
	УправлениеФормойПоВидуПроизводства();
	Если ПроверитьРеквизиты() Тогда
		Сообщить("В качестве объекта приготовления может быть выбрана номенклатура только с видом товара - Продукция.");
	КонецЕсли;
	Объект.Состав.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормойПоВидуПроизводства()
	флПереработка = ПолучитьФлагПереработки();
	Колонки = Элементы.Состав.ПодчиненныеЭлементы;
	//popn+
	Колонки.СоставКоэффициентРаспределенияЦены.Видимость = флПереработка ИЛИ Объект.ВозможнаРазделка;
	Колонки.СоставПроцентСписания.Видимость              = Объект.ВозможнаРазделка;
	//Колонки.СоставКоэффициентРаспределенияЦены.Видимость = флПереработка;
	//popn-
	Колонки.СоставКоличествоНетто.Видимость              = НЕ флПереработка;
	
	Элементы.КоличествоПорций.Доступность     = НЕ флПереработка;
	Элементы.ВозможнаРазделка.Доступность  = НЕ флПереработка;
	Если флПереработка Тогда
		Колонки.СоставКоличество.Заголовок = "Выход (%)";
		Если Объект.КоличествоПорций <> 1 Тогда
			Объект.КоличествоПорций = 1;
		КонецЕсли;	
	Иначе
		Колонки.СоставКоличество.Заголовок = "Количество брутто";
	КонецЕсли;
	Элементы.ПодборНоменклатурыИнгредиенты.Видимость = НЕ флПереработка;
	Если элементы.ПодборНоменклатурыИнгредиенты.пометка Тогда
		Ингредиенты(Неопределено);	
	КонецЕсли;	
Конецпроцедуры	

&НаСервере
Функция ПолучитьФлагПереработки()
	Возврат ?(Объект.ВидПроизводства = Перечисления.ВидыПроизводства.Разделка или Объект.ВидПроизводства = Перечисления.ВидыПроизводства.Разморозка,Истина,Ложь);
КонецФункции

&НаСервере
Функция ПроверитьРеквизиты()
	Если Объект.ВидПроизводства = Перечисления.ВидыПроизводства.Приготовление Тогда
		Если ЗначениеЗаполнено(Объект.Продукция) Тогда
			Если Объект.Продукция.ВидТовара <> Перечисления.ВидыТоваров.Продукция Тогда
				Объект.Продукция = Справочники.Номенклатура.ПустаяСсылка();
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	иначе	
		Объект.ВозможнаРазделка = Ложь;
	КонецЕсли;
	Возврат Ложь;
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеФормойПоВидуПроизводства();
	загрузитьНастройкиПодбора();
КонецПроцедуры



///////////////////

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПараметрыСеанса.ЭтоЦентр Тогда
		ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
		Элементы.Продукция.ТолькоПросмотр = ЗапрещеноРедактироватьПродукцию();
	Иначе	
		ТолькоПросмотр = Истина;
	КонецЕсли;	
	ТекстЗапросаПодбора = ПодборНоменклатуры.ТекстЗапроса;
	//Элементы.Продукция.ТолькоПросмотр = Объект.Проведен;
	//Элементы.ВидПроизводства.ТолькоПросмотр = Объект.Проведен;
	//Элементы.Состав.ТолькоПросмотр = Объект.Проведен;
	//Элементы.КоличествоПорций.ТолькоПросмотр = Объект.Проведен;
	//Элементы.Дата.ТолькоПросмотр = Объект.Проведен;
	РасчетПищевойЦенности();
	//popn+
	ИсточникКопирования = Параметры.ЗначениеКопирования;
	//popn-
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаСервере
Функция ЗапрещеноРедактироватьПродукцию()
	//Если Ссылка.Проведен = Ложь Тогда
	//	Возврат Ложь;
	//КонецЕсли;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПродукцияПоЦехам.ТехнологическаяКарта
	|ИЗ
	|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|ГДЕ
	|	ПродукцияПоЦехам.ТехнологическаяКарта = &ТехнологическаяКарта";
	
	Запрос.УстановитьПараметр("ТехнологическаяКарта", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	
	
	Пустой = Результат.Пустой();
	
	Возврат Не Пустой;
КонецФункции	


&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество);
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);
		Если ТекСтрока <> Неопределено Тогда
			ЗаполнитьПищевуюЦенность(ТекСтрока.Номенклатура,ТекСтрока.Белки,ТекСтрока.Жиры,ТекСтрока.Углеводы,ТекСтрока.Калорийность);
			ТекСтрока.Код = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ТекСтрока.Номенклатура,"Код");
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПищевуюЦенность(Знач Номенклатура,Белки,Жиры,Углеводы,Калорийность)
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Ингредиенты") Тогда
		Если Номенклатура.Состав.Количество() > 0 Тогда
			Номенклатура = Номенклатура.Состав[0].Номенклатура;
		КонецЕсли;
	КонецЕсли;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПищеваяЦенность.Белки,
	|	ПищеваяЦенность.Жиры,
	|	ПищеваяЦенность.Углеводы,
	|	ПищеваяЦенность.Калорийность
	|ИЗ
	|	РегистрСведений.ПищеваяЦенность КАК ПищеваяЦенность
	|ГДЕ
	|	ПищеваяЦенность.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПищеваяЦенность.ТехнологическаяКарта.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Белки = Выборка.Белки;
		Жиры = Выборка.Жиры;
		Углеводы = Выборка.Углеводы;
		Калорийность = Выборка.Калорийность;
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗапросаПодбора() Экспорт
	СтруктураПодбора = Новый Структура;
	СтруктураПодбора.Вставить("ТекстЗапроса",ПодборНоменклатуры.ТекстЗапроса);
	СтруктураПодбора.Вставить("Параметры",ПодборНоменклатуры.Параметры);
	Возврат СтруктураПодбора;
КонецФункции	

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура Ингредиенты(Команда)
	элементы.ПодборНоменклатурыИнгредиенты.пометка = не элементы.ПодборНоменклатурыИнгредиенты.пометка;
	флаг = Элементы.ПодборНоменклатурыИнгредиенты.пометка;
	ПереключениеИнгредиентов(Флаг);
	//Элементы.ПодборНоменклатуры.Обновить();  
КонецПроцедуры

&НаСервере
процедура ПереключениеИнгредиентов(Флаг) 
	Если Флаг Тогда
		ПодборНоменклатуры.ОсновнаяТаблица = "Справочник.Ингредиенты";
		ПодборНоменклатуры.ПроизвольныйЗапрос = Истина;
		ПодборНоменклатуры.ТекстЗапроса = "ВЫБРАТЬ
		|	СправочникИнгредиенты.Код,
		|	СправочникИнгредиенты.Наименование,
		|	ВЫБОР
		|		КОГДА СправочникИнгредиенты.ЭтоГруппа
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Группа,
		|	ВЫБОР
		|		КОГДА СправочникИнгредиенты.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ СправочникИнгредиенты.ЭтоГруппа
		|						ТОГДА 2
		|					ИНАЧЕ 3
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ СправочникИнгредиенты.ЭтоГруппа
		|					ТОГДА 0
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Картинка,
		|	СправочникИнгредиенты.Ссылка КАК Номенклатура
		|ИЗ
		|	Справочник.Ингредиенты КАК СправочникИнгредиенты
		|
		|СГРУППИРОВАТЬ ПО
		|	СправочникИнгредиенты.ЭтоГруппа,
		|	СправочникИнгредиенты.Наименование,
		|	СправочникИнгредиенты.Код,
		|	СправочникИнгредиенты.ПометкаУдаления,
		|	СправочникИнгредиенты.Ссылка";
	Иначе
		ПодборНоменклатуры.ПроизвольныйЗапрос = Истина;
		ПодборНоменклатуры.ОсновнаяТаблица = "Справочник.Номенклатура";
		ПодборНоменклатуры.ТекстЗапроса = ТекстЗапросаПодбора;
	КонецЕсли;	
конецпроцедуры

&НаКлиенте
Процедура ПродукцияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если НЕ ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ВыбранноеЗначение,"Транзакционный") тогда
		состояние("Добавлять можно только товары транзакционного уровня!",,,БиблиотекаКартинок.Предупреждение32);
		ВыбранноеЗначение = Неопределено;
		СтандартнаяОбработка = Ложь;
	Конецесли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	флПереработка = ПолучитьФлагПереработки();
	//popn+
	Если флПереработка или ТекущийОбъект.ВозможнаРазделка Тогда
		//Если флПереработка Тогда
		//popn-
		чИтог = ТекущийОбъект.Состав.Итог("КоэффициентРаспределенияЦены");
		Если чИтог <> 100 Тогда
			Текст = "Ошибка заполнения реквизита табличной части ""Коэффициент распределения цены""!
			|Итог должен равняться 100%.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			Отказ = Истина;
		КонецЕсли;
		Если флПереработка Тогда
			чИтог = ТекущийОбъект.Состав.Итог("Количество");
			Если чИтог <> 100 Тогда
				Если ТекущийОбъект.ВидПроизводства <> Перечисления.ВидыПроизводства.Разморозка Тогда
					Текст = "Ошибка заполнения реквизита табличной части ""Выход""!
					|Итог должен равняться 100%.";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
					Отказ = Истина;
				Иначе
					СтрукОтбор = Новый Структура;
					СтрукОтбор.Вставить("Количество",0);
					мсвСтроки = ТекущийОбъект.Состав.НайтиСтроки(СтрукОтбор);
					Для каждого ЭлементМассива из мсвСтроки Цикл
						Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Строка %1: Не заполнен реквизит ""Коэффициент распределения цены""!",ЭлементМассива.НомерСтроки);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
						Отказ = Истина;
					КонецЦикла;	
				КонецЕсли;
			Иначе
				СтрукОтбор = Новый Структура;
				СтрукОтбор.Вставить("Количество",0);
				мсвСтроки = ТекущийОбъект.Состав.НайтиСтроки(СтрукОтбор);
				Для каждого ЭлементМассива из мсвСтроки Цикл
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Строка %1: Не заполнен реквизит ""Коэффициент распределения цены""!",ЭлементМассива.НомерСтроки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
					Отказ = Истина;
				КонецЦикла;	
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	Если флПереработка = Ложь Тогда
		СтрукОтбор = Новый Структура;
		СтрукОтбор.Вставить("КоличествоНетто",0);
		мсвСтроки = ТекущийОбъект.Состав.НайтиСтроки(СтрукОтбор);
		Для каждого ЭлементМассива из мсвСтроки Цикл
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Строка %1: Не заполнен реквизит ""Количество нетто""!",ЭлементМассива.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			Отказ = Истина;
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		Объект.Наименование = СокрЛП(Объект.Продукция);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗаписьПродукцииПоЦехам" Тогда
		Элементы.Продукция.ТолькоПросмотр = ЗапрещеноРедактироватьПродукцию();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Состав1ПриИзменении(Элемент)
	РасчетПищевойЦенности();
КонецПроцедуры

&НаСервере
Процедура РасчетПищевойЦенности()
	Если Объект.ВидПроизводства = Перечисления.ВидыПроизводства.Приготовление Тогда
		ИтогоКалорийность = 0;
		ИтогоБелки = 0;
		ИтогоЖиры = 0;
		ИтогоУглеводы = 0;
		Для Каждого Строка Из Объект.Состав Цикл
			ИтогоКалорийность = ИтогоКалорийность + Строка.Калорийность * 10 * Строка.КоличествоНетто;
			ИтогоБелки = ИтогоБелки + Строка.Белки * 10 * Строка.КоличествоНетто;
			ИтогоЖиры = ИтогоЖиры + Строка.Жиры * 10 * Строка.КоличествоНетто;
			ИтогоУглеводы = ИтогоУглеводы + Строка.Углеводы * 10 * Строка.КоличествоНетто;
		КонецЦикла;	
		ИтогоКалорийность = ИтогоКалорийность*Объект.МассаПорции/10;
		ИтогоБелки = ИтогоБелки*Объект.МассаПорции/10;
		ИтогоЖиры = ИтогоЖиры*Объект.МассаПорции/10;
		ИтогоУглеводы = ИтогоУглеводы*Объект.МассаПорции/10;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	//Если НЕ Окно = АктивноеОкно() Тогда
	//	Окно.Активизировать();
	//КонецЕсли;
	
	//popn+
	Если ЗначениеЗаполнено(ИсточникКопирования) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(НСтр("ru = 'Заполнить привязку технологической карты к складам производства?'"), Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			 ЗаполнитьПривязкуСкладовПроизводства(ИсточникКопирования);
		КонецЕсли;
	КонецЕсли;
	//popn-
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПривязкуСкладовПроизводства(ИсточникКопирования)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПродукцияПоЦехам.ТехнологическаяКарта,
		|	ПродукцияПоЦехам.Склад,
		|	ПродукцияПоЦехам.Продукция,
		|	ПродукцияПоЦехам.ФлагАктивности
		|ИЗ
		|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
		|ГДЕ
		|	ПродукцияПоЦехам.ТехнологическаяКарта = &ТехнологическаяКарта";

	Запрос.УстановитьПараметр("ТехнологическаяКарта", ИсточникКопирования);

	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Запись = РегистрыСведений.ПродукцияПоЦехам.СоздатьМенеджерЗаписи();
		Запись.ТехнологическаяКарта = Объект.Ссылка;
		Запись.Склад                = ВыборкаДетальныеЗаписи.Склад;
		Запись.Продукция            = Объект.Продукция;
		Запись.ФлагАктивности       = ВыборкаДетальныеЗаписи.ФлагАктивности;
		Запись.Записать();
	КонецЦикла;

КонецПроцедуры

//popn+
&НаКлиенте
Процедура ВозможнаРазделкаПриИзменении(Элемент)
	УправлениеФормойПоВидуПроизводства();
КонецПроцедуры
//popn-

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры

&НаКлиенте
Процедура СоставПроцентСписанияПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока.ПроцентСписания > 100 Тогда
		Сообщить("Значение процента списания не может превышать 100%.");
		ТекСтрока.ПроцентСписания = 100;
	КонецЕсли;
КонецПроцедуры







