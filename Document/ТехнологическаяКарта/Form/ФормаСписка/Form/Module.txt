
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Попытка
		ОбщегоНазначения.УстановитьОтборУДинамическогоСпискаНаРавенство(Список.Отбор,Новый ПолеКомпоновкиДанных("Продукция"),Параметры.Номенклатура);
		Элементы.Список.ПодчиненныеЭлементы.Продукция.Видимость = Ложь;
	Исключение
	КонецПопытки;
	Если НЕ СтруктурныеЕдиницы.ЕстьВГруппеТипСЕ(Перечисления.ТипыСтруктурныхЕдиниц.Производство) Тогда
		Элементы.Список.ТолькоПросмотр = Истина;
		Элементы.Производства.Видимость = Ложь;
		Элементы.Калькуляции.ТолькоПросмотр = Истина;
		//popn+ нет такого реквизита формы
		//Элементы.ФормаДокументКалькуляционнаяКартаСоздатьНаОсновании.Видимость = Ложь;
	КонецЕсли;	
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	//ОбщегоНазначения.УстановитьОтборУДинамическогоСпискаНаРавенство(Производства.Отбор,Новый ПолеКомпоновкиДанных("ТехнологическаяКарта"),Элементы.Список.ТекущаяСтрока);
	Производства.Отбор.Элементы.Очистить();
	ЭлементОтбора = Производства.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТехнологическаяКарта");
	ЭлементОтбора.ПравоеЗначение = Элементы.Список.ТекущаяСтрока;
	ЭлементОтбора.ВидСравнения = ВИдСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора = Производства.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ФлагАктивности");
	ЭлементОтбора.ПравоеЗначение = Истина;
	ЭлементОтбора.ВидСравнения = ВИдСравненияКомпоновкиДанных.Равно;
	
	Калькуляции.Отбор.Элементы.Очистить();
	ЭлементОтбора = Калькуляции.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДокументОснование");
	ЭлементОтбора.ПравоеЗначение = Элементы.Список.ТекущаяСтрока;
	ЭлементОтбора.ВидСравнения = ВИдСравненияКомпоновкиДанных.Равно;
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	ПараметрКоманды = Элементы.Калькуляции.ВыделенныеСтроки;
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.КалькуляционнаяКарта",
	"КалькуляционнаяКарта", ПараметрКоманды, ЭтаФорма, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ( Источник = "BarCodeScaner" ) И ( Событие = "BarCodeValue" ) Тогда
	Если Не ВводДоступен() Тогда
		КомпонентаСканераШК.СобытиеОбработано();
		Возврат;
	КонецЕсли;
		СтрокаТЧ=РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВЖурналах(Данные,Элементы.Список);
		КомпонентаСканераШК.СобытиеОбработано();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СкладВыбран(Команда)
	Элементы.ФормаСкладВыбран.Пометка = Истина;
	Элементы.ФормаСкладНеВыбран.Пометка = Ложь;
	Элементы.ФормаВсеДокументы.Пометка = Ложь;
	УстановитьФильтрПоСкладу(2);
КонецПроцедуры

&НаСервере
Процедура УстановитьФильтрПоСкладу(ВидФильтра)
	Если ВидФильтра = 1 Тогда
		Список.ТекстЗапроса = "ВЫБРАТЬ
		                      |	ТехнологическаяКарта.Ссылка,
		                      |	ТехнологическаяКарта.Номер,
		                      |	ТехнологическаяКарта.Дата,
		                      |	ТехнологическаяКарта.Продукция,
		                      |	ТехнологическаяКарта.ВидПроизводства,
		                      |	ТехнологическаяКарта.Наименование,
		                      |	ТехнологическаяКарта.Автор
		                      |ИЗ
		                      |	Документ.ТехнологическаяКарта КАК ТехнологическаяКарта";
	ИначеЕсли ВидФильтра = 2 Тогда		//СкладВыбран				  
		Список.ТекстЗапроса = "ВЫБРАТЬ
		                      |	ТехКарта.Ссылка,
		                      |	ТехКарта.Номер,
		                      |	ТехКарта.Дата,
		                      |	ТехКарта.Продукция,
		                      |	ТехКарта.ВидПроизводства,
		                      |	ТехКарта.Наименование,
		                      |	ТехКарта.Автор
		                      |ИЗ
		                      |	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехКарта
		                      |		ПО ПродукцияПоЦехам.ТехнологическаяКарта = ТехКарта.Ссылка
		                      |ГДЕ
		                      |	ПродукцияПоЦехам.ФлагАктивности
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ТехКарта.Ссылка,
		                      |	ТехКарта.Номер,
		                      |	ТехКарта.Дата,
		                      |	ТехКарта.Продукция,
		                      |	ТехКарта.ВидПроизводства,
		                      |	ТехКарта.Наименование";
	ИначеЕсли ВидФильтра = 3 Тогда	//СкладНеВыбран					  
		Список.ТекстЗапроса = "ВЫБРАТЬ
		                      |	ТехКарта.Ссылка,
		                      |	ТехКарта.Номер,
		                      |	ТехКарта.Дата,
		                      |	ТехКарта.Продукция,
		                      |	ТехКарта.ВидПроизводства,
		                      |	ТехКарта.Наименование,
		                      |	ТехКарта.Автор
		                      |ИЗ
		                      |	Документ.ТехнологическаяКарта КАК ТехКарта
		                      |ГДЕ
		                      |	НЕ ТехКарта.Ссылка В
		                      |				(ВЫБРАТЬ
		                      |					ПродукцияПоЦехам.ТехнологическаяКарта.Ссылка
		                      |				ИЗ
		                      |					РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
		                      |				ГДЕ
		                      |					ПродукцияПоЦехам.ФлагАктивности)";
	КонецЕсли;	
КонецПроцедуры



&НаКлиенте
Процедура ВсеДокументы(Команда)
	Элементы.ФормаСкладВыбран.Пометка = Ложь;
	Элементы.ФормаСкладНеВыбран.Пометка = Ложь;
	Элементы.ФормаВсеДокументы.Пометка = Истина;
	УстановитьФильтрПоСкладу(1);
КонецПроцедуры

&НаКлиенте
Процедура СкладНеВыбран(Команда)
	Элементы.ФормаСкладВыбран.Пометка = Ложь;
	Элементы.ФормаСкладНеВыбран.Пометка = Истина;
	Элементы.ФормаВсеДокументы.Пометка = Ложь;
	УстановитьФильтрПоСкладу(3);
КонецПроцедуры
