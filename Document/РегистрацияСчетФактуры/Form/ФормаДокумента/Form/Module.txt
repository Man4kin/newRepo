////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервереБезКонтекста
Функция ПолучитьСписокВидовОпераций()

	СписокВидовОпераций = Новый СписокЗначений;
	
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыПолученного.НаПоступление);
	СписокВидовОпераций.Добавить(Перечисления.ВидСчетаФактурыПолученного.Корректировочный);
	
	Возврат СписокВидовОпераций;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.СписокВидовОпераций.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено Тогда
		
		ЗначенияЗаполнения.Вставить("ВидСчетаФактуры", СтрокаТаблицы.Значение);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Ключ",                Параметры.Ключ);
		СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
		СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
		СтруктураПараметров.Вставить("Основание",           Основание);
		
		Модифицированность = Ложь;
		Закрыть();
		
		ОткрытьФорму("Документ.РегистрацияСчетФактуры.Форма." + ФормыСчетовФактур[СтрокаТаблицы.Значение], СтруктураПараметров, ВладелецФормы);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВидовОперацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаТаблицы = СписокВидовОпераций.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ЗначенияЗаполнения.Вставить("ВидСчетаФактуры", СтрокаТаблицы.Значение);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ",                Параметры.Ключ);
	СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
	СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
	СтруктураПараметров.Вставить("Основание",           Основание);
	
	Модифицированность = Ложь;
	Закрыть();
	
	ОткрытьФорму("Документ.РегистрацияСчетФактуры.Форма." + ФормыСчетовФактур[СтрокаТаблицы.Значение], СтруктураПараметров, ВладелецФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Документ Регистрация счет-фактуры необходимо вводить на основании документов ""Приходная накладная"" или ""Корректировка поступления""!'"));
		Возврат;
	КонецЕсли;
	
	ЗначениеКопирования = Параметры.ЗначениеКопирования;
	ЗначенияЗаполнения  = Параметры.ЗначенияЗаполнения;
	Основание           = Параметры.Основание;
		
	СписокВидовОпераций.ЗагрузитьЗначения(ПолучитьСписокВидовОпераций().ВыгрузитьЗначения());
	
	ФормыСчетовФактур = Новый ФиксированноеСоответствие(
		Документы.РегистрацияСчетФактуры.ПолучитьСоответствиеВидовСчетаФактурыФормам());
	
КонецПроцедуры






	

