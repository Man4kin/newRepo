Процедура ОбработкаЗаполнения(Основание, СтандартнаяОбработка)  Экспорт
	
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		Если ПараметрыСеанса.ИспользованиеЦВД Тогда
			ТекстСообщения = НСтр("ru='Для данной структурной единицы настроено использование центра ввода данных. Ввод документа невозможен.'");
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;	
	КонецЕсли;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		ЗаполнитьСчетФактуруНаПоступление(Основание);
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		ЗаполнитьНаОснованииИсправления(Основание);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ЗаполнитьСчетФактуруНаПоступление(ДанныеЗаполнения)
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		СуществующийСФ = УчетНДС.НайтиПодчиненныйСчетФактуруПолученный(ДанныеЗаполнения, Ложь);
		Если ЗначениеЗаполнено(СуществующийСФ) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='На основании документа %1 уже был введен %2'"),
			ДанныеЗаполнения,
			СуществующийСФ);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДанныеЗаполнения.НомерСФ) И ЗначениеЗаполнено(ДанныеЗаполнения.ДатаСФ) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В документе %1 заполнены реквизиты счет-фактуры. Ввод документа невозможен.'"),
			ДанныеЗаполнения);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	КонецЕсли;
	ВидСчетаФактуры	      = Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
	ДокументОснование     = ДанныеЗаполнения;
	СтруктурнаяЕдиница    = ДанныеЗаполнения.СтруктурнаяЕдиница;
	Контрагент            = ДанныеЗаполнения.Контрагент;
	Фирма                 = ДанныеЗаполнения.Фирма;
	НомерВходящегоДокумента	= ДанныеЗаполнения.НомерСФ;
	ДатаВходящегоДокумента	= ДанныеЗаполнения.ДатаСФ;
	СуммаДокумента        = ДанныеЗаполнения.Состав.Итог("Сумма");
	СуммаНДСДокумента     = ДанныеЗаполнения.Состав.Итог("СуммаНДС");
	КодСпособаВыставления = 1;
	Выставлен             = Истина;
	ДатаВыставления       = ТекущаяДата();
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииИсправления(ДанныеЗаполнения)
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		СуществующийСФ = УчетНДС.НайтиПодчиненныйСчетФактуруПолученный(ДанныеЗаполнения, Ложь);
		Если ЗначениеЗаполнено(СуществующийСФ) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='На основании документа %1 уже был введен %2'"),
			ДанныеЗаполнения,
			СуществующийСФ);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДанныеЗаполнения.НомерСФ) И ЗначениеЗаполнено(ДанныеЗаполнения.ДатаСФ) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В документе %1 заполнены реквизиты счет-фактуры. Ввод документа невозможен.'"),
			ДанныеЗаполнения);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеЗаполнения.РежимКорректировки = Перечисления.РежимыКорректировок.ИсправлениеОшибки Тогда
		ВидСчетаФактуры       = Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
		СуммаДокумента        = ДанныеЗаполнения.Состав.Итог("Сумма");
		СуммаНДСДокумента     = ДанныеЗаполнения.Состав.Итог("СуммаНДС");
	ИначеЕсли ДанныеЗаполнения.РежимКорректировки = Перечисления.РежимыКорректировок.СогласованноеИзменение Тогда
		ВидСчетаФактуры       = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
		СуммаДокументаДельта    = ДанныеЗаполнения.Состав.Итог("Сумма") - ДанныеЗаполнения.Состав.Итог("СуммаДоИзменения");
		СуммаНДСДокументаДельта = ДанныеЗаполнения.Состав.Итог("СуммаНДС") - ДанныеЗаполнения.Состав.Итог("СуммаНДСДоИзменения");
		Если СуммаДокументаДельта > 0 Тогда
			СуммаУвеличение = СуммаДокументаДельта;
			СуммаУменьшение = 0;
		Иначе
			СуммаУвеличение = 0;
			СуммаУменьшение = СуммаДокументаДельта;
		КонецЕсли;
		
		Если СуммаНДСДокументаДельта > 0 Тогда
			СуммаНДСУвеличение = СуммаНДСДокументаДельта;
			СуммаНДСУменьшение = 0;
		Иначе
			СуммаНДСУвеличение = 0;
			СуммаНДСУменьшение = СуммаНДСДокументаДельта;
		КонецЕсли;		
	КонецЕсли;
	
	ДокументОснование     = ДанныеЗаполнения;
	СтруктурнаяЕдиница    = ДанныеЗаполнения.СтруктурнаяЕдиница;
	Контрагент            = ДанныеЗаполнения.Контрагент;
	Фирма                 = ДанныеЗаполнения.Фирма;
	НомерВходящегоДокумента	= ДанныеЗаполнения.НомерСФ;
	ДатаВходящегоДокумента	= ДанныеЗаполнения.ДатаСФ;
	КодСпособаВыставления = 1;
	Выставлен             = Истина;
	ДатаВыставления       = ТекущаяДата();
	
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//{ СИТЕК БрыляковЕЮ 2015-05-05  
	// Исходный текст --> 
	//Если ПараметрыСеанса.ИспользованиеЦВД И НЕ ОбменДанными.Загрузка Тогда
	//	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда	
	//		//{БредовЮГ 2014-11-24 Наряд №000134783
	//		//Если (ПараметрыСеанса.ЭтоЦентр) ИЛИ (НЕ ПараметрыСеанса.ЭтоЦентр И ЭтотОбъект.ОбработанЦВД = Ложь) Тогда
	//		Если НЕ (ЭтотОбъект.ДополнительныеСвойства.свойство("ОбменЦВД") И ЭтотОбъект.ДополнительныеСвойства.ОбменЦВД) Тогда
	//		//БредовЮГ 2014-11-24 Наряд №000134783}
	//			Узел = ПланыОбмена.ОбменЦВД.НайтиПоКоду(1);
	//			Если НЕ Узел.Пустая() Тогда
	//				ПланыОбмена.ЗарегистрироватьИзменения(Узел,ЭтотОбъект);	
	//			КонецЕсли;	
	//		//{БредовЮГ 2014-11-24 Наряд №000134783	
	//		КонецЕсли;	
	//		//БредовЮГ 2014-11-24 Наряд №000134783}
	//	КонецЕсли;	
	//КонецЕсли;
	// <-- Исходный текст 
	// СИТЕК БрыляковЕЮ 2015-05-05 }

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбработанЦВД = Ложь;	
КонецПроцедуры



