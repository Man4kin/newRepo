
Функция ПолучитьСоответствиеВидовСчетаФактурыФормам() Экспорт

	ФормыСчетовФактур = Новый Соответствие;
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаПоступление,		"ФормаДокументаНаПоступление");
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаАванс,				"ФормаДокументаНаАванс");
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.НаАвансКомитента,	"ФормаДокументаНаАванс");
	ФормыСчетовФактур.Вставить(Перечисления.ВидСчетаФактурыПолученного.Корректировочный,	"ФормаДокументаКорректировочный");
	
	Возврат ФормыСчетовФактур;

КонецФункции 

// Открываемая форма документа определяется в зависимости от указанного вида счета-фактуры
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка"
		ИЛИ ВидФормы = "ФормаВыбора" Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидСчетаФактуры        = Параметры.Ключ.ВидСчетаФактуры;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") 
		И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура")
		И Параметры.ЗначенияЗаполнения.Свойство("ВидСчетаФактуры") Тогда 
		ВидСчетаФактуры = Параметры.ЗначенияЗаполнения.ВидСчетаФактуры;
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") 
		И ЗначениеЗаполнено(Параметры.ЗначениеКопирования)
		И ТипЗнч(Параметры.ЗначениеКопирования) = Тип("ДокументСсылка.РегистрацияСчетФактуры") Тогда 
		ВидСчетаФактуры = Параметры.ЗначениеКопирования.ВидСчетаФактуры;
	Иначе
		ВидСчетаФактуры = Неопределено;
	КонецЕсли;
	
	Если Параметры.Свойство("Основание") Тогда
		Если ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
			ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
		ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			Если Параметры.Основание.РежимКорректировки = Перечисления.РежимыКорректировок.ИсправлениеОшибки Тогда
				ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.НаПоступление;
			ИначеЕсли Параметры.Основание.РежимКорректировки = Перечисления.РежимыКорректировок.СогласованноеИзменение Тогда
				ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ВидСчетаФактуры = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	ИначеЕсли ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
		ВыбраннаяФорма = "ФормаДокументаКорректировочный";
	Иначе
		ВыбраннаяФорма = "ФормаДокументаНаПоступление";
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ПЕЧАТНОЙ ФОРМЫ ДОКУМЕНТА

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	МассивСчетовФактур1137					= Новый Массив;
	МассивКорректировочныхСчетовФактур1137	= Новый Массив;
	
	Для каждого Объект Из МассивОбъектов Цикл
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПриходнаяНакладная")
			ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.КорректировкаПоступления")  Тогда
			Если Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный Тогда
				МассивКорректировочныхСчетовФактур1137.Добавить(Объект);
			Иначе
				МассивСчетовФактур1137.Добавить(Объект);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивСчетовФактур1137.Количество() = 0 Тогда
		УдалитьМакетИзКоллекции(КоллекцияПечатныхФорм, "СчетФактура1137");
	КонецЕсли;
	
	Если МассивКорректировочныхСчетовФактур1137.Количество() = 0 Тогда
		УдалитьМакетИзКоллекции(КоллекцияПечатныхФорм, "КорректировочныйСчетФактура1137");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура1137") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"СчетФактура1137", "Счет-фактура", 
			УчетНДС.ПечатьСчетовФактур1137(МассивСчетовФактур1137, ОбъектыПечати, ТекстЗапросаПечатьСчетовФактур()));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КорректировочныйСчетФактура1137") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"КорректировочныйСчетФактура1137", "Корректировочный счет-фактура", 
			УчетНДС.ПечатьКорректировочныхСчетовФактур1137(МассивКорректировочныхСчетовФактур1137, ОбъектыПечати, ТекстЗапросаПечатьКорректировочныхСчетовФактур()));
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
		
КонецПроцедуры

Процедура УдалитьМакетИзКоллекции(КоллекцияПечатныхФорм, ИмяМакета)

	Стр = КоллекцияПечатныхФорм.Найти(ВРег(ИмяМакета), "ИмяВРЕГ");
	
	Если Стр <> Неопределено Тогда
		
		КоллекцияПечатныхФорм.Удалить(Стр);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаПечатьСчетовФактур()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.Ссылка КАК СчетФактура,
	|	ЛОЖЬ КАК УдалитьПрефиксыИзНомера,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ДокументыОснования.Ссылка.ДатаВходящегоДокумента КАК Дата,
	|	ДокументыОснования.Ссылка.НомерВходящегоДокумента КАК Номер,
	|	ДокументыОснования.Ссылка.ВидСчетаФактуры КАК ВидСчетаФактуры,
	|	ДокументыОснования.Ссылка.СчетФактураБезНДС КАК СчетФактураБезНДС,
	|	ДокументыОснования.Ссылка.Исправление КАК Исправление,
	|	ДокументыОснования.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ДокументыОснования.Ссылка.Дата КАК ДатаИсправления,
	|	ДокументыОснования.Ссылка.Контрагент КАК Контрагент,
	|	ДокументыОснования.Ссылка.Контрагент.КПП КАК КППКонтрагента
	|ИЗ
	|	Документ.РегистрацияСчетФактуры КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В(&МассивОбъектов)
	|	И НЕ ДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|	И НЕ ДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАвансКомитента)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияПереопределяемый.ТекстРазделителяЗапросовПакета();

КонецФункции 

Функция ТекстЗапросаПечатьКорректировочныхСчетовФактур()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.Ссылка КАК СчетФактура,
	|	ДокументыОснования.Ссылка.ДатаВходящегоДокумента КАК Дата,
	|	ДокументыОснования.Ссылка.НомерВходящегоДокумента КАК Номер,
	|	ДокументыОснования.Ссылка.ВидСчетаФактуры КАК ВидСчетаФактуры,
	|	ДокументыОснования.Ссылка.СчетФактураБезНДС КАК СчетФактураБезНДС,
	|	ДокументыОснования.Ссылка.Исправление КАК Исправление,
	|	ДокументыОснования.Ссылка.НомерИсправленияИсходногоДокумента КАК НомерИсправления,
	|	ДокументыОснования.Ссылка.ДатаИсправленияИсходногоДокумента КАК ДатаИсправления,
	|	ДокументыОснования.Ссылка.УчитыватьИсправлениеИсходногоДокумента КАК УчитыватьИсправлениеИсходногоДокумента,
	|	ДокументыОснования.Ссылка.НомерИсходногоДокумента КАК НомерИсходногоДокумента,
	|	ДокументыОснования.Ссылка.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|	ДокументыОснования.Ссылка.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	ДокументыОснования.Ссылка.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|	ДокументыОснования.Ссылка.НомерИсправления КАК НомерИсправленияКорректировочного,
	|	ДокументыОснования.Ссылка.ДатаИсправления КАК ДатаИсправленияКорректировочного,
	|	ДокументыОснования.Ссылка.Контрагент КАК Контрагент,
	|	ДокументыОснования.Ссылка.Контрагент.КПП КАК КППКонтрагента,
	|	ЛОЖЬ КАК УдалитьПрефиксыИзНомера,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	1 КАК НомерСтроки
	|ИЗ
	|	Документ.РегистрацияСчетФактуры КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В(&МассивОбъектов)
	|	И ДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияПереопределяемый.ТекстРазделителяЗапросовПакета();
	
КонецФункции 
