Перем МассивПриставок Экспорт;

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.Izh_РабочееВремяСотрудников.Записывать = Истина;
	Движения.Izh_РабочееВремяСотрудников.Очистить();
	
	Движения.Izh_ОтработанноеВремяСотрудников.Записывать = Истина;
	Движения.Izh_ОтработанноеВремяСотрудников.Очистить();
	
	Для Каждого ТекСтрокаОтработанноеВремя Из ОтработанноеВремя Цикл				
		Для НомерДня = 1 По 31 Цикл
			
			НачДень = День(ДатаНачалаПериода);
			КонДень = День(ДатаОкончанияПериода);
			
			Если НомерДня >= НачДень И НомерДня <= КонДень Тогда
				Для ИндексМассиваПриставок = 0 По 3 Цикл
					
					ВидВремени	= ТекСтрокаОтработанноеВремя[МассивПриставок[ИндексМассиваПриставок]+"ВидВремени"+НомерДня];
					КолЧасов	= ТекСтрокаОтработанноеВремя[МассивПриставок[ИндексМассиваПриставок]+"Часов"+НомерДня];
					
					Если НЕ ЗначениеЗаполнено(ВидВремени) Тогда
						Продолжить;
					КонецЕсли;
					
					Движение = Движения.Izh_РабочееВремяСотрудников.Добавить();
					Движение.Период				= НачалоМесяца(ДатаНачалаПериода) + (60*60*24)*(НомерДня-1);					
					Движение.СтруктурнаяЕдиница	= СтруктурнаяЕдиница;
					Движение.КодСотрудника		= ТекСтрокаОтработанноеВремя.КодСотрудника;
					Движение.ВидВремени			= ВидВремени;
					Движение.ВидЗанятости		= ТекСтрокаОтработанноеВремя["ВидЗанятостиДень" + СокрЛП(НомерДня)];
					Движение.Должность			= ТекСтрокаОтработанноеВремя["ДолжностьДень" + СокрЛП(НомерДня)];
					Движение.Дней				= 1;
					Движение.Часов				= КолЧасов;
					
					Движение = Движения.Izh_ОтработанноеВремяСотрудников.Добавить();
					Движение.Период				= НачалоМесяца(ДатаНачалаПериода) + (60*60*24)*(НомерДня-1);					
					Движение.СтруктурнаяЕдиница	= СтруктурнаяЕдиница;
					Движение.КодСотрудника		= ТекСтрокаОтработанноеВремя.КодСотрудника;
					Движение.ФИОСотрудника		= ТекСтрокаОтработанноеВремя.ФИОСотрудника;
					Движение.ВидВремени			= ВидВремени;
					Движение.ВидЗанятости		= ТекСтрокаОтработанноеВремя["ВидЗанятостиДень" + СокрЛП(НомерДня)];
					Движение.Должность			= ТекСтрокаОтработанноеВремя["ДолжностьДень" + СокрЛП(НомерДня)];
					Движение.Дней				= 1;
					Движение.Часов				= КолЧасов;					
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;		
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент() Экспорт
	
	Если НЕ ЗначениеЗаполнено(Автор) Тогда		
		Автор	= ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда		
		Дата	= ТекущаяДата();                                
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда		
		СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

МассивПриставок = Новый Массив(4);
МассивПриставок[0] = "Первый";
МассивПриставок[1] = "Второй";
МассивПриставок[2] = "Третий";
МассивПриставок[3] = "Четвертый";