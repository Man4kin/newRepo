Функция ПечатьТабельУчетаРабочегоВремени(МассивОбъектов, ОбъектыПечати) Экспорт
		
	МассивПриставок = Новый Массив(4);
	МассивПриставок[0] = "Первый";
	МассивПриставок[1] = "Второй";
	МассивПриставок[2] = "Третий";
	МассивПриставок[3] = "Четвертый";
	
	ТабДок	= Новый ТабличныйДокумент;
	Макет	= ПолучитьМакет("ТабельУчетаРабочегоВремени");	
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	
	ОбластьШапкаТабеля		= Макет.ПолучитьОбласть("ШапкаТабеля");
	ОбластьШапкаТаблицы		= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы	= Макет.ПолучитьОбласть("СтрокаТаблицы");
	
	Если МассивОбъектов.Количество() = 1 Тогда
				
		ДокСсылка = МассивОбъектов[0];
		//ДокСсылка = Документы.Izh_ТабельУчетаРабочегоВремени.НайтиПоНомеру();
		
		Если ДокСсылка.ДатаНачалаПериода = ДокСсылка.ДатаОкончанияПериода Тогда
			СтрокаПериод = "за " + Формат(ДокСсылка.ДатаНачалаПериода, "ДЛФ=Д");
		Иначе
			СтрокаПериод = "за период с " + Формат(ДокСсылка.ДатаНачалаПериода, "ДЛФ=Д") + " по " + Формат(ДокСсылка.ДатаОкончанияПериода, "ДЛФ=Д");
		КонецЕсли;
		
		ОбластьШапкаТабеля.Параметры.СтруктурнаяЕдиница = ДокСсылка.СтруктурнаяЕдиница.Наименование;
		ОбластьШапкаТабеля.Параметры.СтрокаПериод	= СтрокаПериод;		
		ТабДок.Вывести(ОбластьШапкаТабеля);		
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		
		Для Каждого СтрокаТЧ Из ДокСсылка.ОтработанноеВремя Цикл
			
			СтрокаЗамещений		= "";
			СтрокаСотрудник		= "";
			
			ДнейПерваяПоловина  = 0;
			ЧасовПерваяПоловина = 0;
			ДнейВтораяПоловина  = 0;
			ЧасовВтораяПоловина = 0;			
			
			Для ИндДня = 1 По 31 Цикл
				
				НомерДня = СокрЛП(ИндДня);
				
				ВидЗанятости= СтрокаТЧ["ВидЗанятостиДень" + НомерДня];
				Должность	= СтрокаТЧ["ДолжностьДень" + НомерДня];
				
				СтрокаВидВремени	= "";
				СтрокаЧасов			= "";				
				
				Для Каждого Приставка Из МассивПриставок Цикл
					
					ВидВремени	= СтрокаТЧ[Приставка + "ВидВремени" + НомерДня];
					Часов		= СтрокаТЧ[Приставка + "Часов" + НомерДня];					
					
					Если ЗначениеЗаполнено(ВидВремени) Тогда						
						СтрокаВидВремени = СтрокаВидВремени + ?(СтрокаВидВремени = "","", "/") + ВидВремени.БуквенныйКод;
						СтрокаЧасов		 = СтрокаЧасов + ?(СтрокаЧасов = "","", "/") + ?(Часов = 0, "", СокрЛП(Часов));
						
						Если ИндДня <= 15 Тогда							
							ЧасовПерваяПоловина = ЧасовПерваяПоловина + Часов;
						Иначе							
							ЧасовВтораяПоловина = ЧасовВтораяПоловина + Часов;
						КонецЕсли;
					КонецЕсли;											
				КонецЦикла;
				
				Если ЗначениеЗаполнено(СтрокаЧасов) Тогда
					Если ИндДня <= 15 Тогда							
						ДнейПерваяПоловина = ДнейПерваяПоловина + 1;
					Иначе							
						ДнейВтораяПоловина = ДнейВтораяПоловина + 1;
					КонецЕсли;
				КонецЕсли;
				
				Если ВидЗанятости = Перечисления.Izh_ВидыЗанятостиНаТекущемМестеРаботы.ИсполняющийОбязанности Тогда
					СтрокаЗамещений = СтрокаЗамещений + НомерДня + " - " + Должность.Наименование + Символы.ПС;
				КонецЕсли;
				
				Если СтрокаВидВремени = "" Тогда
					СтрокаВидВремени	= "-";					
					СтрокаЧасов			= "-";
				КонецЕсли;
				
				ОбластьСтрокаТаблицы.Параметры["Символ" + НомерДня]	= СтрокаВидВремени;
				ОбластьСтрокаТаблицы.Параметры["ДополнительноеЗначение" + НомерДня] = СтрокаЧасов;
							
			КонецЦикла; //Цикл по дням
			
			ОбластьСтрокаТаблицы.Параметры.НомерПП	= СокрЛП(СтрокаТЧ.НомерСтроки);
			ОбластьСтрокаТаблицы.Параметры.Работник	= СтрокаТЧ.ФИОСотрудника + "," + Символы.ПС
															 + СтрокаТЧ.Должность + "," + Символы.ПС
															 	+ СтрокаТЧ.КодПодразделения;
			
			ОбластьСтрокаТаблицы.Параметры.ДнейПерваяПоловина  = ДнейПерваяПоловина;
			ОбластьСтрокаТаблицы.Параметры.ЧасовПерваяПоловина = ЧасовПерваяПоловина;
			ОбластьСтрокаТаблицы.Параметры.ДнейВтораяПоловина  = ДнейВтораяПоловина;
			ОбластьСтрокаТаблицы.Параметры.ЧасовВтораяПоловина = ЧасовВтораяПоловина;
			ОбластьСтрокаТаблицы.Параметры.ДнейВсего	= ДнейПерваяПоловина + ДнейВтораяПоловина;
			ОбластьСтрокаТаблицы.Параметры.ЧасовВсего	= ЧасовПерваяПоловина + ЧасовВтораяПоловина;
																
			ОбластьСтрокаТаблицы.Параметры.ДанныеЗамещений = СтрокаЗамещений;
															 
			ТабДок.Вывести(ОбластьСтрокаТаблицы);
		КонецЦикла; //цикл по ТЧ
		
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТабельУчетаРабочегоВремени") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ТабельУчетаРабочегоВремени", "Табель учета рабочего времени", ПечатьТабельУчетаРабочегоВремени(МассивОбъектов, ОбъектыПечати));		
	КонецЕсли;
	
КонецПроцедуры