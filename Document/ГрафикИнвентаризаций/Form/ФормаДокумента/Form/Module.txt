
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	Видимость = ТолькоДепартамент();
	Элементы.СтраницаСклады.Видимость = ВидимостьСклада();
	Элементы.СоставКласс.Видимость = НЕ Видимость;
	Элементы.СоставПодКласс.Видимость = НЕ Видимость;
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	Элементы.ТипПередачиРезультатов.Доступность = НЕ Объект.Проведен;
	Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.Найти("ФормаСоздатьНаОсновании").ПодчиненныеЭлементы.Найти("ФормаДокументИнвентаризацияСоздатьНаОсновании").Доступность = НЕ УправлениеБизнесПроцессамиСервер.БизнесПроцессРазрешен(БизнесПроцессы.ПроведениеИнвентаризации.ПустаяСсылка());
КонецПроцедуры


&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура ПодборОткрыть(Команда)
	элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
	
КонецПроцедуры


&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	этаФорма.Модифицированность = Истина;
	ПустаяСсылка = ПолучитьПустуюСсылкуНоменклатуры();
	Уровень = ПолучитьУровеньНоменклатуры(ВыбраннаяСтрока);
	ТолькоДепартамент = ТолькоДепартамент();
	Если Уровень < 2 Тогда
		ЗаполнитьДепартамент(ВыбраннаяСтрока,ПустаяСсылка,Уровень);
		//Состояние("Добавлять можно только группы ниже второй!",,,БиблиотекаКартинок.Предупреждение32);
		//Возврат;
	ИначеЕсли Уровень = 2 Тогда	
		Строки = Объект.Состав.НайтиСтроки(Новый Структура("Департамент,Класс,Подкласс", ВыбраннаяСтрока,ПустаяСсылка,ПустаяСсылка));
		Если Строки.Количество() = 0 Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Департамент = ВыбраннаяСтрока;
		КонецЕсли;
	ИначеЕсли Уровень = 3 Тогда	
		Если ТолькоДепартамент Тогда
			Департамент = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ВыбраннаяСтрока,"Родитель");
			Строки = Объект.Состав.НайтиСтроки(Новый Структура("Департамент,Класс,Подкласс", Департамент,ПустаяСсылка,ПустаяСсылка));
			Если Строки.Количество() = 0 Тогда
				НоваяСтрока = Объект.Состав.Добавить();
				НоваяСтрока.Департамент = Департамент;
			КонецЕсли;
		Иначе
			Строки = Объект.Состав.НайтиСтроки(Новый Структура("Класс,Подкласс", ВыбраннаяСтрока,ПустаяСсылка));
			Если Строки.Количество() = 0 Тогда
				НоваяСтрока = Объект.Состав.Добавить();
				НоваяСтрока.Класс = ВыбраннаяСтрока;
				НоваяСтрока.Департамент = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ВыбраннаяСтрока,"Родитель");
			КонецЕсли;
		КонецЕсли;	
	Иначе
		Если ТолькоДепартамент Тогда
			Класс = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ВыбраннаяСтрока,"Родитель");
			Департамент = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(Класс,"Родитель");
			Строки = Объект.Состав.НайтиСтроки(Новый Структура("Департамент,Класс,Подкласс", Департамент,ПустаяСсылка,ПустаяСсылка));
			Если Строки.Количество() = 0 Тогда
				НоваяСтрока = Объект.Состав.Добавить();
				НоваяСтрока.Департамент = Департамент;
			КонецЕсли;
		Иначе
			Строки = Объект.Состав.НайтиСтроки(Новый Структура("Подкласс", ВыбраннаяСтрока));
			Если Строки.Количество() = 0 Тогда
				НоваяСтрока = Объект.Состав.Добавить();
				НоваяСтрока.Подкласс = ВыбраннаяСтрока;
				НоваяСтрока.Класс = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ВыбраннаяСтрока,"Родитель");
				НоваяСтрока.Департамент = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(НоваяСтрока.Класс,"Родитель");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьУровеньНоменклатуры(Ссылка)
	Возврат Ссылка.Уровень();
КонецФункции	
	
&НаСервере
Функция ЗаполнитьДепартамент(Номенклатура,ПустаяСсылка,Уровень)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Группа = 1";
	Если Уровень = 1 Тогда
		Запрос.Текст = Запрос.Текст + "
			|	И Номенклатура.Родитель = &Родитель";
	Иначе
		Запрос.Текст = Запрос.Текст + "
			|	И Номенклатура.Родитель.Родитель = &Родитель";
	КонецЕсли;	
		

	Запрос.УстановитьПараметр("Родитель", Номенклатура);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Строки = Объект.Состав.НайтиСтроки(Новый Структура("Департамент,Класс,Подкласс", ВыборкаДетальныеЗаписи.Ссылка,ПустаяСсылка,ПустаяСсылка));
		Если Строки.Количество() = 0 Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Департамент = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЕсли;
	КонецЦикла;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецФункции	


&НаСервере
Функция ПолучитьПустуюСсылкуНоменклатуры()
	Возврат Справочники.Номенклатура.ПустаяСсылка();
КонецФункции	

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ДатаИнвентаризацииПриИзменении(Элемент)
	Если Объект.ТипПередачиРезультатов = ПредопределенноеЗначение("Перечисление.ТипыПередачиРезультатовИнвентаризации.ФактическиеОстатки") Тогда
		Если Объект.ДатаИнвентаризации<= НачалоДня(ТекущаяДата()) Тогда
			Объект.ДатаИнвентаризации = НачалоДня(ТекущаяДата())+24*3600;
			Текст = "Запрещено указывать текущую дату!";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Объект.Ссылка);
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурнаяЕдиницаПриИзменении(Элемент)
	Видимость = ТолькоДепартамент();
	Элементы.СоставКласс.Видимость = НЕ Видимость;
	Элементы.СоставПодКласс.Видимость = НЕ Видимость;
КонецПроцедуры

&НаСервере
Функция  ВидимостьСклада()
	Возврат Объект.ТипПередачиРезультатов = Перечисления.ТипыПередачиРезультатовИнвентаризации.ИзлишкиНедостачи;
КонецФункции

&НаСервере
Функция  ТолькоДепартамент()
	Возврат Объект.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад И Объект.ТипПередачиРезультатов = Перечисления.ТипыПередачиРезультатовИнвентаризации.ФактическиеОстатки;
КонецФункции

&НаКлиенте
Процедура СкладыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",Новый Структура("Владелец", Объект.СтруктурнаяЕдиница));
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ФормаВыбора = ПолучитьФорму("Справочник.Склады.ФормаВыбора",ПараметрыФормы,ЭтаФорма);
	ФормаВыбора.Открыть();
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Справочник.Склады.Форма.ФормаВыбора" Тогда
		Для Каждого Склад Из ВыбранноеЗначение Цикл
			Если Объект.Склады.НайтиСтроки(Новый Структура("Склад", Склад)).Количество() = 0 Тогда
				НоваяСтрока = Объект.Склады.Добавить();
				НоваяСтрока.Склад = Склад;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТипПередачиРезультатовПриИзменении(Элемент)
	ДатаИнвентаризацииПриИзменении(Элемент);
	Элементы.СтраницаСклады.Видимость = ВидимостьСклада();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.ТипПередачиРезультатов = ПредопределенноеЗначение("Перечисление.ТипыПередачиРезультатовИнвентаризации.ИзлишкиНедостачи") И Объект.Склады.Количество() = 0 Тогда
		Отказ = Истина;
		Текст = "Не выбраны склады, по которым будет проводиться инвентаризация!";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Объект.Ссылка);
	КонецЕсли;	
КонецПроцедуры


