
&НаКлиенте
Процедура ОперацияПриИзменении(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	//popn+
	ЗаполнитьТипДоговора();
	//popn-
	ОпределитьТипИДоступностьАналитики();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентКассаПриИзменении(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура Валюта(Команда)
	РаботаСФормамиКлиент.ОткрытьФормуВводаВалютыКурса(Объект);
	ОбновитьПредставлениеВалюты();	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеВалюты()
	Если Объект.Курс = 1 Тогда
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = Объект.Валюта;
	Иначе
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = ""+Объект.Валюта+" "+Объект.Курс;
	КонецЕсли;	
КонецПроцедуры	


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
			Объект.Валюта = ПолучитьВалютуКонтрагента(Объект.Контрагент);
		Иначе
			Объект.Валюта = ПолучитьВалютуСтруктурнойЕдиницы(Объект.СтруктурнаяЕдиница);
		КонецЕсли;
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ИспользованиеВалюты(СтруктурнаяЕдиница)
	Возврат ПолучитьФункциональнуюОпцию("ИспользованиеВалюты",Новый Структура("СтруктурнаяЕдиница,ПараметрСтруктурнойЕдиницы",СтруктурнаяЕдиница,ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеВалюты));
КонецФункции

 &НаСервереБезКонтекста
Функция ПолучитьКурсВалютыНаДату(Валюта,Дата)
	Возврат РаботаСКурсамиВалютКлиентСервер.ПолучитьКурсВалютыНаДату(Валюта,Дата);
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьВалютуКонтрагента(Контрагент)
	 Возврат Контрагент.Валюта;
КонецФункции
 
 &НаСервереБезКонтекста
Функция ПолучитьВалютуСтруктурнойЕдиницы(се)
	Возврат се.Валюта;
КонецФункции	 

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	ПриИзмененииСтавкаНДС();
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСтавкаНДС()
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("СтавкаНДС", Объект.СтавкаНДС);
	СтруктураДанных.Вставить("Ставка");
	
	ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
	
	чСтавкаНДС = СтруктураДанных.Ставка;
	Объект.СуммаНДС = Окр(Объект.Сумма * чСтавкаНДС / (100 + чСтавкаНДС), 2);
	
КонецПроцедуры


&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	  ПриИзмененииСтавкаНДС();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Задача = ЭтаФорма.Параметры.ВыполняемаяЗадача;
	Если ЗначениеЗаполнено(Задача) Тогда
		УправлениеБизнесПроцессамиСервер.ВыполнитьЗадачу(Задача);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Задача = ЭтаФорма.Параметры.ВыполняемаяЗадача;
	Если ЗначениеЗаполнено(Задача) Тогда
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Задача,"Выполнена") Тогда
			Оповестить("ЗадачаВыполнена");
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

//popn+
&НаСервере
Функция ПолучитьНаСервереКлассификаторСтатьиДДС(СтатьяДДС)
	Возврат СтатьяДДС.КлассификацияДенежнойОперацииПоУмолчанию;
КонецФункции

&НаСервере
Функция ПолучитьНаСервереТипАналитики(КлассификаторДДС)
	Если ЗначениеЗаполнено(КлассификаторДДС) Тогда
		Возврат КлассификаторДДС.ТипЗначения;
	Иначе
		Возврат Новый ОписаниеТипов();
	КонецЕсли;
КонецФункции

&НаСервере
Функция КлассификаторСтатьиЗаполнен(СтатьяДДС)
	Возврат ЗначениеЗаполнено(СтатьяДДС.КлассификацияДенежнойОперацииПоУмолчанию);
КонецФункции

&НаСервере
Функция СчетУчетаСтатьиЗаполнен(СтатьяДДС)
	Возврат ЗначениеЗаполнено(СтатьяДДС.СчетУчета);
КонецФункции

&НаКлиенте
Процедура СтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	СтатьяДДС = Объект.СтатьяДвиженияДенежныхСредств;
	ЕстьКлассификатор = КлассификаторСтатьиЗаполнен(СтатьяДДС);
	Если НЕ ЕстьКлассификатор Тогда
		Сообщить("У выбранной статьи движения денежных средств не заполнено поле ""Классификатор ДДС""");
		Объект.СтатьяДвиженияДенежныхСредств = НЕОПРЕДЕЛЕНО;
	КонецЕсли;
	ЕстьСчет = СчетУчетаСтатьиЗаполнен(СтатьяДДС);
	Если НЕ ЕстьСчет Тогда
		Сообщить("У выбранной статьи движения денежных средств не заполнено поле ""Счет учета""");
		Объект.СтатьяДвиженияДенежныхСредств = НЕОПРЕДЕЛЕНО;
	КонецЕсли;
	Если ЕстьКлассификатор И ЕстьСчет Тогда
		Объект.КлассификаторДДС = ПолучитьНаСервереКлассификаторСтатьиДДС(СтатьяДДС);
		ЗаполнитьТипДоговора();
	КонецЕсли;
	ОпределитьТипИДоступностьАналитики();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТипДоговора()
	Если КлассификаторПокупательПоставщик(Объект.КлассификаторДДС) Тогда
		Объект.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.КупляПродажа");
		ЭтаФорма.Элементы.ТипДоговора.Видимость = ИСТИНА;
	Иначе
		Объект.ТипДоговора = НЕОПРЕДЕЛЕНО;
		ЭтаФорма.Элементы.ТипДоговора.Видимость = ЛОЖЬ;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция КлассификаторПокупательПоставщик(КлассификаторДДС)
	Да = КлассификаторДДС = ПланыВидовХарактеристик.КлассификаторДДС.РасчетыСПокупателями
	ИЛИ КлассификаторДДС = ПланыВидовХарактеристик.КлассификаторДДС.РасчетыСПоставщиками;
	Возврат Да;
КонецФункции

&НаКлиенте
Процедура ТипДоговораНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СЗ = Новый Массив();
    СЗ.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговоров.КупляПродажа"));
    СЗ.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговоров.Комиссия"));
    Элемент.СписокВыбора.ЗагрузитьЗначения(СЗ);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета") Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		УсловияОтбора  = Новый Структура("Владелец", Объект.Фирма);
		ПараметрыФормы = Новый Структура("Отбор",    УсловияОтбора);
		ОткрытьФорму("Справочник.БанковскиеСчета.ФормаВыбора",ПараметрыФормы, Элемент);
	ИначеЕсли Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.КассыФирмы, СправочникСсылка.СтруктурныеЕдиницы") или Объект.КлассификаторДДС = ПолучитьНаСервереКлассификаторДДС("ПеремещениеКассаКасса") Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		ФормаВыбора = ПолучитьФорму("Справочник.КассыФирмы.ФормаВыбора",,Элемент);
		
		ОтборФирма = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборФирма.ЛевоеЗначение = ФормаВыбора.Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти("Фирма").Поле;
		ОтборФирма.Использование = Истина;
		ОтборФирма.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		СписокДоступныхФирм = Новый СписокЗначений;
		СписокДоступныхФирм.Добавить(Объект.Фирма);
		СписокДоступныхФирм.Добавить(ПолучитьНаСервереПустуюОрганизацию());
		ОтборФирма.ПравоеЗначение = СписокДоступныхФирм;
		ОтборФирма.Представление = "Фирма из документа или не указана";
		//ОтборФирма.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ФормаВыбора.Открыть();
		
		//УсловияОтбора.Вставить("Фирма",Объект.Фирма);
		//ПараметрыФормы = Новый Структура("Отбор",    УсловияОтбора);
		//ОткрытьФорму("Справочник.КассыФирмы.ФормаВыбора",ПараметрыФормы, Элемент);
	ИначеЕсли Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.КассыФирмы") Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		УсловияОтбора  = Новый Структура("Владелец", Объект.СтруктурнаяЕдиница);
		УсловияОтбора.Вставить("Фирма",Объект.Фирма);
		ПараметрыФормы = Новый Структура("Отбор",    УсловияОтбора);
		ОткрытьФорму("Справочник.КассыФирмы.ФормаВыбора",ПараметрыФормы, Элемент);
	ИначеЕсли Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ККМ") Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		УсловияОтбора  = Новый Структура("Владелец", Объект.СтруктурнаяЕдиница);
		ПараметрыФормы = Новый Структура("Отбор",    УсловияОтбора);
		ОткрытьФорму("Справочник.ККМ.ФормаВыбора",ПараметрыФормы, Элемент);
	КонецЕсли;

КонецПроцедуры
//popn-

//+Зернятко А.В.@09.08.2013 - //RS-106. Основное направление инкассации
&НаСервере
Функция ПолучитьНаСервереКлассификаторДДС(ИмяКлассификатораДДС)
	Возврат ПланыВидовХарактеристик.КлассификаторДДС[ИмяКлассификатораДДС];
КонецФункции

&НаСервере
Функция ПолучитьНаСервереПустуюОрганизацию()
	Возврат Справочники.Организации.ПустаяСсылка();
КонецФункции

&НаСервере
Функция ПолучитьНаСервереТипАналитикиСтатьиДДС(СтатьяДДС)
	//BIT_Izhevsk ALProzorov 08/07/2015 -->>
	Если ValueIsFilled(СтатьяДДС) Тогда
		Возврат СтатьяДДС.КлассификацияДенежнойОперацииПоУмолчанию.ТипЗначения;	
	Иначе
		Возврат Новый ОписаниеТипов();
	КонецЕсли	
	//Если ЗначениеЗаполнено(СтатьяДДС.ТипАналитики) ТОгда
	//	Возврат Новый ОписаниеТипов(СтатьяДДС.ТипАналитики);
	//Иначе
	//	Возврат Новый ОписаниеТипов();
	//КонецЕсли;	
	//BIT_Izhevsk ALProzorov 08/07/2015 <<--
КонецФункции

&НаКлиенте
Процедура ОпределитьТипИДоступностьАналитики()
	Если Объект.КлассификаторДДС = ПолучитьНаСервереКлассификаторДДС("ПрочиеВыплатыИПоступления") ТОгда
		ЭтаФорма.Элементы.Аналитика.ОграничениеТипа = ПолучитьНаСервереТипАналитикиСтатьиДДС(Объект.СтатьяДвиженияДенежныхСредств);
	Иначе
		ЭтаФорма.Элементы.Аналитика.ОграничениеТипа = ПолучитьНаСервереТипАналитики(Объект.КлассификаторДДС);
	КонецЕсли;
	ЭтаФорма.Элементы.Аналитика.Доступность = НЕ ЭтаФорма.Элементы.Аналитика.ОграничениеТипа = Новый ОписаниеТипов();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры
///Зернятко А.В.@ - конец блока 

         