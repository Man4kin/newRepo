
Процедура ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения)
	
	Если ТипЗнч(ДанныеЗаполнения.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда 
		Если ЗначениеЗаполнено(ДанныеЗаполнения.Контрагент.Организация) Тогда
			Если ДанныеЗаполнения.Контрагент.Организация = ДанныеЗаполнения.Фирма Тогда
				ТекстСообщения = НСтр("ru='Запрещен ввод на основании для перемещений между структурными единицами!'");
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		Если ЭтотОбъект.ЭтоНовый() Тогда
			СуществующийСФ = УчетНДС.НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДанныеЗаполнения, Ложь);
			Если ЗначениеЗаполнено(СуществующийСФ) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='На основании документа %1 уже был введен %2'"),
				ДанныеЗаполнения,
				СуществующийСФ);
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		КонецЕсли;
	
		ДокОснование          = ДанныеЗаполнения;
		СтруктурнаяЕдиница    = ДанныеЗаполнения.СтруктурнаяЕдиница;
		Контрагент            = ДанныеЗаполнения.Контрагент;
		Фирма                 = ДанныеЗаполнения.Фирма;
		СуммаДокумента        = ДанныеЗаполнения.Состав.Итог("Сумма");
		СуммаНДСДокумента     = ДанныеЗаполнения.Состав.Итог("СуммаНДС");
		ВидСчетаФактуры       = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию;
		КодСпособаВыставления = 1;
		Выставлен             = Истина;
		ДатаВыставления       = ТекущаяДата();
		ОпределениеПараметровСчетаФактурыНаРеализацию();
		
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		Если ЭтотОбъект.ЭтоНовый() Тогда
			СуществующийСФ = УчетНДС.НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(ДанныеЗаполнения, Ложь);
			Если ЗначениеЗаполнено(СуществующийСФ) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='На основании документа %1 уже был введен %2'"),
				ДанныеЗаполнения,
				СуществующийСФ);
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		КонецЕсли;
	
		Отказ = Ложь;
		ПараметрыЗаполнения	= Документы.СчетФактура.ПодготовитьПараметрыЗаполненияКорректировочный(ДанныеЗаполнения, Отказ);
		
		Если Отказ Тогда
			
			ТекстСообщения = ?(ТипЗнч(ПараметрыЗаполнения) = Тип("Строка"),
			ПараметрыЗаполнения,
			НСтр("ru='Нет данных для заполнения счета-фактуры.'"));
			
			ВызватьИсключение ТекстСообщения;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыЗаполнения.Реквизиты);
		
		ДокОснование = ДанныеЗаполнения;
		
		ОпределениеПараметровСчетаФактурыНаРеализацию();
		
		КодВидаОперации	= ПолучитьКодВидаОперации(ПараметрыЗаполнения.Реквизиты.КодВидаОперацииОснования);
		
		Выставлен             = Истина;
		ДатаВыставления       = ТекущаяДата();

		
	КонецЕсли;

	
КонецПроцедуры	

Процедура ОпределениеПараметровСчетаФактурыНаРеализацию() Экспорт
	Перем ПараметрыСФ;

	РеквизитыОбновлены	= Ложь;
	
	ИспользуетсяПостановлениеНДС1137 = Истина;
	
	ПараметрыСФ = УчетНДС.ПолучитьПараметрыСчетаФактуры(ЭтотОбъект);
	
		
	ВидСчетаФактурыПоОснованию = УчетНДС.ОпределитьВидСчетаФактурыВыданногоПоТипуОснования(ДокОснование);
	Если ВидСчетаФактурыПоОснованию = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию
		ИЛИ ВидСчетаФактурыПоОснованию = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
		Если НЕ ВидСчетаФактуры = ВидСчетаФактурыПоОснованию Тогда
			ВидСчетаФактуры = ВидСчетаФактурыПоОснованию;
			РеквизитыОбновлены	= Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПараметрыСФ.Фирма = Неопределено
		И НЕ ПараметрыСФ.Фирма = Фирма Тогда
		Номер		= "";
		Фирма	= ПараметрыСФ.Фирма;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;

	Если НЕ ПараметрыСФ.Контрагент = Неопределено
		И НЕ ПараметрыСФ.Контрагент = Контрагент Тогда
		Контрагент	= ПараметрыСФ.Контрагент;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;

	Если НЕ СуммаДокумента = ПараметрыСФ.СуммаДокумента Тогда
		СуммаИтого	= ПараметрыСФ.СуммаДокумента;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;

	Если НЕ СуммаНДСДокумента = ПараметрыСФ.СуммаНДСДокумента Тогда
		СуммаНДСИтого	= ПараметрыСФ.СуммаНДСДокумента;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;

	Если НЕ СуммаУвеличение = ПараметрыСФ.СуммаУвеличение Тогда
		СуммаУвеличение		= ПараметрыСФ.СуммаУвеличение;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;

	Если НЕ СуммаУменьшение = ПараметрыСФ.СуммаУменьшение Тогда
		СуммаУменьшение	= ПараметрыСФ.СуммаУменьшение;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;

	Если НЕ СуммаНДСУвеличение = ПараметрыСФ.СуммаНДСУвеличение Тогда
		СуммаНДСУвеличение	= ПараметрыСФ.СуммаНДСУвеличение;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;

	Если НЕ СуммаНДСУменьшение = ПараметрыСФ.СуммаНДСУменьшение Тогда
		СуммаНДСУменьшение	= ПараметрыСФ.СуммаНДСУменьшение;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;


	Если ЭтоНовый() И ИспользуетсяПостановлениеНДС1137 Тогда
		Если НЕ ТипЗнч(ДокОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			КодВидаОперации = ПолучитьКодВидаОперации();
		КонецЕсли;
	КонецЕсли;

	Если ИспользуетсяПостановлениеНДС1137 Тогда
		Если СчетФактураБезНДС <> ПараметрыСФ.СчетФактураБезНДС Тогда
			СчетФактураБезНДС  = ПараметрыСФ.СчетФактураБезНДС;
			РеквизитыОбновлены = Истина;
		КонецЕсли;
	КонецЕсли;
    		
	Если ТипЗнч(ДокОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		РезультатПоискаИсправляемыйСчетФактура = УчетНДС.НайтиПодчиненныйСчетФактуруВыданныйНаРеализацию(
			ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДокОснование, "ИсправляемыйДокумент"));
		Если РезультатПоискаИсправляемыйСчетФактура = Неопределено Тогда
			РезультатПоискаИсправляемыйСчетФактура = Документы.СчетФактура.ПустаяСсылка();
		КонецЕсли;
		
	Иначе
		РезультатПоискаИсправляемыйСчетФактура = Документы.СчетФактура.ПустаяСсылка();
	КонецЕсли;

	Если НЕ ИсправляемыйСчетФактура = РезультатПоискаИсправляемыйСчетФактура Тогда
		ИсправляемыйСчетФактура	= РезультатПоискаИсправляемыйСчетФактура;
		РеквизитыОбновлены	= Истина;
	КонецЕсли;
	

	Если РеквизитыОбновлены 
		И ДополнительныеСвойства.Свойство("СообщитьОбИзмененииРеквизитов")
		И ДополнительныеСвойства.СообщитьОбИзмененииРеквизитов Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Реквизиты документа ""%1"" перезаполнены автоматически'"),
			Ссылка));
	КонецЕсли;

КонецПроцедуры



Функция ПолучитьКодВидаОперации(КодВидаОперацииОснования = Неопределено)

	СтруктураПараметров	= Новый Структура;
	СтруктураПараметров.Вставить("Дата",						Дата);
	СтруктураПараметров.Вставить("ВидСчетаФактуры",				ВидСчетаФактуры);
	СтруктураПараметров.Вставить("Исправление",					Исправление);
	СтруктураПараметров.Вставить("Контрагент",					Контрагент);
	СтруктураПараметров.Вставить("СчетФактураНеВыставляется",	СчетФактураНеВыставляется);
	СтруктураПараметров.Вставить("СчетФактураБезНДС",			СчетФактураБезНДС);
	СтруктураПараметров.Вставить("КодВидаОперации",				КодВидаОперации);
	СтруктураПараметров.Вставить("ДокОснование",			    ДокОснование);

	Возврат Документы.СчетФактура.ПолучитьКодВидаОперации(СтруктураПараметров, КодВидаОперацииОснования);

КонецФункции


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") 
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаРеализации")
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаТоваровМеждуФирмами")
		Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ИнициализироватьДокумент();
КонецПроцедуры


Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

