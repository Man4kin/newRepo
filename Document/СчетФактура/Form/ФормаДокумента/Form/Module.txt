
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокФормы(Форма)
	
	Объект = Форма.Объект;
	
	Если Форма.Корректировочный Тогда
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Форма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Счет-фактура %1 от %2 - корректировочный'"),
			Объект.Номер,
			Объект.Дата);
		Иначе
			Форма.Заголовок = НСтр("ru='Счет-фактура (создание) - корректировочный'");
		КонецЕсли;
	Иначе
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Форма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Счет-фактура %1 от %2'"),
			Объект.Номер,
			Объект.Дата);
		Иначе
			Форма.Заголовок = НСтр("ru='Счет-фактура (создание)'");
		КонецЕсли;

		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	
	УчетНДС.ЗаполнитьСписокКодовВидовОпераций(Ложь, ЭтаФорма.Элементы.КодВидаОперации.СписокВыбора);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура Перезаполнить(Команда)
	ПерезаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьНаСервере()
	
	ЭтотОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.СчетФактура"));
	ЭтотОбъект.Заполнить(Объект.ДокОснование);
	ЗначениеВДанныеФормы(ЭтотОбъект,Объект);
	
КонецПроцедуры	



&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы	= Форма.Элементы;
	Объект		= Форма.Объект;
	Корректировочный = Форма.Корректировочный;
	
	Элементы.Исправление.Доступность		= Корректировочный;
	Элементы.НомерИсправления.Доступность	=  Объект.Исправление;
	
	Элементы.ЗаголовокИсходныйДокумент.Доступность	=  Объект.Исправление;
	Элементы.НомерИсходногоДокумента.Доступность	=  Объект.Исправление;
	Элементы.ДатаИсходногоДокумента.Доступность		=  Объект.Исправление;
	
	Элементы.ЗаголовокИсправляемыйКорректировочныйДокумент.Доступность	= Корректировочный;
	Элементы.НомерИсправляемогоКорректировочногоДокумента.Доступность	= Корректировочный;
	Элементы.ДатаИсправляемогоКорректировочногоДокумента.Доступность	= Корректировочный;
	
    Элементы.УчитыватьИсправлениеИсходногоДокумента.Доступность	= Корректировочный;
	Элементы.НомерИсправленияИсходногоДокумента.Доступность	=  Корректировочный;
	Элементы.ДатаИсправленияИсходногоДокумента.Доступность	=  Корректировочный;

	
	Элементы.Выставлен.Доступность				= НЕ Объект.СчетФактураНеВыставляется;
	Элементы.ДатаВыставления.Доступность		= НЕ Объект.СчетФактураНеВыставляется И Объект.Выставлен;
	Элементы.КодСпособаВыставления.Доступность	=  НЕ Объект.СчетФактураНеВыставляется;
	
	Элементы.ГруппаОбычный.Видимость         = НЕ Корректировочный;
	Элементы.ГруппаКорректировочный.Видимость = Корректировочный;
	
	Элементы.НомерПлатежноРасчетногоДокумента.Доступность = НЕ Корректировочный; 
	Элементы.ДатаПлатежноРасчетногоДокумента.Доступность = НЕ Корректировочный; 
	
	УстановитьЗаголовокФормы(Форма);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.ДокОснование) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Документ Счет-фактура необходимо вводить на основании документов ""Расходная накладная"", ""Корректировка реализации"", ""Передача товаров между фирмами""!'"));
		Возврат;
	КонецЕсли;
	ПодготовитьФормуНаСервере();
	Корректировочный = Объект.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный;
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИсправлениеПриИзменении(Элемент)
	Если НЕ Объект.Исправление Тогда
		
		Объект.НомерИсправления	= 0;
		
		Объект.НомерИсправляемогоКорректировочногоДокумента	= "";
		Объект.ДатаИсправляемогоКорректировочногоДокумента	= '00010101';
		
	КонецЕсли;
	
	УстановитьКодВидаОперацииНаСервере();
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры


&НаСервере
Процедура УстановитьКодВидаОперацииНаСервере(КодВидаОперацииОснования = Неопределено)
	
	СтруктураПараметров	= Новый Структура;
	СтруктураПараметров.Вставить("Дата",						Объект.Дата);
	СтруктураПараметров.Вставить("ВидСчетаФактуры",				Объект.ВидСчетаФактуры);
	СтруктураПараметров.Вставить("Исправление",					Объект.Исправление);
	СтруктураПараметров.Вставить("Контрагент",					Объект.Контрагент);
	СтруктураПараметров.Вставить("СчетФактураНеВыставляется",	Объект.СчетФактураНеВыставляется);
	СтруктураПараметров.Вставить("СчетФактураБезНДС",			Объект.СчетФактураБезНДС);
	СтруктураПараметров.Вставить("КодВидаОперации",				Объект.КодВидаОперации);
	СтруктураПараметров.Вставить("ДокОснование",		     	Объект.ДокОснование);
	
	Объект.КодВидаОперации	= Документы.СчетФактура.ПолучитьКодВидаОперации(СтруктураПараметров, КодВидаОперацииОснования);
	
КонецПроцедуры


&НаКлиенте
Процедура ВыставленПриИзменении(Элемент)
	
	Если НЕ Объект.Выставлен Тогда
		Объект.ДатаВыставления	= '00010101';
	Иначе
		Объект.ДатаВыставления	= Объект.Дата;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура СчетФактураНеВыставляетсяПриИзменении(Элемент)
	
	Если Объект.СчетФактураНеВыставляется Тогда		
		Объект.Выставлен				= Ложь;
		Объект.ДатаВыставления			= '00010101';
		Объект.КодСпособаВыставления	= 1;
	КонецЕсли;	
	
	УстановитьКодВидаОперацииНаСервере();
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьЗаголовокФормы(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура КодВидаОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущийКод = Элемент.СписокВыбора.НайтиПоЗначению(Объект.КодВидаОперации);
	ВыбранныйКод = ВыбратьИзСписка(Элемент.СписокВыбора, Элемент, ТекущийКод);
	Если ВыбранныйКод <> Неопределено Тогда
		Объект.КодВидаОперации = ВыбранныйКод.Значение;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
КонецПроцедуры

