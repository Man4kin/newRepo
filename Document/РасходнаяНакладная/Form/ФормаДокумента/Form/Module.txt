Перем мМенеджерВременныхТаблиц;

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеПодбора() 
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЦенаБезНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуБезНДСВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СуммаБезНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыБезНДСВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ Объект.Контрагент.ВозвратыРазрешены И Объект.Возврат Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'По выбранному контрагенту возвраты запрещены!'"), ,
			"Объект.Контрагент");
			Отказ = Истина;
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	//dps+ 000139793 part.2
	Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") 
		И ЗначениеЗаполнено(Объект.ДокОснование.Грузоотправитель) 
		И ТипЗнч(Объект.ДокОснование.Грузоотправитель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
		И Объект.ДокОснование.Грузоотправитель.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда	
		Объект.Контрагент = Объект.ДокОснование.Грузоотправитель;
		Если ТипЗнч(Объект.ДокОснование.Контрагент) = Тип("СправочникСсылка.Организации") И ТипЗнч(Объект.ДокОснование.Контрагент.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда 
			Объект.Грузополучатель = Объект.ДокОснование.Контрагент.Контрагент;
		КонецЕсли;
	КонецЕсли;
	//dps-
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	Если НЕ ТолькоПросмотр И ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ЗаказВнешний") Тогда	
		Узел = ОбменДаннымиEDIСервер.ПолучитьУзелРегистрацииEDIПоставщик(Объект.ДокОснование.EDIПровайдер);
		Если Узел <> Неопределено Тогда
			ТолькоПросмотр = ОбменДаннымиEDIСервер.ЗапрещеноРедактироватьEDI(Узел,Объект.Ссылка,ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	//Бредов+ 2013-07-08 Поставили временно, а то какая то херня происходит с остатками, правка задним числом
	//Элементы.Дата.Доступность = РольДоступна("ПолныеПрава");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Объект.Проведен  И НЕ ТолькоПросмотр Тогда
			Если НЕ РольДоступна("ПолныеПрава") Тогда
				Если НачалоДня(Объект.Дата)<>НачалоДня(ТекущаяДата()) Тогда
					ТолькоПросмотр = Истина;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//Бредов- 2013-07-08
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	ЭтаФорма.Заголовок = ?(Объект.Возврат,"Возврат","");
	Элементы.АдресДоставки.АвтоОтметкаНезаполненного = Объект.Возврат;
	//{КотлячковаЕВ 2014-05-13 08:52:35 Наряд № 000115682
	Если ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ВнутреннееПеремещение=Объект.Контрагент.Организация=Объект.Фирма;
	Иначе 
		ВнутреннееПеремещение=Ложь;
	КонецЕсли;
	Элементы.ЗапросЦенRPM.Доступность=не ВнутреннееПеремещение;
	//КотлячковаЕВ 2014-05-13 08:52:35 }
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

//popn+
&НаСервере
Функция ИзменитьТекстЗапросаПодбораВозврат()
	Возврат "ВЫБРАТЬ
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	СУММА(ОстаткиНоменклатуры.КоличествоОстаток) КАК КоличествоОстаток,
	|	СписокНоменклатуры.Группа,
	|	ВЫБОР
	|		КОГДА СписокНоменклатуры.ПометкаУдаления
	|			ТОГДА ВЫБОР
	|					КОГДА СписокНоменклатуры.Группа = 0
	|						ТОГДА 2
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНоменклатуры.Группа = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка,
	|	СписокНоменклатуры.Ссылка КАК Номенклатура,
	|	СписокНоменклатуры.Ссылка КАК Ссылка,
	|	ЦеныНоменклатуры.Цена
	|ИЗ
	|	Справочник.Номенклатура КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				,
	|				МестоХранения = &МестоХранения
	|					И Фирма = &Фирма) КАК ОстаткиНоменклатуры
	|		ПО СписокНоменклатуры.Ссылка = ОстаткиНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НоменклатураКонтрагента.Контрагент КАК Контрагент,
	|			НоменклатураКонтрагента.Номенклатура КАК Номенклатура,
	|			НоменклатураКонтрагента.Цена КАК Цена
	|		ИЗ
	|			РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ГДЕ
	|			НоменклатураКонтрагента.Контрагент = &Контрагент) КАК ЦеныНоменклатуры
	|		ПО (ЦеныНоменклатуры.Номенклатура = СписокНоменклатуры.Ссылка)
	|ГДЕ
	|	&УсловиеПоНоменклатуре
	|	И ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|							(ВЫБРАТЬ
	|								НоменклатураКонтрагента.Номенклатура
	|							ИЗ
	|								РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|							ГДЕ
	|								НоменклатураКонтрагента.Контрагент = &Контрагент)
	|						И ВЫБОР
	|							КОГДА &СписокТоваров = ЗНАЧЕНИЕ(Справочник.СпискиНоменклатуры.ПустаяСсылка)
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ СписокНоменклатуры.Ссылка В
	|									(ВЫБРАТЬ
	|										СпискиНоменклатурыСостав.Номенклатура
	|									ИЗ
	|										Справочник.СпискиНоменклатуры.Состав КАК СпискиНоменклатурыСостав
	|									ГДЕ
	|										СпискиНоменклатурыСостав.Ссылка = &СписокТоваров)
	|						КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНоменклатуры.Группа,
	|	СписокНоменклатуры.Наименование,
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.ПометкаУдаления,
	|	СписокНоменклатуры.Ссылка,
	|	ЦеныНоменклатуры.Цена";
	
КонецФункции

Функция ИзменитьТекстЗапросаПодбораНеВозврат()
Если ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад И ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") И Объект.Контрагент.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив  Тогда
		Возврат "ВЫБРАТЬ
		        |	СписокНоменклатуры.Код,
		        |	СписокНоменклатуры.Наименование,
		        |	СУММА(ОстаткиНоменклатуры.КоличествоОстаток) КАК КоличествоОстаток,
		        |	СписокНоменклатуры.Группа,
		        |	ВЫБОР
		        |		КОГДА СписокНоменклатуры.ПометкаУдаления
		        |			ТОГДА ВЫБОР
		        |					КОГДА СписокНоменклатуры.Группа = 0
		        |						ТОГДА 2
		        |					ИНАЧЕ 3
		        |				КОНЕЦ
		        |		ИНАЧЕ ВЫБОР
		        |				КОГДА СписокНоменклатуры.Группа = 0
		        |					ТОГДА 0
		        |				ИНАЧЕ 1
		        |			КОНЕЦ
		        |	КОНЕЦ КАК Картинка,
		        |	СписокНоменклатуры.Ссылка КАК Номенклатура,
		        |	ВЫБОР
		        |		КОГДА &ВнутреннееПеремещение
		        |			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена, ЕСТЬNULL(НоменклатураКонтрагента.Цена, 0))
		        |		ИНАЧЕ ЦеныНоменклатуры.Цена
		        |	КОНЕЦ КАК Цена
		        |ИЗ
		        |	Справочник.Номенклатура КАК СписокНоменклатуры
		        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		        |			ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		        |			ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		        |			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		        |		ИЗ
		        |			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦеныНоменклатурыСрезПоследних
		        |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		        |					ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		        |					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		        |					ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		        |					МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID
		        |				ИЗ
		        |					РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦеныНоменклатурыСрезПоследних
		        |				ГДЕ
		        |					ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
		        |				
		        |				СГРУППИРОВАТЬ ПО
		        |					ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница,
		        |					ЦеныНоменклатурыСрезПоследних.Номенклатура,
		        |					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		        |				ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
		        |					И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
		        |					И ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница = ВложенныйЗапрос.СтруктурнаяЕдиница
		        |					И ЦеныНоменклатурыСрезПоследних.ID = ВложенныйЗапрос.ID) КАК ЦеныНоменклатуры
		        |		ПО (ЦеныНоменклатуры.Номенклатура = СписокНоменклатуры.Ссылка)
		        |			И (ЦеныНоменклатуры.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = СписокНоменклатуры.БазоваяЕдиницаИзмерения)
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
		        |				&ТекущееВремя,
		        |				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		        |					И Регистратор.Контрагент ССЫЛКА Справочник.Контрагенты
		        |					И ВЫБОР
		        |						КОГДА Регистратор ССЫЛКА Документ.ПриходнаяНакладная
		        |							ТОГДА НЕ Регистратор.БонуснаяПоставка
		        |						ИНАЧЕ ИСТИНА
		        |					КОНЕЦ
		        |					И Фирма = &Фирма
		        |					И НЕ ЕдиницаИзмерения.ПометкаУдаления) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
		        |		ПО (ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура = СписокНоменклатуры.Ссылка)
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		        |		ПО (НоменклатураКонтрагента.Номенклатура = СписокНоменклатуры.Ссылка)
		        |			И (НоменклатураКонтрагента.ОсновнойПоставщик)
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		        |				,
		        |				МестоХранения = &МестоХранения
		        |					И Фирма = &Фирма) КАК ОстаткиНоменклатуры
		        |		ПО СписокНоменклатуры.Ссылка = ОстаткиНоменклатуры.Номенклатура
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
		        |		ПО (СтатусыНоменклатуры.Номенклатура = СписокНоменклатуры.Ссылка)
		        |ГДЕ
				|	&УсловиеПоНоменклатуре
		        |	И ВЫБОР
		        |			КОГДА НЕ &Возврат
		        |				ТОГДА ВЫБОР
		        |						КОГДА СписокНоменклатуры.Группа = 0
		        |							ТОГДА СписокНоменклатуры.Продаваемый
		        |						ИНАЧЕ ИСТИНА
		        |					КОНЕЦ
		        |			ИНАЧЕ ИСТИНА
		        |		КОНЕЦ
		        |	И ВЫБОР
		        |			КОГДА &Возврат
		        |				ТОГДА ВЫБОР
		        |						КОГДА СписокНоменклатуры.Группа = 0
		        |							ТОГДА СписокНоменклатуры.Ссылка В
		        |									(ВЫБРАТЬ
		        |										НоменклатураКонтрагента.Номенклатура
		        |									ИЗ
		        |										РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		        |									ГДЕ
		        |										НоменклатураКонтрагента.Контрагент = &Контрагент)
		        |						ИНАЧЕ ИСТИНА
		        |					КОНЕЦ
		        |			ИНАЧЕ ИСТИНА
		        |		КОНЕЦ
		        |	И ВЫБОР
		        |			КОГДА СписокНоменклатуры.Группа = 0
		        |				ТОГДА СписокНоменклатуры.Транзакционный
		        |			ИНАЧЕ ИСТИНА
		        |		КОНЕЦ
		        |	И &КонтрагентЯвляетсяПокупателем
				|	И ВЫБОР 
				|		КОГДА СписокНоменклатуры.Группа = 0
				|			ТОГДА  СтатусыНоменклатуры.СтруктурнаяЕдиница = &Контрагент И СтатусыНоменклатуры.Статус = &СтатусАктивный
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ
				|
		        |СГРУППИРОВАТЬ ПО
		        |	СписокНоменклатуры.Группа,
		        |	СписокНоменклатуры.Наименование,
		        |	СписокНоменклатуры.Код,
		        |	СписокНоменклатуры.ПометкаУдаления,
		        |	СписокНоменклатуры.Ссылка,
		        |	ВЫБОР
		        |		КОГДА &ВнутреннееПеремещение
		        |			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена, ЕСТЬNULL(НоменклатураКонтрагента.Цена, 0))
		        |		ИНАЧЕ ЦеныНоменклатуры.Цена
		        |	КОНЕЦ";
	Иначе 
		Возврат  "ВЫБРАТЬ
		|	СписокНоменклатуры.Код,
		|	СписокНоменклатуры.Наименование,
		|	СУММА(ОстаткиНоменклатуры.КоличествоОстаток) КАК КоличествоОстаток,
		|	СписокНоменклатуры.Группа,
		|	ВЫБОР
		|		КОГДА СписокНоменклатуры.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА СписокНоменклатуры.Группа = 0
		|						ТОГДА 2
		|					ИНАЧЕ 3
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СписокНоменклатуры.Группа = 0
		|					ТОГДА 0
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Картинка,
		|	СписокНоменклатуры.Ссылка КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА &ВнутреннееПеремещение
		|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена, ЕСТЬNULL(НоменклатураКонтрагента.Цена, 0))
		|		ИНАЧЕ ЦеныНоменклатуры.Цена
		|	КОНЕЦ КАК Цена
		|ИЗ
		|	Справочник.Номенклатура КАК СписокНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				,
		|				МестоХранения = &МестоХранения
		|					И Фирма = &Фирма) КАК ОстаткиНоменклатуры
		|		ПО СписокНоменклатуры.Ссылка = ОстаткиНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|			ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|		ИЗ
		|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦеныНоменклатурыСрезПоследних
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|					ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|					МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID
		|				ИЗ
		|					РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦеныНоменклатурыСрезПоследних
		|				ГДЕ
		|					ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница,
		|					ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		|				ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
		|					И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
		|					И ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница = ВложенныйЗапрос.СтруктурнаяЕдиница
		|					И ЦеныНоменклатурыСрезПоследних.ID = ВложенныйЗапрос.ID) КАК ЦеныНоменклатуры
		|		ПО (ЦеныНоменклатуры.Номенклатура = СписокНоменклатуры.Ссылка)
		|			И (ЦеныНоменклатуры.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = СписокНоменклатуры.БазоваяЕдиницаИзмерения)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(
		|				&ТекущееВремя,
		|				СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|					И Регистратор.Контрагент ССЫЛКА Справочник.Контрагенты
		|					И ВЫБОР
		|						КОГДА Регистратор ССЫЛКА Документ.ПриходнаяНакладная
		|							ТОГДА НЕ Регистратор.БонуснаяПоставка
		|						ИНАЧЕ ИСТИНА
		|					КОНЕЦ
		|					И Фирма = &Фирма
		|					И НЕ ЕдиницаИзмерения.ПометкаУдаления) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
		|		ПО (ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура = СписокНоменклатуры.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|		ПО (НоменклатураКонтрагента.Номенклатура = СписокНоменклатуры.Ссылка)
		|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
		|ГДЕ
		|	&УсловиеПоНоменклатуре
		|	И ВЫБОР
		|			КОГДА НЕ &Возврат
		|				ТОГДА ВЫБОР
		|						КОГДА СписокНоменклатуры.Группа = 0
		|							ТОГДА СписокНоменклатуры.Продаваемый
		|						ИНАЧЕ ИСТИНА
		|					КОНЕЦ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &Возврат
		|				ТОГДА ВЫБОР
		|						КОГДА СписокНоменклатуры.Группа = 0
		|							ТОГДА СписокНоменклатуры.Ссылка В
		|									(ВЫБРАТЬ
		|										НоменклатураКонтрагента.Номенклатура
		|									ИЗ
		|										РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|									ГДЕ
		|										НоменклатураКонтрагента.Контрагент = &Контрагент)
		|						ИНАЧЕ ИСТИНА
		|					КОНЕЦ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА СписокНоменклатуры.Группа = 0
		|				ТОГДА СписокНоменклатуры.Транзакционный
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И &КонтрагентЯвляетсяПокупателем
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокНоменклатуры.Группа,
		|	СписокНоменклатуры.Наименование,
		|	СписокНоменклатуры.Код,
		|	СписокНоменклатуры.ПометкаУдаления,
		|	СписокНоменклатуры.Ссылка,
		|	ВЫБОР
		|		КОГДА &ВнутреннееПеремещение
		|			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена, ЕСТЬNULL(НоменклатураКонтрагента.Цена, 0))
		|		ИНАЧЕ ЦеныНоменклатуры.Цена
		|	КОНЕЦ";
	КонецЕсли;
КонецФункции

//{БредовЮГ 2014-06-09 Переделан подбор номенклатуры
&НаСервере
Функция ПодготовитьПараметрыДляПодбора()
	СтруктураПараметровПодбора = Новый Структура("ТекстЗапроса,Параметры,АдресВременногоХранилища",);
	СтруктураПараметровПодбора.АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Неопределено,ЭтаФорма.УникальныйИдентификатор);
	СтруктураПараметрыЗапроса = Новый Структура();
	Если Объект.Возврат Тогда
		СтруктураПараметровПодбора.ТекстЗапроса = ИзменитьТекстЗапросаПодбораВозврат();
		СтруктураПараметрыЗапроса.Вставить("СписокТоваров",СписокНомеклатуры);
		СтруктураПараметрыЗапроса.Вставить("Контрагент",Объект.Контрагент);
	Иначе
		СтруктураПараметровПодбора.ТекстЗапроса = ИзменитьТекстЗапросаПодбораНеВозврат();
		
		СтруктураПараметрыЗапроса.Вставить("ТекущееВремя",ТекущаяДата());
		СтруктураПараметрыЗапроса.Вставить("СтруктурнаяЕдиница",Объект.Склад.Владелец);
		Если ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад И ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") И Объект.Контрагент.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив  Тогда
			СтруктураПараметрыЗапроса.Вставить("СтатусАктивный",Перечисления.СтатусыТоваров.Активный);
		КонецЕсли;
		СтруктураПараметрыЗапроса.Вставить("КонтрагентЯвляетсяПокупателем",ПолучитьФлагПокупателя(Объект.Контрагент));
		СтруктураПараметрыЗапроса.Вставить("возврат",Объект.Возврат);
		СтруктураПараметрыЗапроса.Вставить("Контрагент",Объект.Контрагент);
		
		//{КотлячковаЕВ 2014-05-12 08:35:42 Наряд №000115682
		Если ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
			//СтруктураПараметрыЗапроса.Вставить("СтатусАктивный",Перечисления.СтатусыТоваров.Активный);
			ВнутреннееПеремещение=Объект.Контрагент.Организация=Объект.Фирма;
		Иначе 
			ВнутреннееПеремещение=Ложь;
		КонецЕсли;
		СтруктураПараметрыЗапроса.Вставить("ВнутреннееПеремещение", ВнутреннееПеремещение);
		//КотлячковаЕВ 2014-05-12 08:35:42 }
		
	КонецЕсли;
	СтруктураПараметрыЗапроса.Вставить("УсловиеПоНоменклатуре", Истина);
	СтруктураПараметрыЗапроса.Вставить("Фирма", Объект.Фирма);
	СтруктураПараметрыЗапроса.Вставить("МестоХранения", Объект.Склад);
	
	СтруктураПараметровПодбора.Параметры = СтруктураПараметрыЗапроса;
	
	Возврат СтруктураПараметровПодбора;	
КонецФункции

&НаСервере
Процедура ОбработатьПодборНаСервере(АдресХранилища)
	тзЗначений = ПолучитьИзВременногоХранилища(АдресХранилища);
	ЗначениеВРеквизитФормы(тзЗначений,"ВыбраннаяНоменклатура");
КонецПроцедуры


&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПараметрыФормы = ПодготовитьПараметрыДляПодбора();
	Если ОткрытьФормуМодально("ОбщаяФорма.ПодборНоменклатуры",Новый Структура("СтруктураПараметров",ПараметрыФормы),ЭтаФорма) <> "ОК" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОбработатьПодборНаСервере(ПараметрыФормы.АдресВременногоХранилища);
	//ДанныеФормыКоллекция = ПолучитьИзВременногоХранилища(ПараметрыФормы.АдресВременногоХранилища);

	Для Каждого СтрокаКоллекции из ВыбраннаяНоменклатура Цикл
		//++Минин
		КолСтрок = Объект.Состав.Количество();
		//--Минин
		
		ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,СтрокаКоллекции,Элементы.состав,СтандартнаяОбработка,СтрокаКоллекции.Количество);	
		//++Минин
		ПроверкаКолСтрок = Объект.Состав.Количество();
		Если КолСтрок=0 и ПроверкаКолСтрок<>0 Тогда
			НоваяСтрока = Объект.Состав.Получить(ПроверкаКолСтрок-1);
			НоваяСтрока.НПП = 1;
		Иначе
			Если КолСтрок<>ПроверкаКолСтрок Тогда
				Строка = Объект.Состав.Получить(КолСтрок-1);
				НоваяСтрока = Объект.Состав.Получить(ПроверкаКолСтрок-1);
				НоваяСтрока.НПП = Строка.НПП+1;
			КонецЕсли;
		КонецЕсли;
		//--Минин
	КонецЦикла;
	
	//{ СИТЕК БрыляковЕЮ 2014-12-18  
	ПодключитьОбработчикОжидания("Подключаемый_ПодборЦен", 1, Истина);
	// СИТЕК БрыляковЕЮ 2014-12-18 }
	
КонецПроцедуры
//БредовЮГ 2014-06-09 Переделан подбор номенклатуры}
//Конец Процедуры и функции для организации подбора

&НаКлиенте
Процедура Валюта(Команда)
	РаботаСФормамиКлиент.ОткрытьФормуВводаВалютыКурса(Объект);
	ОбновитьПредставлениеВалюты();	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеВалюты()
	Если Объект.Курс = 1 Тогда
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = Объект.Валюта;
	Иначе
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = ""+Объект.Валюта+" "+Объект.Курс;
	КонецЕсли;	
КонецПроцедуры	


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	//{БредовЮГ 2014-06-03 После включения использования подразделения поставщиков , необходимо расскоментарить этот кусок кода
	//Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
	//	Если Объект.Возврат Тогда
	//		ЕстьСвязьКонтрагентаИФирмы = ОбщегоНазначенияСервер.ЕстьСвязьКонтрагентаИФирмы(Объект.Контрагент,Объект.Фирма);
	//		Если НЕ ЕстьСвязьКонтрагентаИФирмы Тогда
	//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//			НСтр("ru = 'Контрагент "+СокрЛП(Объект.Контрагент)+" не связан с фирмой "+СокрЛП(Объект.Фирма)+"!'"), ,
	//			"Объект.Контрагент");
	//			Объект.Контрагент = ОбщегоНазначенияСервер.КонтрагентПустаяСсылка();
	//			Возврат;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	//БредовЮГ 2014-06-03 После включения использования подразделения поставщиков , необходимо расскоментарить этот кусок кода}
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
		Если НЕ ПолучитьФлагРазрешенияВозвратаКонтрагента(Объект.Контрагент) И Объект.Возврат Тогда
			Объект.Контрагент = ПолучитьПустуюСсылкуКонтрагента();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'По выбранному контрагенту возвраты запрещены!'"), ,
			"Объект.Контрагент");
			Возврат;
		КонецЕсли;
		Если НЕ ПолучитьФлагПоставщика(Объект.Контрагент) И Объект.Возврат Тогда
			Объект.Контрагент = ПолучитьПустуюСсылкуКонтрагента();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Контрагент не является поставщиком. Возвраты запрещены!'"), ,
			"Объект.Контрагент");
		КонецЕсли;
		Если НЕ ПолучитьФлагПокупателя(Объект.Контрагент) И Не Объект.Возврат Тогда
			//Объект.Контрагент = ПолучитьПустуюСсылкуКонтрагента();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Контрагент не является покупателем. Продажи запрещены!'"), ,
			"Объект.Контрагент");
		КонецЕсли;
	КонецЕсли;
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
			Объект.Валюта = ПолучитьВалютуКонтрагента(Объект.Контрагент);
		Иначе
			Объект.Валюта = ПолучитьВалютуСтруктурнойЕдиницы(Объект.СтруктурнаяЕдиница);
		КонецЕсли;
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	УстановитьВидимостьЭлементовФормы();
	//УстановитьПараметры();
	Если НЕ ПроверитьКорректностьЗначенияКОнтрагента() тогда
		Объект.Контрагент = получитьПустуюСЕ();
		//{БредовЮГ 2014-06-11 Текст сообщения подправил
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Некорректное заполнение поля Контрагент!");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заполните вначале поля 'Фирма' и 'Склад'");
		//БредовЮГ 2014-06-11 Текст сообщения подправил}
	конецесли;
	ЗаполнитьАдресДоставки();
	
	//++БИТ БВО 2015-10-09 Реализация заполнения грузоотправителя при интерактивной смене контрагента
	Если Объект.Грузополучатель.Пустая() 
		И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты")
		И Объект.Возврат Тогда
		
		Объект.Грузополучатель = Объект.Контрагент;
	КонецЕсли;
	//--БИТ БВО 2015-10-09
	
	//popn+
	//Если Объект.Возврат Тогда
	Объект.Состав.Очистить();
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАдресДоставки()
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
		Иначе
			ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ФактАдресСтруктурнойЕдиницы;
		КонецЕсли;	
		Объект.АдресДоставки = УправлениеКонтактнойИнформациейСервер.ПолучитьКонтактнуюИнформацияОбъекта(Объект.Контрагент,ВидКонтактнойИнформации);
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
ФУнкция ПолучитьПустуюСЕ()
	ВОзврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
конецфункции

&НаСервере
Функция проверитьКорректностьЗначенияКонтрагента()
	Флаг = Истина;
	если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СТруктурныеЕДиницы") и ЗначениеЗаполнено(ОБъект.Контрагент) тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СтруктурныеЕдиницы.Ссылка
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	(СтруктурныеЕдиницы.ЗонаПеремещения = &ЗонаПеремещения
		|				И СтруктурныеЕдиницы.Ссылка <> &ТекущаяСЕ
		|			ИЛИ СтруктурныеЕдиницы.Ссылка = &РЦПоУмолчанию)
		|	И ВЫБОР
		|			КОГДА СтруктурныеЕдиницы.ДатаОткрытия = &ПустаяДата
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ &ТекущаяДата >= ДОБАВИТЬКДАТЕ(СтруктурныеЕдиницы.ДатаОткрытия, ДЕНЬ, -СтруктурныеЕдиницы.КоличествоДнейДоОткрытия)
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА СтруктурныеЕдиницы.ДатаЗакрытия = &ПустаяДата
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ &ТекущаяДата <= ДОБАВИТЬКДАТЕ(СтруктурныеЕдиницы.ДатаЗакрытия, ДЕНЬ, СтруктурныеЕдиницы.КоличествоДнейДоЗакрытия)
		|		КОНЕЦ
		|	И СтруктурныеЕдиницы.Ссылка = &СтруктурнаяЕдиница";
		Запрос.УстановитьПараметр("ЗонаПеремещения",Объект.Склад.Владелец.ЗонаПеремещения);	
		Запрос.УстановитьПараметр("ТекущаяСЕ",Объект.Склад.Владелец);	
		Запрос.УстановитьПараметр("РЦПоУмолчанию",Объект.Склад.Владелец.РЦПоУмолчанию);	
		Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());	
		Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
		ЗАпрос.УстановитьПараметр("СтруктурнаяЕдиница",Объект.Контрагент);
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() тогда
			флаг = Ложь;
			
		конецесли;
	конецесли;
	Возврат флаг;
конецФункции


&НаСервереБезКонтекста
Функция ПолучитьПустуюСсылкуКонтрагента()
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФлагРазрешенияВозвратаКонтрагента(Контрагент)
	Возврат Контрагент.ВозвратыРазрешены;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФлагПоставщика(Контрагент)
	
	Возврат Контрагент.Поставщик;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФлагПокупателя(Контрагент)
	
	Возврат ?(ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты"), Контрагент.Покупатель, ЗначениеЗаполнено(Контрагент));
	
КонецФункции

&НаСервереБезКонтекста
Функция ИспользованиеВалюты(СтруктурнаяЕдиница)
	Возврат ПолучитьФункциональнуюОпцию("ИспользованиеВалюты",Новый Структура("СтруктурнаяЕдиница,ПараметрСтруктурнойЕдиницы",СтруктурнаяЕдиница,ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеВалюты));
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКурсВалютыНаДату(Валюта,Дата)
	Возврат РаботаСКурсамиВалютКлиентСервер.ПолучитьКурсВалютыНаДату(Валюта,Дата);
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьВалютуКонтрагента(Контрагент)
	Возврат Контрагент.Валюта;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВалютуСтруктурнойЕдиницы(се)
	Возврат се.Валюта;
КонецФункции	 

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элемент.ВыбиратьТип = Объект.Контрагент = Неопределено;	
	
	НовыйПараметр1 = Новый ПараметрВыбора("Отбор.Статус", Истина); 
    НовыйПараметр2 = Новый ПараметрВыбора("ОтборПоЗонеПеремещения", Истина);
	НовыйПараметр3 = Новый ПараметрВыбора("ТекущаяСЕ", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Склад, "Владелец"));
	
	НовыйМассив = Новый Массив;
	НовыйМассив.Добавить(НовыйПараметр1);
	НовыйМассив.Добавить(НовыйПараметр2);
	НовыйМассив.Добавить(НовыйПараметр3);
	
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	
	Элемент.ПараметрыВыбора = НовыеПараметры;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)
	Объект.Контрагент = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
	КонецЕсли;
КонецПроцедуры

//popn+
&НаСервере
Функция ВернутьОрганизациюСтруктурнойЕдиницы()
	Возврат ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Контрагент, "Организация")
КонецФункции
//popn+

&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	//popn+
	//фл = ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты");
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ОрганизацияСЕ = ВернутьОрганизациюСтруктурнойЕдиницы();
		Если ЗначениеЗаполнено(ОрганизацияСЕ) Тогда
			Если ОрганизацияСЕ = Объект.Фирма Тогда
				фл = ЛОЖЬ;
			Иначе
				фл = ИСТИНА;
			КонецЕсли;
		Иначе
			фл = ЛОЖЬ;
		КонецЕсли;
		//{ СИТЕК БрыляковЕЮ 2015-05-29  
		// Исходный текст --> 
		//Элементы.Возврат.Видимость = Ложь;
		//Если Объект.Возврат Тогда
		//	Объект.Возврат = Ложь;
		//КонецЕсли;
		// <-- Исходный текст 
		// СИТЕК БрыляковЕЮ 2015-05-29 }
		ВидимостьКолонокБезНДС = Ложь;
	Иначе
		Элементы.Возврат.Видимость = Истина;
		фл = ИСТИНА;
		Если Объект.Возврат Тогда
			Если ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов") Тогда
				ВидимостьКолонокБезНДС = Ложь;
			Иначе
				ВидимостьКолонокБезНДС = Истина;
			КонецЕсли;
		Иначе
			ВидимостьКолонокБезНДС = Ложь;
		КонецЕсли;
	КонецЕсли;
	//popn-
	Элементы.СоставЦенаБезНДС.Видимость = ВидимостьКолонокБезНДС;
	Элементы.СоставСуммаБезНДС.Видимость = ВидимостьКолонокБезНДС;
	Элементы.СоставЦена.Видимость = Не ВидимостьКолонокБезНДС;
	Элементы.ТипДоговора.Видимость = фл;
	
	//++БИТ БВО
	//Элементы.СоставТипРеализацииТовара.Видимость = Ложь;
	//--БИТ БВО
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеДоступностьюЭлементов();
	Если ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	УстановитьВидимостьЭлементовФормы();
	//{Бредов 24-01-2013
	Элементы.ПоказатьТару.Пометка = Ложь;
	УстановитьВидимостьТары();
	//Бредов 24-01-2013}
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//{ СИТЕК БрыляковЕЮ 2015-05-29  
	Если ТипЗнч(Объект.Контрагент) <> Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
	// СИТЕК БрыляковЕЮ 2015-05-29 }
	Если Объект.Возврат И Объект.Контрагент.МинимальнаяСуммаВозврата > Объект.Состав.Итог("Сумма") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Сумма документа не превышает минимальную сумму возврата!'"),ТекущийОбъект,,,Отказ);
	КонецЕсли;	
	//{ СИТЕК БрыляковЕЮ 2015-05-29  
	КонецЕсли;
	// СИТЕК БрыляковЕЮ 2015-05-29 }
	Если Объект.Возврат И НЕ ЗначениеЗаполнено(Объект.АдресДоставки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'При возврате должен быть заполнен ""Адрес доставки""!'"),ТекущийОбъект,,,Отказ);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СоставСтавкаНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюЭлементов()
	Попытка
		Элементы.Состав.ТолькоПросмотр = ?(ЗначениеЗаполнено(Объект.Склад),Ложь,Истина);
	Исключение
	КонецПопытки;	
	ЗапретРедактированияЦен = ОбщегоНазначенияСервер.ЗапретРедактированияЦенПродажи();
конецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	//установитьпараметры();
	УправлениеДоступностьюЭлементов();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//serg
	Номер = 0;
	Для каждого  Стр из Объект.Состав Цикл
		Номер = Номер + 1 ;
		Если Стр.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Штучный Тогда 
			СтрокаСтр = Строка (Стр.Количество);
			Значение  = Найти (СтрокаСтр,".");
			Значение  = Найти (СтрокаСтр,",");
			Если Значение <> 0 Тогда
				//ТекстСообщения = "позиция по накладной"  + 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Позиция по накладной'") +  НСтр("ru=' '") + Номер + НСтр("ru=',код товара:'") + СокрЛП (Стр.Номенклатура.Код) +  НСтр("ru=' '") + Стр.Номенклатура + НСтр("ru=' '") +  НСтр("ru='Штучный товар!'") ,,,,Отказ);
			КонецЕсли;
		КонецЕсли;	
		//Стр.Количество
	КонецЦикла;	
	//serg
	//serg++
	Если Объект.Дата >= '20140101'   Тогда
		Для Каждого Стр Из Объект.Состав Цикл
			СписокРодителей = Новый СписокЗначений;     
			СписокРодителей.Очистить();
			Родитель = Стр.Номенклатура.Родитель;
			
			Пока ЗначениеЗаполнено(Родитель) Цикл
				СписокРодителей.Добавить(Родитель.код);
				Родитель = Родитель.Родитель;
			КонецЦикла; 
			
			Для НомерРодитель = 0  по СписокРодителей.Количество() - 1 Цикл;
				Значение = СписокРодителей.Получить(НомерРодитель);
				
				Если (СокрЛП (Значение) = "2:4010") и (Объект.Фирма <> Справочники.Организации.НайтиПоКоду("81")) Тогда	
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Номеклатура:'") +  НСтр("ru=' '") + Стр.Номенклатура + НСтр("ru=','") +  НСтр("ru='№ строки: '") +  Стр.НомерСтроки + НСтр("ru=', '") + НСтр("ru='Пиво можно проводить только по фирме Парма'")  ,,,,Отказ);
				КонецЕсли;	
			КонецЦикла;	
		КонецЦикла;	
	КонецЕсли;	
	//serg--
	
	Задача = ЭтаФорма.Параметры.ВыполняемаяЗадача;
	Если ЗначениеЗаполнено(Задача) Тогда
		УправлениеБизнесПроцессамиСервер.ВыполнитьЗадачу(Задача);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Задача = ЭтаФорма.Параметры.ВыполняемаяЗадача;
	Если ЗначениеЗаполнено(Задача) Тогда
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Задача,"Выполнена") Тогда
			Оповестить("ЗадачаВыполнена");
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
КонецПроцедуры

&НаКлиенте
Процедура ВозвратПриИзменении(Элемент)
	ЭтаФорма.Заголовок = ?(Объект.Возврат,"Возврат","");
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
		Если НЕ ПолучитьФлагРазрешенияВозвратаКонтрагента(Объект.Контрагент) И Объект.Возврат Тогда
			Объект.Контрагент = ПолучитьПустуюСсылкуКонтрагента();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'По выбранному контрагенту возвраты запрещены!'"), ,
			"Объект.Контрагент");
			Возврат;
		КонецЕсли;
		Если НЕ ПолучитьФлагПоставщика(Объект.Контрагент) И Объект.Возврат Тогда
			Объект.Контрагент = ПолучитьПустуюСсылкуКонтрагента();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Контрагент не является поставщиком. Возвраты запрещены!'"), ,
			"Объект.Контрагент");
		КонецЕсли;
	КонецЕсли;
	//Установитьпараметры();
	УстановитьВидимостьЭлементовФормы();
	Элементы.АдресДоставки.АвтоОтметкаНезаполненного = Объект.Возврат;
	Объект.Состав.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ФирмаПриИзменении(Элемент)
	//Установитьпараметры();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.Грузчики.Количество()<1 Тогда 
		ПоказатьОповещениеПользователя("Не указан грузчик!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры

&НаКлиенте
Процедура СписокНомеклатурыПриИзменении(Элемент)
	//УстановитьПараметры();
КонецПроцедуры

&НаКлиенте
Процедура НайтиТоварВСпискеПоШтрихкоду(Команда)
	
	ШК = "";
	Если Не ВвестиЗначение(ШК, НСтр("ru = 'Введите штрихкод'")) Тогда
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ШК) Тогда
		Возврат;
	КонецЕсли;
	
	//РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВСпискеНоменклатуры(ШК, ПодборНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ТолькоПросмотр Тогда
		Стандартнаяобработка = ЛОЖЬ;
	КонецЕсли;
	
	Если Поле.Имя = "СоставКоличество" Тогда
		ТекущийТовар = Элементы.Состав.ТекущиеДанные.Номенклатура;
		ЭтоШтучныйТовар =  ОбщегоНазначенияСервер.ЭтоШтучныйТовар(ТекущийТовар);
		ЗапретВводаДробногоКоличестваШтучногоТовара = ОбщегоНазначенияСервер.ЗапретВводаДробногоКоличестваШтучногоТовара();
		
		Если ЭтоШтучныйТовар И ЗапретВводаДробногоКоличестваШтучногоТовара Тогда
			ТипЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0));
		Иначе
			ТипЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3));
		КонецЕсли;
		
		ЭлементСостава = Элементы.Найти(Поле.Имя);
		ЭлементСостава.ОграничениеТипа = ТипЧисла;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КонтрагентНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры


//{Бредов Доработки ФРОВ видимость тары 24-01-2013
&НаКлиенте
процедура УстановитьВидимостьТары()
	ВидимостьТары = Элементы.ПоказатьТару.Пометка;
	Элементы.СоставТары.Видимость = ВидимостьТары;	
	Элементы.СоставТары1.Видимость = ВидимостьТары;	
	Элементы.СоставТары2.Видимость = ВидимостьТары;	
	Элементы.СоставВесБрутто.Видимость = ВидимостьТары;	
	Элементы.СоставЕдиницаИзмерения.Видимость = НЕ ВидимостьТары;
	Элементы.СоставКоэффициент.Видимость = НЕ ВидимостьТары;
	Элементы.СоставЦена.Видимость = НЕ ВидимостьТары;
	Элементы.СоставСтавкаНДС.Видимость = НЕ ВидимостьТары;
	Элементы.СоставСуммаНДС.Видимость = НЕ ВидимостьТары;
	Элементы.СоставЕдиницаВеса.Видимость = НЕ ВидимостьТары;
	Элементы.СоставВес.Видимость = НЕ ВидимостьТары;
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТару(Команда)
	Элементы.ПоказатьТару.Пометка = НЕ Элементы.ПоказатьТару.Пометка;
	УстановитьВидимостьТары();
КонецПроцедуры

&НаКлиенте
Процедура СоставТараПриИзменении(Элемент=Неопределено)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекСтрока.ВесБрутто) тогда Возврат КонецЕсли;
	ТекСтрока.Количество = 	ТекСтрока.ВесБрутто - ?(ЗначениеЗаполнено(ТекСтрока.Тара),ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекСтрока.Тара,"Вес"),0)*ТекСтрока.КолТара 
	- ?(ЗначениеЗаполнено(ТекСтрока.Тара1),ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекСтрока.Тара1,"Вес"),0)*ТекСтрока.КолТара1 
	- ?(ЗначениеЗаполнено(ТекСтрока.Тара2),ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекСтрока.Тара2,"Вес"),0)*ТекСтрока.КолТара2; 
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(ТекСтрока);							
КонецПроцедуры

&НаКлиенте
Процедура СоставТараОчистка(Элемент, СтандартнаяОбработка)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	ТекКолонка = Элементы.Состав.ТекущийЭлемент;
	ИмяКолонкиКоличества = "КолТара"+Сред(ТекКолонка.Имя,11,1);
	ТекСтрока[ИмяКолонкиКоличества] = 0;
КонецПроцедуры

&НаСервере
Функция НайтиГруппуНаборщики()
	Возврат Справочники.ФизическиеЛица.НайтиПоКоду("Наборщики");
КонецФункции

&НаКлиенте
Процедура ГрузчикиГрузчикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекСтрока = Элементы.Грузчики.ТекущиеДанные;
	СтандартнаяОбработка = Ложь;
	Форма = ПолучитьФорму("Справочник.ФизическиеЛица.ФормаВыбора");
	Форма.Элементы.Список.РодительВерхнегоУровня = НайтиГруппуНаборщики();//ПредопределенноеЗначение("Справочник.ФизическиеЛица.Наборщики");
	ТекСтрока.Грузчик = Форма.ОткрытьМодально();
КонецПроцедуры

//Бредов 24-01-2013}

//dps++ 05.06.13
&НаКлиенте
Процедура ПровереноКонтроллеромФРОВ(Команда)
	ПроверенноФРОВ(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПроверенноФРОВ(Ссылка)
	
	ПроверенКонтроллеромФРОВ = РегистрыСведений.Izh_ПроверенКонтроллеромФРОВ.СоздатьМенеджерЗаписи();                                          	
	ПроверенКонтроллеромФРОВ.Период = ТекущаяДата();
	ПроверенКонтроллеромФРОВ.Контроллер = ПараметрыСеанса.ТекущийПользователь;
	ПроверенКонтроллеромФРОВ.Документ = Ссылка;
	ПроверенКонтроллеромФРОВ.Записать();
	
КонецПроцедуры
//dps-- 05.06.13

//++Минин
&НаКлиенте
Процедура СоставНоменклатураПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Цена = ПолучитьЦену(ТекСтрока.Номенклатура);
	ТекСтрока.Цена = Цена;
	ОбработкаТабличныхЧастейКлиент.ЗаполнитьСтрокуТабличнойЧастиПоУмолчанию(ТекСтрока, Элементы.Состав, Объект,"Состав");				
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
	
	ПодключитьОбработчикОжидания("Подключаемый_ПодборЦен", 1, Истина);
КонецПроцедуры

// {ВетровИА Обращение 0000142427 16.10.2015
&НаСервере
Функция ПолучитьЦену(Номенклатура)
	Запрос = Новый Запрос;
	Если Объект.Возврат Тогда
		ТекстЗапроса = ИзменитьТекстЗапросаПодбораВозврат();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоНоменклатуре", "СписокНоменклатуры.Ссылка = &Номенклатура");
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура); 
		Запрос.УстановитьПараметр("СписокТоваров", СписокНомеклатуры);
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Иначе
		ТекстЗапроса =  ИзменитьТекстЗапросаПодбораНеВозврат();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоНоменклатуре", "СписокНоменклатуры.Ссылка = &Номенклатура");
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура); 
		Запрос.УстановитьПараметр("ТекущееВремя",ТекущаяДата());
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.Склад.Владелец);
		
		Если ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад И ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") И Объект.Контрагент.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив  Тогда
			Запрос.УстановитьПараметр("СтатусАктивный", Перечисления.СтатусыТоваров.Активный);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("КонтрагентЯвляетсяПокупателем", ПолучитьФлагПокупателя(Объект.Контрагент));
		Запрос.УстановитьПараметр("возврат", Объект.Возврат);
		Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
		Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
			ВнутреннееПеремещение = Объект.Контрагент.Организация = Объект.Фирма;
		Иначе 
			ВнутреннееПеремещение=Ложь;
		КонецЕсли;
		Запрос.УстановитьПараметр("ВнутреннееПеремещение", ВнутреннееПеремещение);	
	КонецЕсли;
	Запрос.УстановитьПараметр("Фирма", Объект.Фирма);
	Запрос.УстановитьПараметр("МестоХранения", Объект.Склад);
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Цена = Результат.Цена;
	Иначе
		Цена = 0;
	КонецЕсли;	
	Возврат Цена;
	
КонецФункции
// ВетровИА Обращение 0000142427 16.10.2015}

&НаКлиенте
Процедура СоставПередНачаломИзменения(Элемент, Отказ)
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат; 
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекДанные.Номенклатура) И ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекДанные.Номенклатура,"ТипТовара") = ПредопределенноеЗначение("Перечисление.ТипыТоваров.Весовой") Тогда
		Элементы.Состав.ПодчиненныеЭлементы.СоставКоличество.ФорматРедактирования = "ЧЦ=15; ЧДЦ=3";
	КонецЕсли;
КонецПроцедуры
//--Минин

//++Минин
&НаКлиенте
Процедура ЗапросЦенRPM(Команда)
	Если ТипЗнч(Объект.Контрагент)=Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда  
		Структура = Новый Структура("Состав, Контрагент");
		Структура.Вставить("АдресТаблицы",ЗапихнутьТЧВХранилище());
		Структура.Вставить("Контрагент",Объект.Контрагент);
		Результат = ОткрытьФормуМодально("ОбщаяФорма.ФормаЦенRPM",Структура,ЭтаФорма);
		Если Не Результат=Неопределено Тогда 
			Для Каждого Стр из Результат Цикл
				СтрТзСостав = Объект.Состав.НайтиСтроки(Новый Структура("Номенклатура",Стр.Номенклатура));
				СтрТзСостав[0].Цена = Стр.ЦенаRPM;
				ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(СтрТзСостав[0]);
			КонецЦикла;
		КонецЕсли;
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для данного контрагента запрос цен в RPM невозможен");
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ЗапихнутьТЧВХранилище()
	ОбъектДок = РеквизитФормыВЗначение("Объект");
	Возврат ПоместитьВоВременноеХранилище(ОбъектДок.Состав.Выгрузить(,"Номенклатура,Цена"),ЭтаФорма.УникальныйИдентификатор);
КонецФункции
//--Минин

//{БредовЮГ	2013-08-19  Добавление наборщиков в заблокированные документы
&НаКлиенте
Процедура ЗаполнениеНаборщиков(Команда)
	Если ТолькоПросмотр Тогда
		ОткрытьФормуМодально("Документ.РасходнаяНакладная.Форма.ФормаЗаписиНаборщиков",Новый Структура("ДокСсылка",Объект.Ссылка));
		ЭтаФорма.Прочитать();
	КонецЕсли;
КонецПроцедуры

//{ СИТЕК БрыляковЕЮ 2014-12-18  
&НаКлиенте
Процедура Подключаемый_ПодборЦен()
	
	ПодборЦенСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПодборЦенСервер()
	
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	Izh_Ценообразование.ПодобратьЦеныДляРасходнойНакладной(ОбъектЗначение);
	ЗначениеВРеквизитФормы(ОбъектЗначение, "Объект");
	
КонецПроцедуры
// СИТЕК БрыляковЕЮ 2014-12-18 }


//++БИТ БВО 2015-06-03
&НаСервере
Процедура ПерераспределитьПоОстаткамНаСервере() Экспорт
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ПерераспределитьСоставПоОстаткам();
	Объект.Состав.Загрузить(ДокументОбъект.Состав.Выгрузить());
		
КонецПроцедуры

&НаКлиенте
Процедура ПерераспределитьПоОстаткам(Команда)
	
	ПерераспределитьПоОстаткамНаСервере();
	Для Каждого СтрокаСостава Из Объект.Состав Цикл
		Если СтрокаСостава.Количество > 0 Тогда
			ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаСостава);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
//--БИТ БВО 2015-06-03

