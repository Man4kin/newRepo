&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	загрузитьНастройкиПодбора();
КонецПроцедуры


&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//Элемент.ВыбиратьТип = Объект.Контрагент = Неопределено;
	//dps+ 27.05.2014 Ошибка релиза. При изменении фирмы поле котрагент очищается и становится недоступно для выбора т.к. составной тип данных и недоступен выбор типа.
	Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	//dps- 27.05.2014 
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)
	//Объект.Контрагент = Неопределено;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//++Минин 0000143778 2015-10-29
	Если НЕ Параметры.ЗначениеКопирования.Пустая() Тогда
		СообщениеОбОшибке = "Запрещено копирование планируемой поставки!";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
		Отказ = Истина; 
	КонецЕсли;
	//--Минин 0000143778 2015-10-29
	Если НЕ Объект.ЗаказМагазина Тогда
		ТолькоПросмотр = Истина;
		Элементы.Фирма.Видимость = Ложь;
	Иначе
		ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
		Если НЕ ТолькоПросмотр И Объект.Контрагент.ЗаказEDI Тогда
			Узел = ОбменДаннымиEDIСервер.ПолучитьУзелРегистрацииEDIКлиент(Объект.Контрагент);
			Если Узел <> Неопределено Тогда
				ТолькоПросмотр = ОбменДаннымиEDIСервер.ЗапрещеноРедактироватьEDI(Узел,Объект.Ссылка,ЭтаФорма);
			КонецЕсли;
		КонецЕсли;
    КонецЕсли;
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		Если СтруктурныеЕдиницы.ЕстьВГруппеТипСЕ(Перечисления.ТипыСтруктурныхЕдиниц.Склад) Тогда
			НовыйМассив = Новый Массив();
			ТекущийФиксированныйМасив = Элементы.Контрагент.ПараметрыВыбора;
			Для Каждого Строка Из ТекущийФиксированныйМасив Цикл
				Если Строка.Имя = "Отбор.РазрешенаПрямаяПоставка" Тогда
					Продолжить;
				КонецЕсли;	
				НовыйМассив.Добавить(Строка);
			КонецЦикла;	
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элементы.Контрагент.ПараметрыВыбора = НовыеПараметры;
		КонецЕсли;
	КонецЕсли;	
	Элементы.Склад.Видимость = Объект.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад;
	Элементы.Поставщик.Видимость = НЕ Объект.Поставщик.Пустая();
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры


//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	БезНДС = ПолучитьСтавкуБезНДС();
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		//popn+
		ТекТовар = Элемент.ДанныеСтроки(Строка).Номенклатура;
		ЭтоШтучныйТовар =  ОбщегоНазначенияСервер.ЭтоШтучныйТовар(ТекТовар);
        ЗапретВводаДробногоКоличестваШтучногоТовара = ОбщегоНазначенияСервер.ЗапретВводаДробногоКоличестваШтучногоТовара();
		ЗапретДробногоКоличества = ЭтоШтучныйТовар И ЗапретВводаДробногоКоличестваШтучногоТовара;
		//popn-
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество, ЗапретДробногоКоличества);
    	ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);	
		Если ТекСтрока <> Неопределено Тогда
			ТекСтрока.Артикул = АвтоЗаказ.ПолучитьАртикул(Объект.Контрагент,ТекСтрока.Номенклатура);
			Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") И ПолучитьНеПлательщикНДС() Тогда
				//popn+
				ТекСтрока.СтавкаНДС = БезНДС;
				Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
					ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
				КонецЕсли;
				//popn-
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтавкуБезНДС()
	Возврат Справочники.СтавкиНДС.БезНДС;
КонецФункции

&НаСервере
Функция ПолучитьНеПлательщикНДС()
	Возврат Объект.Контрагент.НеПлательщикНДС;
КонецФункции

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	установитьпараметры();
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Элементы.Состав.ТекущиеДанные,ИСТИНА);
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЦенаБезНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуБезНДСВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
		ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СуммаБезНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыБезНДСВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры


&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


процедура Установитьпараметры()
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("структурнаяединица",Объект.структурнаяединица);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("контрагент", Объект.Контрагент);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("датадокумента", Объект.Дата);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", СписокНомеклатуры);
конецпроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
		ЕстьСвязьКонтрагентаИФирмы = ОбщегоНазначенияСервер.ЕстьСвязьКонтрагентаИФирмы(Объект.Контрагент,Объект.Фирма);
		Если НЕ ЕстьСвязьКонтрагентаИФирмы Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Контрагент "+СокрЛП(Объект.Контрагент)+" не связан с фирмой "+СокрЛП(Объект.Фирма)+"!'"), ,
			"Объект.Контрагент");
			Объект.Контрагент = ОбщегоНазначенияСервер.КонтрагентПустаяСсылка();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
			Объект.Валюта = ПолучитьВалютуКонтрагента(Объект.Контрагент);
		Иначе
			Объект.Валюта = ПолучитьВалютуСтруктурнойЕдиницы(Объект.СтруктурнаяЕдиница);
		КонецЕсли;
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	Объект.КонтрольКачества = ПолучитьКонтрольКачестваКонтрагента(Объект.Контрагент);
	установитьпараметры();
	Объект.Состав.Очистить();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВалютуКонтрагента(Контрагент)
	
	Возврат Контрагент.Валюта;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонтрольКачестваКонтрагента(Контрагент)
	
	Возврат Контрагент.КонтрольКачества;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВалютуСтруктурнойЕдиницы(се)
	
	Возврат се.Валюта;
	
КонецФункции	 


&НаКлиенте
Процедура Валюта(Команда)
	РаботаСФормамиКлиент.ОткрытьФормуВводаВалютыКурса(Объект);
	ОбновитьПредставлениеВалюты();	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользованиеВалюты(СтруктурнаяЕдиница)
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользованиеВалюты",Новый Структура("СтруктурнаяЕдиница,ПараметрСтруктурнойЕдиницы",СтруктурнаяЕдиница,ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеВалюты));
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКурсВалютыНаДату(Валюта,Дата)
	
	Возврат РаботаСКурсамиВалютКлиентСервер.ПолучитьКурсВалютыНаДату(Валюта,Дата);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПредставлениеВалюты()
	Если Объект.Курс = 1 Тогда
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = Объект.Валюта;
	Иначе
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = ""+Объект.Валюта+" "+Объект.Курс;
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
	КонецЕсли;
	Установитьпараметры();
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//Если ТекущийОбъект.ЗаказМагазина Тогда
	//	ТекущийОбъект.НомерRMS = "PO"+СокрЛП(ТекущийОбъект.Номер);
	//	ТекущийОбъект.Записать();
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоставкиПриИзменении(Элемент)
	Если Объект.ДатаПоставкиОт < Объект.Дата Тогда
		Объект.ДатаПоставкиОт = ТекущаяДата();
	КонецЕсли;
	Если Объект.ДатаПоставкиДо < ТекущаяДата() Тогда
		Объект.ДатаПоставкиДо = ТекущаяДата();
	КонецЕсли;
	Если Объект.ДатаПоставкиДо < Объект.ДатаПоставкиОт Тогда
		Объект.ДатаПоставкиДо = Объект.ДатаПоставкиОт+24*3600;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СоставЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
	СписокКонтрагентов = Новый СписокЗначений();
	СписокКонтрагентов.Добавить(Объект.Контрагент);
	СписокКонтрагентов.Добавить(ПолучитьПустуюСсылкуКонтрагента());
	УсловияОтбора = Новый Структура("Контрагент,Владелец",СписокКонтрагентов,Элементы.Состав.ТекущиеДанные.Номенклатура);
	ПараметрыФормы = Новый Структура("Отбор", УсловияОтбора);
	ОткрытьФорму("Справочник.ЕдиницыИзмерения.ФормаВыбора",ПараметрыФормы,Элемент);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПустуюСсылкуКонтрагента()
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();
	
КонецФункции

&НаКлиенте
Процедура СтруктурнаяЕдиницаПриИзменении(Элемент)
	Установитьпараметры();
	Элементы.Склад.Видимость = ПолучитьТипыСтруктурныхЕдиниц();
КонецПроцедуры

&НаСервере
Функция ПолучитьТипыСтруктурныхЕдиниц()
	
	Возврат Объект.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад;
	
КонецФункции


&НаКлиенте
Процедура СписокНомеклатурыПриИзменении(Элемент)
	УстановитьПараметры();
КонецПроцедуры


&НаКлиенте
Процедура СоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//popn+
	Если ТолькоПросмотр Тогда
		Стандартнаяобработка = ЛОЖЬ;
	КонецЕсли;
	
	Если Поле.Имя = "СоставКоличество" Тогда
		ТекущийТовар = Элементы.Состав.ТекущиеДанные.Номенклатура;
		ЭтоШтучныйТовар =  ОбщегоНазначенияСервер.ЭтоШтучныйТовар(ТекущийТовар);
        ЗапретВводаДробногоКоличестваШтучногоТовара = ОбщегоНазначенияСервер.ЗапретВводаДробногоКоличестваШтучногоТовара();
		
		Если ЭтоШтучныйТовар И ЗапретВводаДробногоКоличестваШтучногоТовара Тогда
			ТипЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0));
		Иначе
			ТипЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3));
		КонецЕсли;
		
		ЭлементСостава = Элементы.Найти(Поле.Имя);
		ЭлементСостава.ОграничениеТипа = ТипЧисла;
	КонецЕсли;
	//popn-
КонецПроцедуры

