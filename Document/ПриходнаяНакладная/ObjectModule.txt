Функция ПровестиПриходнуюНакладнуюОтПоставщика(Объект,РежимПроведения,соСтоимостьУслуг)
	
	Если Не Контрагент.РазрешенаЧастичнаяПоставка Тогда
		Если ЭтоЧастичнаяПоставка() Тогда
			Сообщить("Частичная поставка запрещена!");
			Возврат Истина;
		КонецЕсли;	
	КонецЕсли;	
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	//++БИТ БВО	
	//Запрос=Новый Запрос(
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	//--БИТ БВО
	"ВЫБРАТЬ
	|	ПриходнаяНакладнаяСостав.Ссылка,
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
	|	ПриходнаяНакладнаяСостав.Количество,
	|	ПриходнаяНакладнаяСостав.КоличествоПоДокументу,
	|	ПриходнаяНакладнаяСостав.Коэффициент,
	|	ПриходнаяНакладнаяСостав.ЦенаПротокола,
	|	ПриходнаяНакладнаяСостав.Цена,
	|	ПриходнаяНакладнаяСостав.СуммаНДС,
	|	ПриходнаяНакладнаяСостав.Сумма,
	|	ПриходнаяНакладнаяСостав.СтавкаНДС,
	|	ПриходнаяНакладнаяСостав.Вес,
	|	ПриходнаяНакладнаяСостав.ЕдиницаВеса,
	|	ПриходнаяНакладнаяСостав.ЦенаДоговора,
	|	ПриходнаяНакладнаяСостав.Артикул,
	|	ПриходнаяНакладнаяСостав.НомерКонтейнера,
	|	ПриходнаяНакладнаяСостав.ЦенаБезНДС,
	|	ПриходнаяНакладнаяСостав.СуммаБезНДС,
	|	ПриходнаяНакладнаяСостав.Izh_КоличествоБрак
	|ПОМЕСТИТЬ ВТСостав
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	|;
	|
	|//////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходнаяНакладнаяСостав.Ссылка.Дата КАК Период,
	|	ПриходнаяНакладнаяСостав.Ссылка.Ссылка КАК Регистратор,
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	//popn+
	|	ИСТИНА КАК Активность,
	|	&ВидДвиженияПриход КАК ВидДвижения,
	|	ПриходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДС,
	//popn-
	|	ПриходнаяНакладнаяСостав.Ссылка.Склад КАК МестоХранения,
	//++БИТ БВО
	//|	ПриходнаяНакладнаяСостав.Ссылка.Фирма,
	|	ПриходнаяНакладнаяСостав.Ссылка.Фирма КАК Фирма,
	//--БИТ БВО
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|			ТОГДА ПриходнаяНакладнаяСостав.Ссылка.Контрагент
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ КАК Комитент,
	|	ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора КАК Статус,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Количество * ПриходнаяНакладнаяСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Сумма * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Сумма * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.СуммаНДС * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.СуммаНДС * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК СуммаНДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПоступлениеТоваров) КАК КодОперации,
	//dps+ 15,08,11 наряд 000159384
	//|	ПриходнаяНакладнаяСостав.Ссылка.Контрагент
	|	ПриходнаяНакладнаяСостав.Ссылка.Контрагент КАК Контрагент
	//dps- 15,08,11 наряд 000159384
	|ИЗ
	//++БИТ БВО
	//|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	|	ВТСостав КАК ПриходнаяНакладнаяСостав
	//--БИТ БВО
	|ГДЕ
	|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
	|	И ПриходнаяНакладнаяСостав.Количество > 0
	|	И ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	//popn+
	|	ПриходнаяНакладнаяСостав.СтавкаНДС,
	//popn-
	|	ПриходнаяНакладнаяСостав.Ссылка.Ссылка,
	|	ПриходнаяНакладнаяСостав.Ссылка.Дата,
	|	ПриходнаяНакладнаяСостав.Ссылка.Фирма,
	|	ПриходнаяНакладнаяСостав.Ссылка.Склад,
	|	ПриходнаяНакладнаяСостав.Ссылка.Контрагент,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|			ТОГДА ПриходнаяНакладнаяСостав.Ссылка.Контрагент
	|		ИНАЧЕ неопределено
	|	КОНЕЦ,
	|	ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора";
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
	тз = Запрос.Выполнить().Выгрузить();
	тз.Колонки.Добавить("СтоимостьУслуг");
	соСтоимостьУслуг = Новый Соответствие;
	
	
	чИтогСумма    = тз.Итог("Сумма");
	Если чИтогСумма <> 0 Тогда
		
		//услуги
		//++БИТ БВО
		//Запрос = Новый Запрос(
		Запрос.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ПриходнаяНакладнаяСостав.СуммаНДС * ПриходнаяНакладнаяСостав.Ссылка.Курс) КАК ЧИСЛО(15, 2)), 0) КАК СуммаНДС,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(СУММА(ПриходнаяНакладнаяСостав.Сумма * ПриходнаяНакладнаяСостав.Ссылка.Курс) КАК ЧИСЛО(15, 2)), 0) КАК Сумма
		|ИЗ
		//++БИТ БВО
		//|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|	ВТСостав КАК ПриходнаяНакладнаяСостав
		//--БИТ БВО
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		|	И ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)";
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		
		чСуммаУслуг    = 0;
		чСуммаНДСУслуг = 0;
		в=Запрос.Выполнить().Выбрать();
		Если в.Следующий() Тогда
			чСуммаУслуг    = в.Сумма;
			чСуммаНДСУслуг = в.СуммаНДС;
		КонецЕсли;
		
		Если чСуммаУслуг <> 0 Тогда
			
			чИтогСуммаНДС = тз.Итог("СуммаНДС");
			строка_макс=неопределено;
			строка_максНДС=неопределено;
			чСуммаМакс    = 0;
			чСуммаМаксНДС = 0;
			Для каждого с из тз Цикл
				
				к = с.Сумма / чИтогСумма;
				чТекСуммаУслуг    = Окр(чСуммаУслуг    * к,2);
				чТекСуммаУслугНДС = Окр(чСуммаНДСУслуг * к,2);
				
				с.Сумма = с.Сумма + чТекСуммаУслуг;
				
				соСтоимостьУслуг.Вставить(с.Номенклатура,Окр(чТекСуммаУслуг / с.Количество,2));
				с.СтоимостьУслуг = чТекСуммаУслуг;
				
				с.СуммаНДС   = с.СуммаНДС   + чТекСуммаУслугНДС;
				Если чСуммаМакс < с.Сумма Тогда
					строка_макс = с;
					чСуммаМакс  = с.Сумма;
				КонецЕсли;	 
				Если чСуммаМаксНДС < с.СуммаНДС Тогда
					строка_максНДС = с;
					чСуммаМаксНДС  = с.СуммаНДС;
				КонецЕсли;
				с.СуммаУпр = с.Сумма;
				с.СуммаНДСУпр   = с.СуммаНДС;
			КонецЦикла;	
			
			//разницы возникающие при пропорциональном распределении относим на строку с максимальной суммой
			чРазница = чСуммаУслуг + чИтогСумма - тз.Итог("Сумма");
			Если чРазница <> 0 и строка_макс <> Неопределено Тогда
				строка_макс.Сумма = строка_макс.Сумма + чРазница;
				соСтоимостьУслуг.Вставить(строка_макс.Номенклатура,Окр((строка_макс.СтоимостьУслуг+чРазница)/строка_макс.Количество,2));
				строка_макс.СуммаУпр = строка_макс.Сумма;
			КонецЕсли;	
			
			чРазницаНДС = чСуммаНДСУслуг + чИтогСуммаНДС - тз.Итог("СуммаНДС");
			Если чРазницаНДС <> 0 и строка_максНДС <> Неопределено Тогда
				строка_макс.СуммаНДС = строка_макс.СуммаНДС + чРазницаНДС;
				строка_макс.СуммаНДСУпр = строка_макс.СуммаНДС; 
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	//{КотлячковаЕВ 2014-07-11 11:29:09 Наряд №000120672
	//{КотлячковаЕВ 2014-05-06 01:19:55 Наряд №000115432
	Если ЗначениеЗаполнено(Объект.ДокОснование) и  Объект.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы=Перечисления.ТипыСтруктурныхЕдиниц.Магазин
		и (ТипЗнч(Объект.ДокОснование)=Тип("ДокументСсылка.ПланируемаяПоставка") или ТипЗнч(Объект.ДокОснование)=Тип("ДокументСсылка.ЗапросНаПополнение")) Тогда
		//КотлячковаЕВ 2014-07-11 11:29:09 }	
		//КотлячковаЕВ 2014-05-06 01:19:55 } 
		//Закрытие заказов
		Запрос=Новый Запрос(
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.Ссылка КАК Регистратор,
		|	ПриходнаяНакладнаяСостав.Ссылка.Дата КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ЗаказыИсходящиеОстатки.ПоДокументу,
		|	ВЫБОР
		|		КОГДА ЗаказыИсходящиеОстатки.КоличествоОстаток > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ПриходнаяНакладнаяСостав.Количество >= ЗаказыИсходящиеОстатки.КоличествоОстаток
		|						ТОГДА ЗаказыИсходящиеОстатки.КоличествоОстаток
		|					ИНАЧЕ ПриходнаяНакладнаяСостав.Количество
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Количество,
		|	ПриходнаяНакладнаяСостав.Количество КАК КоличествоВДокументе,
		|	ПриходнаяНакладнаяСостав.Номенклатура.ТипТовара КАК ТипТовара,
		|	ЕСТЬNULL(НоменклатураКонтрагента.ОтклонениеВесаПлюс, 0) КАК ОтклонениеВесаПлюс,
		|	ЕСТЬNULL(ЗаказыИсходящиеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	НоменклатураКонтрагента.ТипОтклонения,
		|	ЕСТЬNULL(ПланируемаяПоставкаСостав.Количество, 0) КАК КоличествоВЗаказе
		|ИЗ
		|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыИсходящие.Остатки(&Момент, ПоДокументу = &ПоДокументу) КАК ЗаказыИсходящиеОстатки
		|		ПО ПриходнаяНакладнаяСостав.Номенклатура = ЗаказыИсходящиеОстатки.Номенклатура
		|			И ПриходнаяНакладнаяСостав.Ссылка.ДокОснование.Ссылка = ЗаказыИсходящиеОстатки.ПоДокументу
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|		ПО ПриходнаяНакладнаяСостав.Номенклатура = НоменклатураКонтрагента.Номенклатура
		|			И (НоменклатураКонтрагента.Контрагент = &Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланируемаяПоставка.Состав КАК ПланируемаяПоставкаСостав
		|		ПО ПриходнаяНакладнаяСостав.Номенклатура = ПланируемаяПоставкаСостав.Номенклатура
		|		И ПланируемаяПоставкаСостав.Ссылка = &ПоДокументу
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		Запрос.УстановитьПараметр("ПоДокументу",Объект.ДокОснование);
		Запрос.УстановитьПараметр("Контрагент",Объект.Контрагент);
		Запрос.УстановитьПараметр("Момент",ПроведениеДокументов.ПолучитьМоментВремени(Объект.Ссылка,Объект.Дата,РежимПроведения));
		тзЗаказы = Запрос.Выполнить().Выгрузить();
		//СтатусВозврата = Ложь;
		//Весовой = Перечисления.ТипыТоваров.Весовой;
		//Единица = Перечисления.ТипыОтклонений.Единица;
		//Для Каждого с_тзЗаказы Из тзЗаказы Цикл
		//	Если ЗначениеЗаполнено(с_тзЗаказы.ТипОтклонения) Тогда
		//		Если с_тзЗаказы.ТипОтклонения = Единица Тогда
		//			ДопустимоеКоличествоПрихода =  с_тзЗаказы.ОтклонениеВесаПлюс + с_тзЗаказы.КоличествоОстаток;
		//			//ДопустимоеКоличествоПрихода =  с_тзЗаказы.КоличествоВЗаказе + с_тзЗаказы.ОтклонениеВесаПлюс - с_тзЗаказы.КоличествоОстаток;
		//		Иначе
		//			ОтклонениеВесаПлюс = ?(с_тзЗаказы.ОтклонениеВесаПлюс = 0,100,с_тзЗаказы.ОтклонениеВесаПлюс);
		//			ДопустимоеКоличествоПрихода =  с_тзЗаказы.КоличествоВЗаказе*ОтклонениеВесаПлюс/100 - (с_тзЗаказы.КоличествоВЗаказе - с_тзЗаказы.КоличествоОстаток);
		//		КонецЕсли; 
		//		Если с_тзЗаказы.КоличествоВДокументе > ДопустимоеКоличествоПрихода Тогда
		//			Текст = "Превышение заказанного количества по "+с_тзЗаказы.Номенклатура +" кол-во по документу: "+с_тзЗаказы.КоличествоВДокументе+" кол-во остатка по заказу: "+с_тзЗаказы.Количество+" допустимое количество: "+ ДопустимоеКоличествоПрихода;
		//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Ссылка);
		//			СтатусВозврата = Истина;
		//		КонецЕсли;
		//	Иначе 
		//		Если с_тзЗаказы.КоличествоВДокументе > с_тзЗаказы.Количество Тогда
		//			Текст = "Превышение заказанного количества по "+с_тзЗаказы.Номенклатура +" кол-во по документу: "+с_тзЗаказы.КоличествоВДокументе+" кол-во остатка по заказу: "+с_тзЗаказы.Количество;
		//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Ссылка);
		//			СтатусВозврата = Истина;
		//		КонецЕсли; 
		//	КонецЕсли; 
		//КонецЦикла;
		//Если СтатусВозврата = Истина Тогда
		//	Возврат Истина;
		//КонецЕсли;	
		//
		Объект.Движения.ЗаказыИсходящие.Загрузить(тзЗаказы);
		Объект.Движения.ЗаказыИсходящие.Записывать=Истина;
	КонецЕсли;	
	
	////++БИТ БВО
	////проведение по ТоварыПереданныеНаКомиссию
	//Если Объект.ТипДоговора = Перечисления.ТипыДоговоров.Комиссия
	//	И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
	//	
	//	Объект.Движения.ТоварыПереданныеНаКомиссию.Записывать = Истина;
	//	
	//	Запрос.Текст = "ВЫБРАТЬ
	//	|	ПриходнаяНакладнаяСостав.Ссылка,
	//	|	ПриходнаяНакладнаяСостав.Номенклатура,
	//	|	ПриходнаяНакладнаяСостав.Цена,
	//	|	ПриходнаяНакладнаяСостав.СтавкаНДС,
	//	|	СУММА(ПриходнаяНакладнаяСостав.Количество) КАК Количество,		
	//	|	СУММА(ПриходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС,
	//	|	СУММА(ПриходнаяНакладнаяСостав.Сумма) КАК Сумма		
	//	|ИЗ
	//	|	ВТСостав КАК ПриходнаяНакладнаяСостав
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ПриходнаяНакладнаяСостав.Ссылка,
	//	|	ПриходнаяНакладнаяСостав.Номенклатура,
	//	|	ПриходнаяНакладнаяСостав.Цена,
	//	|	ПриходнаяНакладнаяСостав.СтавкаНДС";
	//	РезультатЗапроса = Запрос.Выполнить();
	//	Выборка = РезультатЗапроса.Выбрать();
	//	
	//	Пока Выборка.Следующий() Цикл		
	//		//Движение = Движения.ТоварыПереданныеНаКомиссию.Добавить();		
	//		Движение = Объект.Движения.ТоварыПереданныеНаКомиссию.Добавить();
	//		Движение.Активность      = Истина;
	//		Движение.ВидДвижения     = ВидДвиженияНакопления.Приход;
	//		Движение.Регистратор     = Объект.Ссылка;
	//		Движение.Период          = Объект.Дата;
	//		Движение.Фирма           = Объект.Контрагент;
	//		Движение.Комиссионер     = Объект.Фирма;
	//		Движение.Номенклатура    = Выборка.Номенклатура;
	//		Движение.Количество      = Выборка.Количество;
	//		Движение.Сумма           = Выборка.Сумма;
	//		Движение.СуммаУпр        = Выборка.Сумма;
	//		Движение.СуммаНДС        = Выборка.СуммаНДС;
	//		Движение.СуммаНДСУпр     = Выборка.СуммаНДС;
	//		Движение.СуммаПродажи    = Выборка.Сумма;
	//		Движение.СуммаНДСПродажи = Выборка.СуммаНДС;
	//	КонецЦикла;
	//КонецЕсли;
	////--БИТ БВО
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тз);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тз);
	
	//popn+
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения("ПриходнаяНакладнаяОтПоставщика", тз, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тз, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	Возврат Ложь;
КонецФункции	

Функция ПровестиПриходнуюНакладнуюПеремещение(Объект,РежимПроведения)
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	//Просто перемещение между структурными единицами без перепродажи
	Запрос=Новый Запрос(
	"ВЫБРАТЬ
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка КАК Регистратор,
	|	ИСТИНА КАК Активность,
	|	&ВидДвиженияПриход КАК ВидДвижения,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка.Дата КАК Период,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка.Склад КАК МестоХранения,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка.Фирма,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент = Неопределено
	|	    ИЛИ ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент = Значение(Справочник.Контрагенты.ПустаяСсылка)
	|	    ИЛИ ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент = Значение(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент
	|	КОНЕЦ КАК Комитент,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент = Неопределено
	|	    ИЛИ ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент = Значение(Справочник.Контрагенты.ПустаяСсылка)
	|	    ИЛИ ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент = Значение(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|	КОНЕЦ КАК Статус,
	//popn+
	//|	СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.Количество) КАК Количество,
	|	СУММА(ТабСостав.Количество) КАК Количество,
	//popn-
	|	СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.Сумма) КАК Сумма,
	|	СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.СуммаНДСУпр) КАК СуммаНДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПеремещениеПриход) КАК КодОперации
	|ИЗ
	|	Документ.ПриходнаяНакладная.ОстаткиНоменклатуры КАК ПриходнаяНакладнаяОстаткиНоменклатуры
	//popn+
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
	|			СУММА(ПриходнаяНакладнаяСостав.Количество) КАК Количество
	|		ИЗ
	|			Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	|		ГДЕ
	|			ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
	|			И ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПриходнаяНакладнаяСостав.Номенклатура) КАК ТабСостав
	|		ПО (ТабСостав.Номенклатура = ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура)
	//popn-
	|ГДЕ
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка = &Ссылка
	|	И ТабСостав.Количество > 0
	|	И ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка.Склад,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка.Фирма,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяОстаткиНоменклатуры.Комитент = Неопределено
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.КупляПродажа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|	КОНЕЦ,
	|	ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка.Дата");
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
	тз = Запрос.Выполнить().Выгрузить();
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тз);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тз);
	
	//popn+
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения("ПриходнаяНакладнаяПеремещение", тз, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тз, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	
	Возврат Ложь;
КонецФункции	

Функция ПровестиПриходнуюНакладнуюВозвратОтНашейФирмы(Объект,РежимПроведения)
	
	прчКупляПродажа = Перечисления.ТипыДоговоров.КупляПродажа;
	прчКомиссия = Перечисления.ТипыДоговоров.Комиссия;
	
	
	Если Объект.ТипДоговора = прчКомиссия Тогда
		КодОперации = Перечисления.КодыОпераций.ПерепродажаВозвратРеализация;
	Иначе	
		КодОперации = Перечисления.КодыОпераций.ПерепродажаВозвратОтПокупателя;
	КонецЕсли;
	
	//popn+
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	//popn-
	
	тзОстаткиНоменклатуры = Объект.Движения.ОстаткиНоменклатуры.Выгрузить();
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("СуммаНДСПродажи");
	тзОстаткиНоменклатуры.Колонки.Добавить("Контрагент");
	тзОстаткиНоменклатуры.Колонки.Добавить("СтавкаНДС");
	
	тзРеализация = Объект.Движения.Реализация.Выгрузить();
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
	|	СУММА(ПриходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДСПродажи,
	|	СУММА(ПриходнаяНакладнаяСостав.Сумма) КАК СуммаПродажи,
	|	ПриходнаяНакладнаяСостав.Ссылка.ДокОснование КАК ДокОснование,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Коэффициент * ПриходнаяНакладнаяСостав.Количество КАК ЧИСЛО(15, 3))) КАК Количество,
	|	МАКСИМУМ(ПриходнаяНакладнаяСостав.СтавкаНДС) КАК СтавкаНДС
	|ПОМЕСТИТЬ врСостав
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	|ГДЕ
	|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
	|	И ПриходнаяНакладнаяСостав.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	|	ПриходнаяНакладнаяСостав.Ссылка.ДокОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Коэффициент * ПриходнаяНакладнаяСостав.Количество КАК ЧИСЛО(15, 3))) КАК Количество,
	|	ПриходнаяНакладнаяСостав.Ссылка.ДокОснование КАК ДокОснование
	|ПОМЕСТИТЬ УжеВернули
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	|ГДЕ
	|	ПриходнаяНакладнаяСостав.Ссылка.ДокОснование В
	|			(ВЫБРАТЬ
	|				ПриходнаяНакладная.ДокОснование
	|			ИЗ
	|				Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|			ГДЕ
	|				ПриходнаяНакладная.Ссылка = &Ссылка
	|			СГРУППИРОВАТЬ ПО
	|						ПриходнаяНакладная.ДокОснование)
	|	И ПриходнаяНакладнаяСостав.Ссылка.Фирма = &Фирма
	|	И ПриходнаяНакладнаяСостав.Ссылка <> &Ссылка
	|	И ПриходнаяНакладнаяСостав.Ссылка.Дата < &Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	|	ПриходнаяНакладнаяСостав.Ссылка.ДокОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	Состав.СуммаНДСПродажи,
	|	Состав.СуммаПродажи,
	|	Состав.ДокОснование,
	|	Состав.Количество,
	|	ЕСТЬNULL(УжеВернули.Количество, 0) КАК КоличествоВернули,
	|	Состав.СтавкаНДС
	|ПОМЕСТИТЬ СоставИтог
	|ИЗ
	|	врСостав КАК Состав
	|		ЛЕВОЕ СОЕДИНЕНИЕ УжеВернули КАК УжеВернули
	|		ПО Состав.Номенклатура = УжеВернули.Номенклатура
	|			И Состав.ДокОснование = УжеВернули.ДокОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.Статус,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|	СУММА(ОстаткиНоменклатуры.Сумма) КАК Сумма,
	|	СУММА(ОстаткиНоменклатуры.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ОстаткиНоменклатуры.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ОстаткиНоменклатуры.СуммаНДСУпр) КАК СуммаНДСУпр,
	|	ОстаткиНоменклатуры.Комитент,
	|	ОстаткиНоменклатуры.Регистратор
	|ПОМЕСТИТЬ СебестоимостьОснование
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &ДокОснование
	|	И ОстаткиНоменклатуры.ВидДвижения = &ВидДвиженияРасход
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.Статус,
	|	ОстаткиНоменклатуры.Комитент,
	|	ОстаткиНоменклатуры.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьОснование.Статус,
	|	СебестоимостьОснование.Комитент,
	|	ЕСТЬNULL(СебестоимостьОснование.Количество, 0) КАК Количество,
	|	СебестоимостьОснование.Сумма КАК Сумма,
	|	СебестоимостьОснование.СуммаУпр КАК СуммаУпр,
	|	СебестоимостьОснование.СуммаНДС КАК СуммаНДС,
	|	СебестоимостьОснование.СуммаНДСУпр КАК СуммаНДСУпр,
	|	СоставИтог.Номенклатура КАК Номенклатура,
	|	СоставИтог.СуммаНДСПродажи КАК СуммаНДСПродажи,
	|	СоставИтог.СуммаПродажи КАК СуммаПродажи,
	|	СоставИтог.Количество КАК КоличествоВозврат,
	|	СоставИтог.КоличествоВернули КАК КоличествоУжеВернули,
	|	СоставИтог.ДокОснование КАК ДокОснование,
	|	СоставИтог.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	СоставИтог КАК СоставИтог
	|		ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьОснование КАК СебестоимостьОснование
	|		ПО СоставИтог.Номенклатура = СебестоимостьОснование.Номенклатура
	|			И СоставИтог.ДокОснование = СебестоимостьОснование.Регистратор
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(СуммаУпр),
	|	СУММА(СуммаНДС),
	|	СУММА(СуммаНДСУпр),
	|	МАКСИМУМ(СуммаНДСПродажи),
	|	МАКСИМУМ(СуммаПродажи),
	|	МАКСИМУМ(КоличествоВозврат),
	|	МАКСИМУМ(КоличествоУжеВернули),
	|	МАКСИМУМ(СтавкаНДС)
	|ПО
	|	Номенклатура,
	|	ДокОснование";
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияРасход",ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Фирма",Объект.Фирма);
	Запрос.УстановитьПараметр("Дата",Объект.Дата);
	Запрос.УстановитьПараметр("ДокОснование",Объект.ДокОснование);
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ВыборкаДокОснование = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДокОснование.Следующий() Цикл
			
			
			чКолСписали = 0;
			чКолСписать = ВыборкаДокОснование.КоличествоВозврат;
			чКолУжеВернули = ВыборкаДокОснование.КоличествоУжеВернули;
			чСуммаПродажиИтог=0;
			чСуммаНДСПродажиИтог=0;
			Выборка = ВыборкаДокОснование.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Выборка.Следующий() Цикл
				
				чКолОст = Выборка.Количество - чКолУжеВернули;
				Если чКолОст < 0 Тогда
					чКолУжеВернули = чКолУжеВернули - Выборка.Количество;
				Иначе
					чКолУжеВернули = 0;
				КонецЕсли;	
				
				чКолТек = МИН(чКолСписать,чКолОст);
				Если чКолТек<=0 Тогда
					Продолжить;
				КонецЕсли;	
				
				к = чКолТек / Выборка.Количество;
				
				Движение = тзОстаткиНоменклатуры.Добавить();
				Движение.Активность = Истина;
				Движение.Регистратор = Объект.Ссылка;
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = Объект.Дата;
				Движение.Фирма = Объект.Фирма;
				Движение.МестоХранения = Объект.Склад;
				Движение.Номенклатура = ВыборкаДокОснование.Номенклатура;
				Движение.СтавкаНДС = ВыборкаДокОснование.СтавкаНДС;
				Движение.Количество = чКолТек;
				чСумма = Окр(Выборка.Сумма * к, 2);
				Движение.Сумма = чСумма;
				Движение.СуммаУпр = Окр(Выборка.СуммаУпр * к, 2);
				Движение.СуммаНДС = Окр(Выборка.СуммаНДС * к, 2);
				Движение.СуммаНДСУпр = Окр(Выборка.СуммаНДСУпр * к, 2);
				Движение.КодОперации = КодОперации;
				Движение.Статус = Выборка.Статус;
				Движение.Комитент = Выборка.Комитент;
				Движение.Контрагент = Объект.Контрагент;
				чСуммаПродажиТек = Окр(чКолТек*ВыборкаДокОснование.СуммаПродажи/ВыборкаДокОснование.КоличествоВозврат,2);
				чСуммаНДСПродажиТек = Окр(чКолТек*ВыборкаДокОснование.СуммаНДСПродажи/ВыборкаДокОснование.КоличествоВозврат,2);
				Движение.СуммаПродажи = чСуммаПродажиТек;
				Движение.СуммаНДСПродажи = чСуммаНДСПродажиТек;
				
				Если Выборка.Статус = прчКомиссия Тогда
					ДвижениеРеализация = тзРеализация.Добавить();
					ДвижениеРеализация.Активность = Истина;
					ДвижениеРеализация.Регистратор = Объект.Ссылка;
					ДвижениеРеализация.ВидДвижения = ВидДвиженияНакопления.Расход;
					ДвижениеРеализация.Период = Объект.Дата;
					ДвижениеРеализация.Фирма = Объект.Фирма;
					ДвижениеРеализация.Номенклатура = ВыборкаДокОснование.Номенклатура;
					ДвижениеРеализация.Количество = чКолТек;
					ДвижениеРеализация.Сумма = чСумма;
					ДвижениеРеализация.Комитент = Выборка.Комитент;
					ДвижениеРеализация.СуммаПродажи = чСуммаПродажиТек;
					ДвижениеРеализация.СуммаНДСПродажи = чСуммаНДСПродажиТек;
					ДвижениеРеализация.ПоДокументу = Объект.Ссылка;
				КонецЕсли;	
				
				чСуммаПродажиИтог=чСуммаПродажиИтог+чСуммаПродажиТек;
				чСуммаНДСПродажиИтог=чСуммаНДСПродажиИтог+чСуммаНДСПродажиТек;
				чКолСписать = чКолСписать - чКолТек;
				
			КонецЦикла;
			
			чРазница = ВыборкаДокОснование.СуммаПродажи - чСуммаПродажиИтог;
			Если чРазница <> 0 и Движение <> Неопределено Тогда
				Движение.СуммаПродажи = Движение.СуммаПродажи + чРазница;
				Если Движение.Статус = прчКомиссия Тогда
					ДвижениеРеализация.СуммаПродажи = ДвижениеРеализация.СуммаПродажи + чРазница;
				КонецЕсли;	
			КонецЕсли;	
			чРазницаНДС = ВыборкаДокОснование.СуммаНДСПродажи - чСуммаНДСПродажиИтог;
			Если чРазницаНДС <> 0 и Движение <> Неопределено Тогда
				Движение.СуммаНДСПродажи = Движение.СуммаНДСПродажи + чРазницаНДС;
				Если Движение.Статус = прчКомиссия Тогда
					ДвижениеРеализация.СуммаНДСПродажи = ДвижениеРеализация.СуммаНДСПродажи + чРазницаНДС;
				КонецЕсли;	
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;	
	
	
	//проведение по ТоварыПереданныеНаКомиссию
	Если Объект.ТипДоговора = прчКомиссия Тогда
		тзТоварыПереданныеНаКомиссию = Объект.Движения.ТоварыПереданныеНаКомиссию.Выгрузить();
		
		Параметры = Новый Структура();
		Параметры.Вставить("Запрос",Запрос);
		Параметры.Вставить("тзТоварыПереданныеНаКомиссию",тзТоварыПереданныеНаКомиссию);
		Параметры.Вставить("Контрагент",Объект.Контрагент);
		Параметры.Вставить("Фирма",Объект.Фирма);
		Параметры.Вставить("Объект",Объект);
		ПроведениеДокументов.ПровестиСписаниеПоТоварыПереданныеНаКомиссию(Параметры);		
		
	КонецЕсли;	
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тзОстаткиНоменклатуры);
	
	//popn+
	тзОстаткиНоменклатурыКопия = тзОстаткиНоменклатуры.Скопировать();
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения("ПриходнаяНакладнаяВозвратОтНашейФирмы", тзОстаткиНоменклатурыКопия, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тзОстаткиНоменклатурыКопия, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	//popn-
	
	тзОстаткиНоменклатуры.Свернуть("Регистратор,Активность,Период,Фирма,Контрагент,Номенклатура,КодОперации,Статус,СтавкаНДС","Количество,Сумма,СуммаНДС,СуммаУпр,СуммаНДСУпр,СуммаПродажи,СуммаНДСПродажи");
	Объект.Движения.ДвиженияТМЦ.Загрузить(тзОстаткиНоменклатуры);
	Объект.Движения.Реализация.Загрузить(тзРеализация);
	Если тзТоварыПереданныеНаКомиссию <> неопределено Тогда
		Объект.Движения.ТоварыПереданныеНаКомиссию.Загрузить(тзТоварыПереданныеНаКомиссию);
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции	

Функция ПровестиПриходнуюНакладнуюПриходОтНашейФирмы(Объект,РежимПроведения)
	
	тзОстаткиНоменклатурыИсходная = ПроведениеДокументов.ПолучитьДвиженияДокументаПоРегистру(Объект,"ОстаткиНоменклатуры");
	Для Каждого РегистрДвижений Из Объект.Движения Цикл
		РегистрДвижений.Очистить();
	КонецЦикла;
	
	Запрос=Новый Запрос(
	"ВЫБРАТЬ
	|	ПриходнаяНакладнаяСостав.Ссылка.Дата КАК Период,
	|	ПриходнаяНакладнаяСостав.Ссылка.Ссылка КАК Регистратор,
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	|	&ВидДвиженияПриход КАК ВидДвижения,
	|	ИСТИНА КАК Активность,
	|	ПриходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДС,
	|	ПриходнаяНакладнаяСостав.Ссылка.Склад КАК МестоХранения,
	|	ПриходнаяНакладнаяСостав.Ссылка.Фирма,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|			ТОГДА ПриходнаяНакладнаяСостав.Ссылка.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Комитент,
	|	ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора КАК Статус,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Количество * ПриходнаяНакладнаяСостав.Коэффициент КАК ЧИСЛО(15, 3))) КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Сумма * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ТабОстатки.СуммаУпр, 0) * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
	|	СУММА(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.СуммаНДС * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ТабОстатки.СуммаНДСУпр, 0) * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК СуммаНДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОпераций.ПерепродажаПоступлениеТоваров) КАК КодОперации,
	|	ПриходнаяНакладнаяСостав.Ссылка.Контрагент
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|			СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.СуммаУпр) КАК СуммаУпр,
	|			СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.СуммаНДСУпр) КАК СуммаНДСУпр
	|		ИЗ
	|			Документ.ПриходнаяНакладная.ОстаткиНоменклатуры КАК ПриходнаяНакладнаяОстаткиНоменклатуры
	|		ГДЕ
	|			ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка = &Ссылка
	|			И ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура) КАК ТабОстатки
	|		ПО (ТабОстатки.Номенклатура = ПриходнаяНакладнаяСостав.Номенклатура)
	|ГДЕ
	|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
	|	И ПриходнаяНакладнаяСостав.Количество > 0
	|	И ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходнаяНакладнаяСостав.Номенклатура,
	|	ПриходнаяНакладнаяСостав.СтавкаНДС,
	|	ПриходнаяНакладнаяСостав.Ссылка.Ссылка,
	|	ПриходнаяНакладнаяСостав.Ссылка.Дата,
	|	ПриходнаяНакладнаяСостав.Ссылка.Фирма,
	|	ПриходнаяНакладнаяСостав.Ссылка.Склад,
	|	ПриходнаяНакладнаяСостав.Ссылка.Контрагент,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Комиссия)
	|			ТОГДА ПриходнаяНакладнаяСостав.Ссылка.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ПриходнаяНакладнаяСостав.Ссылка.ТипДоговора");
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияПриход",ВидДвиженияНакопления.Приход);
	тз = Запрос.Выполнить().Выгрузить();
	
	//++БИТ БВО
	//проведение по ТоварыПереданныеНаКомиссию		
	Если Объект.ТипДоговора = Перечисления.ТипыДоговоров.Комиссия Тогда
		Объект.Движения.ТоварыПереданныеНаКомиссию.Записывать = Истина;
		Для Каждого СтрокаТЗ Из ТЗ Цикл									
			//Движение = Движения.ТоварыПереданныеНаКомиссию.Добавить();		
			Движение = Объект.Движения.ТоварыПереданныеНаКомиссию.Добавить();
			Движение.Активность      = Истина;
			Движение.ВидДвижения     = ВидДвиженияНакопления.Приход;
			Движение.Регистратор     = Объект.Ссылка;
			Движение.Период          = Объект.Дата;
			Движение.Фирма           = Объект.Контрагент;
			Движение.Комиссионер     = Объект.Фирма;
			Движение.Номенклатура    = СтрокаТЗ.Номенклатура;
			Движение.Количество      = СтрокаТЗ.Количество;
			Движение.Сумма           = СтрокаТЗ.Сумма;
			Движение.СуммаУпр        = СтрокаТЗ.СуммаУпр;
			Движение.СуммаНДС        = СтрокаТЗ.СуммаНДС;
			Движение.СуммаНДСУпр     = СтрокаТЗ.СуммаНДСУпр;
			Движение.СуммаПродажи    = СтрокаТЗ.Сумма;
			Движение.СуммаНДСПродажи = СтрокаТЗ.СуммаНДС;			
		КонецЦикла;
	КонецЕсли;
	//--БИТ БВО
	
	Объект.Движения.ОстаткиНоменклатуры.Загрузить(тз);
	Объект.Движения.ДвиженияТМЦ.Загрузить(тз);
	
	ПроведениеДокументов.ПодготовитьТаблицыДляСравнения("ПриходнаяНакладнаяОтНашейФирмы", тз, тзОстаткиНоменклатурыИсходная);
	НеБылоИзменений = ПроведениеДокументов.ТаблицыНаборовЗаписейОдинаковые(тз, тзОстаткиНоменклатурыИсходная);
	Объект.Движения.ОстаткиНоменклатуры.Записывать = НЕ НеБылоИзменений;
	
	Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	Возврат Ложь;
	
КонецФункции	

Функция ПровестиПриходнаяНакладная(Объект,РежимПроведения)
	
	
	//popn+
	чВидОперации = Документы.ПриходнаяНакладная.ПолучитьВидОперацииПриходнаяНакладная(Объект); 
	//popn-
	
	соСтоимостьУслуг = Неопределено;
	
	Если чВидОперации = 1 Тогда
		Отказ = ПровестиПриходнуюНакладнуюОтПоставщика(Объект,РежимПроведения,соСтоимостьУслуг);
	ИначеЕсли чВидОперации = 2 Тогда
		Отказ = ПровестиПриходнуюНакладнуюПеремещение(Объект,РежимПроведения);
	ИначеЕсли чВидОперации = 3 Тогда
		Отказ = ПровестиПриходнуюНакладнуюПриходОтНашейФирмы(Объект,РежимПроведения);
	ИначеЕсли чВидОперации = 4 Тогда
		Отказ = ПровестиПриходнуюНакладнуюВозвратОтНашейФирмы(Объект,РежимПроведения);
	КонецЕсли;
	
	//закупочные цены
	Если чВидОперации = 2 Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.Ссылка КАК Регистратор,
		|	ПриходнаяНакладнаяСостав.Ссылка.Дата КАК Период,
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ТабОстатки.СуммаУпр    * ПриходнаяНакладнаяСостав.Ссылка.Курс / ЕСТЬNULL(ТабОстатки.КоличествоУпр,0) КАК ЧИСЛО(15, 2))) КАК Цена,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ТабОстатки.СуммаУпр    * ПриходнаяНакладнаяСостав.Ссылка.Курс / ЕСТЬNULL(ТабОстатки.КоличествоУпр,0) КАК ЧИСЛО(15, 2))) КАК ЦенаУпр,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ТабОстатки.СуммаНДСУпр * ПриходнаяНакладнаяСостав.Ссылка.Курс / ЕСТЬNULL(ТабОстатки.КоличествоУпр,0) КАК ЧИСЛО(15, 3))) КАК СуммаНДС,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ТабОстатки.СуммаНДСУпр * ПриходнаяНакладнаяСостав.Ссылка.Курс / ЕСТЬNULL(ТабОстатки.КоличествоУпр,0) КАК ЧИСЛО(15, 3))) КАК СуммаНДСУпр,
		|	ПриходнаяНакладнаяСостав.Ссылка.Фирма,
		|	ПриходнаяНакладнаяСостав.Ссылка.СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
		|			СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.Количество) КАК КоличествоУпр,
		|			СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.СуммаУпр) КАК СуммаУпр,
		|			СУММА(ПриходнаяНакладнаяОстаткиНоменклатуры.СуммаНДСУпр) КАК СуммаНДСУпр
		|		ИЗ
		|			Документ.ПриходнаяНакладная.ОстаткиНоменклатуры КАК ПриходнаяНакладнаяОстаткиНоменклатуры
		|		ГДЕ
		|			ПриходнаяНакладнаяОстаткиНоменклатуры.Ссылка = &Ссылка
		|			И ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПриходнаяНакладнаяОстаткиНоменклатуры.Номенклатура) КАК ТабОстатки
		|		ПО (ТабОстатки.Номенклатура = ПриходнаяНакладнаяСостав.Номенклатура)
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		|	И ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|	И ПриходнаяНакладнаяСостав.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	ПриходнаяНакладнаяСостав.Ссылка,
		|	ПриходнаяНакладнаяСостав.Ссылка.Дата,
		|	ПриходнаяНакладнаяСостав.Ссылка.Фирма");
	Иначе
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.Ссылка КАК Регистратор,
		|	ПриходнаяНакладнаяСостав.Ссылка.Дата КАК Период,
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Цена * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК Цена,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.Цена * ПриходнаяНакладнаяСостав.Ссылка.Курс КАК ЧИСЛО(15, 2))) КАК ЦенаУпр,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.СуммаНДС * ПриходнаяНакладнаяСостав.Ссылка.Курс / ПриходнаяНакладнаяСостав.Количество КАК ЧИСЛО(15, 3))) КАК СуммаНДС,
		|	СРЕДНЕЕ(ВЫРАЗИТЬ(ПриходнаяНакладнаяСостав.СуммаНДС * ПриходнаяНакладнаяСостав.Ссылка.Курс / ПриходнаяНакладнаяСостав.Количество КАК ЧИСЛО(15, 3))) КАК СуммаНДСУпр,
		|	ПриходнаяНакладнаяСостав.Ссылка.Фирма,
		|	ПриходнаяНакладнаяСостав.Ссылка.СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
		|	И ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|	И ПриходнаяНакладнаяСостав.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	ПриходнаяНакладнаяСостав.Ссылка,
		|	ПриходнаяНакладнаяСостав.Ссылка.Дата,
		|	ПриходнаяНакладнаяСостав.Ссылка.Фирма");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	тзЦены = Запрос.Выполнить().Выгрузить();
	Если соСтоимостьУслуг <> Неопределено Тогда
		тзЦены.Колонки.Добавить("СтоимостьУслуг");
		Для каждого с_тзЦены из тзЦены Цикл
			с_тзЦены.СтоимостьУслуг = соСтоимостьУслуг.Получить(с_тзЦены.Номенклатура);
		КонецЦикла;
		
	КонецЕсли;
	
	
	
	//Объект.Движения.ОстаткиНоменклатуры.Загрузить(тз);
	//Объект.Движения.ДвиженияТМЦ.Загрузить(тз);
	Объект.Движения.ЦеныНоменклатурыЗакупочные.Загрузить(тзЦены);
	
	//Объект.Движения.ОстаткиНоменклатуры.Записывать=Истина;
	//Объект.Движения.ДвиженияТМЦ.Записывать=Истина;
	Объект.Движения.ЦеныНоменклатурыЗакупочные.Записывать=Истина;
	
	Возврат Отказ;
КонецФункции

Процедура ЗаполнитьПоПланируемойПоставке(ДокументОснование)
	ЭтотОбъект.ДокОснование = ДокументОснование;
	//++Минин 2014-10-20 Наряд № 000131223
	Если ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы <> Перечисления.ТипыСтруктурныхЕдиниц.Магазин Тогда
		ТекстСообщения = НСтр("ru='Ввод на основании разрешен только в магазине!'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	//--Минин 2014-10-20 Наряд № 000131223
	
	Если ТипЗнч(ДокументОснование.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ТекстСообщения = НСтр("ru='Запрещен ввод на основании для перемещений между структурными единицами!'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ДокументОснование.Статус = Перечисления.СтатусыПланируемойПоставки.Закрыт ИЛИ ДокументОснование.Статус = Перечисления.СтатусыПланируемойПоставки.Черновик Тогда
		ТекстСообщения = НСтр("ru='Запрещен ввод на основании документа со статусом ""Закрыт"" или ""Черновик""!'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ЭтотОбъект.Контрагент   = ДокументОснование.Контрагент;
	ЭтотОбъект.Фирма   = ДокументОснование.Фирма;
	ЭтотОбъект.СтруктурнаяЕдиница = ДокументОснование.СтруктурнаяЕдиница;
	ЭтотОбъект.Склад   = ДокументОснование.Склад;
	
	
	Если Найти(ДокументОснование.НомерRMS,"-")>0 Тогда
		ЭтотОбъект.НомерRMS = Сред(ДокументОснование.НомерRMS,Найти(ДокументОснование.НомерRMS,"-")+1);
	Иначе
		ЭтотОбъект.НомерRMS = Сред(ДокументОснование.НомерRMS,3);
	КонецЕсли;
	РаспоряжениеНаОтгрузку = Документы.РаспоряжениеНаОтгрузку.НайтиПоРеквизиту("НомерЗаказа",ЭтотОбъект.НомерRMS);
	Если РаспоряжениеНаОтгрузку.Пустая() Тогда
		ЭтотОбъект.ТипДоговора = Перечисления.ТипыДоговоров.КупляПродажа;
	Иначе
		ЭтотОбъект.ТипДоговора = Перечисления.ТипыДоговоров.ОтветственноеХранение;
	КонецЕсли;
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПланируемаяПоставкаСостав.Номенклатура,
	|	ПланируемаяПоставкаСостав.ЕдиницаИзмерения,
	|	ПланируемаяПоставкаСостав.Коэффициент,
	|	ПланируемаяПоставкаСостав.Цена,
	|	ПланируемаяПоставкаСостав.ЦенаБезНДС,
	|	ПланируемаяПоставкаСостав.Цена * ЗаказыИсходящиеОстатки.КоличествоОстаток КАК Сумма,
	|	ПланируемаяПоставкаСостав.ЦенаБезНДС * ЗаказыИсходящиеОстатки.КоличествоОстаток КАК СуммаБезНДС,
	|	ПланируемаяПоставкаСостав.СтавкаНДС,
	|	НоменклатураКонтрагента.Цена КАК ЦенаДоговора,
	|	ЗаказыИсходящиеОстатки.КоличествоОстаток КАК Количество,
	|	ПланируемаяПоставкаСостав.Количество КАК КоличествоПоДокументу
	|ИЗ
	|	Документ.ПланируемаяПоставка.Состав КАК ПланируемаяПоставкаСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО ПланируемаяПоставкаСостав.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И ПланируемаяПоставкаСостав.Ссылка.Контрагент = НоменклатураКонтрагента.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыИсходящие.Остатки(&Момент, ПоДокументу = &Ссылка) КАК ЗаказыИсходящиеОстатки
	|		ПО ПланируемаяПоставкаСостав.Номенклатура = ЗаказыИсходящиеОстатки.Номенклатура
	|ГДЕ
	|	ПланируемаяПоставкаСостав.Ссылка = &Ссылка
	|	И ЗаказыИсходящиеОстатки.КоличествоОстаток > 0");
	Запрос.УстановитьПараметр("Ссылка",ДокументОснование);
	Запрос.УстановитьПараметр("Момент",Новый МоментВремени(Дата,Ссылка));
	ЭтотОбъект.Состав.Загрузить(Запрос.Выполнить().Выгрузить());
	Для Каждого Строка Из ЭтотОбъект.Состав Цикл
		Строка.СуммаНДС = ОбработкаТабличныхЧастейСервер.РассчитатьСуммуНДС(Строка.Сумма,Истина,Строка.СтавкаНДС.Ставка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоРасходнойНакладной(ДокументОснование)
	
	Если ТипЗнч(ДокументОснование.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		
		Если ДокументОснование.Контрагент.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='На основании документа %1 запрещено создавать приходные накладные, так как структурная единица %2 в режиме ""Продуктив""'"),
			ДокументОснование,
			ДокументОснование.Контрагент);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ЭтотОбъект.Фирма              = ДокументОснование.Фирма;
		ЭтотОбъект.Контрагент         = ДокументОснование.Контрагент.Организация;
		ЭтотОбъект.Грузоотправитель   = ДокументОснование.Контрагент;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияТМЦ.Номенклатура КАК Номенклатура,
		|	СУММА(ДвиженияТМЦ.Количество) КАК Количество,
		|	СУММА(ДвиженияТМЦ.Сумма) КАК Сумма,
		|	СУММА(ДвиженияТМЦ.СуммаНДС) КАК СуммаНДС,
		|	ДвиженияТМЦ.Комитент КАК Комитент,
		|	СУММА(ДвиженияТМЦ.СуммаУпр) КАК СуммаУпр,
		|	СУММА(ДвиженияТМЦ.СуммаНДСУпр) КАК СуммаНДСУпр,
		|	ДвиженияТМЦ.СтавкаНДС,
		|	СУММА(ДвиженияТМЦ.СуммаПродажи) КАК СуммаПродажи,
		|	СУММА(ДвиженияТМЦ.СуммаНДСПродажи) КАК СуммаНДСПродажи
		|ИЗ
		|	РегистрНакопления.ДвиженияТМЦ КАК ДвиженияТМЦ
		|ГДЕ
		|	ДвиженияТМЦ.Регистратор = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДвиженияТМЦ.Комитент,
		|	ДвиженияТМЦ.СтавкаНДС,
		|	ДвиженияТМЦ.Номенклатура");
		Запрос.УстановитьПараметр("Ссылка",ДокументОснование);
		тз = Запрос.Выполнить().Выгрузить();
		ЭтотОбъект.ОстаткиНоменклатуры.Загрузить(тз);
		
	Иначе
		ЭтотОбъект.Фирма              = ДокументОснование.Фирма;
		ЭтотОбъект.Контрагент         = ДокументОснование.Контрагент;
	КонецЕсли;
	
	ЭтотОбъект.ДокОснование       = ДокументОснование;
	ЭтотОбъект.СтруктурнаяЕдиница = ДокументОснование.СтруктурнаяЕдиница;
	ЭтотОбъект.ТипДоговора        = ДокументОснование.ТипДоговора;
	ЭтотОбъект.Склад              = ДокументОснование.Склад;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяСостав.Номенклатура,
	|	РасходнаяНакладнаяСостав.ЕдиницаИзмерения,
	|	РасходнаяНакладнаяСостав.Количество,
	|	РасходнаяНакладнаяСостав.Количество КАК КоличествоПоДокументу,
	|	РасходнаяНакладнаяСостав.Коэффициент,
	|	РасходнаяНакладнаяСостав.Цена,
	|	РасходнаяНакладнаяСостав.Сумма,
	|	РасходнаяНакладнаяСостав.ЦенаБезНДС,
	|	РасходнаяНакладнаяСостав.СуммаБезНДС,
	|	РасходнаяНакладнаяСостав.СтавкаНДС,
	|	РасходнаяНакладнаяСостав.СуммаНДС,
	|	РасходнаяНакладнаяСостав.Вес,
	|	РасходнаяНакладнаяСостав.ЕдиницаВеса,
	|	НоменклатураКонтрагента.Цена КАК ЦенаДоговора
	|ИЗ
	|	Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|		ПО РасходнаяНакладнаяСостав.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И РасходнаяНакладнаяСостав.Ссылка.Контрагент = НоменклатураКонтрагента.Контрагент
	|ГДЕ
	|	РасходнаяНакладнаяСостав.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",ДокументОснование);
	тз = Запрос.Выполнить().Выгрузить();
	ЭтотОбъект.Состав.Загрузить(тз);
	//++Минин
	Для Каждого Стр из ЭтотОбъект.Состав Цикл 
		Стр.ЦенаПротокола = ПолучитьЦенаПротокола (ЭтотОбъект.Контрагент,ЭтотОбъект.Склад.Владелец,ДокументОснование.Дата,Стр.Номенклатура)
	КонецЦикла;
	//--Минин
КонецПроцедуры	


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланируемаяПоставка") Тогда
		
		ЗаполнитьПоПланируемойПоставке(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		
		ЗаполнитьПоРасходнойНакладной(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Источник") И ДанныеЗаполнения.Источник = "ДанныеТСД" Тогда
			//Номер = ДанныеЗаполнения.Номер;
			Если ЗначениеЗаполнено(ДанныеЗаполнения.ДокОснование) И ТипЗнч(ДанныеЗаполнения.ДокОснование) = Тип("ДокументСсылка.ПланируемаяПоставка") Тогда
				ЗаполнитьПоПланируемойПоставке(ДанныеЗаполнения.ДокОснование);
				Для каждого сСостава Из Состав Цикл
					сСостава.Количество = 0;
				КонецЦикла;
			Иначе
				Если Контрагент = Тип("СправочникСсылка.Контрагенты") Тогда	//пока только они
					Контрагент = ДанныеЗаполнения.Контрагент;
				КонецЕсли;
				Если ЗначениеЗаполнено(ДанныеЗаполнения.ДокОснование) Тогда
					ДокОснование = ДанныеЗаполнения.ДокОснование;
				КонецЕсли;
			КонецЕсли;
			Для каждого эл Из ДанныеЗаполнения.Состав Цикл	//массив структур
				НайденныеСтроки = Состав.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения", эл.Номенклатура, эл.ЕдиницаИзмерения));
				Если НайденныеСтроки.Количество() = 0 Тогда
					сСостава = Состав.Добавить();
					
					ЗаполнитьЗначенияСвойств(сСостава, эл);//ключи Эл - "Номенклатура, ЕдиницаИзмерения, Количество, Коэффициент, Цена, Сумма"
					
					сСостава.ЦенаДоговора = сСостава.Цена;
					сСостава.СтавкаНДС = сСостава.Номенклатура.СтавкаНДС;
				Иначе
					сСостава = НайденныеСтроки[0];
					сСостава.Количество = эл.Количество;
					сСостава.Сумма = 0; //чтобы пересчиталось
				КонецЕсли;
				Если сСостава.Сумма = 0 Тогда
					сСостава.Сумма = Окр(сСостава.Количество * сСостава.Цена, 2);
				КонецЕсли;
				СтавкаНДССтавка = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(сСостава.СтавкаНДС);
				сСостава.СуммаНДС = СтавкаНДССтавка * сСостава.Сумма / (100 + СтавкаНДССтавка);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()Экспорт
	Автор = ПараметрыСеанса.ТекущийПользователь;
	//Котлячкова ++  30,09,13 (Перминова)
	Дата=ТекущаяДата();
	//Котлячкова --
	Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Если ЗначениеЗаполнено(Склад) Тогда
			СтруктурнаяЕдиница = Склад.Владелец;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(Контрагент.Валюта) Тогда
			Валюта = Контрагент.Валюта;
		Иначе
			Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
				Валюта = СтруктурныеЕдиницы.ПолучитьВалютуТекущейСЕ();
			Иначе	
				Валюта = СтруктурнаяЕдиница.Валюта;
			КонецЕсли;	
		КонецЕсли;
		
		СтруктураКурса = РаботаСКурсамиВалют.ЗаполнитьДанныеКурсаДляВалюты(Валюта);
		Курс = СтруктураКурса.Курс;
		Кратность = СтруктураКурса.Кратность;
	КонецЕсли;
	
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Грузоотправитель) Тогда
		// BiT ALProzorov 24/08/2015 -->>
		//Грузоотправитель = Справочники.Контрагенты.ПустаяСсылка();
		Грузоотправитель = Контрагент;
		// BiT ALProzorov 24/08/2015 <<--
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ Склад.Пустая() Тогда
		СтруктурнаяЕдиница = Склад.Владелец;
	КонецЕсли;
	//++Минин 2015-05-08 заполнение договора по умолчанию только для сторонних поставщиков
	Если Не ТипЗнч(Контрагент) = Тип("СправочникСсылка.Организации") Тогда 
		ЗаполнитьТипДоговора();
	КонецЕсли;
	//--Минин 2015-05-08 заполнение договора по умолчанию только для сторонних поставщиков
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ОбменЦВД") И  ЭтотОбъект.ДополнительныеСвойства.ОбменЦВД Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ЭтотОбъект.Контрагент) = Тип("СправочникСсылка.Контрагенты") И НЕ ЗначениеЗаполнено(ЭтотОбъект.ТипДоговора) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен реквизит Тип договора!",Ссылка);
		Отказ = истина;
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ЭтотОбъект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		Грузоотправитель = ЭтотОбъект.Контрагент;
	КонецЕсли;
	
	//dps+ 15/06/04 000151800
	Если ПараметрыСеанса.ЭтоЦентр И ЭтотОбъект.ОбработанЦВД И НЕ ЗначениеЗаполнено(ЭтотОбъект.ДатаДокумента) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена корректировочная дата!",,"ДатаДокумента");
		Отказ = истина;
		Возврат;
	КонецЕсли;
	//dps- 15/06/04 000151800
	//Если НЕ ЭтотОбъект.ЭтоНовый() Тогда
	//	Отказ = РаботаСФормамиСервер.ЗапрещеноРедактировать(ЭтотОбъект.Ссылка);
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	//Если (НЕ ПараметрыСеанса.ЭтоЦентр И НЕ ПараметрыСеанса.ИспользованиеЦВД) ИЛИ ТипЗнч(ЭтотОбъект.Контрагент) <> Тип("СправочникСсылка.Контрагенты") Тогда
	//	ОбработанЦВД = Истина;
	//КонецЕсли;
	
	СуммаИтого = Состав.Итог("Сумма");
	СуммаНДСИтого = Состав.Итог("СуммаНДС");
	
	//ШиловМВ 11.06.14 №000114217
	Если РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения Тогда
		СчетФактура = ЕстьСчетФактура();
		Если НЕ СчетФактура.Пустая() И СчетФактура.Проведен Тогда
			Если ОтменаПроведенияСФ(СчетФактура) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Строка(СчетФактура)+" отмена проведения");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//ШиловМВ 11.06.14
	
	//{++ ВетровИА 26.03.2015 Наряд №000145349}
	Отказ = Izh_ОбработкаТабличныхЧастейКлиентСервер.ПроверитьНаПравилоПерепродажи(ЭтотОбъект);
	//{-- ВетровИА 26.03.2015 Наряд №000145349}

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	СтартБП = Ложь;
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		Отказ = ПровестиПриходнаяНакладная(ЭтотОбъект,РежимПроведения);
	КонецЕсли;	
	//КотлячковаЕВ++28,11,13 нельзя проводить документы с 0 суммойУпр
	Если ТипЗнч(ЭтотОбъект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		МассивСтрок = ОстаткиНоменклатуры.НайтиСтроки(Новый Структура("СуммаУпр",0));
		Если МассивСтрок.Количество()>0 Тогда 
			Сообщить("Не заполнена СуммаУпр на вкладке ОстаткиНоменклатуры!");
			Отказ=?(МассивСтрок.Количество()>0,МассивСтрок.Количество()>0,ОстаткиНоменклатуры.Количество()=0);
		КонецЕсли;
	КонецЕсли;
	//КотлячковаЕВ--
	//{БредовЮГ 2014-11-24 Наряд №000134783
	Если ПараметрыСеанса.ИспользованиеЦВД И НЕ ОбменДанными.Загрузка Тогда
		//{ СИТЕК БрыляковЕЮ 2015-05-05  
		// Исходный текст --> 
		//Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда	
		//	//{БредовЮГ 2014-11-24 Наряд №000134783
		//	//Если (ПараметрыСеанса.ЭтоЦентр) ИЛИ (НЕ ПараметрыСеанса.ЭтоЦентр И ЭтотОбъект.ОбработанЦВД = Ложь) Тогда
		//	Если НЕ (ЭтотОбъект.ДополнительныеСвойства.свойство("ОбменЦВД") И ЭтотОбъект.ДополнительныеСвойства.ОбменЦВД) Тогда
		//		//БредовЮГ 2014-11-24 Наряд №000134783}
		//		
		//		Узел = ПланыОбмена.ОбменЦВД.НайтиПоКоду(1);
		//		Если НЕ Узел.Пустая() Тогда
		//			ПланыОбмена.ЗарегистрироватьИзменения(Узел,ЭтотОбъект);	
		//		КонецЕсли;	
		//		//{БредовЮГ 2014-11-24 Наряд №000134783	
		//	КонецЕсли;	
		//	//БредовЮГ 2014-11-24 Наряд №000134783}
		//КонецЕсли;	
		// <-- Исходный текст 
		// СИТЕК БрыляковЕЮ 2015-05-05 }
		//Если ПараметрыСеанса.ЭтоЦентр И ЭтотОбъект.ОбработанЦВД = Истина Тогда
		Если ПараметрыСеанса.ЭтоЦентр Тогда
			СтартБП = Истина;	
		КонецЕсли;	            
	ИначеЕсли НЕ ПараметрыСеанса.ИспользованиеЦВД И НЕ ОбменДанными.Загрузка Тогда
		СтартБП = Истина;	
	КонецЕсли;
	Если Не Загружен И НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		ОформитьПерепродажу();
	КонецЕсли;
	Если НЕ EDIПровайдер.Пустая() И ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") И Контрагент.ПодтверждениеЗаказаEDI Тогда	
		Если НЕ (ДополнительныеСвойства.Свойство("БылПроведен") И ДополнительныеСвойства.БылПроведен) Тогда
			Узел = ОбменДаннымиEDIСервер.ПолучитьУзелРегистрацииEDIКлиентПоПровайдеру(EDIПровайдер);
			Если Узел <> Неопределено Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(Узел,ЭтотОбъект);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Не Отказ И СтартБП = Истина тогда
		струкПараметры = Новый Структура;
		струкПараметры.Вставить("БизнесПроцесс", БизнесПроцессы.НесоответствиеПрихода);
		струкПараметры.Вставить("Основание", ЭтотОбъект.Ссылка);
		струкПараметры.Вставить("Удалять", Истина); 
		струкПараметры.Вставить("Искать", Истина);
		УправлениеБизнесПроцессамиСервер.ЗапуститьБизнесПроцесс(струкПараметры);
	Конецесли;
	//Izh_ОбменEDI.РегПриходнаяНакладная(ЭтотОбъект.Ссылка);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
	НомерRMS = 0;
	ДокОснование = Неопределено;
	//ОбработанЦВД = Ложь;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если Не Загружен И НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		Отказ = УдалитьДокументыПерепродажи();
	КонецЕсли;
КонецПроцедуры

Процедура ОформитьПерепродажу()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ФирмаПродажи
	|	КОНЕЦ КАК ФирмаПерепродажи,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ПроцентПрибыли
	|	КОНЕЦ КАК ПроцентПрибыли,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ТипДоговора
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ТипДоговора
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ТипДоговора
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ТипДоговора
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ТипДоговора
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ТипДоговора
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ТипДоговора
	|	КОНЕЦ КАК ТипДоговора
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК Состав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа1
	|		ПО Состав.Номенклатура.Код = Перепродажа1.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа2
	|		ПО Состав.Номенклатура.Родитель.Код = Перепродажа2.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа3
	|		ПО Состав.Номенклатура.Родитель.Родитель.Код = Перепродажа3.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа4
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Код = Перепродажа4.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа5
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Родитель.Код = Перепродажа5.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа6
	|		ПО Состав.Номенклатура.Родитель.Родитель.Родитель.Родитель.Родитель.Код = Перепродажа6.ГруппаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
	|				&Дата,
	|				ФирмаПокупки = &Фирма
	|					И СтруктурнаяЕдиница = &СЕ) КАК Перепродажа7
	|		ПО (Перепродажа7.ГруппаНоменклатуры = &ПустаяСтрока)
	|ГДЕ
	|	Состав.Ссылка = &Ссылка
	|	И (НЕ ВЫБОР
	|				КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа1.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа2.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа3.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа4.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа5.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа6.ФирмаПродажи
	|				КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|					ТОГДА Перепродажа7.ФирмаПродажи
	|			КОНЕЦ ЕСТЬ NULL )
	|
	|СГРУППИРОВАТЬ ПО
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ФирмаПродажи
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ФирмаПродажи
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ПроцентПрибыли
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ПроцентПрибыли
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НЕ Перепродажа1.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа1.ТипДоговора
	|		КОГДА (НЕ Перепродажа2.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа2.ТипДоговора
	|		КОГДА (НЕ Перепродажа3.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа3.ТипДоговора
	|		КОГДА (НЕ Перепродажа4.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа4.ТипДоговора
	|		КОГДА (НЕ Перепродажа5.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа5.ТипДоговора
	|		КОГДА (НЕ Перепродажа6.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа6.ТипДоговора
	|		КОГДА (НЕ Перепродажа7.ФирмаПродажи ЕСТЬ NULL )
	|			ТОГДА Перепродажа7.ТипДоговора
	|	КОНЕЦ
	|ИТОГИ ПО
	|	ФирмаПерепродажи,
	|	ТипДоговора");
	Запрос.УстановитьПараметр("ПустаяСтрока","                    ");
	Запрос.УстановитьПараметр("Дата",ЭтотОбъект.Дата);
	Запрос.УстановитьПараметр("Фирма",ЭтотОбъект.Фирма);
	Запрос.УстановитьПараметр("СЕ",ЭтотОбъект.СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	
	//{ СИТЕК БрыляковЕЮ 2014-10-23  
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Количество,
	|	Состав.Коэффициент,
	|	Состав.Цена,
	|	Состав.СуммаНДС,
	|	Состав.Сумма,
	|	Состав.СтавкаНДС
	|ПОМЕСТИТЬ ВТ_Состав
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	Запрос.Выполнить();
	ПравилаПерепродажи = РегистрыСведений.Перепродажа.ПравилаДляОформленияПерепродажиВДокументах(Запрос.МенеджерВременныхТаблиц, СтруктурнаяЕдиница, Фирма, Дата);
	// СИТЕК БрыляковЕЮ 2014-10-23 }
	
	//найдем уже созданные документ перепродажи
	
	тз = ПолучитьДокументыПерепродажи();
	
	//{ СИТЕК БрыляковЕЮ 2014-10-23  
	// Исходный текст --> 
	//ВыборкаФирмы=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	// <-- Исходный текст 
	ВыборкаФирмы = ПравилаПерепродажи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	// СИТЕК БрыляковЕЮ 2014-10-23 }
	//{ СИТЕК БрыляковЕЮ 2014-10-03  
	// Не записывались движения перед формированием перепродажи, при том что перепродажа проверяет остатки при проведении
	Если ВыборкаФирмы.Количество() > 0 Тогда
		Для каждого НаборДвижений Из Движения Цикл
			Попытка
				Если НаборДвижений.Записывать Тогда
					НаборДвижений.БлокироватьДляИзменения = Истина;
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЦикла;
		Движения.Записать();
	КонецЕсли;
	// СИТЕК БрыляковЕЮ 2014-10-03 }
	Пока ВыборкаФирмы.Следующий() Цикл
		ВыборкаТипДоговора=ВыборкаФирмы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаТипДоговора.Следующий() Цикл
			
			//{++ ВетровИА 30.03.2015 Наряд №000145349 Фирма покупки совпадает с фирмой продажи, ПередачаТоваровМеждуФирмами не формируем.} 
			Если ЭтотОбъект.Фирма = ВыборкаТипДоговора.ФирмаПерепродажи Тогда
				Продолжить;
			КонецЕсли;	
			//{-- ВетровИА 30.03.2015 Наряд №000145349}
			
			//определим ссылку на уже существующий документ перепродажи
			мсв = тз.НайтиСтроки(Новый Структура("Фирма,ФирмаПолучатель,ТипДоговора",ЭтотОбъект.Фирма,ВыборкаТипДоговора.ФирмаПерепродажи,ВыборкаТипДоговора.ТипДоговора));
			Если мсв.Количество() > 0 Тогда
				ДокОбъект = мсв[0].Ссылка.ПолучитьОбъект();
				//удалим ссылку из таблицы
				тз.Удалить(мсв[0]);
			Иначе
				ДокОбъект = Документы.ПередачаТоваровМеждуФирмами.СоздатьДокумент();
			КонецЕсли;
			
			ДокОбъект.Валюта = ЭтотОбъект.СтруктурнаяЕдиница.Валюта;
			ДокОбъект.Дата   = ЭтотОбъект.Дата;
			ДокОбъект.ДокОснование = ЭтотОбъект.Ссылка;
			ДокОбъект.ПометкаУдаления=Ложь;
			ДокОбъект.Кратность = 1;
			ДокОбъект.Курс = 1;
			ДокОбъект.Склад = ЭтотОбъект.Склад;
			ДокОбъект.СтруктурнаяЕдиница = ЭтотОбъект.СтруктурнаяЕдиница;
			ДокОбъект.ТипДоговора = ВыборкаТипДоговора.ТипДоговора;
			ДокОбъект.Фирма = ЭтотОбъект.Фирма;
			ДокОбъект.ФирмаПолучатель = ВыборкаТипДоговора.ФирмаПерепродажи;
			
			ДокОбъект.Состав.Очистить();
			ВыборкаСостав = ВыборкаТипДоговора.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСостав.Следующий() Цикл
				НоваяСтрока = ДокОбъект.Состав.Добавить();
				НоваяСтрока.ЕдиницаИзмерения = ВыборкаСостав.ЕдиницаИзмерения;
				НоваяСтрока.Количество   = ВыборкаСостав.Количество;
				НоваяСтрока.Коэффициент  = ВыборкаСостав.Коэффициент;
				НоваяСтрока.Номенклатура = ВыборкаСостав.Номенклатура;
				НоваяСтрока.СтавкаНДС    = ВыборкаСостав.СтавкаНДС;
				чЦена = ВыборкаСостав.Цена + Окр(ВыборкаСостав.Цена * ВыборкаСостав.ПроцентПрибыли / 100,2);
				НоваяСтрока.Цена     = чЦена;
				НоваяСтрока.Сумма    = Окр(ВыборкаСостав.Количество * чЦена, 2);
				НоваяСтрока.СуммаНДС = Окр(НоваяСтрока.Сумма * НоваяСтрока.СтавкаНДС.Ставка /(100 + НоваяСтрока.СтавкаНДС.Ставка),2);
			КонецЦикла;
			
			//{ СИТЕК БрыляковЕЮ 2014-10-10  Остатки в перепродаже получаются на дату документа, если даты равны, он не видит остатков по приходной накладной
			ДокОбъект.Дата = ЭтотОбъект.Дата + 1;
			// СИТЕК БрыляковЕЮ 2014-10-10 }
			//++БИТ БВО 2015-10-01			
			ДокОбъект.ПерераспределитьСоставПоОстаткам();
			//--БИТ БВО 205-10-01
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого с из тз цикл
		ДокОбъект = с.Ссылка.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
КонецПроцедуры

Функция УдалитьДокументыПерепродажи()
	тз = ПолучитьДокументыПерепродажи();
	Для каждого с из тз Цикл
		Попытка
			ДокОбъект = с.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат Истина;
		КонецПопытки;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Функция ПолучитьДокументыПерепродажи()
	ЗапросДокументы = Новый Запрос(
	"ВЫБРАТЬ
	|	СтруктураПодчиненности.Ссылка,
	|	СтруктураПодчиненности.Ссылка.Фирма КАК Фирма,
	|	СтруктураПодчиненности.Ссылка.ФирмаПолучатель КАК ФирмаПолучатель,
	|	СтруктураПодчиненности.Ссылка.ТипДоговора КАК ТипДоговора
	|ИЗ
	|	КритерийОтбора.СтруктураПодчиненности(&ДокументОснование) КАК СтруктураПодчиненности
	|ГДЕ
	|	СтруктураПодчиненности.Ссылка ССЫЛКА Документ.ПередачаТоваровМеждуФирмами");
	ЗапросДокументы.УстановитьПараметр("ДокументОснование",ЭтотОбъект.Ссылка);
	тз = ЗапросДокументы.Выполнить().Выгрузить();
	Возврат тз;
КонецФункции

Функция ЭтоЧастичнаяПоставка()
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Основное.Номенклатура КАК Номенклатура,
	|	Основное.Приход КАК Приход,
	|	Основное.Заказ КАК Заказ
	|ИЗ
	|	(ВЫБРАТЬ
	|		Объединение.Номенклатура КАК Номенклатура,
	|		СУММА(Объединение.Приход) КАК Приход,
	|		СУММА(Объединение.Заказ) КАК Заказ
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
	|			ПриходнаяНакладнаяСостав.Количество * ПриходнаяНакладнаяСостав.Коэффициент КАК Приход,
	|			0 КАК Заказ
	|		ИЗ
	|			Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
	|		ГДЕ
	|			ПриходнаяНакладнаяСостав.Ссылка = &Ссылка
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПланируемаяПоставкаСостав.Номенклатура,
	|			0,
	|			ПланируемаяПоставкаСостав.Количество * ПланируемаяПоставкаСостав.Коэффициент
	|		ИЗ
	|			Документ.ПланируемаяПоставка.Состав КАК ПланируемаяПоставкаСостав
	|		ГДЕ
	|			ПланируемаяПоставкаСостав.Ссылка = &Ссылка1) КАК Объединение
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Объединение.Номенклатура) КАК Основное
	|ГДЕ
	|	Основное.Приход < Основное.Заказ");
	
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Ссылка1",ЭтотОбъект.ДокОснование);
	Результат = Запрос.Выполнить().Пустой();
	Возврат НЕ Результат;
КонецФункции

Процедура ПриЗаписи(Отказ)
	
	//{ СИТЕК БрыляковЕЮ 2015-05-05  
	// Исходный текст --> 
	//Если ЭтотОбъект.ПометкаУдаления = ИСТИНА Тогда
	//	Если ПараметрыСеанса.ИспользованиеЦВД И НЕ ОбменДанными.Загрузка Тогда
	//		Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
	//			//{БредовЮГ 2014-11-24 Наряд №000134783
	//			//Если (ПараметрыСеанса.ЭтоЦентр) ИЛИ (НЕ ПараметрыСеанса.ЭтоЦентр И ЭтотОбъект.ОбработанЦВД = Ложь) Тогда
	//			Если НЕ (ЭтотОбъект.ДополнительныеСвойства.свойство("ОбменЦВД") И ЭтотОбъект.ДополнительныеСвойства.ОбменЦВД) Тогда
	//			//БредовЮГ 2014-11-24 Наряд №000134783}
	//				Узел = ПланыОбмена.ОбменЦВД.НайтиПоКоду(1);
	//				Если НЕ Узел.Пустая() Тогда
	//					ПланыОбмена.ЗарегистрироватьИзменения(Узел,ЭтотОбъект);
	//				КонецЕсли;
	//			//{БредовЮГ 2014-11-24 Наряд №000134783	
	//			КонецЕсли;	
	//			//БредовЮГ 2014-11-24 Наряд №000134783}
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	// <-- Исходный текст 
	// СИТЕК БрыляковЕЮ 2015-05-05 }
	
	Если ЭтотОбъект.ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ОбменЦВД") И  ЭтотОбъект.ДополнительныеСвойства.ОбменЦВД Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если НЕ ПараметрыСеанса.ИспользованиеЦВД Тогда
		ПроверяемыеРеквизиты.Добавить("Состав.Цена");
		Если ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов") = Ложь Тогда
			ПроверяемыеРеквизиты.Добавить("Состав.ЦенаБезНДС");
		КонецЕсли;
		ПроверяемыеРеквизиты.Добавить("Состав.СтавкаНДС");
	КонецЕсли;
КонецПроцедуры

//++Минин
Функция ПолучитьЦенаПротокола (Контрагент,СтруктурнаяЕдиница,ДатаДокумента,Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	МАКСИМУМ(НоменклатураКонтрагентаСрезПоследних.Цена) КАК Цена,
	|	СписокНоменклатуры.Группа,
	|	ВЫБОР
	|		КОГДА СписокНоменклатуры.ПометкаУдаления
	|			ТОГДА ВЫБОР
	|					КОГДА СписокНоменклатуры.Группа = 0
	|						ТОГДА 2
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНоменклатуры.Группа = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка,
	|	СписокНоменклатуры.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагентаСрезПоследних
	|		ПО СписокНоменклатуры.Ссылка = НоменклатураКонтрагентаСрезПоследних.Номенклатура
	|			И (НоменклатураКонтрагентаСрезПоследних.Контрагент = &Контрагент)
	|ГДЕ
	|	НЕ СписокНоменклатуры.ПростойНабор
	|	И (СписокНоменклатуры.Транзакционный
	|			ИЛИ СписокНоменклатуры.Группа = 1)
	|	И ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							НоменклатураКонтрагентаСрезПоследних.Номенклатура
	|						ИЗ
	|							РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагентаСрезПоследних
	|						ГДЕ
	|							НоменклатураКонтрагентаСрезПоследних.Контрагент = &Контрагент
	|							И (НоменклатураКонтрагентаСрезПоследних.ДатаПрекращенияПоставок > &ДатаДокумента
	|							ИЛИ НоменклатураКонтрагентаСрезПоследних.ДатаПрекращенияПоставок = ДатаВремя(1,1,1)))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							СтатусыНоменклатуры.Номенклатура
	|						ИЗ
	|							РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	|						ГДЕ
	|							СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|							И СтатусыНоменклатуры.Статус = ЗНАЧЕНИЕ(перечисление.статусытоваров.активный))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И СписокНоменклатуры.Ссылка = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	СписокНоменклатуры.Группа,
	|	СписокНоменклатуры.ПометкаУдаления,
	|	СписокНоменклатуры.Ссылка";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("ДатаДокумента",ДатаДокумента);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда 
		Возврат 0;
	Иначе 
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Цена;
	КонецЕсли;		
КонецФункции

//ШиловМВ 11.06.14 №000114217
Функция ЕстьСчетФактура() Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РегистрацияСчетФактуры.Ссылка
	|ИЗ
	|	Документ.РегистрацияСчетФактуры КАК РегистрацияСчетФактуры
	|ГДЕ
	|	РегистрацияСчетФактуры.ДокументОснование = &ДокументОснование
	|	И НЕ РегистрацияСчетФактуры.ПометкаУдаления");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Документы.РегистрацияСчетФактуры.ПустаяСсылка();
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Ссылка;
КонецФункции

Функция ОтменаПроведенияСФ(СчетФактура)
	СчФОбъект=СчетФактура.ПолучитьОбъект();
	Попытка
		СчФОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Возврат Истина;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
КонецФункции
//ШиловМВ 11.06.14

//dps+ 0000108471
Процедура ЗаполнитьТипДоговора() Экспорт
	Попытка
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Izh_ТипыДоговоровПоУмолчаниюСрезПоследних.ТипДоговора КАК Тип
		|ИЗ
		|	РегистрСведений.Izh_ТипыДоговоровПоУмолчанию.СрезПоследних(
		|			&Дата,
		|			Контрагент = &Контрагент
		|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|				И Фирма = &Фирма) КАК Izh_ТипыДоговоровПоУмолчаниюСрезПоследних";
		Запрос.УстановитьПараметр("Дата", ЭтотОбъект.Дата);
		Запрос.УстановитьПараметр("Контрагент", ЭтотОбъект.Контрагент);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ЭтотОбъект.СтруктурнаяЕдиница);
		Запрос.УстановитьПараметр("Фирма", ЭтотОбъект.Фирма);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			ЭтотОбъект.ТипДоговора = Результат.Тип;
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры
//dps-