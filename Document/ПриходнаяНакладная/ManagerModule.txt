Функция ПечатьНакладная(МассивОбъектов,ОбъектыПечати) Экспорт
	СтрукРеквизитыШапки = новый Структура();
	СТрукРеквизитыШапки.Вставить("СтруктурнаяЕдиница","Структурная единица");
	СтрукРеквизитыШапки.Вставить("Контрагент","Контрагент");
	СтрукРеквизитыШапки.Вставить("НомерДокумента","№ документа");
	СтрукРеквизитыШапки.Вставить("ДатаДокумента","Дата документа");
	СтрукРеквизитыШапки.Вставить("Приемщик","Приемщик");
	СтрукРеквизитыШапки.Вставить("Грузоотправитель","Грузоотправитель");
	СтрукРеквизитыШапки.Вставить("Грузополучатель","Грузополучатель");
	ВыводитьБезНДС = Не ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов");
	СтрукРеквизитыТабЧасти = новый Структура;
	СтрукРеквизитыТабЧасти.Вставить("НомерСтроки");
	СтрукРеквизитыТабЧасти.Вставить("Номенклатура");
	СтрукРеквизитыТабЧасти.Вставить("ЕдиницаИзмерения");
	СтрукРеквизитыТабЧасти.Вставить("Коэффициент");
	СтрукРеквизитыТабЧасти.Вставить("Количество");
	Если ВыводитьБезНДС Тогда
		СтрукРеквизитыТабЧасти.Вставить("ЦенаБезНДС");
	КонецЕсли;
	СтрукРеквизитыТабЧасти.Вставить("Цена");
	Если ВыводитьБезНДС Тогда
		СтрукРеквизитыТабЧасти.Вставить("СуммаБезНДС",Истина);
	КонецЕсли;
	СтрукРеквизитыТабЧасти.Вставить("СуммаНДС",Истина);
	СтрукРеквизитыТабЧасти.Вставить("Сумма",Истина);
	ТабДок = ОбработкаПечатиСервер.ПечатьНакладнойОбщая(МассивОбъектов,ОбъектыПечати,"Состав",СтрукРеквизитыШапки,СтрукРеквизитыТабЧасти);
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Возврат ТабДок;
КонецФункции

ФУнкция ПечатьТОРГ12(МассивОбъектов,ОбъектыПечати) экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	СтрукРеквизитыШапки = новый Структура();
	СТрукРеквизитыШапки.Вставить("СтруктурнаяЕдиница","СтруктурнаяЕдиница");
	//+Зернятко@27.03.2014 - Изменён порядок передачи даны в процедуру печати. Ключ - ИмяПоля, Значение - путь к реквизиту документа
	//СтрукРеквизитыШапки.Вставить("Контрагент","Поставщик");
	//СтрукРеквизитыШапки.Вставить("Грузополучатель","Грузополучатель");
	//СтрукРеквизитыШапки.Вставить("Грузоотправитель","Грузоотправитель");
	//СтрукРеквизитыШапки.Вставить("Фирма","Покупатель");
	СтрукРеквизитыШапки.Вставить("Поставщик","Контрагент");
	СтрукРеквизитыШапки.Вставить("Грузополучатель","Грузополучатель");
	СтрукРеквизитыШапки.Вставить("Грузоотправитель","Грузоотправитель");
	СтрукРеквизитыШапки.Вставить("Покупатель","Фирма");
 	///Зернятко@27.03.2014 - конец блока
	СтрукРеквизитыТабЧасти = новый Структура;
	СтрукРеквизитыТабЧасти.Вставить("НомерСтроки");
	СтрукРеквизитыТабЧасти.Вставить("Номенклатура");
	СтрукРеквизитыТабЧасти.Вставить("ЕдиницаИзмерения");
	СтрукРеквизитыТабЧасти.Вставить("Количество");
	СтрукРеквизитыТабЧасти.Вставить("Цена");
	СтрукРеквизитыТабЧАсти.Вставить("СтавкаНДС");
	СтрукРеквизитыТабЧасти.Вставить("СуммаНДС",Истина);
	СтрукРеквизитыТабЧасти.Вставить("Сумма",Истина);
	ТабДокумент = ОбработкаПечатиСервер.ПечатьТОРГ12Общая(МассивОБъектов,ОбъектыПечати,"Состав",СтрукРеквизитыШапки,СтрукРеквизитыТабЧасти);
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьТОРГ1(МассивОбъектов,ОбъектыПечати) экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	//Макет = ПолучитьМакет("ТОРГ1");
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПриходнаяНакладная.ТОРГ1");

	НомерСтрокиНачало = 0;
	Для каждого Док из МассивОбъектов цикл
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",Док.Ссылка);
		Запрос.Текст ="ВЫБРАТЬ
		|	ПриходнаяНакладная.Номер КАК НомерДокумента,
		|	ПриходнаяНакладная.Дата КАК ДатаДокумента,
		|	ПриходнаяНакладная.ДатаДокумента КАК ДатаДокументаСопровождения,
		|	ПриходнаяНакладная.НомерДокумента КАК НомерДокументаСопровождения,
		|	ПриходнаяНакладная.Фирма,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница как СтруктурнаяЕдиница, //+Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		|	ПриходнаяНакладная.Фирма КАК ЮрФизЛицо,
		|	ПриходнаяНакладная.Контрагент,
		|	ПриходнаяНакладная.Контрагент КАК Поставщик,
		|	ПриходнаяНакладная.Грузоотправитель КАК Грузоотправитель,
		|	ПриходнаяНакладная.Склад КАК МестоПриемки,
		|	ПриходнаяНакладная.Грузополучатель КАК Грузополучатель,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница,
		|	ПриходнаяНакладная.ДатаСФ КАК ДатаСчетаФактуры,
		|	ПриходнаяНакладная.НомерСФ КАК НомерСчетаФактуры
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("Материал", Перечисления.ВидыТоваров.Материал);
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Док.Ссылка);
		ЗапросПоТоварам.Текст =                    
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.НоменклатураКод,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмеренияНаименование,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмеренияКодПоОКЕИ,
		|	ПриходнаяНакладнаяСостав.Цена,
		|	ПриходнаяНакладнаяСостав.КоличествоФакт,
		|	ПриходнаяНакладнаяСостав.Коэффициент,
		|	ПриходнаяНакладнаяСостав.КоличествоПоставщика,
		|	ПриходнаяНакладнаяСостав.СтоимостьПоставщика,
		|	ПриходнаяНакладнаяСостав.СтоимостьСНДС,
		|	ПриходнаяНакладнаяСостав.СуммаНДС,
		|	ПриходнаяНакладнаяСостав.СтавкаНДС,
		|	ПриходнаяНакладнаяСостав.СтоимостьФакт,
		|	ПриходнаяНакладнаяСостав.ОтклонениеКоличество,
		|	ПриходнаяНакладнаяСостав.ОтклонениеСтоимость,
		|	ПриходнаяНакладнаяСостав.Номенклатура.Наименование КАК ТоварНаименование,
		|	ПриходнаяНакладнаяСостав.НомерСтроки КАК НомерСтроки,
		|	ПриходнаяНакладнаяСостав.Вес
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
		|		ПриходнаяНакладнаяСостав.Номенклатура.Код КАК НоменклатураКод,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование КАК ЕдиницаИзмеренияНаименование,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|		ПриходнаяНакладнаяСостав.Цена КАК Цена,
		|		СУММА(ПриходнаяНакладнаяСостав.Количество) КАК КоличествоФакт,
		|		ПриходнаяНакладнаяСостав.Коэффициент КАК Коэффициент,
		|		СУММА(ПриходнаяНакладнаяСостав.КоличествоПоДокументу) КАК КоличествоПоставщика,
		|		СУММА(ЕСТЬNULL(ПриходнаяНакладнаяСостав.КоличествоПоДокументу, 0) * ЕСТЬNULL(ПриходнаяНакладнаяСостав.Цена, 0)) КАК СтоимостьПоставщика,
		|		СУММА(ПриходнаяНакладнаяСостав.Сумма) КАК СтоимостьСНДС,
		|		СУММА(ПриходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС,
		|		ПриходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДС,
		|		СУММА(ПриходнаяНакладнаяСостав.Сумма) - СУММА(ПриходнаяНакладнаяСостав.СуммаНДС) КАК СтоимостьФакт,
		|		СУММА(ЕСТЬNULL(ПриходнаяНакладнаяСостав.Количество, 0) - ЕСТЬNULL(ПриходнаяНакладнаяСостав.КоличествоПоДокументу, 0)) КАК ОтклонениеКоличество,
		|		СУММА((ЕСТЬNULL(ПриходнаяНакладнаяСостав.Количество, 0) - ЕСТЬNULL(ПриходнаяНакладнаяСостав.КоличествоПоДокументу, 0)) * ЕСТЬNULL(ПриходнаяНакладнаяСостав.Цена, 0)) КАК ОтклонениеСтоимость,
		|		ПриходнаяНакладнаяСостав.НомерСтроки КАК НомерСтроки,
		|		СУММА(ЕСТЬNULL(ПриходнаяНакладнаяСостав.Вес,0)) КАК Вес
		|	ИЗ
		|		Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|	ГДЕ
		|		ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> &Материал
		|		И ПриходнаяНакладнаяСостав.Ссылка = &ТекущийДокумент
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПриходнаяНакладнаяСостав.Номенклатура,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование,
		|		ПриходнаяНакладнаяСостав.Номенклатура.Код,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код,
		|		ПриходнаяНакладнаяСостав.Цена,
		|		ПриходнаяНакладнаяСостав.Коэффициент,
		|		ПриходнаяНакладнаяСостав.СтавкаНДС,
		|		ПриходнаяНакладнаяСостав.НомерСтроки) КАК ПриходнаяНакладнаяСостав
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки" ;
		ВыборкаСтрокТовары = ЗапросПоТоварам.выполнить();
		ТабТоваров = ВыборкаСтрокТовары.Выгрузить();
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ТОРГ1";
		ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
		
		// Выводим общие реквизиты шапки
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		СведенияОПокупателе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.Подразделение = СокрЛП(Шапка.СтруктурнаяЕдиница.Наименование)+", "+СокрЛП(Шапка.МестоПриемки.Наименование);
		//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		//Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента);
		Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента, Шапка.СтруктурнаяЕдиница);
		///Зернятко А.В.@ - конец блока
		ОбластьМакета.Параметры.ФИОРуководителя = Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ДожностьРуководителя = Руководители.РуководительДолжность;
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Введение");
		ОбластьМакета.Параметры.НомерСчетаФактуры = Шапка.НомерСчетаФактуры;
		ОбластьМакета.Параметры.ДатаСчетаФактуры = Шапка.ДатаСчетаФактуры;
		ОбластьМакета.Параметры.ДатаДокумента = Шапка.ДатаДокумента;
		СведенияОМестеПриемки = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.СтруктурнаяЕдиница, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
		ОбластьМакета.Параметры.МестоПриемки = ""+СведенияОМестеПриемки.ФактическийАдрес;
		ОбластьМакета.Параметры.СопроводительныеДокументы = "сопроводительный документ № "
		+ Шапка.НомерДокументаСопровождения + " от " + Формат(Шапка.ДатаДокументаСопровождения, "ДФ='дд ММММ гггг'");
		
		Если ЗначениеЗаполнено(Шапка.Контрагент) Тогда
			СведенияОПоставщике = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
			ОбластьМакета.Параметры.Поставщик = ""+СведенияОПоставщике.ПолноеНаименование+" "+СведенияОПоставщике.ЮридическийАДрес+" "+СведенияОпоставщике.Телефоны;
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.Грузоотправитель) тогда
			СведенияОГрузоотправителе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель,Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
			ОбластьМакета.Параметры.Грузоотправитель = ""+СведенияОГрузоотправителе.ПолноеНаименование+" "+СВеденияОГрузоотправителе.ЮридическийАдрес+" "+СведенияОГрузоотправителе.Телефоны;
		Иначе
			ОбластьМакета.Параметры.Грузоотправитель = ""+СведенияОПоставщике.ПолноеНаименование+" "+СведенияОПоставщике.ЮридическийАДрес+" "+СведенияОпоставщике.Телефоны;
		КОнецесли;
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("ТаблицаВремени");
		СтрокНаСтранице = 20;
		СтрокШапки      = 4;
		СтрокПодвала    = 0;
		НомерСтраницы   = 1;
		ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
		ТабДокумент.Вывести(ОбластьМакета);
		КоличествоСтрок = ВыборкаСтрокТовары.Выгрузить().Количество();
		Табдокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Область = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		Область.Параметры.НомерЛиста = "Страница " + НомерСтраницы; 
		НомерСтраницы = НомерСтраницы +1;
		ТабДокумент.Вывести(Область);
		Ном  = 0;
		ИтогоСтоимостьПоставщика = 0;
		ИтогоСтоимостьПоставщикасТр = 0;
		ВыборкаПоТоварам = ВыборкаСтрокТовары.Выбрать();
		СтрокШапки = 5;
		СтрокНаСтранице = 20;
		Ном = 0;
		ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
		
		Пока ВыборкаПоТоварам.Следующий() цикл    
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) тогда
				Область = Макет.ПолучитьОбласть("Итого");
				Область.Параметры.ИтогоСтр = "Итого:";
				Область.параметры.ИтогоСтоимостьПоставщика = ИтогоСтоимостьПоставщикаСтр;
				ТабДокумент.Вывести(Область);
				Область = Макет.ПолучитьОбласть("Примечание");
				ТабДокумент.Вывести(Область);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Область = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
				Область.Параметры.Номерлиста = "Страница " + НомерСтраницы; 
				ТабДокумент.Вывести(Область);
				НомерСтраницы = НомерСтраницы + 1;
			Конецесли;
			Область = Макет.ПолучитьОбласть("СтрокаТовара");
			Ном = Ном + 1;
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			Область.Параметры.Цена = ВыборкаПоТоварам.Цена;
			СтоимостьПоставщика = ВыборкаПоТоварам.СтоимостьПоставщика;
			Область.Параметры.СтоимостьПоставщика = СтоимостьПоставщика;
			Область = ТабДокумент.вывести(Область);
			ИтогоСтоимостьПоставщикаСтр = итогоСтоимостьПоставщикаСтр+СтоимостьПоставщика;
			ИтогоСтоимостьПоставщика = ИтогоСтоимостьПоставщика + СтоимостьПоставщика;
		Конеццикла;
		Область = Макет.ПолучитьОбласть("Итого");
		Область.Параметры.ИтогоСтр = "Итого:";
		Область.Параметры.ИтогоСтоимостьПоставщика = ИтогоСтоимостьПоставщикаСтр;
		ТабДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("Итого");
		Область.Параметры.ИтогоСтр = "Всего по акту:";
		Область.Параметры.ИтогоСтоимостьПОставщика = ИтогоСТоимостьПоставщика;
		ТабДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("Примечание");
		ТабДокумент.Вывести(Область);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		НомерСтраницы2 = 1;
		Ном = 0;
		Область= Макет.ПолучитьОбласть("ЗаголовокТаблицы2");
		Область.Параметры.НомерЛиста2 = "Страница " + НомерСтраницы2;
		ТабДокумент.Вывести(Область);
		ИтогоОтклонениеСтоимость = 0;
		ИтогоСтоимостьФакт = 0;
		ИтогоСтоимостьСНДС = 0 ;
		итогоСуммаНДС = 0;
		ИтогоОтклонениеСтоимостьСтр = 0;
		ИтогоСтоимостьФактСтр = 0;
		ИтогоСтоимостьСНДССтр = 0 ;
		итогоСуммаНДССтр = 0;
		
		ВЫборкаПоТоварам = ВыборкаСтрокТовары.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() цикл
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) тогда
				Область = Макет.ПолучитьОбласть("Итого2");
				Область.Параметры.ИтогоОтклонениеСтоимость = ИтогоОтклонениеСтоимостьСТр;
				Область.Параметры.ИтогоСтоимостьФакт = ИтогоСтоимостьФактСтр;
				Область.Параметры.ИтогоСтоимостьСНДС = ИтогоСТоимостьСНДСстр;
				Область.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДССтр;
				ТабДокумент.Вывести(Область);
				Область = Макет.ПолучитьОбласть("Примечание2");
				ТабДокумент.Вывести(Область);
				Область = Макет.ПолучитьОбласть("Заголовоктаблицы2");
				НомерСтраницы2 = НомерСтраницы2+1;
				Область.Параметры.НомерЛиста2 = "Страница " + НомерСтраницы2;
				ТабДокумент.Вывести(Область);
				ИтогоОтклонениеСтоимостьСтр = 0;
				ИтогоСтоимостьФактСтр = 0;
				ИтогоСтоимостьСНДССтр = 0 ;
				ИтогоСуммаНДССтр = 0;
			Конецесли;
			
			Ном = Ном + 1;
			Область = Макет.получитьОбласть("СтрокаТовара2");	
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			ОтклонениеСтоимость = ВыборкаПоТоварам.ОтклонениеСтоимость;
			СтоимостьФакт  = ВыборкаПоТоварам.СтоимостьФакт;
			СтоимостьСНДС = ВыборкаПоТоварам.СтоимостьСНДС;
			СуммаНДС = ВыборкаПоТоварам.СуммаНДС;
			Область.Параметры.ОтклонениеСтоимость = ОтклонениеСтоимость;
			Область.Параметры.СтоимостьФакт = СтоимостьФакт;
			Область.Параметры.СтоимостьСНДС = СТоимостьСНДС;
			Область.Параметры.СуммаНДС = СУммаНДС;
			ТабДокумент.вывести(Область);
			ИтогоОтклонениеСтоимостьСТр = ИтогоОтклонениеСтоимостьСТр + ОтклонениеСтоимость;
			ИтогоСтоимостьФактСтр = ИтогоСтоимостьФактСТр + СтоимостьФакт;
			ИтогоСтоимостьСНДССТр = ИтогоСТоимостьСНДССтр + стоимостьСНДС;
			ИтогоСуммаНДССтр = ИтогоСУммаНДССТр + СуммаНДС;
			ИтогоОтклонениеСтоимость= ИтогоОтклонениеСтоимость + ОтклонениеСтоимость;
			ИтогоСтоимостьФакт = ИтогоСтоимостьФакт + СтоимостьФакт;
			ИтогоСтоимостьСНДС = ИтогоСТоимостьСНДС + стоимостьСНДС;
			ИтогоСуммаНДС = ИтогоСУммаНДС + СуммаНДС;
			
		КонецЦикла;
		Область = Макет.ПолучитьОбласть("Итого2");
		Область.Параметры.ИтогоОтклонениеСтоимость = ИтогоОтклонениеСтоимостьСТр;
		Область.Параметры.ИтогоСтоимостьФакт = ИтогоСтоимостьФактСтр;
		Область.Параметры.ИтогоСтоимостьСНДС = ИтогоСТоимостьСНДСстр;
		Область.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДССтр;
		ТабДокумент.вывести(Область);
		Область = Макет.ПолучитьОбласть("Итого2");
		Область.Параметры.ИтогоОтклонениеСтоимость = ИтогоОтклонениеСтоимость;
		Область.Параметры.ИтогоСтоимостьФакт = ИтогоСтоимостьФакт;
		Область.Параметры.ИтогоСтоимостьСНДС = ИтогоСТоимостьСНДС;
		Область.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДС;
		ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
		
		ТабДокумент.вывести(Область);
		Область = Макет.ПолучитьОбласть("Примечание2");
		ТабДокумент.Вывести(Область);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.ГлавныйБухгалтерФИО = Руководители.ФИОГлавногоБухгалтера;
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
		ТабДокумент.Вывести(ОбластьМакета);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы+1;
	КонецЦикла;
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьТОРГ2(МассивОбъектов,ОбъектыПечати) экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	//Макет = ПолучитьМакет("ТОРГ2");
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПриходнаяНакладная.ТОРГ2");
	НомерСтрокиНачало = 0;
	Для каждого Док из МассивОбъектов цикл
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",Док.Ссылка);
		Запрос.Текст ="ВЫБРАТЬ
		|	ПриходнаяНакладная.Номер КАК НомерДокумента,
		|	ПриходнаяНакладная.Дата КАК ДатаДокумента,
		|	ПриходнаяНакладная.ДатаДокумента КАК ДатаДокументаСопровождения,
		|	ПриходнаяНакладная.НомерДокумента КАК НомерДокументаСопровождения,
		|	ПриходнаяНакладная.Фирма,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница как СтруктурнаяЕдиница, //+Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		|	ПриходнаяНакладная.Фирма КАК ЮрФизЛицо,
		|	ПриходнаяНакладная.Контрагент,
		|	ПриходнаяНакладная.Контрагент КАК Поставщик,
		|	ПриходнаяНакладная.Грузоотправитель КАК Грузоотправитель,
		|	ПриходнаяНакладная.Склад КАК МестоПриемки,
		|	ПриходнаяНакладная.Грузополучатель КАК Грузополучатель,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("Материал", Перечисления.ВидыТоваров.Материал);
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Док.Ссылка);
		ЗапросПоТоварам.УстановитьПараметр("Россия",Справочники.КлассификаторСтранМира.РОССИЯ);
		ЗапросПоТоварам.УстановитьПараметр("ПустаяСтранаПроисхождения",Справочники.КлассификаторСтранМира.ПустаяСсылка());
		ЗапросПоТоварам.Текст = 
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара КАК ВидТовара,
		|	ПриходнаяНакладнаяСостав.Номенклатура.Наименование КАК ТоварНаименование,
		|	ПриходнаяНакладнаяСостав.Номенклатура.Код КАК ТоварКод,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование КАК ЕдиницаИзмеренияНаименование,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|	ПриходнаяНакладнаяСостав.Коэффициент КАК КоличествоВОдномМесте,
		|	ПриходнаяНакладнаяСостав.Цена,
		|	ПриходнаяНакладнаяСостав.СтоимостьПоставщика,
		|	ПриходнаяНакладнаяСостав.КоличествоФакт,
		|	ПриходнаяНакладнаяСостав.СтоимостьФакт,
		|	ПриходнаяНакладнаяСостав.КоличествоПоставщика,
		|	ПриходнаяНакладнаяСостав.КоличествоИзлишек,
		|	ПриходнаяНакладнаяСостав.СтоимостьИзлишек,
		|	ПриходнаяНакладнаяСостав.КоличествоНедостача,
		|	ПриходнаяНакладнаяСостав.СтоимостьНедостача,
		|	ПриходнаяНакладнаяСостав.НомерСтроки КАК НомерСтроки,
		|	НоменклатураКонтрагента.Артикул КАК ТоварАртикул
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПриходнаяНакладная.Номенклатура КАК Номенклатура,
		|		СУММА(ПриходнаяНакладная.КоличествоПоДокументу) КАК КоличествоПоставщика,
		|		СУММА(ПриходнаяНакладная.Количество) КАК КоличествоФакт,
		|		ПриходнаяНакладная.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		ПриходнаяНакладная.Коэффициент КАК Коэффициент,
		|		ВЫБОР
		|			КОГДА ПриходнаяНакладная.Количество = 0
		|				ТОГДА ПриходнаяНакладная.Сумма
		|			ИНАЧЕ ПриходнаяНакладная.Сумма / ПриходнаяНакладная.Количество
		|		КОНЕЦ КАК Цена,
		|		СУММА(ПриходнаяНакладная.Сумма) КАК СтоимостьФакт,
		|		СУММА(ВЫБОР
		|				КОГДА ПриходнаяНакладная.Количество - ПриходнаяНакладная.КоличествоПоДокументу > 0
		|					ТОГДА ПриходнаяНакладная.Количество - ПриходнаяНакладная.КоличествоПоДокументу
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК КоличествоИзлишек,
		|		СУММА(ВЫБОР
		|				КОГДА ПриходнаяНакладная.Количество - ПриходнаяНакладная.КоличествоПоДокументу > 0
		|					ТОГДА (ПриходнаяНакладная.Количество - ПриходнаяНакладная.КоличествоПоДокументу) * ВЫБОР
		|							КОГДА ПриходнаяНакладная.Количество = 0
		|								ТОГДА ПриходнаяНакладная.Сумма
		|							ИНАЧЕ ПриходнаяНакладная.Сумма / ПриходнаяНакладная.Количество
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК СтоимостьИзлишек,
		|		СУММА(ВЫБОР
		|				КОГДА ПриходнаяНакладная.КоличествоПоДокументу - ПриходнаяНакладная.Количество > 0
		|					ТОГДА ПриходнаяНакладная.КоличествоПоДокументу - ПриходнаяНакладная.Количество
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК КоличествоНедостача,
		|		СУММА(ВЫБОР
		|				КОГДА ПриходнаяНакладная.КоличествоПоДокументу - ПриходнаяНакладная.Количество > 0
		|					ТОГДА (ПриходнаяНакладная.КоличествоПоДокументу - ПриходнаяНакладная.Количество) * ВЫБОР
		|							КОГДА ПриходнаяНакладная.Количество = 0
		|								ТОГДА ПриходнаяНакладная.Сумма
		|							ИНАЧЕ ПриходнаяНакладная.Сумма / ПриходнаяНакладная.Количество
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК СтоимостьНедостача,
		|		СУММА(ПриходнаяНакладная.КоличествоПоДокументу * ВЫБОР
		|				КОГДА ПриходнаяНакладная.Количество = 0
		|					ТОГДА ПриходнаяНакладная.Сумма
		|				ИНАЧЕ ПриходнаяНакладная.Сумма / ПриходнаяНакладная.Количество
		|			КОНЕЦ) КАК СтоимостьПоставщика,
		|		ПриходнаяНакладная.НомерСтроки КАК НомерСтроки,
		|		ПриходнаяНакладная.Ссылка.Контрагент КАК Контрагент
		|	ИЗ
		|		Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладная
		|	ГДЕ
		|		ПриходнаяНакладная.Ссылка = &ТекущийДокумент
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПриходнаяНакладная.Номенклатура,
		|		ПриходнаяНакладная.ЕдиницаИзмерения,
		|		ПриходнаяНакладная.Коэффициент,
		|		ПриходнаяНакладная.НомерСтроки,
		|		ВЫБОР
		|			КОГДА ПриходнаяНакладная.Количество = 0
		|				ТОГДА ПриходнаяНакладная.Сумма
		|			ИНАЧЕ ПриходнаяНакладная.Сумма / ПриходнаяНакладная.Количество
		|		КОНЕЦ,
		|		ПриходнаяНакладная.Ссылка.Контрагент) КАК ПриходнаяНакладнаяСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|		ПО ПриходнаяНакладнаяСостав.Номенклатура = НоменклатураКонтрагента.Номенклатура
		|			И ПриходнаяНакладнаяСостав.Контрагент = НоменклатураКонтрагента.Контрагент
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> &Материал
		|	И ПриходнаяНакладнаяСостав.КоличествоФакт <> ПриходнаяНакладнаяСостав.КоличествоПоставщика
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить();
		ТаблицаСтрокТовары = ВыборкаСтрокТовары.Выгрузить();
		ВыборкаСтрокТовары = ВыборкаСтрокТовары.Выбрать();
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ТОРГ2";
		ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
		
		// Выводим общие реквизиты шапки
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		СведенияОПокупателе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.Подразделение = СокрЛП(Шапка.СтруктурнаяЕдиница.Наименование)+", "+СокрЛП(Шапка.МестоПриемки.Наименование);
		//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		//Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента);
		Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента, Шапка.СтруктурнаяЕдиница);
		///Зернятко А.В.@ - конец блока
		ОбластьМакета.Параметры.ФИОРуководителя = Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ДожностьРуководителя = Руководители.РуководительДолжность;
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Введение");
		ОбластьМакета.Параметры.ДатаДокумента = Шапка.ДатаДокумента;
		ОбластьМакета.Параметры.СопроводительныеДокументы = "сопроводительный документ № "
		+ Шапка.НомерДокументаСопровождения + " от " + Формат(Шапка.ДатаДокументаСопровождения, "ДФ='дд ММММ гггг'");
		Если ЗначениеЗаполнено(Шапка.Контрагент) Тогда
			СведенияОПоставщике = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
			ОбластьМакета.Параметры.Поставщик = ""+СведенияОПоставщике.ПолноеНаименование+" "+СведенияОПоставщике.ЮридическийАДрес+" "+СведенияОпоставщике.Телефоны;
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.Грузоотправитель) тогда
			СведенияОГрузоотправителе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель,Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
			ОбластьМакета.Параметры.Грузоотправитель = ""+СведенияОГрузоотправителе.ПолноеНаименование+" "+СВеденияОГрузоотправителе.ЮридическийАдрес+" "+СведенияОГрузоотправителе.Телефоны;
		КОнецесли;
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("ТаблицаВремени");
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("СведенияОТоваре");
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокШапки = 4;
		СтрокНаСтранице = 20;
		Ном = 0;
		НомерСтраницы   = 1;
		СтрокПодвала = 0;
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		//ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		// инициализация итогов по документу
		ИтогоСтоимостьПоставщик   = 0;
		ИтогоСтоимостьПоставщикСтр = 0;
		// Выводим многострочную часть докмента
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТовара");
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
			
			//Начинаем новую страницу, если предыдущая строка была последней на странице
			//или пора переносить последнюю строку на последнюю страницу с подвалом.
			
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) тогда
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				//ЗаголовокТаблицы.Параметры.НомерСтраницы = НомерСтраницы;
				ОбластьИтого = Макет.ПолучитьОбласть("Итого");
				ОбластьИтого.Параметры.ИтогоСтоимостьПОставщика = ИтогоСтоимостьПОставщикСтр;
				ТабДокумент.ВЫвести(ОбластьИтого);
				ТабДокумент.Вывести(ЗаголовокТаблицы);     ИтогоСТоимостьПОставщикСтр = 0;
			КонецЕсли;
			
			Ном = Ном + 1;
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			//Если ЗначениеЗаполнено(ВыборкаСтрокТовары.Содержание) Тогда
			//	ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.Содержание; 
			//КонецЕсли;	
			ОбластьМакета.Параметры.Цена = ВыборкаСтрокТовары.Цена;
			ОбластьМакета.Параметры.СтоимостьПоставщика = ВыборкаСтрокТовары.СтоимостьПоставщика;
			ТабДокумент.Вывести(ОбластьМакета);
			СтоимостьПоставщика = 
			ИтогоСтоимостьПоставщикСтр = ИтогоСтоимостьПоставщикСтр +ВыборкаСтрокТовары.СтоимостьПоставщика;
			ИтогоСтоимостьПоставщик = ИтогоСтоимостьПОставщик + ВыборкаСтрокТовары.СтоимостьПоставщика;
		КонецЦикла;
		
		// Выводим итоги по документу в общем
		Если ТаблицаСтрокТовары.Количество() >1 тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			ОбластьМакета.Параметры.ИтогоСтоимостьПОставщика = ИтогоСтоимостьПОставщикСтр;
			ОбластьМакета.Параметры.ИтогоСтр = "Итого:";
			ТабДокумент.Вывести(ОбластьМакета);
		Конецесли;
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.ИтогоСтр = "Итого по акту:";
		ОбластьМакета.Параметры.ИтогоСтоимостьПОставщика = ИтогоСтоимостьПОставщикСтр;
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("УсловияХранения");
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокНаСтранице = 20;
		СтрокШапки      = 5;
		СтрокПодвала    = 0;
		
		ИтогоСтоимостьФакт = 0;
		ИтогоСтоимостьНедостача = 0;
		ИтогоСтоимостьИзлишек = 0;
		ИтогоСтоимостьФактСтр = 0;
		ИтогоСтоимостьНедостачаСТр = 0;
		ИтогоСтоимостьИзлишекСтр = 0;
		
		Ном = 0;
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы2");
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		КоличествоСтрок = ТаблицаСтрокТовары.Количество();
		// Выводим вторую многострочную часть докмента
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТовара2");
		ВыборкаСтрокТовары.Сбросить();
		ВыборкаСтрокТовары.Выбрать();
		
		Пока ВыборкаСтрокТовары.Следующий() цикл  
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				//или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) 
				Тогда
				
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьИтог = Макет.ПолучитьОбласть("Итого2");
				ОбластьИтог.Параметры.ИтогоСтоимостьФакт = ИтогоСтоимостьфактСтр;
				ОбластьИтог.Параметры.ИтогоСтоимостьИзлишек = ИтогоСтоимостьИзлишекСтр;
				ОбластьИтог.Параметры.итогоСтоимостьНедостача = ИтогоСТоимостьНедостачаСтр;
				ТабДокумент.Вывести(ОбластьИтог);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				ИтогоСтоимостьФактСтр = 0;
				ИтогоСтоимостьИзлишекСтр = 0;
				ИтогоСТоимостьНедостачаСтр = 0;
			КонецЕсли;
			Ном = ном +1;
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			цена = ВыборкаСтрокТовары.Цена;
			СтоимостьфАкт = ВыборкаСтрокТовары.СтоимостьФакт;
			СТоимостьНедостача = ВыборкаСтрокТовары.СТоимостьНедостача;
			СТоимостьИзлишек = ВыборкаСтрокТовары.СтоимостьИзлишек;
			ОбластьМакета.Параметры.Цена = Цена;
			ОбластьМакета.Параметры.Стоимостьфакт = СТоимостьфакт;
			Областьмакета.Параметры.СтоимостьНедостача = СТоимостьНедостача;
			ОбластьМакета.Параметры.СтоимостьИзлишек = СтоимостьИзлишек
			;
			ТабДокумент.Вывести(ОбластьМакета);
			ИтогоСтоимостьФакт = ИтогоСтоимостьФакт + СтоимостьФакт;
			ИтогоСтоимостьНедостача = ИтогоСтоимостьНедостача + СтоимостьНедостача;
			ИтогоСтоимостьИзлишек = ИтогоСТоимостьИзлишек + СтоимостьИзлишек;
			ИтогоСтоимостьФактСтр = ИтогоСтоимостьФактСтр + СтоимостьФакт;
			ИтогоСтоимостьНедостачаСтр = ИтогоСтоимостьНедостачаСтр + СтоимостьНедостача;
			ИтогоСтоимостьИзлишекСтр = ИтогоСТоимостьИзлишекСтр + СтоимостьИзлишек;
			
		КонецЦикла;
		ОбластьИтог = Макет.ПолучитьОбласть("Итого2");
		ОбластьИтог.Параметры.ИтогоСтр = "Итого:";
		ОбластьИтог.Параметры.ИтогоСтоимостьФакт = ИтогоСтоимостьфактСтр;
		ОбластьИтог.Параметры.ИтогоСтоимостьИзлишек = ИтогоСтоимостьИзлишекСтр;
		ОбластьИтог.Параметры.итогоСтоимостьНедостача = ИтогоСТоимостьНедостача;
		ТабДокумент.Вывести(ОбластьИтог);
		ОбластьИтог = Макет.ПолучитьОбласть("Итого2");
		ОбластьИтог.Параметры.ИтогоСтр = "Итого по акту:";
		ОбластьИтог.Параметры.ИтогоСтоимостьФакт = ИтогоСтоимостьфакт;
		ОбластьИтог.Параметры.ИтогоСтоимостьИзлишек = ИтогоСтоимостьИзлишек;
		ОбластьИтог.Параметры.итогоСтоимостьНедостача = ИтогоСТоимостьНедостача;
		ТабДокумент.Вывести(ОбластьИтог);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ГлавныйБухгалтерФИО = Руководители.ФИОГлавногоБухгалтера;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Зададим параметры макета
		ТабДокумент.ПолеСверху = 10;
		ТабДокумент.ПолеСлева = 15;
		ТабДокумент.ПолеСнизу = 10;
		ТабДокумент.ПолеСправа = 10;
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы+1;
	КонецЦикла;
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьТОРГ3(МассивОбъектов,ОбъектыПечати) экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	//Макет = ПолучитьМакет("ТОРГ3");
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПриходнаяНакладная.ТОРГ3");
	НомерСтрокиНачало = 0;
	Для каждого Док из МассивОбъектов цикл
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",Док.Ссылка);
		Запрос.Текст ="ВЫБРАТЬ
		|	ПриходнаяНакладная.Номер КАК Номер,
		|	ПриходнаяНакладная.Дата КАК ДатаДокумента,
		|	ПриходнаяНакладная.ДатаДокумента КАК ДатаДокументаСопровождения,
		|	ПриходнаяНакладная.НомерДокумента КАК НомерДокументаСопровождения,
		|	ПриходнаяНакладная.Фирма,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница как СтруктурнаяЕдиница, //+Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		|	ПриходнаяНакладная.Фирма КАК ЮрФизЛицо,
		|	ПриходнаяНакладная.Фирма КАК Руководители,
		|	ПриходнаяНакладная.Контрагент,
		|	ПриходнаяНакладная.Контрагент КАК Поставщик,
		|	ВЫБОР
		|		КОГДА ПриходнаяНакладная.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ПриходнаяНакладная.Контрагент
		|		ИНАЧЕ ПриходнаяНакладная.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	ПриходнаяНакладная.Склад КАК МестоПриемки,
		|	ПриходнаяНакладная.Грузоотправитель КАК Грузоотправитель1,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("Материал", Перечисления.ВидыТоваров.Материал);
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Док.Ссылка);
		ЗапросПоТоварам.Текст = 
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.НоменклатураКод КАК НоменклатураКод,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмеренияКодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|	ПриходнаяНакладнаяСостав.КоличествоИзлишек,
		|	ПриходнаяНакладнаяСостав.КоличествоНедостача,
		|	ПриходнаяНакладнаяСостав.КоличествоФакт,
		|	ПриходнаяНакладнаяСостав.КоличествоПоставщика,
		|	ПриходнаяНакладнаяСостав.Номенклатура.Наименование КАК ТоварНаименование,
		|	ПриходнаяНакладнаяСостав.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
		|		ПриходнаяНакладнаяСостав.Номенклатура.Код КАК НоменклатураКод,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование КАК ЕдиницаИзмеренияНаименование,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|		СУММА(ПриходнаяНакладнаяСостав.Количество) КАК КоличествоФакт,
		|		СУММА(ПриходнаяНакладнаяСостав.КоличествоПоДокументу) КАК КоличествоПоставщика,
		|		СУММА(ВЫБОР
		|				КОГДА ПриходнаяНакладнаяСостав.КоличествоПоДокументу - ПриходнаяНакладнаяСостав.Количество > 0
		|					ТОГДА ПриходнаяНакладнаяСостав.КоличествоПоДокументу - ПриходнаяНакладнаяСостав.Количество
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК КоличествоНедостача,
		|		СУММА(ВЫБОР
		|				КОГДА ПриходнаяНакладнаяСостав.КоличествоПоДокументу - ПриходнаяНакладнаяСостав.Количество < 0
		|					ТОГДА -1 * (ПриходнаяНакладнаяСостав.КоличествоПоДокументу - ПриходнаяНакладнаяСостав.Количество)
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК КоличествоИзлишек,
		|		ПриходнаяНакладнаяСостав.НомерСтроки КАК НомерСтроки
		|	ИЗ
		|		Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|	ГДЕ
		|		ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> &Материал
		|		И ПриходнаяНакладнаяСостав.Ссылка = &ТекущийДокумент
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПриходнаяНакладнаяСостав.Номенклатура,
		|		ПриходнаяНакладнаяСостав.Номенклатура.Код,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код,
		|		ПриходнаяНакладнаяСостав.НомерСтроки) КАК ПриходнаяНакладнаяСостав
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.КоличествоФакт <> ПриходнаяНакладнаяСостав.КоличествоПоставщика
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки" ;
		ВыборкаСтрокТовары = ЗапросПоТоварам.выполнить().Выбрать();
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ТОРГ3";
		ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
		
		// Выводим общие реквизиты шапки
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		СведенияОПокупателе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.Подразделение = СокрЛП(Шапка.СтруктурнаяЕдиница.Наименование)+", "+СокрЛП(Шапка.МестоПриемки.Наименование);
		//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		//Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента);
		Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента, Шапка.СтруктурнаяЕдиница);
		///Зернятко А.В.@ - конец блока
		ОбластьМакета.Параметры.ФИОРуководителя = Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ДожностьРуководителя = Руководители.РуководительДолжность;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Введение");
		ОбластьМакета.Параметры.ДатаДокумента = Шапка.ДатаДокумента;
		ОбластьМакета.Параметры.МестоПриемки = Шапка.МестоПриемки;
		ОбластьМакета.Параметры.СопроводительныеДокументы = "сопроводительный документ № "
		+ Шапка.НомерДокументаСопровождения + " от " + Формат(Шапка.ДатаДокументаСопровождения, "ДФ='дд ММММ гггг'");
		Если ЗначениеЗаполнено(Шапка.Контрагент) Тогда
			СведенияОПоставщике = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
			ОбластьМакета.Параметры.Поставщик = ""+СведенияОПоставщике.ПолноеНаименование+" "+СведенияОПоставщике.ЮридическийАДрес+" "+СведенияОпоставщике.Телефоны;
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.Грузоотправитель) тогда
			СведенияОГрузоотправителе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель,Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
			ОбластьМакета.Параметры.Грузоотправитель = ""+СведенияОГрузоотправителе.ПолноеНаименование+" "+СВеденияОГрузоотправителе.ЮридическийАдрес+" "+СведенияОГрузоотправителе.Телефоны;
		КОнецесли;
		
		ОбластьМакета.Параметры.ФИОРуководителя = Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ДожностьРуководителя = Руководители.РуководительДолжность;
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("Лист2ФиксЧасть");
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		СтрокНаСтранице = 20;
		СтрокШапки = 4;
		СтрокПодвала    = 0;
		НомерСтраницы   = 0;
		
		Ном = 0;	
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.вывести(ОбластьМакета);
		Пока ВыборкаСтрокТовары.Следующий() цикл
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
				ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
				НомерСтраницы = НомерСтраницы + 1;
				//ОбластьМакета.Параметры.НомерЛиста = НомерСтраницы;
				ТабДокумент.вывести(ОбластьМакета);
			Конецесли;
			Ном = Ном+1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строкатаблицы");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтроктовары);
			ТабДокумент.Вывести(ОбластьМакета);
		Конеццикла;
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы2");
		ТабДокумент.вывести(ОбластьМакета);
		ВыборкаСтрокТовары.Сбросить();
		НомерСтраницы2 = 0;
		Ном = 0;
		Пока ВыборкаСтрокТовары.Следующий() цикл
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы2");
				НомерСтраницы2 = НомерСтраницы2 + 1;
				//ОбластьМакета.Параметры.НомерЛиста2 = НомерСтраницы2;
				ТабДокумент.вывести(ОбластьМакета);
			Конецесли;
			Ном = Ном+1;
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы2");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			Табдокумент.Вывести(ОбластьМакета);
		конеццикла;
		Табдокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("Лист4");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ГлавныйБухгалтерФИО = Руководители.ФИОГлавногоБухгалтера;
		ТабДокумент.Вывести(ОбластьМакета);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы+1;
	КонецЦикла;
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьТОРГ4(МассивОбъектов,ОбъектыПечати) экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	//Макет = ПолучитьМакет("ТОРГ4");
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПриходнаяНакладная.ТОРГ4");
	НомерСтрокиНачало = 0;
	Для каждого Док из МассивОбъектов цикл
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",Док.Ссылка);
		Запрос.Текст ="ВЫБРАТЬ
		|	ПриходнаяНакладная.Номер КАК НомерДокумента,
		|	ПриходнаяНакладная.Дата КАК ДатаДокумента,
		|	ПриходнаяНакладная.ДатаДокумента КАК ДатаДокументаСопровождения,
		|	ПриходнаяНакладная.НомерДокумента КАК НомерДокументаСопровождения,
		|	ПриходнаяНакладная.Фирма,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница как СтруктурнаяЕдиница, //+Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		|	ПриходнаяНакладная.Фирма КАК ЮрФизЛицо,
		|	ПриходнаяНакладная.Фирма КАК Руководители,
		|	ПриходнаяНакладная.Контрагент,
		|	ПриходнаяНакладная.Контрагент КАК Поставщик,
		|	ВЫБОР
		|		КОГДА ПриходнаяНакладная.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ПриходнаяНакладная.Контрагент
		|		ИНАЧЕ ПриходнаяНакладная.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	ПриходнаяНакладная.Склад КАК МестоПриемки,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Док.Ссылка);
		ЗапросПоТоварам.УстановитьПараметр("Материал", Перечисления.ВидыТоваров.Материал);
		ЗапросПоТоварам.УстановитьПараметр("Услуга",Перечисления.ВидыТоваров.Услуга);
		ЗапросПоТоварам.Текст = 
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.НоменклатураКод,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмеренияНаименование,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмеренияКодПоОКЕИ,
		|	ПриходнаяНакладнаяСостав.Цена,
		|	ПриходнаяНакладнаяСостав.СтавкаНДС,
		|	ПриходнаяНакладнаяСостав.СуммаНДС,
		|	ПриходнаяНакладнаяСостав.КоличествоФакт,
		|	ПриходнаяНакладнаяСостав.СтоимостьСНДС,
		|	ПриходнаяНакладнаяСостав.СтоимостьФакт,
		|	ПриходнаяНакладнаяСостав.КоличествоВОдномМесте,
		|	ПриходнаяНакладнаяСостав.Номенклатура.Наименование КАК ТоварНаименование,
		|	ПриходнаяНакладнаяСостав.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПриходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
		|		ПриходнаяНакладнаяСостав.Номенклатура.Код КАК НоменклатураКод,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование КАК ЕдиницаИзмеренияНаименование,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|		ПриходнаяНакладнаяСостав.Цена КАК Цена,
		|		ПриходнаяНакладнаяСостав.СтавкаНДС КАК СтавкаНДС,
		|		СУММА(ПриходнаяНакладнаяСостав.СуммаНДС) КАК СуммаНДС,
		|		СУММА(ПриходнаяНакладнаяСостав.Количество) КАК КоличествоФакт,
		|		СУММА(ПриходнаяНакладнаяСостав.Сумма) КАК СтоимостьСНДС,
		|		СУММА(ПриходнаяНакладнаяСостав.Сумма)-СУММА(ПриходнаяНакладнаяСостав.СуммаНДС) КАК СтоимостьФакт,
		|		СУММА(ПриходнаяНакладнаяСостав.КоличествоПоДокументу * ПриходнаяНакладнаяСостав.Цена) КАК СтоимостьПоставщика,
		|		ПриходнаяНакладнаяСостав.Коэффициент КАК КоличествоВОдномМесте,
		|		ПриходнаяНакладнаяСостав.НомерСтроки КАК НомерСтроки
		|	ИЗ
		|		Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|	ГДЕ
		|		ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> &Материал
		|		И ПриходнаяНакладнаяСостав.Ссылка = &ТекущийДокумент
		|		И ПриходнаяНакладнаяСостав.Номенклатура.ВидТовара <> &Услуга
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПриходнаяНакладнаяСостав.Номенклатура,
		|		ПриходнаяНакладнаяСостав.Номенклатура.Код,
		|		ПриходнаяНакладнаяСостав.Цена,
		|		ПриходнаяНакладнаяСостав.СтавкаНДС,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование,
		|		ПриходнаяНакладнаяСостав.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код,
		|		ПриходнаяНакладнаяСостав.Коэффициент,
		|		ПриходнаяНакладнаяСостав.НомерСтроки) КАК ПриходнаяНакладнаяСостав
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки" ;
		ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ТОРГ4";
		
		// Выводим общие реквизиты шапки
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		Если ЗначениеЗаполнено(Шапка.Контрагент) Тогда
			СведенияОПоставщике = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
			ОбластьМакета.Параметры.ПредставлениеПоставщика       = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПоставщике);
			ОбластьМакета.Параметры.ОписаниеПоставщика            = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
			ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ПочтовыйАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			СведенияОГрузоотправителе = СведенияОПоставщике;
			Если Не Шапка.Грузоотправитель.Пустая() Тогда
				СведенияОГрузоотправителе                = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
				ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОГрузоотправителе,
				"ПолноеНаименование,ПочтовыйАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			КонецЕсли;
			ОбластьМакета.Параметры.ПоставщикПоОКПО               = СведенияОПоставщике.КодПоОКПО;		
		КонецЕсли;
		СведенияОПокупателе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента,Шапка.Структурнаяединица);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.ПредставлениеПодразделения = СокрЛП(Шапка.СтруктурнаяЕдиница.Наименование)+", "+СокрЛП(Шапка.МестоПриемки.Наименование);
		//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		//Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента);
		Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента, Шапка.СтруктурнаяЕдиница);
		///Зернятко А.В.@ - конец блока
		ОбластьМакета.Параметры.ФИОРуководителя = Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ДожностьРуководителя = Руководители.РуководительДолжность;
		
		ОбластьМакета.Параметры.ГрузополучательПоОКПО    = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.РеквизитыСопроводительногоДокумента = "сопроводительный документ № "
		+ Шапка.НомерДокументаСопровождения + " от " + Формат(Шапка.ДатаДокументаСопровождения, "ДФ='дд ММММ гггг'");
		
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		СтрокНаСтранице = 20;
		СтрокШапки      = 4;
		СтрокПодвала    = 0;
		НомерСтраницы   =1;
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		// инициализация итогов по странице
		ИтогоМестПоСтранице        = 0;
		ИтогоШтукПоСтранице        = 0;
		ИтогоМассаБруттоПоСтранице = 0;
		ИтогоМассаНеттоПоСтранице  = 0;
		ИтогоСтоимостьПоСтранице   = 0;
		
		// инициализация итогов по документу
		ИтогоМест        = 0;
		ИтогоШтук        = 0;
		ИтогоМассаБрутто = 0;
		ИтогоМассаНетто  = 0;
		ИтогоСтоимость   = 0;
		Ном              = 0;
		
		// Выводим многострочную часть докмента
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			//Начинаем новую страницу, если предыдущая строка была последней на странице
			//или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница)) Тогда
				
				ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
				ОбластьИтоговПоСтранице.Параметры.ИтогоСтоимостьПоСтранице   = ИтогоСтоимостьПоСтранице;
				
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				// очистим итоги по странице
				ИтогоМестПоСтранице        = 0;
				ИтогоШтукПоСтранице        = 0;
				ИтогоМассаБруттоПоСтранице = 0;
				ИтогоМассаНеттоПоСтранице  = 0;
				ИтогоСтоимостьПоСтранице   = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
			КонецЕсли;
			Ном = Ном +1;
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			СтоимостьФакт = ВыборкаСтрокТовары.СтоимостьФакт;
			Цена = ВыборкаСтрокТовары.Цена;
			ИтогоСтоимостьПоСтранице = ИтогоСтоимостьПоСтранице+ СтоимостьФакт;
			ИтогоСтоимость = ИтогоСтоимость +СТоимостьФакт;
			ОбластьМакета.Параметры.СтоимостьФакт = СтоимостьФакт;
			ОбластьМакета.Параметры.Цена = Цена;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
		//ОбластьИтоговПоСтранице.Параметры.ИтогоМестПоСтранице        = ИтогоМестПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогоШтукПоСтранице        = ИтогоШтукПоСтранице;
		//ОбластьИтоговПоСтранице.Параметры.ИтогоМассаБруттоПоСтранице = ИтогоМассаБруттоПоСтранице;
		//ОбластьИтоговПоСтранице.Параметры.ИтогоМассаНеттоПоСтранице  = ИтогоМассаНеттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогоСтоимостьПоСтранице   = ИтогоСтоимостьПоСтранице;
		ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в общем
		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
		//ОбластьМакета.Параметры.ИтогоМест        = ИтогоМест;
		ОбластьМакета.Параметры.ИтогоШтук        = ИтогоШтук;
		//ОбластьМакета.Параметры.ИтогоМассаБрутто = ИтогоМассаБрутто;
		//ОбластьМакета.Параметры.ИтогоМассаНетто  = ИтогоМассаНетто;
		ОбластьМакета.Параметры.ИтогоСтоимость   = ИтогоСтоимость;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы+1;
	КонецЦикла;
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьМХ1(МассивОбъектов,ОбъектыПечати) экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_МХ1";
	ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	//Макет = ПолучитьМакет("МХ1");
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПриходнаяНакладная.МХ1");
	НомерСтрокиНачало = 0;
	Для каждого Док из МассивОбъектов цикл
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьВсего = Макет.ПолучитьОбласть("Всего");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьОборотнаяСторона = Макет.ПолучитьОбласть("ОборотнаяСторона");
		ОбластьПодвалОборотнаяСторона = Макет.ПолучитьОбласть("ПодвалОборотнаяСторона");
		
		
		СведенияОФирме = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Док.Фирма, Док.Дата,Док.СтруктурнаяЕдиница);
		ОбластьШапка.Параметры.ОрганизацияХранитель = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОФирме, "ПолноеНаименование,ЮридическийАдрес,Телефоны");
		
		СведенияОКонтрагенте = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Док.Контрагент, Док.Дата,Док.СтруктурнаяЕдиница);
		Поклажедатель = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование,ЮридическийАдрес,Телефоны");
		ОбластьШапка.Параметры.Поклажедатель1 = Лев(Поклажедатель, 60);
		ОбластьШапка.Параметры.Поклажедатель2 = Сред(Поклажедатель, 61);
		
		ОбластьШапка.Параметры.СтруктурноеПодразделение = Док.СтруктурнаяЕдиница.Наименование;
		//ОбластьШапка.Параметры.НомерДоговора = Договор.Код;
		//ОбластьШапка.Параметры.ДатаДоговора = Формат(Договор.ДатаДоговора, "ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.НомерДокумента = Док.Номер;
		ОбластьШапка.Параметры.ДатаДокумента = Док.Дата;
		ОбластьШапка.Параметры.МестоХранения = Док.Склад;
		ТабДокумент.Вывести(ОбластьШапка);
		КоличествоСтрокНаСтранице = 37;
		ПорядковыйНомерСтрокиНаСтранице = 22;
		Нпп = 0;
		ИтогоКоличество = 0;
		ИтогоСтоимость = 0;
		НомерСтраницы = 1;
		Для каждого Строка Из Док.Состав Цикл
			Нпп = Нпп + 1;
			ПорядковыйНомерСтрокиНаСтранице = ПорядковыйНомерСтрокиНаСтранице + 1;
			ИтогоКоличество = ИтогоКоличество + Строка.Количество;
			ИтогоСтоимость = ИтогоСтоимость + Строка.Сумма;
			ОбластьСтрока.Параметры.Нпп = Нпп;
			ОбластьСтрока.Параметры.Наименование = Строка.Номенклатура.Наименование;
			ОбластьСтрока.Параметры.Код = Строка.Номенклатура.Код;
			ОбластьСтрока.Параметры.ЕдИзм = Строка.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование;
			ОбластьСтрока.Параметры.КодЕдИзм = Строка.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код;
			ОбластьСтрока.Параметры.Количество = Строка.Количество;
			ОбластьСтрока.Параметры.Цена = Строка.Цена;
			ОбластьСтрока.Параметры.Стоимость = Строка.Сумма;
			ТабДокумент.Вывести(ОбластьСтрока);
			Если ПорядковыйНомерСтрокиНаСтранице = КоличествоСтрокНаСтранице Или Нпп = Док.Состав.Количество() Или (Нпп = Док.Состав.Количество() - 1 И ПорядковыйНомерСтрокиНаСтранице > 24) Тогда
				ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
				ОбластьИтого.Параметры.ИтогоСтоимость = ИтогоСтоимость;
				ТабДокумент.Вывести(ОбластьИтого);
				Если Нпп = Док.Состав.Количество() Тогда
					ОбластьВсего.Параметры.ВсегоКоличество = Док.Состав.Итог("Количество");
					ОбластьВсего.Параметры.ВсегоСтоимость = Док.Состав.Итог("Сумма");
					ТабДокумент.Вывести(ОбластьВсего);
				Иначе
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли; 
				ИтогоКоличество = 0;
				ИтогоСтоимость = 0;
				ПорядковыйНомерСтрокиНаСтранице = 0;
			КонецЕсли; 
		КонецЦикла; 
		ТабДокумент.Вывести(ОбластьПодвалОборотнаяСторона);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы+1;
	КонецЦикла;
	Возврат ТабДокумент;
КонецФункции


Функция ПечатьОП5(МассивОбъектов,ОбъектыПечати) экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_ОП5";
	ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	//Макет = ПолучитьМакет("ОП5");
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПриходнаяНакладная.ОП5");
	НомерСтрокиНачало = 0;
	Для каждого Док из МассивОбъектов цикл
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",Док.Ссылка);
		Запрос.Текст ="ВЫБРАТЬ
		|	ПриходнаяНакладная.Номер КАК НомерДокумента,
		|	ПриходнаяНакладная.Дата КАК ДатаДокумента,
		|	ПриходнаяНакладная.ДатаДокумента КАК ДатаДокументаСопровождения,
		|	ПриходнаяНакладная.НомерДокумента КАК НомерДокументаСопровождения,
		|	ПриходнаяНакладная.Фирма,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница как СтруктурнаяЕдиница, //+Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		|	ПриходнаяНакладная.Фирма КАК ЮрФизЛицо,
		|	ПриходнаяНакладная.Фирма КАК Руководители,
		|	ПриходнаяНакладная.Контрагент,
		|	ПриходнаяНакладная.Контрагент КАК Поставщик,
		|	ВЫБОР
		|		КОГДА ПриходнаяНакладная.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ПриходнаяНакладная.Контрагент
		|		ИНАЧЕ ПриходнаяНакладная.Грузоотправитель
		|	КОНЕЦ КАК Грузоотправитель,
		|	ПриходнаяНакладная.Склад КАК МестоПриемки,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница,
		|	ПриходнаяНакладная.Снабженец
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		СведенияОПокупателе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаДокумента,Шапка.СтруктурнаяЕдиница);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.ПредставлениеПодразделения = СокрЛП(Шапка.СтруктурнаяЕдиница.Наименование)+", "+СокрЛП(Шапка.МестоПриемки.Наименование);
		//*Зернятко А.В.@06.11.2013 - //AKB-374. Ответственные лица СЕ
		//Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента);
		Руководители = ОбработкаПечатиСервер.ОтветственныеЛицаОрганизационнойЕдиницы(Шапка.Фирма, Шапка.ДатаДокумента, Шапка.СтруктурнаяЕдиница);
		///Зернятко А.В.@ - конец блока
		ОбластьМакета.Параметры.ФИОРуководителя = Руководители.ФИОРуководителя;
		ОбластьМакета.Параметры.ДожностьРуководителя = Руководители.РуководительДолжность;
		
		
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		//ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьОборотнаяСторона = Макет.ПолучитьОбласть("Оборот");
		//ОбластьПодвалОборотнаяСторона = Макет.ПолучитьОбласть("ПодвалОборотнаяСторона");
		КоличествоСтрокНаСтранице = 37;
		ПорядковыйНомерСтрокиНаСтранице = 22;
		Нпп = 0;
		ИтогоКоличество = 0;
		ИтогоСтоимость = 0;
		НомерСтраницы = 1;
		Для каждого Строка Из Док.Состав Цикл
			Нпп = Нпп + 1;
			ПорядковыйНомерСтрокиНаСтранице = ПорядковыйНомерСтрокиНаСтранице + 1;
			ИтогоКоличество = ИтогоКоличество + Строка.Количество;
			ИтогоСтоимость = ИтогоСтоимость + Строка.Сумма;
			ОбластьСтрока.Параметры.Наименование = Строка.Номенклатура.Наименование;
			ОбластьСтрока.Параметры.Код = СокрЛП(Строка.Номенклатура.Код);
			ОбластьСтрока.Параметры.ЕдИзм = Строка.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование;
			ОбластьСтрока.Параметры.КодОКЕИ = СокрЛП(Строка.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код);
			ОбластьСтрока.Параметры.Количество = Строка.Количество;
			ОбластьСтрока.Параметры.Цена = Строка.Цена;
			ОбластьСтрока.Параметры.Сумма = Строка.Сумма;
			ТабДокумент.Вывести(ОбластьСтрока);
			Если ПорядковыйНомерСтрокиНаСтранице = КоличествоСтрокНаСтранице Или Нпп = Док.Состав.Количество() Или (Нпп = Док.Состав.Количество() - 1 И ПорядковыйНомерСтрокиНаСтранице > 24) Тогда
				//ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
				//ОбластьИтого.Параметры.ИтогоСтоимость = ИтогоСтоимость;
				//ТабДокумент.Вывести(ОбластьИтого);
				Если Нпп = Док.Состав.Количество() Тогда
					ОбластьПодвал.Параметры.ИтогСумма = Док.Состав.Итог("Сумма");
					ТабДокумент.Вывести(ОбластьПодвал);
				Иначе
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли; 
				ИтогоКоличество = 0;
				ИтогоСтоимость = 0;
				ПорядковыйНомерСтрокиНаСтранице = 0;
			КонецЕсли; 
		КонецЦикла; 
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДокумент.Вывести(ОбластьОборотнаяСторона);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы+1;
	КонецЦикла;
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьМ4(МассивОбъектов,ОбъектыПечати) экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_М4";
	ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	//Макет = ПолучитьМакет("М4");
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПриходнаяНакладная.М4");
	НомерСтрокиНачало = 0;
	Для каждого Док из МассивОбъектов цикл
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",Док.Ссылка);
		флМатериалы = Истина;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПриходнаяНакладная.Номер КАК Номер,
		|	ПриходнаяНакладная.Дата КАК ДатаСоставления,
		|	ПриходнаяНакладная.НомерДокумента КАК НомерСопроводительногоДокумента,
		|	ПриходнаяНакладная.Фирма,
		|	ПриходнаяНакладная.Фирма КАК ЮрФизЛицо,
		|	ПриходнаяНакладная.Склад КАК МестоПриемки,
		|	ПриходнаяНакладная.Склад.Представление КАК СкладНаименование,
		|	ПриходнаяНакладная.Контрагент.Код КАК ПоставщикКод,
		|	ПриходнаяНакладная.Контрагент КАК Поставщик,
		|	ПриходнаяНакладная.СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
		|ГДЕ
		|	ПриходнаяНакладная.Ссылка = &ТекущийДокумент";
		
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("Материал", Перечисления.ВидыТоваров.Материал);
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Док.Ссылка);
		ЗапросПоТоварам.Текст = "ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.ВидТовара КАК ВидТовара,
		|	ВложенныйЗапрос.Номенклатура.Наименование КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.ПолноеНаименование КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.СтавкаНДС,
		|	ВложенныйЗапрос.КоличествоПринято,
		|	ВложенныйЗапрос.Цена,
		|	ВложенныйЗапрос.Стоимость,
		|	ВложенныйЗапрос.СуммаНДС,
		//|	ВложенныйЗапрос.Номенклатура.ВидМатериала КАК СчетМатериала,
		|	ВложенныйЗапрос.КоличествоПоДокументу,
		|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПриходнаяНакладная.Номенклатура КАК Номенклатура,
		|		ПриходнаяНакладная.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		ПриходнаяНакладная.СтавкаНДС КАК СтавкаНДС,
		|		СУММА(ПриходнаяНакладная.Количество) КАК КоличествоПринято,
		|		ПриходнаяНакладная.Цена КАК Цена,
		|		СУММА(ПриходнаяНакладная.Сумма) КАК Стоимость,
		|		СУММА(ПриходнаяНакладная.СуммаНДС) КАК СуммаНДС,
		|		СУММА(ПриходнаяНакладная.КоличествоПоДокументу) КАК КоличествоПоДокументу,
		|		ПриходнаяНакладная.НомерСтроки КАК НомерСтроки
		|	ИЗ
		|		Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладная
		|	ГДЕ
		|		ПриходнаяНакладная.Ссылка = &ТекущийДокумент
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПриходнаяНакладная.Номенклатура,
		|		ПриходнаяНакладная.ЕдиницаИзмерения,
		|		ПриходнаяНакладная.СтавкаНДС,
		|		ПриходнаяНакладная.Цена,
		|		ПриходнаяНакладная.НомерСтроки) КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Номенклатура.ВидТовара = &Материал
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		//|ИТОГИ ПО
		//|	СчетМатериала";
		РезЗапроса = ЗапросПоТоварам.Выполнить(); 	
		
		ТабДокумент = Новый ТабличныйДокумент;
		
		ВыборкаГруппировкаПоСчетам = РезЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КоличествоГруппировок = ВыборкаГруппировкаПоСчетам.Количество();
		НомерГруппировки = 1;
		Пока ВыборкаГруппировкаПоСчетам.Следующий() Цикл
			
			ВыборкаСтрокТовары = ВыборкаГруппировкаПоСчетам.Выбрать();
			
			// Выводим общие реквизиты шапки
			СведенияОПокупателе = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления,Шапка.СтруктурнаяЕдиница);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбработкаПечатиСервер.ОписаниеОрганизации(СведенияОПокупателе);
			ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
			ОбластьМакета.Параметры.НомерДокумента           = Шапка.Номер;
			ОбластьМакета.Параметры.ПредставлениеПодразделения = Шапка.СТруктурнаяЕдиница;
			ОбластьМакета.Параметры.Подразделение = Шапка.СтруктурнаяЕдиница;
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок докмента
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
			ПредставлениеКонтрагента = ОбработкаПечатиСервер.ОписаниеОрганизации(ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
			ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
			ОбластьМакета.Параметры.НомерСопроводительногоДокумента = Шапка.НомерСопроводительногоДокумента;
			//ОбластьМакета.Параметры.СубСчет = ВыборкаГруппировкаПоСчетам.СчетМатериала;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
			СтрокНаСтранице = 24;
			СтрокШапки      = 9;
			СтрокПодвала    = 3;
			НомерСтраницы   = 1;
			
			КоличествоСтрок = ВыборкаСтрокТовары.Количество();
			Если КоличествоСтрок = 1 Тогда
				ПереноситьПоследнююСтроку = 0;
			Иначе
				ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
				ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
				ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
			КонецЕсли;
			
			// Инициализация итогов в документе
			ИтогоКоличествоПринято = 0;
			ИтогоСуммаБезНДС = 0;
			ИтогоСуммаНДС    = 0;
			ИтогоВсегоСНДС   = 0;
			Ном              = 0;
			
			// Выводим многострочную часть докмента
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			Пока ВыборкаСтрокТовары.Следующий() Цикл
				Ном = Ном + 1;
				//Начинаем новую страницу, если предыдущая строка была последней на странице
				//или пора переносить последнюю строку на последнюю страницу с подвалом.
				ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
				
				Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
					или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
					НомерСтраницы = НомерСтраницы + 1;
					ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
					
					ТабДокумент.Вывести(ПодвалСтрок);
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					//ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ЗаголовокТаблицы);
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
				
				ВсегоСНДС = ВыборкаСтрокТовары.Стоимость;
				КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
				СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;
				Цена = ВыборкаСтрокТовары.Цена;
				
				ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
				ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
				ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
				ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
				ОбластьМакета.Параметры.Цена              = Цена;
				ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование;
				ОбластьМакета.Параметры.КоличествоПоДокументу = ВыборкаСтрокТовары.КоличествоПоДокументу;
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
				ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
				ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
				ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;
			КонецЦикла;
			
			// Выводим итоги по документу
			ОбластьМакета = Макет.ПолучитьОбласть("Итого");
			
			ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
			ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
			ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
			ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим итоги по документу
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Зададим параметры макета
			ТабДокумент.ПолеСверху         = 0;
			ТабДокумент.ПолеСлева          = 0;
			ТабДокумент.ПолеСнизу          = 0;
			ТабДокумент.ПолеСправа         = 0;
			ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			Если НомерГруппировки < КоличествоГруппировок Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли; 
		КонецЦикла; 
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,Док.Ссылка);
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы+1;
	КонецЦикла;
	Возврат ТабДокумент;
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,
	ОбъектыПечати, ПараметрыВывода) Экспорт
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Накладная", "Накладная", ПечатьНакладная(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ТОРГ12", "ТОРГ-12", ПечатьТОРГ12(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ТОРГ1", "ТОРГ-1", ПечатьТОРГ1(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ТОРГ2", "ТОРГ-2", ПечатьТОРГ2(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ТОРГ3", "ТОРГ-3", ПечатьТОРГ3(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ТОРГ4", "ТОРГ-4", ПечатьТОРГ4(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МХ1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"МХ1", "МХ-1", ПечатьМХ1(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОП5") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ОП5", "ОП-5", ПечатьОП5(массивОбъектов,ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"М4", "М-4", ПечатьМ4(массивОбъектов,ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

//popn+
Функция ПолучитьВидОперацииПриходнаяНакладная(ДокументОбъект) Экспорт
	
	//определим вид документа для проведения
	флТипКонтрагентаКонтрагент = ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.Контрагенты");
	
	//флКонтрагентаСЕ = ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	//флКонтрагентаСЕ = ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.Организации");
	флКонтрагентаСЕ = ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.Организации")
	ИЛИ ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	
	флДокОснованиеЭтоРасходная = ЗначениеЗаполнено(ДокументОбъект.ДокОснование) И ТипЗнч(ДокументОбъект.ДокОснование) = Тип("ДокументСсылка.РасходнаяНакладная");
	Если флДокОснованиеЭтоРасходная Тогда 
		флДокОснованиеКонтрагентТипСЕ = ТипЗнч(ДокументОбъект.ДокОснование.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	Иначе
		флДокОснованиеКонтрагентТипСЕ = Ложь;
	КонецЕсли;	
	
	//флДокОснованиеОрганизацияКорректна = флДокОснованиеКонтрагентТипСЕ И ДокументОбъект.ДокОснование.Контрагент.Организация = ДокументОбъект.Контрагент.Организация;
	//флДокОснованиеОрганизацияКорректна = флДокОснованиеКонтрагентТипСЕ И ДокументОбъект.ДокОснование.Контрагент.Организация = ДокументОбъект.Грузоотправитель.Организация;
	Если ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		флДокОснованиеОрганизацияКорректна = флДокОснованиеКонтрагентТипСЕ И ДокументОбъект.ДокОснование.Контрагент.Организация = ДокументОбъект.Контрагент.Организация;
	ИначеЕсли ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		флДокОснованиеОрганизацияКорректна = флДокОснованиеКонтрагентТипСЕ И ДокументОбъект.ДокОснование.Контрагент.Организация = ДокументОбъект.Грузоотправитель.Организация;
	КонецЕсли;
	
	Если флКонтрагентаСЕ Тогда 
		
		//флПеремещениеБезПерепродажи = НЕ ЗначениеЗаполнено(ДокументОбъект.Контрагент.Организация) ИЛИ ДокументОбъект.Контрагент.Организация = ДокументОбъект.Фирма;  
		//флПеремещениеБезПерепродажи = НЕ ЗначениеЗаполнено(ДокументОбъект.Грузоотправитель.Организация) ИЛИ ДокументОбъект.Грузоотправитель.Организация = ДокументОбъект.Фирма;  
		Если ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
			флПеремещениеБезПерепродажи = НЕ ЗначениеЗаполнено(ДокументОбъект.Контрагент.Организация) ИЛИ ДокументОбъект.Контрагент.Организация = ДокументОбъект.Фирма;  
		ИначеЕсли ТипЗнч(ДокументОбъект.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
			//флПеремещениеБезПерепродажи = НЕ ЗначениеЗаполнено(ДокументОбъект.Грузоотправитель.Организация) ИЛИ ДокументОбъект.Грузоотправитель.Организация = ДокументОбъект.Фирма;  
			флПеремещениеБезПерепродажи = ДокументОбъект.Контрагент = ДокументОбъект.Фирма;  
		КонецЕсли;
		
	Иначе
		флПеремещениеБезПерепродажи = Ложь;
	КонецЕсли;	
	
	
	Если флТипКонтрагентаКонтрагент Тогда
		//Приход от внешнего поставщика
		чВидОперации = 1;
	ИначеЕсли флПеремещениеБезПерепродажи Тогда
		//Перемещение от другой структурной единицы без перепродажи
		чВидОперации = 2;
	ИначеЕсли флДокОснованиеЭтоРасходная И флДокОснованиеКонтрагентТипСЕ И флДокОснованиеОрганизацияКорректна Тогда
		//возврат перепродажи от другой структурной единицы 
		чВидОперации = 4;
	Иначе
		//приход от другой структурной единицы с перепродажей
		чВидОперации = 3;
	КонецЕсли;	
	
	Возврат чВидОперации;
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_Реквизиты",				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",					НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РублевыеСуммы",				НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",	НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата,
	|	Реквизиты.Фирма КАК Организация,
	|	Реквизиты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Реквизиты.Валюта КАК Валюта,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Контрагент.КПП КАК КППКонтрагента
	|ПОМЕСТИТЬ ВТ_Реквизиты
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	NULL КАК Подразделение,
	|	Реквизиты.Контрагент КАК Поставщик,
	|	Реквизиты.Контрагент.ИНН КАК ИННпоставщика,
	|	Реквизиты.Контрагент.КПП КАК КППпоставщика,
	|	""он же"" КАК Грузоотправитель,
	|	Реквизиты.Организация КАК Покупатель,
	|	Реквизиты.Организация.ИНН КАК ИННпокупателя,
	|	ЕСТЬNULL(ЗапросПоКПП.КПП, Реквизиты.Организация.КПП) КАК КППпокупателя,
	|	Реквизиты.Организация КАК Грузополучатель,
	|	Реквизиты.Валюта КАК Валюта,
	|	ЛОЖЬ КАК ЕстьТовары
	|ИЗ
	|	ВТ_Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СтруктурныеЕдиницыДополнительныеРеквизиты.Значение КАК КПП,
	|			СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка КАК СтруктурнаяЕдиница
	|		ИЗ
	|			Справочник.СтруктурныеЕдиницы.ДополнительныеРеквизиты КАК СтруктурныеЕдиницыДополнительныеРеквизиты
	|		ГДЕ СтруктурныеЕдиницыДополнительныеРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыСтруктурныхЕдиниц.КППОбособленногоПодразделения)) КАК ЗапросПоКПП
	|		ПО Реквизиты.СтруктурнаяЕдиница = ЗапросПоКПП.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ДокументОснование КАК ДокументОснование,
	|	0 КАК Всего,
	|	0 КАК ВсегоНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Номенклатура.Наименование КАК ТоварНаименование,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ИСТИНА КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоКомиссия
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПриходнаяНакладная.Состав КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияПереопределяемый.ТекстРазделителяЗапросовПакета();
	
КонецФункции
//popn-


