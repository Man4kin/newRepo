&НаКлиенте
Процедура ПодборВыполнить()
	Если НЕ Элементы.ГруппаПодбор.Видимость Тогда
	КонецЕсли;
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЦенаБезНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуБезНДСВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Элементы.Состав.ТекущиеДанные, ИСТИНА);
	ОбновитьСтрокуОстаткиНоменклатуры(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

//popn+
&НаКлиенте
Процедура ОбновитьСтрокуОстаткиНоменклатуры(СтрокаСостав)
	
	струк = Новый Структура("Номенклатура",СтрокаСостав.Номенклатура);
	струк.Вставить("СтавкаНДС",СтрокаСостав.СтавкаНДС);
	
	мсв = Объект.ОстаткиНоменклатуры.НайтиСтроки(струк);
	чКол = мсв.Количество();
	Если чКол > 1 Тогда
		Сообщить("Для одной строки табличной части ""Состав"" обнаружено несколько строк в табличной части ""Остатки номенклатуры""!");
		Возврат;
	ИначеЕсли чКол = 0 Тогда
		Возврат;
	Иначе
		СтрокаОстатки = мсв[0];
		ЦенаШтуки = СтрокаОстатки.Сумма / СтрокаОстатки.Количество;
		ЦенаШтукиНДС = СтрокаОстатки.СуммаНДС / СтрокаОстатки.Количество;
		ЦенаШтукиУпр = СтрокаОстатки.СуммаУпр / СтрокаОстатки.Количество;
		ЦенаШтукиНДСУпр = СтрокаОстатки.СуммаНДСУпр / СтрокаОстатки.Количество;
		ЦенаШтукиПродажи = СтрокаОстатки.СуммаПродажи / СтрокаОстатки.Количество;
		ЦенаШтукиНДСПродажи = СтрокаОстатки.СуммаНДСПродажи / СтрокаОстатки.Количество;
		
		СтрокаОстатки.Количество         = СтрокаСостав.Количество;
		СтрокаОстатки.Сумма              = СтрокаОстатки.Количество * ЦенаШтуки;
		СтрокаОстатки.СуммаНДС           = СтрокаОстатки.Количество * ЦенаШтукиНДС;
		СтрокаОстатки.СуммаУпр           = СтрокаОстатки.Количество * ЦенаШтукиУпр;
		СтрокаОстатки.СуммаНДСУпр        = СтрокаОстатки.Количество * ЦенаШтукиНДСУпр;
		СтрокаОстатки.СуммаПродажи       = СтрокаОстатки.Количество * ЦенаШтукиПродажи;
		СтрокаОстатки.СуммаНДСПродажи    = СтрокаОстатки.Количество * ЦенаШтукиНДСПродажи;
	КонецЕсли;
	
КонецПроцедуры
//popn+

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СуммаБезНДСПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыБезНДСВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.ДокОснование) И НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	//popn+
	Если ПараметрыСеанса.ЭтоЦентр Тогда
		Если Объект.Ссылка.Пустая() Тогда
			Сообщить("Запрещен ввод документа в центре.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	//popn-
	ТолькоПросмотр = РаботаСФормамиСервер.ЗапрещеноРедактировать(Объект.Ссылка,ЭтаФорма);
	Если НЕ ТолькоПросмотр И НЕ Объект.EDIПровайдер.Пустая() И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") И Объект.Контрагент.ПодтверждениеЗаказаEDI Тогда	
		Узел = ОбменДаннымиEDIСервер.ПолучитьУзелРегистрацииEDIКлиентПоПровайдеру(Объект.EDIПровайдер);
		Если Узел <> Неопределено Тогда
			ТолькоПросмотр = ОбменДаннымиEDIСервер.ЗапрещеноРедактироватьEDI(Узел,Объект.Ссылка,ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	//Элементы.ЦеныИВалюта.Доступность = Ложь;    // временно установил в ложь
		
	Если (ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") 
		И Объект.Контрагент.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив)
		Тогда
		//Элементы.Состав.Доступность = Ложь;
		Элементы.Контрагент.ТолькоПросмотр = Истина;
		Элементы.Фирма.ТолькоПросмотр = Истина;
		Элементы.Грузоотправитель.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если (ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Организации") 
		И ТипЗнч(Объект.Грузоотправитель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")) 
		Тогда
		//Если Объект.Грузоотправитель.РежимРаботы = Перечисления.РежимРаботыСЕ.Продуктив Тогда
		//	Элементы.Состав.Доступность = Ложь;
		//КонецЕсли;
		Элементы.Контрагент.ТолькоПросмотр = Истина;
		Элементы.Фирма.ТолькоПросмотр = Истина;
		Элементы.Грузоотправитель.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	//{БредовЮГ 2014-12-03 Наряд№000135628
	Элементы.Izh_ОбработанЦВД.Видимость = ПараметрыСеанса.ЭтоЦентр;
	Izh_ОбработанЦВД = РегистрыСведений.Izh_СостояниеДокумента.ДокументЗафиксированВСостоянии(Объект,Перечисления.Izh_СостояниеДокумента.ПроверенЦВД);
	//БредовЮГ 2014-12-03 Наряд№000135628}
	
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		//Элементы.ОбработанЦВД.Доступность = Ложь;
		//Элементы.ОбработанЦВД.Видимость = ПараметрыСеанса.ИспользованиеЦВД;
		Если СтруктурныеЕдиницы.ЕстьВГруппеТипСЕ(Перечисления.ТипыСтруктурныхЕдиниц.Склад) Тогда
			НовыйМассив = Новый Массив();
			ТекущийФиксированныйМасив = Элементы.Контрагент.ПараметрыВыбора;
			Для Каждого Строка Из ТекущийФиксированныйМасив Цикл
				Если Строка.Имя = "Отбор.РазрешенаПрямаяПоставка" Тогда
					Продолжить;
				КонецЕсли;	
				НовыйМассив.Добавить(Строка);
			КонецЦикла;	
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элементы.Контрагент.ПараметрыВыбора = НовыеПараметры;
		КонецЕсли;
		
	КонецЕсли;
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма,Элементы.ФормаСоздатьНаОсновании);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	Если НЕ ПараметрыСеанса.ИспользованиеЦВД Тогда
		Элементы.СоставЦена.АвтоОтметкаНезаполненного = Истина;
		Элементы.СоставСтавкаНДС.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;	
	ПодборНоменклатурыТекстЗапросаПоКонтрагенту = ПодборНоменклатуры.ТекстЗапроса;
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюЭлементов()
	Элементы.ГруппаПодбор.Видимость  = ?(Не ЗначениеЗаполнено(Объект.Контрагент),Ложь,Элементы.ГруппаПодбор.Видимость);
	Элементы.БонуснаяПоставка.Доступность = 
	НЕ (ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") 
	ИЛИ ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Организации"));
	
	//Элементы.ФормаВалюта.Доступность = Не ТолькоПросмотр;	
конецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеДоступностьюЭлементов();
	
	Если ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	УстановитьВидимостьЭлементовФормы();
	Установитьпараметры();
	КомпонентаУстановлена = РаботаСоСканеромШККлиент.ПроинициализироватьКомпоненту();
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруДанныхСтрокиПодбора(ДанныеФормыСтрокиПодбора)
		
	ДанныеСтроки = Новый Структура;
	//++Минин 0000132590 2015-07-06 добавил проверку на наличие свойства "Артикул"
	ДанныеСтроки.Вставить("Артикул"		, ?(ДанныеФормыСтрокиПодбора.Свойство("Артикул"),ДанныеФормыСтрокиПодбора.Артикул,""));
	//--Минин 0000132590 2015-07-06 добавил проверку на наличие свойства "Артикул"
	ДанныеСтроки.Вставить("Код"			, ДанныеФормыСтрокиПодбора.Код);
	ДанныеСтроки.Вставить("Наименование", ДанныеФормыСтрокиПодбора.Наименование);
	ДанныеСтроки.Вставить("Картинка"	, ДанныеФормыСтрокиПодбора.Картинка);
	ДанныеСтроки.Вставить("Цена"		, ДанныеФормыСтрокиПодбора.Цена);
	
	Возврат ДанныеСтроки;
	
КонецФункции
//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	БезНДС = ПолучитьСтавкуБезНДС();
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		//popn+				
		ТекТовар = ?(ТипЗнч(Строка)=Тип("СправочникСсылка.Номенклатура"), Строка, Элемент.ДанныеСтроки(Строка).Номенклатура);		
		ДанныеСтроки = ПолучитьСтруктуруДанныхСтрокиПодбора(Элемент.ДанныеСтроки(Строка));		
		ДанныеСтроки.Вставить("Номенклатура" , ТекТовар);
		
		ЭтоШтучныйТовар =  ОбщегоНазначенияСервер.ЭтоШтучныйТовар(ТекТовар);
		ЗапретВводаДробногоКоличестваШтучногоТовара = ОбщегоНазначенияСервер.ЗапретВводаДробногоКоличестваШтучногоТовара();
		ЗапретДробногоКоличества = ЭтоШтучныйТовар И ЗапретВводаДробногоКоличестваШтучногоТовара;
		//popn-
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество, ЗапретДробногоКоличества);
		//++БИТ БВО В результирующей структура (типа ДанныеФормыСтруктура) не было поля Номенклатура
		//ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);	
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,ДанныеСтроки,Элементы.состав,СтандартнаяОбработка,Количество);	
		//--БИТ БВО
		Если ТекСтрока <> Неопределено Тогда
			ТекСтрока.Артикул = АвтоЗаказ.ПолучитьАртикул(Объект.Контрагент,ТекСтрока.Номенклатура);
			Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
				Если ТекСтрока.Свойство("ЦенаБезНДС") Тогда
					Если ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов") = Истина Тогда
						ТекСтрока.ЦенаДоговора = ТекСтрока.Цена;
					Иначе
						ТекСтрока.ЦенаДоговора = ТекСтрока.ЦенаБезНДС;
					КонецЕсли;
				Иначе
					ТекСтрока.ЦенаДоговора = ТекСтрока.Цена;
				КонецЕсли;
			КонецЕсли;
			Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") И ПолучитьНеПлательщикНДС() Тогда
				//popn+
				ТекСтрока.СтавкаНДС = БезНДС;
				Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
					Если ТекСтрока.Свойство("ЦенаБезНДС") Тогда
						Если ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов") = Истина Тогда
							ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
						Иначе
							ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуБезНДСВСтрокеТабличнойЧасти(ТекСтрока);
						КонецЕсли;
					Иначе
						ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
					КонецЕсли;
				КонецЕсли;
				//popn-
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
	//popn+
	ЗаполнитьОстаткиНоменклатуры("");
	//popn-
КонецПроцедуры

&НаСервере
Функция ПолучитьСтавкуБезНДС()
	Возврат Справочники.СтавкиНДС.БезНДС;
КонецФункции

&НаСервере
Функция ПолучитьНеПлательщикНДС()
	Возврат Объект.Контрагент.НеПлательщикНДС;
КонецФункции

//popn+
&НаСервере
Функция НуженПодборПоДокументуОснованию()
	
	флДокОснованиеЭтоРасходная = ЗначениеЗаполнено(Объект.ДокОснование) И ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.РасходнаяНакладная");
 	Если флДокОснованиеЭтоРасходная Тогда 
		флДокОснованиеКонтрагентТипСЕ = ТипЗнч(Объект.ДокОснование.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	Иначе
		флДокОснованиеКонтрагентТипСЕ = Ложь;
	КонецЕсли;
	флДокОснованиеОрганизацияКорректна = флДокОснованиеКонтрагентТипСЕ И Объект.ДокОснование.Контрагент.Организация = Объект.Грузоотправитель.Организация;
	Если флДокОснованиеЭтоРасходная И флДокОснованиеКонтрагентТипСЕ И флДокОснованиеОрганизацияКорректна Тогда
		//возврат перепродажи от другой структурной единицы 
		Возврат ИСТИНА;
	Иначе
		Возврат ЛОЖЬ;
	КонецЕсли;		
	
КонецФункции

&НаСервере


Процедура ИзменитьТекстЗапросаПодбораПоТекущейСЕ()
	//ШиловМВ 23.04.14 - СписокНоменклатуры.Ссылка КАК Ссылка - для установки отбора
	ПодборНоменклатуры.ПроизвольныйЗапрос = Истина;
	ПодборНоменклатуры.ТекстЗапроса = "ВЫБРАТЬ
	                                  |	СписокНоменклатуры.Код,
	                                  |	СписокНоменклатуры.Наименование,
	                                  |	МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена) КАК Цена,
	                                  |	СписокНоменклатуры.Группа,
	                                  |	ВЫБОР
	                                  |		КОГДА СписокНоменклатуры.ПометкаУдаления
	                                  |			ТОГДА ВЫБОР
	                                  |					КОГДА СписокНоменклатуры.Группа = 0
	                                  |						ТОГДА 2
	                                  |					ИНАЧЕ 3
	                                  |				КОНЕЦ
	                                  |		ИНАЧЕ ВЫБОР
	                                  |				КОГДА СписокНоменклатуры.Группа = 0
	                                  |					ТОГДА 0
	                                  |				ИНАЧЕ 1
	                                  |			КОНЕЦ
	                                  |	КОНЕЦ КАК Картинка,
	                                  |	СписокНоменклатуры.Ссылка КАК Номенклатура,
									  |	СписокНоменклатуры.Ссылка КАК Ссылка
	                                  |ИЗ
	                                  |	Справочник.Номенклатура КАК СписокНоменклатуры
	                                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(&датадокумента, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	                                  |		ПО СписокНоменклатуры.Ссылка = ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура
	                                  |ГДЕ
	                                  |	ВЫБОР
	                                  |			КОГДА СписокНоменклатуры.Группа = 0
	                                  |				ТОГДА СписокНоменклатуры.Ссылка В
	                                  |						(ВЫБРАТЬ
	                                  |							СтатусыНоменклатуры.Номенклатура
	                                  |						ИЗ
	                                  |							РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	                                  |						ГДЕ
	                                  |							СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	                                  |							И СтатусыНоменклатуры.Статус = ЗНАЧЕНИЕ(перечисление.статусытоваров.активный))
	                                  |						И ВЫБОР
	                                  |							КОГДА &СписокТоваров = ЗНАЧЕНИЕ(Справочник.СпискиНоменклатуры.ПустаяСсылка)
	                                  |								ТОГДА ИСТИНА
	                                  |							ИНАЧЕ СписокНоменклатуры.Ссылка В
	                                  |									(ВЫБРАТЬ
	                                  |										СпискиНоменклатурыСостав.Номенклатура
	                                  |									ИЗ
	                                  |										Справочник.СпискиНоменклатуры.Состав КАК СпискиНоменклатурыСостав
	                                  |									ГДЕ
	                                  |										СпискиНоменклатурыСостав.Ссылка = &СписокТоваров)
	                                  |						КОНЕЦ
	                                  |			ИНАЧЕ ИСТИНА
	                                  |		КОНЕЦ
	                                  |
	                                  |СГРУППИРОВАТЬ ПО
	                                  |	СписокНоменклатуры.Код,
	                                  |	СписокНоменклатуры.Наименование,
	                                  |	СписокНоменклатуры.Группа,
	                                  |	СписокНоменклатуры.ПометкаУдаления,
	                                  |	СписокНоменклатуры.Ссылка";
									  
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СтруктурнаяЕдиница",Объект.Склад.Владелец);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("датадокумента",объект.Дата);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", СписокНомеклатуры);
КонецПроцедуры

Процедура ИзменитьТекстЗапросаПодбора()
	//ШиловМВ 23.04.14 - СписокНоменклатуры.Ссылка КАК Ссылка - для установки отбора
	ПодборНоменклатуры.ПроизвольныйЗапрос = Истина;
	ПодборНоменклатуры.ТекстЗапроса = "ВЫБРАТЬ
	                                  |	СписокНоменклатуры.Код,
	                                  |	СписокНоменклатуры.Наименование,
	                                  |	РН.Цена КАК Цена,
	                                  |	СписокНоменклатуры.Группа,
	                                  |	ВЫБОР
	                                  |		КОГДА СписокНоменклатуры.ПометкаУдаления
	                                  |			ТОГДА ВЫБОР
	                                  |					КОГДА СписокНоменклатуры.Группа = 0
	                                  |						ТОГДА 2
	                                  |					ИНАЧЕ 3
	                                  |				КОНЕЦ
	                                  |		ИНАЧЕ ВЫБОР
	                                  |				КОГДА СписокНоменклатуры.Группа = 0
	                                  |					ТОГДА 0
	                                  |				ИНАЧЕ 1
	                                  |			КОНЕЦ
	                                  |	КОНЕЦ КАК Картинка,
	                                  |	СписокНоменклатуры.Ссылка КАК Номенклатура,
									  |	СписокНоменклатуры.Ссылка КАК Ссылка
	                                  |ИЗ
	                                  |	Справочник.Номенклатура КАК СписокНоменклатуры
	                                  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                                  |			РасходнаяНакладнаяСостав.Номенклатура КАК Номенклатура,
	                                  |			РасходнаяНакладнаяСостав.Цена КАК Цена
	                                  |		ИЗ
	                                  |			Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
	                                  |		ГДЕ
	                                  |			РасходнаяНакладнаяСостав.Ссылка = &ДокОснование) КАК РН
	                                  |		ПО (РН.Номенклатура = СписокНоменклатуры.Ссылка)
	                                  |ГДЕ
	                                  |	ВЫБОР
	                                  |			КОГДА СписокНоменклатуры.Группа = 0
	                                  |				ТОГДА СписокНоменклатуры.Ссылка В
	                                  |							(ВЫБРАТЬ
	                                  |								РасходнаяНакладнаяСостав.Номенклатура
	                                  |							ИЗ
	                                  |								Документ.РасходнаяНакладная.Состав КАК РасходнаяНакладнаяСостав
	                                  |							ГДЕ
	                                  |								РасходнаяНакладнаяСостав.Ссылка = &ДокОснование)
	                                  |						И ВЫБОР
	                                  |							КОГДА &СписокТоваров = ЗНАЧЕНИЕ(Справочник.СпискиНоменклатуры.ПустаяСсылка)
	                                  |								ТОГДА ИСТИНА
	                                  |							ИНАЧЕ СписокНоменклатуры.Ссылка В
	                                  |									(ВЫБРАТЬ
	                                  |										СпискиНоменклатурыСостав.Номенклатура
	                                  |									ИЗ
	                                  |										Справочник.СпискиНоменклатуры.Состав КАК СпискиНоменклатурыСостав
	                                  |									ГДЕ
	                                  |										СпискиНоменклатурыСостав.Ссылка = &СписокТоваров)
	                                  |						КОНЕЦ
	                                  |			ИНАЧЕ ИСТИНА
	                                  |		КОНЕЦ
	                                  |
	                                  |СГРУППИРОВАТЬ ПО
	                                  |	СписокНоменклатуры.Код,
	                                  |	РН.Цена,
	                                  |	СписокНоменклатуры.Наименование,
	                                  |	СписокНоменклатуры.Группа,
	                                  |	СписокНоменклатуры.ПометкаУдаления,
	                                  |	СписокНоменклатуры.Ссылка";
	
	//ПодборНоменклатуры.ОсновнаяТаблица = "";
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ДокОснование",Объект.ДокОснование);
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", СписокНомеклатуры);
	
КонецПроцедуры
//popn-


&НаКлиенте
Процедура ПодборОткрыть(Команда)
	
	ЗаменаТекстаПодбора();
	
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаСервере
Процедура ЗаменаТекстаПодбора()
	
	//popn+
	ПодборПоДокументуОснованию = НуженПодборПоДокументуОснованию();
	Если ПодборПоДокументуОснованию Тогда
		ИзменитьТекстЗапросаПодбора();
	Иначе
		Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			ПодборНоменклатуры.ТекстЗапроса = ПодборНоменклатурыТекстЗапросаПоКонтрагенту;
			установитьпараметры();
		Иначе
			ИзменитьТекстЗапросаПодбораПоТекущейСЕ();
		КонецЕсли;	
	КонецЕсли;
	//popn-
КонецПроцедуры


&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Не Копирование Тогда
		Отказ = Истина;
		ПодборОткрыть(Неопределено);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Валюта(Команда)
	РаботаСФормамиКлиент.ОткрытьФормуВводаВалютыКурса(Объект);
	ОбновитьПредставлениеВалюты();	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
		ЕстьСвязьКонтрагентаИФирмы = ОбщегоНазначенияСервер.ЕстьСвязьКонтрагентаИФирмы(Объект.Контрагент,Объект.Фирма);
		Если НЕ ЕстьСвязьКонтрагентаИФирмы Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Контрагент "+СокрЛП(Объект.Контрагент)+" не связан с фирмой "+СокрЛП(Объект.Фирма)+"!'"), ,
			"Объект.Контрагент");
			Объект.Контрагент = ОбщегоНазначенияСервер.КонтрагентПустаяСсылка();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
		Если НЕ ПолучитьФлагПрямойПоставкиКонтрагента(Объект.Контрагент) И НЕ ЗначениеЗаполнено(Объект.ДокОснование) Тогда
			Объект.Контрагент = ПолучитьПустуюСсылкуКонтрагента();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'По выбранному контрагенту прямая поставка запрещена!'"), ,
			"Объект.Контрагент");
		КонецЕсли;
	КонецЕсли;
	УправлениеДоступностьюЭлементов();
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") и  НЕ Объект.Контрагент.Пустая() Тогда
			Объект.Валюта = ПолучитьВалютуКонтрагента(Объект.Контрагент);
		Иначе
			Объект.Валюта = ПолучитьВалютуСтруктурнойЕдиницы(Объект.СтруктурнаяЕдиница);
		КонецЕсли;
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
		ОбновитьПредставлениеВалюты();
	КонецЕсли;
	ЗаменаТекстаПодбора();
	
	//++БИТ БВО 2015-10-09 Реализация заполнения грузоотправителя при интерактивной смене контрагента
	Если Объект.Грузоотправитель.Пустая() 
		И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Объект.Грузоотправитель = Объект.Контрагент;
	КонецЕсли;
	//--БИТ БВО 2015-10-09
	
	УстановитьВидимостьЭлементовФормы();	
	Объект.Состав.Очистить();
	Объект.ОстаткиНоменклатуры.Очистить();
	ЗаполнитьТипДоговора();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользованиеВалюты(СтруктурнаяЕдиница)
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользованиеВалюты",Новый Структура("СтруктурнаяЕдиница,ПараметрСтруктурнойЕдиницы",СтруктурнаяЕдиница,ПланыВидовХарактеристик.ПараметрыСтруктурныхЕдиниц.ИспользованиеВалюты));
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКурсВалютыНаДату(Валюта,Дата)
	
	Возврат РаботаСКурсамиВалютКлиентСервер.ПолучитьКурсВалютыНаДату(Валюта,Дата);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПредставлениеВалюты()
	Если Объект.Курс = 1 Тогда
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = Объект.Валюта;
	Иначе
		ЭтаФорма.Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.ФормаВалюта.Заголовок = ""+Объект.Валюта+" "+Объект.Курс;
	КонецЕсли;	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПолучитьВалютуКонтрагента(Контрагент)
	
	Возврат Контрагент.Валюта;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПустуюСсылкуКонтрагента()
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФлагПрямойПоставкиКонтрагента(Контрагент)
	
	Возврат Контрагент.РазрешенаПрямаяПоставка;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВалютуСтруктурнойЕдиницы(се)
	
	Возврат се.Валюта;
	
КонецФункции	 

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
			
	Элемент.ВыбиратьТип = Объект.Контрагент = Неопределено;
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.Контрагенты"));
	Массив.Добавить(Тип("СправочникСсылка.СтруктурныеЕдиницы"));
	
	Элемент.ОграничениеТипа = Новый ОписаниеТипов(Массив);		
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)
		
	Объект.Контрагент = Неопределено;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	РаботаСФормамиКлиент.ПроверкаДатыРедактирования(Объект);
	Если  ИспользованиеВалюты(Объект.СтруктурнаяЕдиница) Тогда
		струкКурс = ПолучитьКурсВалютыНаДату(Объект.Валюта,Объект.Дата);
		РаботаСФормамиКлиент.ОбработатьИзменениеВалютыВДокументах(Объект,струкКурс);
	КонецЕсли;
	Установитьпараметры();
	ЗаполнитьТипДоговора();   
КонецПроцедуры

//popn+
&НаСервере
Функция ЭтоВозвратОтНашейФирмы()
	чВидОперации = Документы.ПриходнаяНакладная.ПолучитьВидОперацииПриходнаяНакладная(Объект); 
	Возврат чВидОперации = 4; 
КонецФункции
//popn-

&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	//popn+
	фл = ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты");
	фл2 = ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты")
	ИЛИ ЭтоВозвратОтНашейФирмы();
	Элементы.ПриходнаяНакладнаяПоставщика.Видимость = фл2;
	Элементы.ГруппаСчетФактура.Видимость = фл2;
	//popn-
	Элементы.ТипДоговора.Видимость = фл;
	Элементы.ГруппаОстаткиНоменклатуры.Видимость = НЕ фл;
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
		ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстаткиНоменклатуры(Команда)
	
	ЗаполнитьОстаткиНоменклатурыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиНоменклатурыНаСервере()
	
	Объект.ОстаткиНоменклатуры.Очистить();
	
	Для каждого с из Объект.Состав Цикл
		Если с.Номенклатура.ВидТовара = Перечисления.ВидыТоваров.Услуга Тогда
			Продолжить;
		КонецЕсли;	
		нс=Объект.ОстаткиНоменклатуры.Добавить();
		нс.Номенклатура = с.Номенклатура;
		нс.Количество   = с.Количество * с.Коэффициент;
		нс.Сумма        = с.Сумма;
		нс.СуммаНДС     = с.СуммаНДС;
		нс.СуммаУпр     = с.Сумма;
		нс.СуммаНДСУпр  = с.СуммаНДС;
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "BarCodeScaner" И Событие = "BarCodeValue" Тогда
		Если Не ВводДоступен() Тогда
			КомпонентаСканераШК.СобытиеОбработано();
			Возврат;   
		КонецЕсли;
		СтруктураПодбора = ПолучитьСтруктуруЗапросаПодбора();
		СтрокаТЧ = РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВДокументах(ЭтаФорма,Объект,Элементы.Состав,Данные,СтруктураПодбора);
		Если СтрокаТЧ <> Неопределено Тогда
			СтрокаТЧ.КоличествоПоДокументу = СтрокаТЧ.Количество;
		КонецЕсли;	
		КомпонентаСканераШК.СобытиеОбработано();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗапросаПодбора() Экспорт
	СтруктураПодбора = Новый Структура;
	СтруктураПодбора.Вставить("ТекстЗапроса",ПодборНоменклатуры.ТекстЗапроса);
	СтруктураПодбора.Вставить("Параметры",ПодборНоменклатуры.Параметры);
	Возврат СтруктураПодбора;
КонецФункции	

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	если элементы.ПодборНоменклатурысписок.Пометка тогда
		элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	иначе
		элементы.кнГруппы.Пометка = истина;
	конецесли;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПодборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция ПолучитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
КонецПроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


Процедура Установитьпараметры()
	Если Не ПодборНоменклатуры.Параметры.ДоступныеПараметры.Элементы.Найти("СтруктурнаяЕдиница") = Неопределено Тогда
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СтруктурнаяЕдиница", Объект.Склад.Владелец);
	КонецЕсли;
	Если Не ПодборНоменклатуры.Параметры.ДоступныеПараметры.Элементы.Найти("Контрагент") = Неопределено Тогда
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Контрагент", Объект.Контрагент);
	КонецЕсли;
	Если Не ПодборНоменклатуры.Параметры.ДоступныеПараметры.Элементы.Найти("ДатаДокумента") = Неопределено Тогда
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ДатаДокумента", Объект.Дата);
	КонецЕсли;
	Если Не ПодборНоменклатуры.Параметры.ДоступныеПараметры.Элементы.Найти("СписокТоваров") = Неопределено Тогда
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", СписокНомеклатуры);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//popn+
	Если ТолькоПросмотр Тогда
		Стандартнаяобработка = ЛОЖЬ;
	КонецЕсли;
	
	Если Поле.Имя = "СоставКоличество" ИЛИ Поле.Имя = "СоставКоличествоПоДокументу" Тогда
		ТекущийТовар = Элементы.Состав.ТекущиеДанные.Номенклатура;
		ЭтоШтучныйТовар =  ОбщегоНазначенияСервер.ЭтоШтучныйТовар(ТекущийТовар);
        ЗапретВводаДробногоКоличестваШтучногоТовара = ОбщегоНазначенияСервер.ЗапретВводаДробногоКоличестваШтучногоТовара();
		
		Если ЭтоШтучныйТовар И ЗапретВводаДробногоКоличестваШтучногоТовара Тогда
			ТипЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0));
		Иначе
			ТипЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3));
		КонецЕсли;
		
		ЭлементСостава = Элементы.Найти(Поле.Имя);
		ЭлементСостава.ОграничениеТипа = ТипЧисла;
	КонецЕсли;
	//popn-
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
КонецПроцедуры

//ШиловМВ 16.06.14 №000114217
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ВозвратПараметраСеансаССервера("ЭтоЦентр") Тогда 
		Контрагент=ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(Объект.Ссылка,"Контрагент");
		Если ТипЗнч(Контрагент)=Тип("СправочникСсылка.Контрагенты") И НЕ ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(Контрагент,"НеПлательщикНДС") Тогда
			Если ПараметрыЗаписи.РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда
				СчетФактура = ЕстьСчетФактура();
				Если НЕ СчетФактура.Пустая() Тогда
					Если Вопрос("Документ Регистрация счет фактуры уже существует. Открыть его ?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда 
						СтруктураПараметров = Новый Структура("Ключ", СчетФактура);
						ОткрытьФорму("Документ.РегистрацияСчетФактуры.ФормаОбъекта", СтруктураПараметров,ЭтаФорма,ЭтаФорма);
					КонецЕсли;
				Иначе 
					Если Вопрос("Сформировать документ Регистрация счет фактуры ?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
						ДокСсылка = СформироватьСчетФактуруНаСервере();
						СтруктураПараметров = Новый Структура("Ключ", ДокСсылка);
						ОткрытьФорму("Документ.РегистрацияСчетФактуры.ФормаОбъекта", СтруктураПараметров,ЭтаФорма,ЭтаФорма);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВозвратПараметраСеансаССервера(Параметр)
	Возврат ПараметрыСеанса[Параметр];
конецфункции

Функция СформироватьСчетФактуруНаСервере()
	ДокОбъект = Документы.РегистрацияСчетФактуры.СоздатьДокумент();
	Попытка
		ДокОбъект.Заполнить(Объект.Ссылка);
		ДокОбъект.Дата = Объект.Дата;
		//ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ДокОбъект.Записать();
		Возврат ДокОбъект.Ссылка;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
		Возврат Документы.РегистрацияСчетФактуры.ПустаяСсылка();
	КонецПопытки;
КонецФункции

&НаСервере
Функция ЕстьСчетФактура()
	ДокОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.ПриходнаяНакладная"));
	Возврат ДокОбъект.ЕстьСчетФактура();
КонецФункции
//ШиловМВ 16.06.14

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры

&НаКлиенте
Процедура СоставЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
	СписокКонтрагентов = Новый СписокЗначений();
	СписокКонтрагентов.Добавить(Объект.Контрагент);
	СписокКонтрагентов.Добавить(ПолучитьПустуюСсылкуКонтрагента());
	УсловияОтбора = Новый Структура("Контрагент,Владелец",СписокКонтрагентов,Элементы.Состав.ТекущиеДанные.Номенклатура);
	ПараметрыФормы = Новый Структура("Отбор", УсловияОтбора);
	ОткрытьФорму("Справочник.ЕдиницыИзмерения.ФормаВыбора",ПараметрыФормы,Элемент);
КонецПроцедуры


&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	Установитьпараметры();
КонецПроцедуры

//popn+
&НаКлиенте
Процедура СоставПриИзменении(Элемент)
	ЗаполнитьОстаткиНоменклатуры("");
КонецПроцедуры
//popn-

&НаКлиенте
Процедура СписокНомеклатурыПриИзменении(Элемент)
	Установитьпараметры();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоличество(Команда)
	Для Каждого Строка из Объект.Состав Цикл
		Строка.Количество = Строка.КоличествоПоДокументу;
		ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Строка,ИСТИНА);
		ОбновитьСтрокуОстаткиНоменклатуры(Строка);
	КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура НайтиТоварВСпискеПоШтрихкоду(Команда)
	ШК = "";
	Если Не ВвестиЗначение(ШК, НСтр("ru = 'Введите штрихкод'")) Тогда
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ШК) Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВСпискеНоменклатуры(ШК, ПодборНоменклатуры);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипДоговора()
	ДокОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.ПриходнаяНакладная"));
	ДокОбъект.ЗаполнитьТипДоговора();
КонецПроцедуры

&НаКлиенте
Процедура ФирмаПриИзменении(Элемент)
	ЗаполнитьТипДоговора();
КонецПроцедуры
