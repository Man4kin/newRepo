
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()Экспорт
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиница) И НЕ ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ЭтоГруппа Тогда
		СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если ЗначениеЗаполнено(ЭтотОбъект.СкладПроизводства) Тогда 
		рнЗаказыИсходящие = РегистрыНакопления.ЗаказыИсходящие.СоздатьНаборЗаписей();
		рнЗаказыИсходящие.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка,Истина);
		рнЗаказыИсходящие.Очистить();
		Для Каждого Строка Из ЭтотОбъект.Состав Цикл
			НоваяСтрока = рнЗаказыИсходящие.Добавить();
			НоваяСтрока.Номенклатура = Строка.Номенклатура;
			НоваяСтрока.ПоДокументу = ЭтотОбъект.Ссылка;
			НоваяСтрока.Количество = Строка.Количество;
			НоваяСтрока.Период = ЭтотОбъект.Дата;
			НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход; 
			рнЗаказыИсходящие.Записать();		
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если НЕ ЭтотОбъект.ЭтоНовый() Тогда
	//	Отказ = РаботаСФормамиСервер.ЗапрещеноРедактировать(ЭтотОбъект.Ссылка);
	//	Если Отказ Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;	
КонецПроцедуры
