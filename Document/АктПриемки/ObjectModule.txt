Процедура ЗаполнитьПоПланируемойПоставке(ДокументОснование)
	
	
	ЭтотОбъект.ДокОснование = ДокументОснование;
	Если ТипЗнч(ДокументОснование.Контрагент) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ТекстСообщения = НСтр("ru='Запрещен ввод на основании для перемещений между структурными единицами!'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	
	//Если ДокументОснование.Статус = Перечисления.СтатусыПланируемойПоставки.Закрыт ИЛИ ДокументОснование.Статус = Перечисления.СтатусыПланируемойПоставки.Черновик Тогда
	//	ТекстСообщения = НСтр("ru='Запрещен ввод на основании документа со статусом ""Закрыт"" или ""Черновик""!'");
	//	ВызватьИсключение ТекстСообщения;
	//КонецЕсли;	
	
	ЭтотОбъект.Фирма   = ДокументОснование.Фирма;
	ЭтотОбъект.Контрагент   = ДокументОснование.Контрагент;
	ЭтотОбъект.Грузоотправитель   = ДокументОснование.Контрагент;
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПланируемаяПоставкаСостав.Номенклатура,
	|	ПланируемаяПоставкаСостав.ЕдиницаИзмерения,
	|	ПланируемаяПоставкаСостав.Коэффициент,
	|	ПланируемаяПоставкаСостав.Количество,
	|	ПланируемаяПоставкаСостав.Количество КАК КоличествоПоДокументу,
	|	ПланируемаяПоставкаСостав.Цена,
	|	ПланируемаяПоставкаСостав.Сумма,
	|	ПланируемаяПоставкаСостав.Сумма КАК СуммаПоДокументу,
	|	ПланируемаяПоставкаСостав.СуммаНДС,
	|	ПланируемаяПоставкаСостав.СтавкаНДС
	|ИЗ
	|	Документ.ПланируемаяПоставка.Состав КАК ПланируемаяПоставкаСостав
	|ГДЕ
	|	ПланируемаяПоставкаСостав.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",ДокументОснование);
	ТЗОснование = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТЗ из ТЗОснование Цикл
		НоваяСтрока = ЭтотОбъект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
		НоваяСтрока.Ключ = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
КонецПроцедуры	

//{БредовЮГ 2015-06-05 Наряд 000152485 от 03.06.2015 14:41:15
Процедура ПроверитьВозможностьЗаписиАктаПриемки(Отказ)
	Если Склад.ТипСклада = Перечисления.ТипыСкладов.Фруктовый Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ВидТовара = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Товар)
	|	И Номенклатура.Ссылка В (&МассивНоменклатуры) ");
	Запрос.УстановитьПараметр("МассивНоменклатуры",Состав.ВыгрузитьКолонку("Номенклатура"));
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Если НЕ ЗначениеЗаполнено(ДокОснование) Тогда
			ОбщегоНазначенияСервер.СообщитьОбОшибкеЗаполненияПоля(ЭтотОбъект,"Запрещено записывать документ без документа основания",,Отказ);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//БредовЮГ 2015-06-05 Наряд 000152485 от 03.06.2015 14:41:15}

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланируемаяПоставка") Тогда
		//{БредовЮГ 2015-06-05 Наряд 000152485 от 03.06.2015 14:41:15
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	СтруктураПодчиненности.Ссылка
		|ИЗ
		|	КритерийОтбора.СтруктураПодчиненности(&ДокументОснование) КАК СтруктураПодчиненности
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(СтруктураПодчиненности.Ссылка) = ТИП(Документ.АктПриемки)");
		Запрос.УстановитьПараметр("ДокументОснование",ДанныеЗаполнения);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ЗаполнитьПоПланируемойПоставке(ДанныеЗаполнения);		
		Иначе
			ВызватьИсключение НСтр("ru = 'На основании планируемой поставки уже введен акт приемки'");
		КонецЕсли;
		//БредовЮГ  2015-06-05 Наряд 000152485 от 03.06.2015 14:41:15 } 
	КонецЕсли;
	ИнициализироватьДокумент();
КонецПроцедуры

Процедура ИнициализироватьДокумент()Экспорт
	Автор = ПараметрыСеанса.ТекущийПользователь;
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(Контрагент.Валюта) Тогда
			Валюта = Контрагент.Валюта;
		Иначе
			Валюта = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.Валюта;
		КонецЕсли;
		СтруктураКурса = РаботаСКурсамиВалют.ЗаполнитьДанныеКурсаДляВалюты(Валюта);
		Курс = СтруктураКурса.Курс;
		Кратность = СтруктураКурса.Кратность;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Фирма) Тогда
		Фирма = ХранилищеНастроекДанныхФорм.Загрузить("АктПриемки", "Фирма");	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;	
	Если НЕ ЗначениеЗаполнено(ТипДоговора) Тогда
		ТипДоговора = Перечисления.ТипыДоговоров.КупляПродажа;
	КонецЕсли;	
	Если НЕ ЗначениеЗаполнено(ПредстСотр) Тогда
		ПредстСотр = ПараметрыСеанса.ТекущийПользователь;;
	КонецЕсли;	
	
	Товаровед = Справочники.Контрагенты.НайтиПоКоду(10025);
	ПредстФирма = Справочники.Организации.НайтиПоКоду(6);
	Кладовщик = Справочники.Контрагенты.НайтиПоКоду(10028);
КонецПроцедуры

Функция ЕстьНезаполненныеСтроки()
	Запрос = Новый Запрос(" 
	|Выбрать 
	|	ТЗ.НомерСтроки КАК НомерСтроки,
	|	ТЗ.Ключ КАК Ключ
	|ПОМЕСТИТЬ ВТСостав
	|ИЗ 
	|	&втСостав КАК ТЗ
	|ГДЕ
	|	ТЗ.РКоличество<>0 
	|;
	|//////////////////////////////////////////////////////////////////////////// 
	|Выбрать 
	|	ТЗ.Ключ КАК Ключ
	|ПОМЕСТИТЬ втПричины
	|ИЗ 
	|	&втПричины КАК ТЗ
	|;
	|//////////////////////////////////////////////////////////////////////////// 
	|Выбрать 
	|	А.НомерСтроки КАК НомерСтроки
	|из
	|	ВТсостав КАК А
	|ЛЕВОЕ СОЕДИНЕНИЕ втПричины КАК Б
	|ПО А.Ключ = Б.Ключ
	|ГДЕ
	|	Б.Ключ Есть NULL");
	Запрос.УстановитьПараметр("втСостав",Состав.Выгрузить());
	Запрос.УстановитьПараметр("втПричины",ПричиныРасхождений.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;	
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке №"+Выборка.НомерСтроки+" не указана причина расхождения");
	КонецЦикла;
	Возврат Истина;
КонецФункции

Процедура ПриЗаписи(Отказ)
	Отказ = ЕстьНезаполненныеСтроки();
	ПроверитьВозможностьЗаписиАктаПриемки(Отказ);
	
	Если НЕ Отказ Тогда
		Если ЗначениеЗаполнено(Фирма) Тогда
			ХранилищеНастроекДанныхФорм.Сохранить("АктПриемки", "Фирма", Фирма);
		КонецЕсли;
		//{ СИТЕК БрыляковЕЮ 2015-05-05  
		// Исходный текст --> 
		//Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		//	Узел = ПланыОбмена.ОбменЦВД.НайтиПоКоду(1);
		//	Если НЕ Узел.Пустая() Тогда
		//		ПланыОбмена.ЗарегистрироватьИзменения(Узел,ЭтотОбъект);	
		//	КонецЕсли;	
		//КонецЕсли;
		// <-- Исходный текст 
		// СИТЕК БрыляковЕЮ 2015-05-05 }
	КонецЕсли;
	//++Минин Меняем, в RS.WH, пользователя ws на текущего, если стутус акта приемки "Получен"
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Izh_СтатусEDIСообщений.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.Izh_СтатусEDIСообщений КАК Izh_СтатусEDIСообщений
		|ГДЕ
		|	Izh_СтатусEDIСообщений.Документ.Ссылка = &Документ";
		Запрос.УстановитьПараметр("Документ",ЭтотОбъект.Ссылка);
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл 
				Если Выборка.Статус = Перечисления.СтатусыEDIСообщений.Получен Тогда 
					ЭтотОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	//--Минин
	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	НаборЗаписей = РегистрыСведений.Izh_АдресаНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ОтправкаRMS",Истина);
	
	//++Минин 26.09.13 добавили 3 реквизита для подсчета итогов "Суммы по документу","Суммы по факту","Сумма расхождения"
	ВсегоПоДокументу = Состав.Итог("СуммаПоДокументу");
	ВсегоПоФакту = Состав.Итог("Сумма");
	ВсегоРасхождение = Состав.Итог("РСумма");
	//--Минин

КонецПроцедуры
