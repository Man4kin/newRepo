&НаСервереБезКонтекста
Функция ПолучитьЦенуНоменклатуры(Контрагент,Номенклатура)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	НоменклатураКонтрагента.Цена
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ГДЕ
	|	НоменклатураКонтрагента.Контрагент = &Контрагент
	|	И НоменклатураКонтрагента.Номенклатура = &Номенклатура");
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Цена;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИмяМетаданных(ДокССылка)
	Возврат ДокСсылка.Метаданные().Имя;	
КонецФункции

&НаКлиенте
Процедура ПодчиненныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекДанные = Элементы.ПодчиненныеДокументы.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	ДокСсылка = ТекДанные.Документ;
	Попытка
		СтруктураПараметров = Новый Структура("Ключ", ДокСсылка);
		ОткрытьФорму("Документ."+ПолучитьИмяМетаданных(ДокСсылка) + ".ФормаОбъекта", СтруктураПараметров,ЭтаФорма,ЭтаФорма);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура СоставКоличествоПоДокументуПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	ТекСтрока.СуммаПоДокументу = ТекСтрока.КоличествоПоДокументу*ТекСтрока.Цена;
	ТекСтрока.Количество = ТекСтрока.КоличествоПоДокументу;
	ТекСтрока.Сумма = ТекСтрока.Количество*ТекСтрока.Цена;
	ПересчетКоличества(ТекСтрока);
	ПересчетСуммы(ТекСтрока);
	ОбновитьТекстРасхожденияСуммы();
	УдалитьСтрокиПричин(ТекСтрока.Ключ);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьАдресаТоваров(КлючПоиска)
	МассивСтрок = Объект.Адреса.НайтиСтроки(Новый Структура("Ключ",КлючПоиска));
	Для Каждого СтрокаМассива из МассивСтрок Цикл
		Объект.Адреса.Удалить(СтрокаМассива);
	КонецЦикла;
	ОбновитьАдреса();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокиПричин(КлючПоиска)
	МассивСтрок = Объект.ПричиныРасхождений.НайтиСтроки(Новый Структура("Ключ",КлючПоиска));
	Для Каждого СтрокаМассива из МассивСтрок Цикл
		Объект.ПричиныРасхождений.Удалить(СтрокаМассива);
	КонецЦикла;
	ОбновитьПричиныРасхождений();
КонецПроцедуры

&НаКлиенте
Процедура СоставПередУдалением(Элемент, Отказ)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	УдалитьСтрокиПричин(ТекСтрока.Ключ);
	УдалитьАдресаТоваров(ТекСтрока.Ключ);
	ОбновитьПричиныРасхождений();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНеПлательщикНДС(Контрагент)
	Возврат Контрагент.НеПлательщикНДС;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтавкуБезНДС()
	Возврат Справочники.СтавкиНДС.БезНДС;
КонецФункции

&НаКлиенте
Функция  ЗаполнитьСтрокуИзПодбора(Форма,Объект,СтрокаПодбора,ЭлементПриемник,СтандартнаяОбработка,Количество = 1,ВыборГрупп = Ложь,ИмяСостава="Состав") экспорт
	ТекСтрока = неопределено;
	СтандартнаяОбработка = Ложь;
	Номенклатура = СтрокаПодбора.Номенклатура;
	если Номенклатура = неопределено тогда
		Возврат неопределено;
	конецесли;
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		Если НЕ выборГрупп и ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(Номенклатура,"Группа") = 1 тогда
			возврат неопределено;
		конецесли;
		Если ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(Номенклатура,"Группа") = 0 И НЕ ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(Номенклатура,"Транзакционный") тогда
			состояние("Добавлять можно только товары транзакционного уровня!",,,БиблиотекаКартинок.Предупреждение32);
			возврат неопределено;
		Конецесли;
	Иначе
		Попытка
			Если НЕ выборГрупп и ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(Номенклатура,"Группа") = 1	тогда
				возврат неопределено;
			конецесли;
		Исключение
			Если НЕ выборГрупп и ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(Номенклатура,"ЭтоГруппа")	тогда
				возврат неопределено;
			конецесли;
		КонецПопытки;	
	КонецЕсли;
	Если ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(Номенклатура,"УчетПоСоставу")	тогда
		СоставНабора = ОбработкаТабличныхЧастейСервер.ПолучитьСоставНабора(Номенклатура);
		Для Каждого Строка Из СоставНабора Цикл
			ЗаполнитьСтрокуИзПодбора(Форма,Объект,Строка,ЭлементПриемник,СтандартнаяОбработка,ВыборГрупп,ИмяСостава,Количество*Строка.Количество);	
		КонецЦикла;	
		возврат неопределено;
	КонецЕсли;
	Форма.Модифицированность = Истина;
	Строки = Объект[ИмяСостава].НайтиСтроки(Новый Структура("Номенклатура", Номенклатура));
	Если Строки.Количество() > 0 Тогда
		ТекСтрока = Строки[0];
		ТекСтрока.Количество = 	ТекСтрока.Количество + Количество;
		ТекСтрока.КоличествоПоДокументу = 	ТекСтрока.КоличествоПоДокументу + Количество;
	Иначе 
		НоваяСтрока = Объект[ИмяСостава].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПодбора);
		СтруктураДанных = Новый Структура;    	
		СтруктураДанных.Вставить("Номенклатура",	 НоваяСтрока.Номенклатура);
		СтруктураДанных.Вставить("ЕдиницаИзмерения", НоваяСтрока.ЕдиницаИзмерения);
		СтруктураДанных.Вставить("Коэффициент",НоваяСтрока.Коэффициент);
		СтруктураДанных.Вставить("СтавкаНДС", НоваяСтрока.Номенклатура);
		ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
		НоваяСтрока.Ключ = Новый УникальныйИдентификатор;
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.КоличествоПоДокументу = Количество;
		ТекСТрока = НоваяСтрока;
	КонецЕсли;
	Возврат ТекСтрока;	
конецФУнкции

&НаКлиенте
Процедура РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти) Экспорт
	СтрокаТабличнойЧасти.СуммаПоДокументу = Окр(СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.КоличествоПоДокументу,2);
	СтрокаТабличнойЧасти.Сумма = Окр(СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена,2);
КонецПроцедуры // РасчитатьСуммуВСтрокеТабличнойЧасти()

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КомпонентаУстановлена = РаботаСоСканеромШККлиент.ПроинициализироватьКомпоненту();
	СкладПриИзменении();
	ОбновитьПричиныРасхождений();
	ОбновитьАдреса();
	ОбновитьТекстРасхожденияСуммы();
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПересчетКоличества(СтрокаТЧ)
	СтрокаТЧ.РКоличество = СтрокаТЧ.Количество - СтрокаТЧ.КоличествоПоДокументу ;
	СтрокаТЧ.ПроцКол = (СтрокаТЧ.Количество*100/?(СтрокаТЧ.КоличествоПоДокументу=0,СтрокаТЧ.Количество,СтрокаТЧ.КоличествоПоДокументу))-100;
КонецПроцедуры

&НаКлиенте
Процедура СоставКоличествоПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	ТекСтрока.Сумма = Окр(ТекСтрока.Количество * ТекСтрока.Цена,2);
	ПересчетКоличества(ТекСтрока);
	ПересчетСуммы(ТекСтрока);
	ОбновитьТекстРасхожденияСуммы();
	УдалитьСтрокиПричин(ТекСтрока.Ключ);
КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммы(СтрокаТЧ)
	СтрокаТЧ.РСумма = СтрокаТЧ.Сумма - СтрокаТЧ.СуммаПоДокументу ;
	СтрокаТЧ.ПроцСумма = (СтрокаТЧ.Сумма*100/?(СтрокаТЧ.СуммаПоДокументу=0,СтрокаТЧ.Сумма,СтрокаТЧ.СуммаПоДокументу))-100;
КонецПроцедуры

&НаКлиенте
процедура ОбновитьТекстРасхожденияСуммы()
	Если Объект.Состав.Количество()=0 Тогда ТекстРасхождения=""; Возврат; КонецЕсли;
	ПроцентРасхождения = Окр(100-(Объект.Состав.Итог("Сумма")*100/?(Объект.Состав.Итог("СуммаПоДокументу")=0,1,Объект.Состав.Итог("СуммаПоДокументу"))),2);;
	Если ПроцентРасхождения=0 Тогда 
		 ТекстРасхождения = "";
		 Возврат;
	КонецЕсли;
	ТекстРасхождения =  "Расхождение суммы "+Формат(ПроцентРасхождения,"ЧГ=0")+" %";
КонецПроцедуры

&НаКлиенте
Процедура СоставСуммаПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	ПересчетСуммы(ТекСтрока);
	ОбновитьТекстРасхожденияСуммы();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПриходнаяНакладнаяОбработана(ССылка)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|		ПриходнаяНакладная.Ссылка
	|	ИЗ
	|		Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|	ГДЕ
	|		ПриходнаяНакладная.ДокАктПриемки = &ДокАктПриемки
	|		И НЕ ПриходнаяНакладная.БонуснаяПоставка	//И ПриходнаяНакладная.ОбработанЦВД
	|");
	Запрос.УстановитьПараметр("ДокАктПриемки",ССылка);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();
//	Возврат Ложь; // БРЕДОВ Временно поставил, НАДО РАЗОБРАТЬСЯ
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоПросмотр = Ложь;
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда;
		ДокументОбработан = ПриходнаяНакладнаяОбработана(Параметры.Ключ);
		//ТолькоПросмотр = ДокументОбработан;
		Элементы.ФормаСформироватьПН.Доступность = НЕ ДокументОбработан;
	КонецЕсли;
	Если НЕ ПараметрыСеанса.ЭтоЦентр Тогда
		Если ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
			НовыйМассив = Новый Массив();
			ТекущийФиксированныйМасив = Элементы.Контрагент.ПараметрыВыбора;
			Для Каждого Строка Из ТекущийФиксированныйМасив Цикл
				Если Строка.Имя = "Отбор.РазрешенаПрямаяПоставка" Тогда
					Продолжить;
				КонецЕсли;	
				НовыйМассив.Добавить(Строка);
			КонецЦикла;	
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элементы.Контрагент.ПараметрыВыбора = НовыеПараметры;
		КонецЕсли;
	Иначе
		Элементы.ФормаСформироватьПН.Доступность = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		Элементы.СоставПроценты.Видимость = Объект.Склад.ТипСклада = Перечисления.ТипыСкладов.Фруктовый;
	КонецЕсли;
	Элементы.ГруппаПодчиненныеДокументы.Видимость = Объект.ПодчиненныеДокументы.Количество()>0;	
	Если НЕ ТолькоПросмотр Тогда
		ТолькоПросмотр = ПараметрыСеанса.ЭтоЦентр;
	КонецЕсли;
	Если Не РольДоступна("ПолныеПрава") Тогда
		Элементы.СоставКоэффициент.Доступность = Ложь;//ШиловМВ 18.04.14 - заблокировать коэффициент(д.б.=1)
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Объект.Состав.Очистить();
	Объект.ПричиныРасхождений.Очистить();
	СкладПриИзменении();
	Объект.Грузоотправитель = Объект.Контрагент;
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "BarCodeScaner" И Событие = "BarCodeValue" Тогда
		Возврат;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставЦенаПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
	ОбновитьТекстРасхожденияСуммы();
КонецПроцедуры

&НаСервере
Функция ПолучитьПеречисленияНаСервере(КлючПоиска)
	Документ = РеквизитФормыВЗначение("Объект");
	МассивСтрок = Документ.ПричиныРасхождений.НайтиСтроки(Новый Структура("Ключ",КлючПоиска));
	тзПоиска = Документ.ПричиныРасхождений.ВыгрузитьКолонки("Причина,Количество");
	Если МассивСтрок.Количество()>0 Тогда
		тзПоиска = Документ.ПричиныРасхождений.Выгрузить(МассивСтрок,"Причина,Количество");	
	КонецЕсли;
	Возврат ПоместитьВоВременноеХранилище(тзПоиска,Новый УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ВидимостьПодчиненныхДокументов()
	Элементы.ГруппаДокумент.Видимость = Объект.ПодчиненныеДокументы.Количество()>0;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПричиныРасхождений()
	Для Каждого ТекСтрока из Объект.Состав Цикл
		ТекстВозврата = "";
		МассивСтрок = Объект.ПричиныРасхождений.НайтиСтроки(Новый Структура("Ключ",ТекСтрока.Ключ));
		Для Каждого СтрокаТЧ из МассивСтрок Цикл
			ТекстВозврата = ТекстВозврата + ?(ПустаяСтрока(ТекстВозврата),"",",")+СтрокаТЧ.Причина + ?(ЗначениеЗаполнено(СтрокаТЧ.Количество)," "+Строка(СтрокаТЧ.Количество),"");	
		КонецЦикла;
		ТекСтрока.ТекстПричиныРазницы = ТекстВозврата;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновитьАдреса()
	//{МининНА 2014-07-29 01:55:41 Наряд № 000121974 
	//Для Каждого ТекСтрока из Объект.Состав Цикл
	//	ТекстВозврата = "";
	//	МассивСтрок = Объект.Адреса.НайтиСтроки(Новый Структура("Ключ",ТекСтрока.Ключ));
	//	Для Каждого СтрокаТЧ из МассивСтрок Цикл
	//		ТекстВозврата = ТекстВозврата + ?(ПустаяСтрока(ТекстВозврата),"",",")+СтрокаТЧ.Адрес ;
	//	КонецЦикла;
	//	ТекСтрока.ТекстАдреса = ТекстВозврата;
	//КонецЦикла;
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Izh_АдресаНоменклатуры.Адрес,
		|	Izh_АдресаНоменклатуры.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.Izh_АдресаНоменклатуры КАК Izh_АдресаНоменклатуры
		|ГДЕ
		|	Izh_АдресаНоменклатуры.Номенклатура В(&Номенклатура)
		|	И Izh_АдресаНоменклатуры.Документ = &Документ";
		Запрос.УстановитьПараметр("Номенклатура",Объект.Состав.Выгрузить(,"Номенклатура"));
		Запрос.УстановитьПараметр("Документ",Объект.Ссылка);
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда 
			тзАдреса = Результат.Выгрузить();
			Для Каждого СтрокаТЧ Из Объект.Состав Цикл
				ТекстВозврата = "";
				МассивСтрок = тзАдреса.НайтиСтроки(Новый Структура("Номенклатура",СтрокаТЧ.Номенклатура));
				Для Каждого Строка из МассивСтрок Цикл
					ТекстВозврата = ТекстВозврата + ?(ПустаяСтрока(ТекстВозврата),"",",")+Строка.Адрес ;
				КонецЦикла;
				СтрокаТЧ.ТекстАдреса = ТекстВозврата;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;			   
	//МининНА 2014-07-29 01:55:41 Наряд № 000121974} 
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВСтрокуТЧНаСервере(АдресХранилища,КлючПоиска)
	спЗаписи = Новый СписокЗначений;
	МассивСтрок = Объект.ПричиныРасхождений.НайтиСтроки(Новый Структура("Ключ",КлючПоиска));
	Для Каждого СтрокаМассива из МассивСтрок Цикл
		Объект.ПричиныРасхождений.Удалить(СтрокаМассива);
	КонецЦикла;
	тзПричин = ПолучитьИзВременногоХранилища(АдресХранилища);
	Для Каждого СтрокаТЗ из тзПричин Цикл
		НоваяСтрока = Объект.ПричиныРасхождений.Добавить();
		НоваяСтрока.Ключ = КлючПоиска;
		НоваяСтрока.Причина = СтрокаТЗ.Причина;
		НоваяСтрока.Количество = СтрокаТЗ.Количество;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВСтрокуТЧАдресаНаСервере(АдресХранилища,КлючПоиска)
	спЗаписи = Новый СписокЗначений;
	МассивСтрок = Объект.Адреса.НайтиСтроки(Новый Структура("Ключ",КлючПоиска));
	Для Каждого СтрокаМассива из МассивСтрок Цикл
		Объект.Адреса.Удалить(СтрокаМассива);
	КонецЦикла;
	тзАдреса = ПолучитьИзВременногоХранилища(АдресХранилища);
	Для Каждого СтрокаТЗ из тзАдреса Цикл
		НоваяСтрока = Объект.Адреса.Добавить();
		НоваяСтрока.Ключ = КлючПоиска;
		НоваяСтрока.Адрес = СтрокаТЗ.Адрес;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПоместитьВоВременноеХранилищеНаСервереАдреса(ВходящийКлюч)
	Документ = РеквизитФормыВЗначение("Объект");
	МассивСтрок = Документ.Адреса.НайтиСтроки(Новый Структура("Ключ",ВходящийКлюч));
	тзПоиска = Документ.Адреса.ВыгрузитьКолонки("Адрес");
	Если МассивСтрок.Количество()>0 Тогда
		тзПоиска = Документ.Адреса.Выгрузить(МассивСтрок,"Адрес");	
	КонецЕсли;
	Возврат ПоместитьВоВременноеХранилище(тзПоиска,Новый УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока=Неопределено Тогда Возврат; КонецЕсли;
	Если Поле.Имя = "СоставТекстПричиныРазницы" Тогда
		СтандартнаяОбработка = Ложь;
		Если ТекСтрока.РКоличество=0 Тогда
			Возврат;
		КонецЕсли;
		АдресХранилища = ПолучитьПеречисленияНаСервере(ТекСтрока.Ключ);
		ПараметрыПодбора = Новый Структура("Адрес,КоличествоРасхождения",АдресХранилища,?(ТекСтрока.РКоличество>0,ТекСтрока.РКоличество,-ТекСтрока.РКоличество));
		ФормаПодбора = ПолучитьФорму("Документ.АктПриемки.Форма.ФормаВыбораПричин",ПараметрыПодбора);
		Если ФормаПодбора.ОткрытьМодально()=КодВозвратаДиалога.ОК Тогда
			ЗаписатьВСтрокуТЧНаСервере(АдресХранилища,ТекСтрока.Ключ);	
			ОбновитьПричиныРасхождений();
		КонецЕсли;
	ИначеЕсли Поле.Имя = "СоставТекстАдреса" Тогда
		СтандартнаяОбработка = Ложь;
		//{МининНА 2014-07-29 01:55:41 Наряд № 000121974 
		//{БредовЮГ 2015-04-13 Наряд 000147760 от 13.04.2015 11:59:17
		//Если ЗначениеЗаполнено(Параметры.Ключ) И (ТекущаяДата()<=(Объект.Дата+12*3600)) Тогда
		Если ЗначениеЗаполнено(Параметры.Ключ) Тогда
		//БредовЮГ  2015-04-13 Наряд 000147760 от 13.04.2015 11:59:17 } 	
			ТекСтрока = Элементы.Состав.ТекущиеДанные;	
			Данные = Новый Структура;
			Данные.Вставить("Док",Объект.Ссылка);
			Данные.Вставить("Номенклатура",ТекСтрока.Номенклатура);
			Результат = ОткрытьФормуМодально("ОбщаяФорма.Izh_ФормаВыбораАдресов",Данные);
			Если Результат = Истина Тогда
				//ЗаписатьВСтрокуТЧАдресаНаСервере(АдресХранилища,ТекСтрока.Ключ);
				ОбновитьАдреса();
			КонецЕсли;
		КонецЕсли;	
		//МининНА 2014-07-29 01:55:41 Наряд № 000121974} 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент=Неопределено)
	ЭтоФруктовыйСклад = Ложь;
	ЭтоМестный = Ложь;
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		ЭтоФруктовыйСклад = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Склад,"ТипСклада") = ПредопределенноеЗначение("Перечисление.ТипыСкладов.Фруктовый");
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ЭтоМестный = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Контрагент,"Местный");
	КонецЕсли;
	Элементы.СоставПроценты.Видимость = ЭтоФруктовыйСклад;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если НЕ Окно = АктивноеОкно() Тогда
		Окно.Активизировать();
	КонецЕсли;
	ОбновитьПричиныРасхождений();
	ОбновитьАдреса();
КонецПроцедуры

&НаКлиенте
процедура ОповеститьОСозданииДокументов()
	Для Каждого СтрокаТЧ из Объект.ПодчиненныеДокументы Цикл
		ПоказатьОповещениеПользователя("Сформирован документ",ПолучитьНавигационнуюСсылку(СтрокаТЧ.Документ),СтрокаТЧ.Документ,);	
		ИсторияРаботыПользователя.Добавить(СтрокаТЧ.Документ);
	КонецЦикла;
КонецПроцедуры 

&НаСервереБезКонтекста 
Функция ПометитьНаУдалениеПодчиненныеДокументы(АктОбъект)
	Попытка
		Для Каждого СтрокаТЧ из АктОбъект.ПодчиненныеДокументы Цикл
			ДокОбъект =	СтрокаТЧ.Документ.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
		АктОбъект.ПодчиненныеДокументы.Очистить();
		Возврат Истина
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
	КонецПопытки; 
	Возврат Ложь;
КонецФункции

&НаСервере
//Возвращает структуру с полями
// *Ключ          				*Значение
// ПриходнаяНакладная       	ДокументСсылка.ПриходнаяНакладная
// ПриходнаяНакладнаяБонусная   ДокументСсылка.ПриходнаяНакладная
// СписаниеТоваров       		ДокументСсылка.КоррекцияЗапасов
// Перемещение       			ДокументСсылка.Перемещение
// Неопознанный       			ДокументСсылка.*
Функция НайтиПодчиненныеДокументы()
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	СтруктураВозврата = Новый Структура;
	тзПодчиненныеДокументы = ДокОбъект.ПодчиненныеДокументы.Выгрузить();
	Если тзПодчиненныеДокументы.Количество()=0 Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
		
	Запрос = Новый Запрос("
	|Выбрать 
	|	ТЗ.Документ КАК Документ
	|ПОМЕСТИТЬ втПодчиненныеДокументы
	|ИЗ 
	|	&тзВходящая КАК ТЗ
	|;
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА АктПриемкиПодчиненныеДокументы.Документ ССЫЛКА Документ.ПриходнаяНакладная
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(АктПриемкиПодчиненныеДокументы.Документ КАК Документ.ПриходнаяНакладная).БонуснаяПоставка
	|						ТОГДА ""ПриходнаяНакладнаяБонусная""
	|					ИНАЧЕ ""ПриходнаяНакладная""
	|				КОНЕЦ
	|		КОГДА АктПриемкиПодчиненныеДокументы.Документ ССЫЛКА Документ.КоррекцияЗапасов
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ВЫРАЗИТЬ(АктПриемкиПодчиненныеДокументы.Документ КАК Документ.КоррекцияЗапасов).Оприходование
	|						ТОГДА ""СписаниеТоваров""
	|				КОНЕЦ
	|		КОГДА АктПриемкиПодчиненныеДокументы.Документ ССЫЛКА Документ.Перемещение
	|			ТОГДА ""Перемещение""
	|		ИНАЧЕ ""Неопознанный""
	|	КОНЕЦ КАК Ключ,
	|	АктПриемкиПодчиненныеДокументы.Документ КАК Значение
	|ИЗ
	|	втПодчиненныеДокументы КАК АктПриемкиПодчиненныеДокументы");	
	Запрос.УстановитьПараметр("тзВходящая",тзПодчиненныеДокументы);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураВозврата.Вставить(Выборка.Ключ,Выборка.Значение);	
	КонецЦикла;
	Возврат СтруктураВозврата;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРезультатПриемки(ДокОбъект,ВидРезультата)
	тзСостав = ДокОбъект.Состав.Выгрузить();
	Запрос = Новый Запрос("ВЫБРАТЬ
	|*	
	|ПОМЕСТИТЬ ТЧСостав
	|ИЗ
	|	&тзСостав КАК тзСостав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тзПодчиненные.Ключ,
	|	тзПодчиненные.Причина,
	|	тзПодчиненные.Количество
	|ПОМЕСТИТЬ ТЧПодчиненные
	|ИЗ
	|	&тзПодчиненные КАК тзПодчиненные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧСостав.Номенклатура,
	|	ТЧСостав.ЕдиницаИзмерения,
	|	ТЧСостав.Коэффициент,
	|	ВЫБОР КОГДА ТЧСостав.РКоличество<0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * ТЧСостав.РКоличество КАК КоличествоРасхождения,
	|	ВЫБОР КОГДА ТЧСостав.РСумма<0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * ТЧСостав.РСумма КАК СуммаРасхождения,
	|	ВЫБОР КОГДА ТЧСостав.ПроцСумма<0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * ТЧСостав.ПроцСумма КАК ПроцентСуммыРасхождения,
	|	ВЫБОР КОГДА ТЧСостав.ПроцКол<0 ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * ТЧСостав.ПроцКол КАК ПроцентКоличестваРасхождения,
	|	ВЫБОР КОГДА ТЧСостав.РКоличество<0 ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ВидРасхождения,
	|	ТЧСостав.Цена,
	|	ТЧСостав.СтавкаНДС,
	|	ЕстьNULL(ТЧПодчиненные.Количество,0) КАК Количество,
	|	ТЧСостав.Цена * ЕстьNULL(ТЧПодчиненные.Количество,0) КАК Сумма
	|ИЗ
	|	ТЧСостав КАК ТЧСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧПодчиненные КАК ТЧПодчиненные
	|		ПО ТЧСостав.Ключ = ТЧПодчиненные.Ключ
	|			И ТЧПодчиненные.Причина В (&ВидРезультата)
	|ГДЕ
	|	НЕ ТЧПодчиненные.Причина ЕСТЬ NULL 
	|	И ТЧПодчиненные.Количество <> 0");
	Запрос.УстановитьПараметр("тзСостав",ДокОбъект.Состав.Выгрузить());
	Запрос.УстановитьПараметр("ВидРезультата",ВидРезультата);
	Запрос.УстановитьПараметр("тзПодчиненные",ДокОбъект.ПричиныРасхождений.Выгрузить());
	Возврат Запрос.Выполнить().Выгрузить();;
КонецФункции

&НаСервере
Процедура СформироватьПНвМагазинеСервер()
	//надо дописать, когда для магазинов будем делать
КонецПроцедуры

&НаСервере
Функция СформироватьНаСервереФРОВМестный(ВходящаяСтруктура)
	НачатьТранзакцию();
	ДокументАктОбъект = РеквизитФормыВЗначение("Объект");
	тзДанныеТЧАкта = ДокументАктОбъект.Состав.Выгрузить();
	// удаляем строки с количеством 0 
	МассивСтрок = тзДанныеТЧАкта.НайтиСтроки(Новый Структура("Количество",0));
	Для Каждого СтрокаМассива из МассивСтрок Цикл
		тзДанныеТЧАкта.Удалить(СтрокаМассива);
	КонецЦикла;
	
	ЕстьРасхождение = ЕстьРасхожденияКоличества(тзДанныеТЧАкта);  // тут меня уверили что всегда больше 0, хотя хз
	
	тзДанныеТЧАкта.Колонки.Добавить("СуммаНДС");
	Для Каждого СтрокаТЗ из тзДанныеТЧАкта Цикл
		//{БредовЮГ 2013-09-27 Ошибка при приходовании товара, наряд №000094940
		//СтрокаТЗ.Количество = СтрокаТЗ[?(ЕстьРасхождение,"Количество","КоличествоПоДокументу")];
		СтрокаТЗ.Количество = Мин(СтрокаТЗ.Количество,СтрокаТЗ.КоличествоПоДокументу);
		//БредовЮГ 2013-09-27 Ошибка при приходовании товара, наряд №000094940}
		СтрокаТЗ.КоличествоПоДокументу = СтрокаТЗ[?(ЕстьРасхождение,"Количество","КоличествоПоДокументу")];
		СтрокаТЗ.Сумма = СтрокаТЗ[?(ЕстьРасхождение,"Сумма","СуммаПоДокументу")];;
		СтрокаТЗ.СуммаНДС =Окр(СтрокаТЗ.СтавкаНДС.Ставка * СтрокаТЗ.Сумма / (100 + СтрокаТЗ.СтавкаНДС.Ставка),2); 
	КонецЦикла;
	Если НЕ ПометитьНаУдалениеПодчиненныеДокументы(ДокументАктОбъект) Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	Если ВходящаяСтруктура.Свойство("ПриходнаяНакладная") Тогда
		ДокОбъект = ВходящаяСтруктура.ПриходнаяНакладная.ПолучитьОбъект();
		ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
		ДокОбъект.Состав.Очистить();
		БуферНомер = ДокОбъект.Номер;
	Иначе
		ДокОбъект = Документы.ПриходнаяНакладная.СоздатьДокумент();
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
	ДокОбъект.Номер = "";
	ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
	ДокОбъект.ДокАктПриемки = Объект.Ссылка;
	ДокОбъект.СуммаИтого = тзДанныеТЧАкта.Итог("Сумма");
	ДокОбъект.СуммаНДСИтого = тзДанныеТЧАкта.Итог("СуммаНДС");
	ДокОбъект.Состав.Загрузить(тзДанныеТЧАкта);
	//++Минин
	Для Каждого Стр из ДокОбъект.Состав Цикл
		Если НЕ ЗначениеЗаполнено(Стр.ЦенаПротокола) Тогда 
			Стр.ЦенаПротокола = ПолучитьЦенаПротокола(ДокОбъект.Контрагент,ДокОбъект.Склад.Владелец,ДокОбъект.Дата,Стр.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	//--Минин    
	Попытка
		ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
		НоваяСтрока.Документ = ДокОбъект.Ссылка;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
	// накладная приходная бонус
	Если ЕстьРасхождение Тогда  
		спПричин = Новый СписокЗначений;
		спПричин.Добавить(Перечисления.РезультатПриемки.Излишек);
		спПричин.Добавить(Перечисления.РезультатПриемки.СкидкаНаБрак);
		ТЗИзлишки = ПолучитьРезультатПриемки(ДокументАктОбъект,спПричин);
		Если ТЗИзлишки.Количество()>0 Тогда
			Если ВходящаяСтруктура.Свойство("ПриходнаяНакладнаяБонусная") Тогда
				ДокОбъект = ВходящаяСтруктура.ПриходнаяНакладнаяБонусная.ПолучитьОбъект();
				ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
				ДокОбъект.Состав.Очистить();
				БуферНомер = ДокОбъект.Номер;
			Иначе
				ДокОбъект = Документы.ПриходнаяНакладная.СоздатьДокумент();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
			ДокОбъект.Номер = "";
			ДокОбъект.БонуснаяПоставка = Истина;
			ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
			ДокОбъект.ДокОснование = Неопределено;
			ДокОбъект.ДокАктПриемки = Объект.Ссылка;
			ДокОбъект.СуммаИтого = 0 ;
			ДокОбъект.СуммаНДСИтого = 0;
			Для Каждого СтрокаТЧ из ТЗИзлишки Цикл
				НоваяСтрока = ДокОбъект.Состав.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
				НоваяСтрока.КоличествоПоДокументу = СтрокаТЧ.КоличествоРасхождения;
				НоваяСтрока.Цена = 0;
				НоваяСтрока.Сумма = 0;//СтрокаТЧ.РКоличество * СтрокаТЧ.Цена;
				НоваяСтрока.СуммаНДС = 0; //Окр(СтрокаТЗ.СтавкаНДС.Ставка * НоваяСтрока.Сумма / (100 + СтрокаТЗ.СтавкаНДС.Ставка),2); 
			КонецЦикла;
			Попытка
				ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
				НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
				НоваяСтрока.Документ = ДокОбъект.Ссылка;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
				ОтменитьТранзакцию();
				Возврат Ложь;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	Попытка
		ДокументАктОбъект.Записать(РежимЗаписиДокумента.Запись);
		ЗначениеВРеквизитФормы(ДокументАктОбъект,"Объект");
		ЗафиксироватьТранзакцию();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки; 
	Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьРасхожденияКоличества(ВходящаяТЗ)
	Результат = Ложь;
	Для Каждого СтрокаТЗ из ВходящаяТЗ Цикл
		Если СтрокаТЗ.РКоличество= 0 Тогда Продолжить; КонецЕсли;
		Результат = Истина;
		Прервать;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция СформироватьНаСервереФРОВНеМестный(ВходящаяСтруктура)
	НачатьТранзакцию();
	ДокументАктОбъект = РеквизитФормыВЗначение("Объект");
	тзДанныеТЧАкта = ДокументАктОбъект.Состав.Выгрузить();
	
	тзДанныеТЧАкта.Колонки.Добавить("СуммаНДС");
	ЕстьРасхождение = ЕстьРасхожденияКоличества(тзДанныеТЧАкта);
	Если НЕ ПометитьНаУдалениеПодчиненныеДокументы(ДокументАктОбъект) Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	Для Каждого СтрокаТЗ из тзДанныеТЧАкта Цикл
		СтрокаТЗ.СуммаНДС =Окр(СтрокаТЗ.СтавкаНДС.Ставка * СтрокаТЗ.Сумма / (100 + СтрокаТЗ.СтавкаНДС.Ставка),2); 
	КонецЦикла;
	
	Если НЕ ЕстьРасхождение Тогда
		Если ВходящаяСтруктура.Свойство("ПриходнаяНакладная") Тогда
			ДокОбъект = ВходящаяСтруктура.ПриходнаяНакладная.ПолучитьОбъект();
			ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
			ДокОбъект.Состав.Очистить();
			БуферНомер = ДокОбъект.Номер;
		Иначе
			ДокОбъект = Документы.ПриходнаяНакладная.СоздатьДокумент();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
		ДокОбъект.Номер = "";
		ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
		ДокОбъект.ДокАктПриемки = Объект.Ссылка;
		ДокОбъект.СуммаИтого = тзДанныеТЧАкта.Итог("Сумма");
		ДокОбъект.СуммаНДСИтого = тзДанныеТЧАкта.Итог("СуммаНДС");
		ДокОбъект.Состав.Загрузить(тзДанныеТЧАкта);
		//++Минин
		Для Каждого Стр из ДокОбъект.Состав Цикл
			Если НЕ ЗначениеЗаполнено(Стр.ЦенаПротокола) Тогда 
				Стр.ЦенаПротокола = ПолучитьЦенаПротокола(ДокОбъект.Контрагент,ДокОбъект.Склад.Владелец,ДокОбъект.Дата,Стр.Номенклатура);
			КонецЕсли;
		КонецЦикла;
		//--Минин    
		Для Каждого СтрокаТЧ из ДокОбъект.Состав Цикл
			Если СтрокаТЧ.Количество = 0 Тогда
				СтрокаТЧ.Сумма = 0;
				СтрокаТЧ.СуммаНДС = 0;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
			ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
			НоваяСтрока.Документ = ДокОбъект.Ссылка;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
			ОтменитьТранзакцию();
			Возврат Ложь;
		КонецПопытки;
	Иначе
		// создаем обычную приходную накладну.
		Если ВходящаяСтруктура.Свойство("ПриходнаяНакладная") Тогда
			ДокОбъект = ВходящаяСтруктура.ПриходнаяНакладная.ПолучитьОбъект();
			ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
			ДокОбъект.Состав.Очистить();
			БуферНомер = ДокОбъект.Номер;
		Иначе
			ДокОбъект = Документы.ПриходнаяНакладная.СоздатьДокумент();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
		ДокОбъект.Номер = "";
		ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
		ДокОбъект.ДокАктПриемки = Объект.Ссылка;
		ДокОбъект.СуммаИтого = тзДанныеТЧАкта.Итог("Сумма");
		ДокОбъект.СуммаНДСИтого = тзДанныеТЧАкта.Итог("СуммаНДС");
		Для Каждого СтрокаТЗ из тзДанныеТЧАкта Цикл
			Если СтрокаТЗ.Количество = 0 Тогда Продолжить; КонецЕсли;
			НоваяСтрока = ДокОбъект.Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
			НоваяСтрока.КоличествоПоДокументу = СтрокаТЗ.Количество;
			НоваяСтрока.Цена = Окр(СтрокаТЗ.Сумма / СтрокаТЗ.Количество,2);
		КонецЦикла;
		Если ДокОбъект.Состав.Количество()>0 Тогда
			Попытка
				ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
				НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
				НоваяСтрока.Документ = ДокОбъект.Ссылка;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
				ОтменитьТранзакцию();
				Возврат Ложь;
			КонецПопытки;
		КонецЕсли;		
		
		
		
		спПричин = Новый СписокЗначений;
		спПричин.Добавить(Перечисления.РезультатПриемки.Брак);
		тзБрака = ПолучитьРезультатПриемки(ДокументАктОбъект,спПричин);		
		// создадим док ПриходнаяНакладнаяБонус 
		Если ВходящаяСтруктура.Свойство("ПриходнаяНакладнаяБонус") Тогда
			ДокОбъект = ВходящаяСтруктура.ПриходнаяНакладная.ПолучитьОбъект();
			ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
			ДокОбъект.Состав.Очистить();
			БуферНомер = ДокОбъект.Номер;
		Иначе
			ДокОбъект = Документы.ПриходнаяНакладная.СоздатьДокумент();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
		ДокОбъект.Номер = "";
		ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
		ДокОбъект.БонуснаяПоставка = Истина;
		ДокОбъект.ДокАктПриемки = Объект.Ссылка;
		ДокОбъект.СуммаИтого = 0;
		ДокОбъект.СуммаНДСИтого = 0;
		Для Каждого СтрокаТЧ из тзБрака Цикл
			Если СтрокаТЧ.ПроцентКоличестваРасхождения < 2 Тогда Продолжить; КонецЕсли;
			НоваяСтрока = ДокОбъект.Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
			НоваяСтрока.КоличествоПоДокументу = СтрокаТЧ.Количество;
			НоваяСтрока.Цена = 0;
			НоваяСтрока.Сумма = 0;//СтрокаТЧ.РКоличество * СтрокаТЧ.Цена;
			НоваяСтрока.СуммаНДС = 0; //Окр(СтрокаТЗ.СтавкаНДС.Ставка * НоваяСтрока.Сумма / (100 + СтрокаТЗ.СтавкаНДС.Ставка),2); 
		КонецЦикла;
		Если ДокОбъект.Состав.Количество()>0 Тогда
			Попытка
				ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
				НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
				НоваяСтрока.Документ = ДокОбъект.Ссылка;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
				ОтменитьТранзакцию();
				Возврат Ложь;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	Попытка
		ДокументАктОбъект.Записать(РежимЗаписиДокумента.Запись);
		ЗначениеВРеквизитФормы(ДокументАктОбъект,"Объект");
		ЗафиксироватьТранзакцию();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки; 
	Возврат Истина;
КонецФункции

&НаСервере
Функция СформироватьНаСервереНеФРОВНеМестный(ВходящаяСтруктура)
	НачатьТранзакцию();
	ДокументАктОбъект = РеквизитФормыВЗначение("Объект");
	тзДанныеТЧАкта = Объект.Состав.Выгрузить();
	
	ПроцентРасхождения = 100-(тзДанныеТЧАкта.Итог("Сумма")*100/тзДанныеТЧАкта.Итог("СуммаПоДокументу"));
	МодульПроцентРасхождения = ?(ПроцентРасхождения>0,ПроцентРасхождения,-ПроцентРасхождения);
	
	// удаляем строки с количеством 0 
	МассивСтрок = тзДанныеТЧАкта.НайтиСтроки(Новый Структура("Количество",0));
	Для Каждого СтрокаМассива из МассивСтрок Цикл
		тзДанныеТЧАкта.Удалить(СтрокаМассива);
	КонецЦикла;
	
	тзДанныеТЧАкта.Колонки.Добавить("СуммаНДС");
	Если МодульПроцентРасхождения>0.1 Тогда
		СтрокаКоличество = "Количество";
	Иначе
		СтрокаКоличество = "КоличествоПоДокументу";
	КонецЕсли;	
	
	спПричин = Новый СписокЗначений;
	спПричин.Добавить(Перечисления.РезультатПриемки.Брак);
	тзБрака = ПолучитьРезультатПриемки(ДокументАктОбъект,спПричин);
	
	Для Каждого СтрокаТЗ из тзДанныеТЧАкта Цикл
		СтруктураПоиска = Новый Структура("Номенклатура",СтрокаТЗ.Номенклатура);
		МассивСтрок = тзБрака.НайтиСтроки(СтруктураПоиска);
		КоличествоБрака = 0;
		Если МассивСтрок.Количество()>0 Тогда
			Если СтрокаКоличество = "Количество" Тогда
				КоличествоБрака = МассивСтрок[0].Количество;
			КонецЕсли;
		КонецЕсли;           
		СтрокаТЗ.Количество = СтрокаТЗ[СтрокаКоличество] + КоличествоБрака;
		СтрокаТЗ.Сумма = СтрокаТЗ.Количество*СтрокаТЗ.Цена;
		СтрокаТЗ.СуммаНДС =Окр(СтрокаТЗ.СтавкаНДС.Ставка * СтрокаТЗ.Сумма / (100 + СтрокаТЗ.СтавкаНДС.Ставка),2); 
	КонецЦикла;
	
	Если НЕ ПометитьНаУдалениеПодчиненныеДокументы(ДокументАктОбъект) Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	Если ВходящаяСтруктура.Свойство("ПриходнаяНакладная") Тогда
		ДокОбъект = ВходящаяСтруктура.ПриходнаяНакладная.ПолучитьОбъект();
		ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
		ДокОбъект.Состав.Очистить();
		БуферНомер = ДокОбъект.Номер;
	Иначе
		ДокОбъект = Документы.ПриходнаяНакладная.СоздатьДокумент();
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
	ДокОбъект.Номер = "";
	ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
	ДокОбъект.ДокАктПриемки = Объект.Ссылка;
	ДокОбъект.СуммаИтого = тзДанныеТЧАкта.Итог("Сумма");
	ДокОбъект.СуммаНДСИтого = тзДанныеТЧАкта.Итог("СуммаНДС");
	ДокОбъект.Состав.Загрузить(тзДанныеТЧАкта);
	//++Минин
	Для Каждого Стр из ДокОбъект.Состав Цикл
		Если НЕ ЗначениеЗаполнено(Стр.ЦенаПротокола) Тогда 
			Стр.ЦенаПротокола = ПолучитьЦенаПротокола(ДокОбъект.Контрагент,ДокОбъект.Склад.Владелец,ДокОбъект.Дата,Стр.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	//--Минин    
	Попытка
		ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
		НоваяСтрока.Документ = ДокОбъект.Ссылка;
		ДокПриход = ДокОбъект.Ссылка;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());		
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
	// перемещаем брак, если он есть
	Если тзБрака.Количество()>0 Тогда
		Если ВходящаяСтруктура.Свойство("Перемещение") Тогда
			ДокОбъект = ВходящаяСтруктура.Перемещение.ПолучитьОбъект();
			ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
			ДокОбъект.Состав.Очистить();
			БуферНомер = ДокОбъект.Номер;
		Иначе
			ДокОбъект = Документы.Перемещение.СоздатьДокумент();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
		ДокОбъект.Номер = "";
		ДокОбъект.СкладПолучатель = Справочники.Склады.НайтиПоКоду(106);  // ищем склад брак , хреново что через код
		ДокОбъект.Дата = ДокОбъект.Дата + 1;
		ДокОбъект.ДокОснование = ДокПриход;
		ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
		Для Каждого СтрокаТЧ из тзБрака Цикл
			НоваяСтрока = ДокОбъект.Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
		КонецЦикла;
		Попытка
			ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
			ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
			НоваяСтрока.Документ = ДокОбъект.Ссылка;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
			ОтменитьТранзакцию();
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	
	// если процент расхождения меньше 0.1%	
	Если МодульПроцентРасхождения<=0.1 И МодульПроцентРасхождения <> 0 Тогда  
		// накладная приходная бонус
		спПричин = Новый СписокЗначений;
		спПричин.Добавить(Перечисления.РезультатПриемки.Излишек);
		спПричин.Добавить(Перечисления.РезультатПриемки.СкидкаНаБрак);
		ТЗИзлишки = ПолучитьРезультатПриемки(ДокументАктОбъект,спПричин);
        Если ТЗИзлишки.Количество()>0 Тогда
			Если ВходящаяСтруктура.Свойство("ПриходнаяНакладнаяБонусная") Тогда
				ДокОбъект = ВходящаяСтруктура.ПриходнаяНакладнаяБонусная.ПолучитьОбъект();
				ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
				ДокОбъект.Состав.Очистить();
				БуферНомер = ДокОбъект.Номер;
			Иначе
				ДокОбъект = Документы.ПриходнаяНакладная.СоздатьДокумент();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
			ДокОбъект.Номер = "";
			ДокОбъект.БонуснаяПоставка = Истина;
			ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
			ДокОбъект.ДокОснование = Неопределено;
			ДокОбъект.ДокАктПриемки = Объект.Ссылка;
			ДокОбъект.СуммаИтого = 0 ;
			ДокОбъект.СуммаНДСИтого = 0;
			Для Каждого СтрокаТЧ из ТЗИзлишки Цикл
				НоваяСтрока = ДокОбъект.Состав.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
				НоваяСтрока.КоличествоПоДокументу = СтрокаТЧ.Количество;
				НоваяСтрока.Цена = 0;
				НоваяСтрока.Сумма = 0;//СтрокаТЧ.РКоличество * СтрокаТЧ.Цена;
				НоваяСтрока.СуммаНДС = 0; //Окр(СтрокаТЗ.СтавкаНДС.Ставка * НоваяСтрока.Сумма / (100 + СтрокаТЗ.СтавкаНДС.Ставка),2); 
			КонецЦикла;
			Попытка
				ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
				НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
				НоваяСтрока.Документ = ДокОбъект.Ссылка;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
				ОтменитьТранзакцию();
				Возврат Ложь;
			КонецПопытки;
		КонецЕсли;	
		
		спПричин = Новый СписокЗначений;
		спПричин.Добавить(Перечисления.РезультатПриемки.Недогруз);
		спПричин.Добавить(Перечисления.РезультатПриемки.ВнутритарнаяНедостача);
		ТЗНедостача = ПолучитьРезультатПриемки(ДокументАктОбъект,спПричин);
		// списание товаров
		Если ТЗНедостача.Количество()>0 Тогда
			Если ВходящаяСтруктура.Свойство("СписаниеТоваров") Тогда
				ДокОбъект = ВходящаяСтруктура.СписаниеТоваров.ПолучитьОбъект();
				ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
				ДокОбъект.Состав.Очистить();
				БуферНомер = ДокОбъект.Номер;
			Иначе
				ДокОбъект = Документы.КоррекцияЗапасов.СоздатьДокумент();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
			ДокОбъект.номер = "";
			ДокОбъект.ВидСписания = Справочники.ВидыСписания.НайтиПоКоду(113);
			ДокОбъект.Дата = ДокОбъект.Дата + 1;
			ДокОбъект.ДокОснование = ДокПриход;
			ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
			ДокОбъект.Основание = "Списание товара при расхождении суммы меньше 0.1%";
			Для Каждого СтрокаТЧ из ТЗНедостача Цикл
				НоваяСтрока = ДокОбъект.Состав.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЧ);
				НоваяСтрока.СуммаНДС =Окр(СтрокаТЗ.СтавкаНДС.Ставка * НоваяСтрока.Сумма / (100 + СтрокаТЗ.СтавкаНДС.Ставка),2); 
			КонецЦикла;
			Попытка
				ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
				НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
				НоваяСтрока.Документ = ДокОбъект.Ссылка;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
				ОтменитьТранзакцию();
				Возврат Ложь;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	Попытка
		ДокументАктОбъект.Записать(РежимЗаписиДокумента.Запись);
		ЗначениеВРеквизитФормы(ДокументАктОбъект,"Объект");
		ЗафиксироватьТранзакцию();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки; 
	Возврат Истина;
КонецФункции

&НаСервере
Функция СформироватьНаСервереНеФРОВМестный(ВходящаяСтруктура)
	НачатьТранзакцию();
	ДокументАктОбъект = РеквизитФормыВЗначение("Объект");
	тзДанныеТЧАкта = Объект.Состав.Выгрузить(,"Номенклатура,ЕдиницаИзмерения,Коэффициент,Цена,СтавкаНДС,Количество,Сумма");
	тзДанныеТЧАкта.Колонки.Добавить("КоличествоПоДокументу");
	тзДанныеТЧАкта.Колонки.Добавить("СуммаНДС");
	// удаляем строки с количеством 0 
	МассивСтрок = тзДанныеТЧАкта.НайтиСтроки(Новый Структура("Количество",0));
	Для Каждого СтрокаМассива из МассивСтрок Цикл
		тзДанныеТЧАкта.Удалить(СтрокаМассива);
	КонецЦикла;
	
	Для Каждого СтрокаТЗ из тзДанныеТЧАкта Цикл
		СтрокаТЗ.КоличествоПоДокументу = СтрокаТЗ.Количество;
		СтрокаТЗ.СуммаНДС =Окр(СтрокаТЗ.СтавкаНДС.Ставка * СтрокаТЗ.Сумма / (100 + СтрокаТЗ.СтавкаНДС.Ставка),2); 
	КонецЦикла;
	Если НЕ ПометитьНаУдалениеПодчиненныеДокументы(ДокументАктОбъект) Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	Если ВходящаяСтруктура.Свойство("ПриходнаяНакладная") Тогда
		ДокОбъект = ВходящаяСтруктура.ПриходнаяНакладная.ПолучитьОбъект();
		ДокОбъект.ПометкаУдаления = Не ДокОбъект.ПометкаУдаления;
		ДокОбъект.Состав.Очистить();
		БуферНомер = ДокОбъект.Номер;
	Иначе
		ДокОбъект = Документы.ПриходнаяНакладная.СоздатьДокумент();
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДокОбъект,ДокументАктОбъект);
	ДокОбъект.Номер = "";
	ДокОбъект.Комментарий = "Создан из "+Объект.Ссылка+"  ("+ТекущаяДатаСеанса()+")";
	ДокОбъект.ДокАктПриемки = Объект.Ссылка;
	ДокОбъект.СуммаИтого = тзДанныеТЧАкта.Итог("Сумма");
	ДокОбъект.СуммаНДСИтого = тзДанныеТЧАкта.Итог("СуммаНДС");
	ДокОбъект.Состав.Загрузить(тзДанныеТЧАкта.Скопировать());
	//++Минин
	Для Каждого Стр из ДокОбъект.Состав Цикл
		Если НЕ ЗначениеЗаполнено(Стр.ЦенаПротокола) Тогда 
			Стр.ЦенаПротокола = ПолучитьЦенаПротокола(ДокОбъект.Контрагент,ДокОбъект.Склад.Владелец,ДокОбъект.Дата,Стр.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	//--Минин    
	Для Каждого СтрокаТЧ из ДокОбъект.Состав Цикл
		Если СтрокаТЧ.Количество = 0 Тогда
			СтрокаТЧ.Сумма = 0;
			СтрокаТЧ.СуммаНДС = 0;
		КонецЕсли;
	КонецЦикла;
	Попытка
		ДокОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		НоваяСтрока = ДокументАктОбъект.ПодчиненныеДокументы.Добавить();
		НоваяСтрока.Документ = ДокОбъект.Ссылка;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
	Попытка
		ДокументАктОбъект.Записать(РежимЗаписиДокумента.Запись);
		ЗначениеВРеквизитФормы(ДокументАктОбъект,"Объект");
		ЗафиксироватьТранзакцию();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка: "+ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки; 
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура СформироватьПН(Команда)
		
	//{БредовЮГ 2014-11-23 Наряд №000134632
	Если Объект.ПодчиненныеДокументы.Количество()>0 Тогда
		Предупреждение("Сформировать документы с помощью документа ""Акт приемки"" можно только единожды");	
		Возврат;
	КонецЕсли;
	//БредовЮГ 2014-11-23 Наряд №000134632}
	
	МассивДокументов = Неопределено;
	Если ЭтаФорма.Модифицированность Тогда
		Предупреждение("Документ изменен,необходимо записать документ");
		Возврат;
	КонецЕсли;
	
	//dps+
	Если НЕ ЗначениеЗаполнено(Объект.ДатаПриемки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Формирование приходных накладных возможно только при заполненом реквизите <Дата приемки>",Объект,"Объект.ДатаПриемки");
		Возврат;
	КонецЕсли;
	//dps-
	//Если НЕ Объект.Проведен Тогда
	//	Предупреждение("Формирование приходных накладных возможно только из проведенного Акта приемки");
	//	Возврат;
	//КонецЕсли;
	
	//dps+ 15/07/07 131728
	ЦенаКорректна = Истина;
	Для каждого стр из Объект.Состав Цикл
		Если стр.Цена < стр.МПЦ Тогда 
			ЦенаКорректна = Ложь;
			Сообщить("Для номенклатуры " + стр.Номенклатура + " указана цена меньше МПЦ!");
		КонецЕсли;
	КонецЦикла;
	Если НЕ ЦенаКорректна Тогда
		Возврат;
	КонецЕсли;
	//dps- 15/07/07 131728
	
	Если Вопрос("Сформировать документ Накладая Приходная ?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	Местный = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Контрагент,"Местный");
	ТипСклада = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Склад,"ТипСклада");
	ТипCE = Разработка_Ижтрейдинг_Сервер.ПолучитьРеквизитаПараметраСЕанса("ТекущаяСтруктурнаяЕдиница","ТипСтруктурнойЕдиницы");
	СтруктураПодчиненных = НайтиПодчиненныеДокументы();
	Если ПустаяСтрока(Объект.НомерДокумента) И НЕ ЗначениеЗаполнено(Объект.ДатаДокумента)  Тогда
		Сообщить("Не заполнен номер или дата входящего документа"); 
		Возврат;
	КонецЕсли;
	ЗадатьВопрос = СтруктураПодчиненных.Свойство("ПриходнаяНакладная");
	Если ЗадатьВопрос Тогда
		Если Вопрос("На основании акта уже созданы документы, переоформить ? ",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;;		
		КонецЕсли;
	КонецЕсли;
	
	Если ТипCE=ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Склад") Тогда // это в RS.WH
		
		Если ТипСклада = ПредопределенноеЗначение("Перечисление.ТипыСкладов.Фруктовый") Тогда // если ФРОВ
			Если Местный Тогда // если местный
				Если СформироватьНаСервереФРОВМестный(СтруктураПодчиненных) тогда
					ОповеститьОСозданииДокументов();
				КонецЕсли;
			Иначе  // если не местный
				Если СформироватьНаСервереФРОВНеМестный(СтруктураПодчиненных) Тогда
					ОповеститьОСозданииДокументов();
				КонецЕсли;
			КонецЕсли;
		Иначе // если обычный склад
			Если Местный Тогда
				Если СформироватьНаСервереНеФРОВМестный(СтруктураПодчиненных) тогда
					ОповеститьОСозданииДокументов();
				КонецЕсли;
			Иначе
				Если СформироватьНаСервереНеФРОВНеМестный(СтруктураПодчиненных) Тогда
					ОповеститьОСозданииДокументов();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	ИначеЕсли ТипCE=ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Магазин") Тогда // будет в RS.Store
		
	КонецЕсли;
	ОбновитьПричиныРасхождений();
	ОбновитьАдреса();
	
	Элементы.ГруппаПодчиненныеДокументы.Видимость = Объект.ПодчиненныеДокументы.Количество()>0;	
	Если Объект.ПодчиненныеДокументы.Количество()>0 Тогда
		Для Каждого СтрокаТЧ из Объект.ПодчиненныеДокументы Цикл
			ОткрытьЗначение(СтрокаТЧ.Документ);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатТСДНаСервере(АдресХранилища)
	тзВременная = ПолучитьИзВременногоХранилища(АдресХранилища);
	УдалитьИзВременногоХранилища(АдресХранилища);
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Для Каждого СтрокаТЧ из ДокОбъект.Состав Цикл
		МассивСтрок = тзВременная.НайтиСтроки(Новый Структура("Номенклатура",СтрокаТЧ.Номенклатура));
		Если МассивСтрок.Количество()=0 Тогда
			СтрокаТЧ.Количество = 0;
			СтрокаТЧ.Сумма = 0;
		ИначеЕсли МассивСтрок.Количество()>0 Тогда // всегда добавляем в первую строку
			СтрокаТЧ.Количество = МассивСтрок[0].Количество;
			СтрокаТЧ.Сумма = СтрокаТЧ.Количество * СтрокаТЧ.Цена;
		КонецЕсли;
		Для Каждого СтрокаМассива из МассивСтрок Цикл
			тзВременная.Удалить(СтрокаМассива);
		КонецЦикла;
		МассивСтрок = ДокОбъект.ПричиныРасхождений.НайтиСтроки(Новый Структура("Ключ",СтрокаТЧ.Ключ));
		Для Каждого СтрокаМассива из МассивСтрок Цикл
			ДокОбъект.ПричиныРасхождений.Удалить(СтрокаМассива);
		КонецЦикла;

	КонецЦикла;
	Для Каждого СтрокаТЗ из тзВременная Цикл
		НоваяСтрока = ДокОбъект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
		НоваяСтрока.Цена = Разработка_Ижтрейдинг_Сервер.ПолучитьЦенуНоменклатуры(ДокОбъект.Контрагент,НоваяСтрока.Номенклатура);
		СтруктураДанных = Новый Структура;    	
		СтруктураДанных.Вставить("Номенклатура",	 НоваяСтрока.Номенклатура);
		СтруктураДанных.Вставить("ЕдиницаИзмерения", НоваяСтрока.ЕдиницаИзмерения);
		СтруктураДанных.Вставить("Коэффициент",НоваяСтрока.Коэффициент);
		СтруктураДанных.Вставить("СтавкаНДС", НоваяСтрока.Номенклатура);
		ОбработкаТабличныхЧастейСервер.ПолучитьДанныеОбъектов(СтруктураДанных);
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураДанных);
		НоваяСтрока.Ключ = Новый УникальныйИдентификатор;
		НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
		//serg
		НоваяСтрока.КоличествоПоДокументу = НоваяСтрока.Количество;
		НоваяСтрока.СуммаПоДокументу      = НоваяСтрока.Сумма;
		//serg
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДокОбъект,"Объект");
КонецПроцедуры

&НаСервере
Функция ПоместитьВовременноеХранилищеНаСервере()
	тзШаблон = Новый ТаблицаЗначений;
	тзШаблон.Колонки.Добавить("Контрагент");
	тзШаблон.Колонки.Добавить("Номенклатура");
	тзШаблон.Колонки.Добавить("Количество");
	Возврат ПоместитьВоВременноеХранилище(тзШаблон,ЭтаФорма.УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзТСД(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо сначало заполнить контрагента",Объект,"Объект.Контрагент");
		Возврат;	
	КонецЕсли;
	АдресХранилища = ПоместитьВоВременноеХранилищеНаСервере();
	СтруктураПараметровформы = Новый Структура("АдресХранилища,ВнешнийВызов,ВидДействия,СтруктураПараметров");
	СтруктураПараметровформы.АдресХранилища = АдресХранилища;
	СтруктураПараметровформы.ВнешнийВызов = Истина;
	СтруктураПараметровформы.ВидДействия = "Приемка";
	СтруктураПараметровформы.СтруктураПараметров = Новый Структура("ОтборКонтрагент",Объект.Контрагент);
	ФормаОбработки = ПолучитьФорму("Обработка.Izh_ТСД.Форма.ФормаОбработки",СтруктураПараметровформы,ЭтаФорма.УникальныйИдентификатор);
	Если ФормаОбработки.ОткрытьМодально()=КодВозвратаДиалога.ОК Тогда
		ОбработатьРезультатТСДНаСервере(АдресХранилища);
		Для Каждого СтрокаТЧ из Объект.Состав Цикл
			ПересчетКоличества(СтрокаТЧ);
			ПересчетСуммы(СтрокаТЧ);
		КонецЦикла;
		ОбновитьТекстРасхожденияСуммы();
	КонецЕсли;
КонецПроцедуры

//++Минин
Функция ПолучитьЦенаПротокола (Контрагент,СтруктурнаяЕдиница,ДатаДокумента,Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	МАКСИМУМ(НоменклатураКонтрагентаСрезПоследних.Цена) КАК Цена,
	|	СписокНоменклатуры.Группа,
	|	ВЫБОР
	|		КОГДА СписокНоменклатуры.ПометкаУдаления
	|			ТОГДА ВЫБОР
	|					КОГДА СписокНоменклатуры.Группа = 0
	|						ТОГДА 2
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНоменклатуры.Группа = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка,
	|	СписокНоменклатуры.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагентаСрезПоследних
	|		ПО СписокНоменклатуры.Ссылка = НоменклатураКонтрагентаСрезПоследних.Номенклатура
	|			И (НоменклатураКонтрагентаСрезПоследних.Контрагент = &Контрагент)
	|ГДЕ
	|	НЕ СписокНоменклатуры.ПростойНабор
	|	И (СписокНоменклатуры.Транзакционный
	|			ИЛИ СписокНоменклатуры.Группа = 1)
	|	И ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							НоменклатураКонтрагентаСрезПоследних.Номенклатура
	|						ИЗ
	|							РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагентаСрезПоследних
	|						ГДЕ
	|							НоменклатураКонтрагентаСрезПоследних.Контрагент = &Контрагент
	|							И (НоменклатураКонтрагентаСрезПоследних.ДатаПрекращенияПоставок > &ДатаДокумента
	|							ИЛИ НоменклатураКонтрагентаСрезПоследних.ДатаПрекращенияПоставок = ДатаВремя(1,1,1)))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							СтатусыНоменклатуры.Номенклатура
	|						ИЗ
	|							РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	|						ГДЕ
	|							СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|							И СтатусыНоменклатуры.Статус = ЗНАЧЕНИЕ(перечисление.статусытоваров.активный))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И СписокНоменклатуры.Ссылка = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	СписокНоменклатуры.Группа,
	|	СписокНоменклатуры.ПометкаУдаления,
	|	СписокНоменклатуры.Ссылка";
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница",СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("ДатаДокумента",ДатаДокумента);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда 
		Возврат 0;
	Иначе 
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Цена;
	КонецЕсли;		
КонецФункции


//{БредовЮГ 2015-05-20 Наряд 000150983 от 20.05.2015 12:13:30
#Область РаботаСПодборомНоменклатуры

&НаСервереБезКонтекста
Функция ТекстЗапросаПодборНоменклатуры()
	Возврат "ВЫБРАТЬ
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	МАКСИМУМ(НоменклатураКонтрагентаСрезПоследних.Цена) КАК Цена,
	|	СписокНоменклатуры.Группа,
	|	ВЫБОР
	|		КОГДА СписокНоменклатуры.ПометкаУдаления
	|			ТОГДА ВЫБОР
	|					КОГДА СписокНоменклатуры.Группа = 0
	|						ТОГДА 2
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНоменклатуры.Группа = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка,
	|	СписокНоменклатуры.Ссылка,
	|	СписокНоменклатуры.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагентаСрезПоследних
	|		ПО СписокНоменклатуры.Ссылка = НоменклатураКонтрагентаСрезПоследних.Номенклатура
	|			И (НоменклатураКонтрагентаСрезПоследних.Контрагент = &Контрагент)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							НоменклатураКонтрагентаСрезПоследних.Номенклатура
	|						ИЗ
	|							РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагентаСрезПоследних
	|						ГДЕ
	|							НоменклатураКонтрагентаСрезПоследних.Контрагент = &Контрагент
	|							И (НоменклатураКонтрагентаСрезПоследних.ДатаПрекращенияПоставок > &ДатаДокумента
	|								ИЛИ НоменклатураКонтрагентаСрезПоследних.ДатаПрекращенияПоставок = ДАТАВРЕМЯ(1, 1, 1)))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СписокНоменклатуры.Группа = 0
	|				ТОГДА СписокНоменклатуры.Ссылка В
	|						(ВЫБРАТЬ
	|							СтатусыНоменклатуры.Номенклатура
	|						ИЗ
	|							РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
	|						ГДЕ
	|							СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|							И СтатусыНоменклатуры.Статус = ЗНАЧЕНИЕ(перечисление.статусытоваров.активный))
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНоменклатуры.Код,
	|	СписокНоменклатуры.Наименование,
	|	СписокНоменклатуры.Группа,
	|	СписокНоменклатуры.ПометкаУдаления,
	|	СписокНоменклатуры.Ссылка,
	|	СписокНоменклатуры.Ссылка";
КонецФункции

&НаСервере
Функция ПодготовитьПараметрыДляПодбора() 
	СтруктураПараметровПодбора = Новый Структура("ТекстЗапроса,Параметры,АдресВременногоХранилища",);
	СтруктураПараметровПодбора.АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Неопределено,ЭтаФорма.УникальныйИдентификатор);
	СтруктураПараметрыЗапроса = Новый Структура();
	СтруктураПараметровПодбора.ТекстЗапроса = ТекстЗапросаПодборНоменклатуры();
	СтруктураПараметрыЗапроса.Вставить("Структурнаяединица",объект.структурнаяЕдиница);
	СтруктураПараметрыЗапроса.Вставить("Контрагент",объект.Контрагент);
	СтруктураПараметрыЗапроса.Вставить("датадокумента",объект.Дата);
	СтруктураПараметровПодбора.Параметры = СтруктураПараметрыЗапроса;
	Возврат СтруктураПараметровПодбора;	
КонецФункции

&НаСервере
Процедура ОбработатьПодборНаСервере(АдресХранилища)
	тзЗначений = ПолучитьИзВременногоХранилища(АдресХранилища);
	ЗначениеВРеквизитФормы(тзЗначений,"ВыбраннаяНоменклатура");
КонецПроцедуры


&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПараметрыФормы = ПодготовитьПараметрыДляПодбора();
	Если ОткрытьФормуМодально("ОбщаяФорма.ПодборНоменклатуры",Новый Структура("СтруктураПараметров",ПараметрыФормы),ЭтаФорма) <> "ОК" Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ОбработатьПодборНаСервере(ПараметрыФормы.АдресВременногоХранилища);
	БезНДС = ПолучитьСтавкуБезНДС();
	НеПлательщикНДС = ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") И ПолучитьНеПлательщикНДС(Объект.Контрагент);
	Для Каждого СтрокаКоллекции из ВыбраннаяНоменклатура Цикл
		ТекСтрока = ЗаполнитьСтрокуИзПодбора(ЭтаФорма,Объект,СтрокаКоллекции,Элементы.состав,СтандартнаяОбработка,СтрокаКоллекции.Количество);	
		Если НеПлательщикНДС Тогда
			ТекСтрока.СтавкаНДС = БезНДС;
		КонецЕсли;
		РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
		ПересчетСуммы(ТекСтрока);
		ПересчетКоличества(ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДокОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РезультатВыбора = ОткрытьФормуМодально("Документ.ПланируемаяПоставка.Форма.ФормаВыбора",Новый Структура("Отбор",Новый Структура("Контрагент",Объект.Контрагент)),ЭтаФорма);
	Если ЗначениеЗаполнено(РезультатВыбора) Тогда
		Объект.ДокОснование = РезультатВыбора;
	КонецЕсли;
КонецПроцедуры
	
#КонецОбласти
//БредовЮГ  2015-05-20 Наряд 000150983 от 20.05.2015 12:13:30 } 


