
&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры
 
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
	Если Настройки.Получить("ОтборПоГруппе") <> Неопределено Тогда
		ОтборПоГруппе = Настройки.Получить("ОтборПоГруппе");
		Элементы.ОтборПоГруппе.Пометка = ОтборПоГруппе;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Ссылка) или ЗначениеЗаполнено(Параметры.Основание) или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Настройки.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество);
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);	
		Если ТекСтрока <> Неопределено Тогда
			ТекСтрока.Код = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ТекСтрока.Номенклатура,"Код");
			ТекСтрока.ПодКласс = ОбщегоНазначенияСервер.ПолучитьПодКлассНоменклатуры(ТекСтрока.Номенклатура);
			ТекСтрока.Класс = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ТекСтрока.ПодКласс,"Родитель");
			ТекСтрока.Департамент = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ТекСтрока.Класс,"Родитель");
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если ОбщегоНазначенияСервер.ВГрафикеИнвентаризацийЕстьГруппы(Объект.ДокОснование) Тогда
		Сообщить("Документ создан на основании Графика Инвентаризаций. Добавлять строки запрещено." );
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "BarCodeScaner" И Событие = "BarCodeValue" Тогда
		Если Не ВводДоступен() Тогда
			КомпонентаСканераШК.СобытиеОбработано();
			Возврат;   
		КонецЕсли;
		СтруктураПодбора = ПолучитьСтруктуруЗапросаПодбора();
		СтрокаТЧ = РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВДокументах(ЭтаФорма,Объект,Элементы.Состав,Данные,СтруктураПодбора);
		КомпонентаСканераШК.СобытиеОбработано();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗапросаПодбора() Экспорт
	СтруктураПодбора = Новый Структура;
	СтруктураПодбора.Вставить("ТекстЗапроса",ПодборНоменклатуры.ТекстЗапроса);
	СтруктураПодбора.Вставить("Параметры",ПодборНоменклатуры.Параметры);
	Возврат СтруктураПодбора;
КонецФункции	


//Конец Процедуры и функции для организации подбора

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
		Настройки = ПолучитьНастройкуПодбора();
		ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Задача = ЭтаФорма.Параметры.ВыполняемаяЗадача;
	Если ЗначениеЗаполнено(Задача) Тогда
		УправлениеБизнесПроцессамиСервер.ВыполнитьЗадачу(Задача);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Задача = ЭтаФорма.Параметры.ВыполняемаяЗадача;
	Если ЗначениеЗаполнено(Задача) Тогда
		Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Задача,"Выполнена") Тогда
			Оповестить("ЗадачаВыполнена");
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("СтруктурнаяЕдиница",Объект.СтруктурнаяЕдиница));
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(ЭтаФорма);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодбора(Команда)
	ПараметрыПодбора = ОткрытьФормуМодально("ОбщаяФорма.НастройкаПодбора", Новый Структура("ЗапрашиватьКоличество", ЗапрашиватьКоличество));
	ЗапрашиватьКоличество = ПараметрыПодбора.ЗапрашиватьКоличество;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТоварыПоГруппе(Группа, ИмяКолонки = Неопределено)
	
	Если ОтборПоГруппе И Не ИмяКолонки = Неопределено Тогда
		Элементы.Состав.ОтборСтрок = Новый ФиксированнаяСтруктура(ИмяКолонки, Группа);
	Иначе
		Элементы.Состав.ОтборСтрок = Новый ФиксированнаяСтруктура();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоГруппе(Команда)
	
	ОтборПоГруппе = Не ОтборПоГруппе;
	Элементы.ОтборПоГруппе.Пометка = ОтборПоГруппе;
	СоставГруппПриАктивизацииСтроки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставГруппПриАктивизацииСтроки(Элемент)
	
	Если ОтборПоГруппе И Не Элементы.СоставГрупп.ТекущийЭлемент = Неопределено
		И Не Элементы.СоставГрупп.ТекущиеДанные = Неопределено Тогда
		
		ТекущийЭлементИмя = Элементы.СоставГрупп.ТекущийЭлемент.Имя;
		СоставГруппТекущиеДанные = Элементы.СоставГрупп.ТекущиеДанные;
		
		Если ТекущийЭлементИмя = "СоставГруппПодКласс" Тогда
			Если ЗначениеЗаполнено(СоставГруппТекущиеДанные.ПодКласс) Тогда
				Группа = СоставГруппТекущиеДанные.ПодКласс;
				ИмяКолонки = "ПодКласс";
			ИначеЕсли ЗначениеЗаполнено(СоставГруппТекущиеДанные.Класс) Тогда
				Группа = СоставГруппТекущиеДанные.Класс;
				ИмяКолонки = "Класс";
			Иначе//Если ЗначениеЗаполнено(СоставГруппТекущиеДанные.Департамент) Тогда
				Группа = СоставГруппТекущиеДанные.Департамент;
				ИмяКолонки = "Департамент";
			КонецЕсли;
		ИначеЕсли ТекущийЭлементИмя = "СоставГруппКласс" Тогда
			Если ЗначениеЗаполнено(СоставГруппТекущиеДанные.Класс) Тогда
				Группа = СоставГруппТекущиеДанные.Класс;
				ИмяКолонки = "Класс";
			Иначе//Если ЗначениеЗаполнено(СоставГруппТекущиеДанные.Департамент) Тогда
				Группа = СоставГруппТекущиеДанные.Департамент;
				ИмяКолонки = "Департамент";
			КонецЕсли;
		Иначе//Если ТекущийЭлементИмя = "СоставГруппДепартамент" Тогда
			Если ЗначениеЗаполнено(СоставГруппТекущиеДанные.Департамент) Тогда
				Группа = СоставГруппТекущиеДанные.Департамент;
				ИмяКолонки = "Департамент";
			КонецЕсли;
		КонецЕсли;
	Иначе
		Группа = Неопределено;
		ИмяКолонки = Неопределено;
	КонецЕсли;
	
	ПоказатьТоварыПоГруппе(Группа, ИмяКолонки);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПередУдалением(Элемент, Отказ)
	
	Если ОбщегоНазначенияСервер.ВГрафикеИнвентаризацийЕстьГруппы(Объект.ДокОснование) Тогда
		Сообщить("Документ создан на основании Графика Инвентаризаций. Удалять строки запрещено." );
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если НужноФильтроватьСклады() Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("Отбор",Новый Структура("Ссылка", ПолучитьСписокСкладов()));
		Результат = ОткрытьФормуМодально("Справочник.Склады.ФормаВыбора",ПараметрыФормы,ЭтаФорма);
		Если Результат <> Неопределено Тогда
			Объект.Склад = Результат;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НужноФильтроватьСклады()
	Результат = Ложь;
	Если НЕ Объект.ДокОснование.Пустая() Тогда
		Если Объект.ДокОснование.ТипПередачиРезультатов = Перечисления.ТипыПередачиРезультатовИнвентаризации.ИзлишкиНедостачи Тогда
			Результат = Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьСписокСкладов()
	Возврат Объект.ДокОснование.Склады.ВыгрузитьКолонку("Склад");
КонецФункции

&НаКлиенте
Процедура НайтиТоварВСпискеПоШтрихкоду(Команда)
	
	ШК = "";
	Если Не ВвестиЗначение(ШК, НСтр("ru = 'Введите штрихкод'")) Тогда
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ШК) Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура = НайтиНоменклатуруПоШКСервер(ШК);
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ОбработкаТабличныхЧастейКлиент.НайтиВТЧТовар(Номенклатура, ЭтаФорма, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиНоменклатуруПоШКСервер(ШК)

	сткДанныеПоШК = ШтриховыеКоды.ПрочитатьШтрихкод(ШК);
	мНоменклатура = сткДанныеПоШК.мНоменклатура;
	Если мНоменклатура.Количество() = 0 Тогда
		Рез = Справочники.Номенклатура.ПустаяСсылка();
	Иначе
		Рез = мНоменклатура[0];
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

