Функция ПечатьИНВ3(МассивОбъектов,ОбъектыПечати)
	для каждого Объект из МассивОбъектов Цикл
		Запрос       = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.СтруктурнаяЕдиница);
		Запрос.УстановитьПараметр("ТекущееВремя",Объект.ссылка.дата);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИнвентаризационнаяОпись.Ссылка.Номер КАК НомерДокумента,
		|	ИнвентаризационнаяОпись.Ссылка.Дата КАК ДатаДокумента,
		|	ИнвентаризационнаяОпись.Ссылка.Дата КАК ДатаСнятияОстатков,
		|	ИнвентаризационнаяОпись.Ссылка.Фирма КАК Фирма,
		|	ИнвентаризационнаяОпись.Ссылка.Склад.Представление КАК ПредставлениеСклада,
		|	ИнвентаризационнаяОпись.НомерСтроки КАК Номер,
		|	ИнвентаризационнаяОпись.Номенклатура,
		|	ЕСТЬNULL(ИнвентаризационнаяОпись.Количество, 0) КАК Количество,
		|	ИнвентаризационнаяОпись.Номенклатура.Наименование КАК ТоварНаименование,
		|	ИнвентаризационнаяОпись.Номенклатура.Код КАК ТоварКод,
		|	ЦеныНоменклатуры.Цена КАК Цена
		|ИЗ
		|	Документ.ИнвентаризационнаяОпись.Состав КАК ИнвентаризационнаяОпись
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|			ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|		ИЗ
		|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦеныНоменклатурыСрезПоследних
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|					МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID
		|				ИЗ
		|					РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦеныНоменклатурыСрезПоследних
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|							ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|							МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Период) КАК Период
		|						ИЗ
		|							РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦеныНоменклатурыСрезПоследних
		|						ГДЕ
		|							ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|							ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		|						ПО ЦеныНоменклатурыСрезПоследних.Период = ВложенныйЗапрос.Период
		|							И ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
		|							И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
		|				ГДЕ
		|					ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
		|				ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
		|					И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
		|					И ЦеныНоменклатурыСрезПоследних.ID = ВложенныйЗапрос.ID) КАК ЦеныНоменклатуры
		|		ПО (ЦеныНоменклатуры.Номенклатура = ИнвентаризационнаяОпись.Номенклатура)
		|			И (ЦеныНоменклатуры.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = ИнвентаризационнаяОпись.Номенклатура.БазоваяЕдиницаИзмерения)
		|ГДЕ
		|	ИнвентаризационнаяОпись.Ссылка = &ТекущийДокумент
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер";
		Шапка = Запрос.Выполнить().Выбрать();
		
		Шапка.Следующий();
		ВыборкаСтрокТовары = Шапка.Выбрать();
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризационнаяОпись_ИНВ3";
		//Макет = ПолучитьОбщийМакет("ИНВ3");
		Макет = УправлениеПечатью.ПолучитьМакет("ОбщийМакет.ИНВ3");
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		СведенияОбОрганизации = ОбработкаПечатиСервер.СведенияОЮрФизЛице(Шапка.Фирма, Шапка.ДатаДокумента,Объект.СтруктурнаяЕдиница);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = Обработкапечатисервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
		ОбластьМакета.Параметры.ДатаСнятияОстатков       = Шапка.ДатаСнятияОстатков;
		ОбластьМакета.Параметры.НомерДокумента           = Шапка.НомерДокумента;
		ОбластьМакета.Параметры.Основание           	 = СокрЛП(Объект.Основание);
		ОбластьМакета.Параметры.Подразделение          	 = СокрЛП(Объект.СтруктурнаяЕдиница.Наименование)+", "+СокрЛП(Объект.Склад.Наименование);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокНаСтранице = 19;
		СтрокШапки      = 5;
		СтрокПодвала    = 5;
		НомерСтраницы   = 2;
		Ном             = 0;
		КолвоСтрокПоСтранице = 0;
		КолвоЕдиницПоСтранице = 0;
		КолвоПостранице      = 0;
		СуммаПоСтранице = 0;
		ИтогСумма = 0;
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		// Выводим многострочную часть докмента
		ВыборкаСтрокТовары = Шапка.Выбрать();
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ИтогСумма = 0;
		ИтогоПоОписиФактКоличествоСтр = 0;
		ИтогоПоОписиФактСуммаСтр = 0;
		ОбластьИтогоПоОписи = Макет.ПолучитьОбласть("ИтогоПоОписи");
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если Не ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
			Ном = Ном + 1;
			//Начинаем новую страницу, если предыдущая строка была последней на странице
			//или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
				ОбластьИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
				ОбластьИтогоПоСтранице.Параметры.ИтогоФактКоличество = КолвоПоСтранице; 
				ОбластьИтогоПоСтранице.Параметры.ИтогоФактСумма = СуммаПоСтранице;
				ТабДокумент.Вывести(ОбластьИтогоПоСтранице);
				
				ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
				ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью =ОбработкаПечатиСервер.КоличествоПрописью(КолвоПостранице);
				ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью =ОбработкаПечатиСервер.СформироватьСуммуПрописью(СуммаПоСТранице,Объект.СтруктурнаяЕдиница.Валюта);
				ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ОбработкаПечатиСервер.КоличествоПрописью(КолвоСтрокПоСтранице);
				ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью     = ОбработкаПечатиСервер.КоличествоПрописью(КолвоЕдиницПоСтранице);
				ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью = ОбработкаПечатиСервер.СформироватьСуммуПрописью(СуммаПоСтранице, Объект.СтруктурнаяЕдиница.Валюта);
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				ИтогСумма = ИтогСумма + СуммаПоСтранице;
				ИтогФактКоличество = 0;
				ИтогБухКоличество  = 0;
				КолвоСтрокПоСтранице = 0;
				КолвоПостранице      = 0;
				КолвоЕдиницПоСтранице = 0;
				СуммаПоСтранице = 0;
			КонецЕсли;
			ЕдиницаИзмерения = ВыборкаСтрокТовары.Номенклатура.БазоваяЕдиницаИзмерения;
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары); 	
			ОбластьМакета.Параметры.ТоварНаименование =  ВыборкаСтрокТовары.ТоварНаименование;
			Если ЕдиницаИзмерения = Неопределено Тогда
				Сообщить("Для товара "+ВыборкаСтрокТовары.Номенклатура+" не найдена базовая единица измерения!");
			Иначе	
				ОбластьМакета.Параметры.ЕдиницаИзмеренияНаименование = ЕдиницаИзмерения.Наименование;
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = ЕдиницаИзмерения.Код;
			КонецЕсли;	
			
			Цена = ВыборкаСтрокТовары.Цена;
			Количество = ВыборкаСтрокТовары.Количество;
			ОбластьМакета.Параметры.ФактКоличество = Количество;
			ОбластьМакета.Параметры.Цена = Цена;
			ОбластьМакета.Параметры.ФактСумма = Количество*Цена;
			СуммаПоСтранице = СуммаПоСтранице + Количество*Цена;
			КолвоПоСтранице = КолвоПоСтранице + Количество;
			ИтогоПоОписиФактКоличествоСтр = итогоПоОписиФактКоличествоСтр + КолвоПоСтранице;
			ИтогоПоОписиФактСуммаСтр = итогоПоОписиФАктСуммаСтр + СуммаПоСтранице;
			КолонкаАРтикулКодЗначение = ВыборкаСтрокТовары.Номенклатура.Код;
			ОбластьМакета.Параметры.ТоварКод =КолонкаАртикулКодЗначение;
			ТабДокумент.Вывести(ОбластьМакета);
			КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
			КолвоЕдиницПоСтранице = КолвоЕдиницПоСтранице + ВыборкаСтрокТовары.Количество;
		КонецЦикла;
		// Выводим итоги по последней странице
		ОбластьИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтогоПоСтранице.Параметры.ИтогоФактКоличество = КолвоПоСтранице; 
		ОбластьИтогоПоСтранице.Параметры.ИтогоФактСумма = СуммаПоСтранице;
		ТабДокумент.Вывести(ОбластьИтогоПоСтранице);
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью     = ОбработкаПечатиСервер.КоличествоПрописью(КолвоЕдиницПоСтранице);
		ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью = ОбработкаПечатиСервер.СформироватьСуммуПрописью(СуммаПоСтранице, Объект.СтруктурнаяЕдиница.Валюта);
		ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ОбработкаПечатиСервер.КоличествоПрописью(КолвоСтрокПоСтранице);
		ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ОбработкаПечатиСервер.КоличествоПрописью(КолвоЕдиницПоСтранице);
		ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью = ОбработкаПечатиСервер.СформироватьСуммуПрописью(СуммаПоСтранице,  Объект.СтруктурнаяЕдиница.Валюта);
		ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью =ОбработкаПечатиСервер.КоличествоПрописью(КолвоПостранице);
		ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью =ОбработкаПечатиСервер.СформироватьСуммуПрописью(СуммаПоСтранице, Объект.СтруктурнаяЕдиница.Валюта);
		ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
		ОбластьИтогоПоОписи.Параметры.ИтогоПоОписиФактКоличество = ИтогоПоОписиФактКоличествоСтр; 
		ОбластьИтогоПоОписи.Параметры.ИтогоПоОписиФактСумма = ИтогоПоОписиФактСуммаСтр;
		ТабДокумент.Вывести(ОбластьИтогоПоОписи);
		// Выводим подвал документа
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ИтогСумма = ИтогСумма + СуммаПоСтранице;
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
		ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ОбработкаПечатиСервер.КоличествоПрописью(Объект.Состав.итог("Количество"));
		ОбластьМакета.Параметры.СуммаФактическиНаСтраницепрописью= ОбработкаПечатиСервер.СформироватьСуммуПрописью(ИтогСумма, Объект.СтруктурнаяЕдиница.Валюта);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
		ОбластьМакета.Параметры.НомерКонца  = ВыборкаСтрокТовары.Количество();
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью =ОбработкаПечатиСервер.КоличествоПрописью(ВыборкаСтрокТовары.Количество());
		ТабДокумент.Вывести(ОбластьМакета);
		// Зададим параметры макета
		ТабДокумент.ПолеСверху = 0;
		ТабДокумент.ПолеСлева  = 0;
		ТабДокумент.ПолеСнизу  = 0;
		ТабДокумент.ПолеСправа = 0;
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		табДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	Конеццикла;
	Возврат ТабДокумент;
КонецФункции // ПечатьИНВ3()


Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,
	ОбъектыПечати, ПараметрыВывода) Экспорт
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ИНВ3", "ИНВ-3",ПечатьИНВ3(массивОбъектов,ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры


