Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ИнициализироватьДокумент();
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ГрафикИнвентаризаций") Тогда
		ДокОснование = ДанныеЗаполнения;
		СтруктурнаяЕдиница = ДокОснование.СтруктурнаяЕдиница;
		Фирма = СтруктурнаяЕдиница.Организация;
		Для Каждого ТекСтрокаСостав Из ДанныеЗаполнения.Состав Цикл
			НоваяСтрока = СоставГрупп.Добавить();
			НоваяСтрока.Департамент = ТекСтрокаСостав.Департамент;
			НоваяСтрока.Класс = ТекСтрокаСостав.Класс;
			НоваяСтрока.ПодКласс = ТекСтрокаСостав.ПодКласс;
		КонецЦикла;
		ЗаполнитьСоставПоГруппам();
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Источник") И ДанныеЗаполнения.Источник = "ДанныеТСД" Тогда
			Для каждого сСостава Из Состав Цикл
				сСостава.Количество = 0;
			КонецЦикла;
			
			Для каждого эл Из ДанныеЗаполнения.Состав Цикл	//массив структур
				НайденныеСтроки = Состав.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения", эл.Номенклатура, эл.ЕдиницаИзмерения));
				Если НайденныеСтроки.Количество() = 0 Тогда
					сСостава = Состав.Добавить();
					
					ЗаполнитьЗначенияСвойств(сСостава, эл);//ключи Эл - "Номенклатура, ЕдиницаИзмерения, Количество, Коэффициент, Цена, Сумма"
					
					сСостава.Код = сСостава.Номенклатура.Код;
					сСостава.ПодКласс = ОбщегоНазначенияСервер.ПолучитьПодКлассНоменклатуры(сСостава.Номенклатура);
					сСостава.Класс = сСостава.ПодКласс.Родитель;
					сСостава.Департамент = сСостава.Класс.Родитель;
				Иначе
					сСостава = НайденныеСтроки[0];
					сСостава.Количество = эл.Количество;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ДокОснование = ДанныеЗаполнения.Основание;
			СтруктурнаяЕдиница = ДокОснование.СтруктурнаяЕдиница;
			Фирма = ДокОснование.СтруктурнаяЕдиница.Организация;
			Склад = ДанныеЗаполнения.Склад;
			Для Каждого ТекСтрокаСостав Из ДанныеЗаполнения.Основание.Состав Цикл
				НоваяСтрока = СоставГрупп.Добавить();
				НоваяСтрока.Департамент = ТекСтрокаСостав.Департамент;
				НоваяСтрока.Класс = ТекСтрокаСостав.Класс;
				НоваяСтрока.ПодКласс = ТекСтрокаСостав.ПодКласс;
			КонецЦикла;
			ЗаполнитьСоставПоГруппам();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Автор = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

Процедура ЗаполнитьСоставПоГруппам()
	//ффристайло
	МассивГрупп = Новый Массив;
	Для Каждого ТекСтрокаСостав Из СоставГрупп Цикл
		Если ТекСтрокаСостав.ПодКласс.Пустая() Тогда
			Если ТекСтрокаСостав.Класс.Пустая() Тогда
				МассивГрупп.Добавить(ТекСтрокаСостав.Департамент);
			Иначе
				МассивГрупп.Добавить(ТекСтрокаСостав.Класс);
			КонецЕсли;	
		Иначе
			МассивГрупп.Добавить(ТекСтрокаСостав.ПодКласс);
		КонецЕсли;	
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыНоменклатуры.Номенклатура КАК Номенклатура,
		|	СтатусыНоменклатуры.Номенклатура.Код КАК Код,
		|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
		|	ЕдиницыИзмерения.Коэффициент,
		|	ВЫБОР
		|		КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Группа = 1
		|			ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Группа = 1
		|					ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Группа = 1
		|							ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ПодКласс,
		|	ВЫБОР
		|		КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Группа = 1
		|			ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Группа = 1
		|					ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Родитель.Группа = 1
		|							ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Родитель
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Класс,
		|	ВЫБОР
		|		КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Группа = 1
		|			ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Родитель.Группа = 1
		|					ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Родитель
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Родитель.Родитель.Группа = 1
		|							ТОГДА СтатусыНоменклатуры.Номенклатура.Родитель.Родитель.Родитель.Родитель.Родитель
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Департамент
		|ИЗ
		|	РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|		ПО (ЕдиницыИзмерения.Владелец = СтатусыНоменклатуры.Номенклатура)
		|			И СтатусыНоменклатуры.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
		|ГДЕ
		|	" + ?(МассивГрупп.Количество() = 0, "ИСТИНА", "СтатусыНоменклатуры.Номенклатура В ИЕРАРХИИ(&Группы)") + "
		|	И СтатусыНоменклатуры.Номенклатура.Группа = 0
		|	И СтатусыНоменклатуры.Номенклатура.Транзакционный
		|	И СтатусыНоменклатуры.Номенклатура.ВидТовара <> ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)
		|	И СтатусыНоменклатуры.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|	И СтатусыНоменклатуры.Статус <> ЗНАЧЕНИЕ(перечисление.статусытоваров.удаленный)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатусыНоменклатуры.Номенклатура.Наименование";

	Запрос.УстановитьПараметр("Группы", МассивГрупп);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);

	Состав.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если СтруктурнаяЕдиница.Пустая() Тогда
		СтруктурнаяЕдиница = Склад.Владелец;
	КонецЕсли;
КонецПроцедуры
