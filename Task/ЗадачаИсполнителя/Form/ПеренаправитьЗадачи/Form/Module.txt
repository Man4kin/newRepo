////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекстЗаголовкаФормы = Параметры.ЗаголовокФормы;
	ЗаголовокПоУмолчанию = ПустаяСтрока(ТекстЗаголовкаФормы);
	Если НЕ ЗаголовокПоУмолчанию Тогда
		Заголовок = ТекстЗаголовкаФормы;
	КонецЕсли;
	
	ТекстЗаголовка = "";
	
	Если Параметры.КоличествоЗадач > 1 Тогда
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 (%2)'"),
			?(ЗаголовокПоУмолчанию, НСтр("'ru = 'Выбрано задач'"), ТекстЗаголовкаФормы),
			Строка(Параметры.КоличествоЗадач));
	ИначеЕсли Параметры.КоличествоЗадач = 1 Тогда
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 %2'"),
			?(ЗаголовокПоУмолчанию, НСтр("'ru = 'Выбранная задача'"), ТекстЗаголовкаФормы),
			Строка(Параметры.Задача));
	Иначе
		Элементы.ДекорацияЗаголовок.Видимость = Ложь;
	КонецЕсли;
	Элементы.ДекорацияЗаголовок.Заголовок = ТекстЗаголовка;
	
	УстановитьСостояниеЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипАдресации = 0 Тогда
		Если Исполнитель.Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не указан исполнитель задачи.'"),,,
				"Исполнитель",
				Отказ);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если Роль.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указана роль исполнителей задачи.'"),,,
			"Роль",
			Отказ);
		Возврат;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	ТипАдресации = 0;
	РольИсполнителя = Неопределено;
	УстановитьСостояниеЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура РольПриИзменении(Элемент)
	
	ТипАдресации = 1;
	Исполнитель = Неопределено;
	УстановитьСостояниеЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипАдресацииПриИзменении(Элемент)
	УстановитьСостояниеЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура OK(Команда)
	
	ОчиститьСообщения();
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	Элементы.Исполнитель.ОтметкаНезаполненного = Ложь;
	Элементы.Исполнитель.АвтоОтметкаНезаполненного = ТипАдресации = 0;
	Элементы.Исполнитель.Доступность = ТипАдресации = 0;
	Элементы.Роль.ОтметкаНезаполненного = Ложь;
	Элементы.Роль.АвтоОтметкаНезаполненного = ТипАдресации <> 0;
	Элементы.Роль.Доступность = ТипАдресации <> 0;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыЗакрытия()
	
	Возврат Новый Структура("Исполнитель,РольИсполнителя,Комментарий",
		Исполнитель,
		Роль,Комментарий);
	
КонецФункции
