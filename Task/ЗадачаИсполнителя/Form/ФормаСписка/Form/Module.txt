
&НаКлиенте
Процедура ПоказыватьОписаниеПриИзменении(Элемент)
	Элементы.ОписаниеЗадачи.Видимость = ПоказыватьОписание;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ОписаниеЗадачи.Видимость = ПоказыватьОписание;
КонецПроцедуры

&НаКлиенте
Процедура СписокЗадачПриАктивизацииСтроки(Элемент)
	//#Если НЕ ВебКлиент Тогда
	УправлениеСпискомЗадачБПКлиент.ПоказатьОписаниеЗадачи(Элемент,Описание);
	//#КонецЕсли
КонецПроцедуры


&НаКлиенте
Процедура ОписаниеЗадачиПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ДанныеСобытия.Anchor <> Неопределено Тогда
		ПерейтиПоНавигационнойСсылке(ДанныеСобытия.Anchor.id);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	РеквизитыЗадачи = ОбщегоНазначенияСервер.ПолучитьЗначенияРеквизитовОбъекта(ВыбраннаяСтрока,Новый Структура("Ссылка,БизнесПроцесс,Дата"));
	Если ЗначениеЗаполнено(РеквизитыЗадачи.БизнесПроцесс) Тогда
		Если РеквизитыЗадачи.Ссылка<>Неопределено и КонецДня(РеквизитыЗадачи.Дата)>КонецДня(ТекущаяДата()) тогда
			Если Вопрос("Дата текущей задачи больше текущей даты. Продолжить?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет тогда
				СтандартнаяОбработка = ложь;
				Возврат;
			Конецесли;
		Конецесли;
	Конецесли;
	СтандартнаяОбработка = НЕ УправлениеБизнесПроцессамиКлиент.ОткрытьФормуВыполненияЗадачи(ВыбраннаяСтрока);
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ОтборПоДатеКонец = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборПоДатеКонец.Использование = Истина;
	//ОтборПОДатеКонец.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	//ОтборПоДатеКонец.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата");
	//ДатаКонца = Новый СтандартнаяДатаНачала;
	//ДатаКонца.Вариант = ВариантСтандартнойДатыНачала.НачалоСледующегоДня;
	//ОтборПоДатеКонец.ПРавоеЗначение =   ДатаКонца;
	//ОтборПоСЕ = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(Список.Отбор,"СтруктурнаяЕдиница");
	//Если ОтборПоСЕ.Количество() = 0 тогда
	//	ОтборПоСЕ = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборПоСЕ.левоеЗначение = Новый ПолеКомпоновкиДанных("СтруктурнаяЕдиница");
	//Иначе
	//	ОтборПоСЕ = ОтборПоСЕ[0];
	//Конецесли;		
	//ОтборПоСЕ.Использование = Истина;
	//ОтборПоСЕ.ПравоеЗначение = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
	УправлениеБизнесПроцессамиСервер.УстановитьОформлениеЗадач(Список.УсловноеОформление);
	Список.Параметры.УстановитьЗначениеПараметра("ТочкаМаршрута", БизнесПроцессы.АвтоЗаказ.ТочкиМаршрута.УтверждениеПотребностиBI);
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗадачаВыполнена" ИЛИ ИмяСобытия = "ЗадачаИзменена" Тогда
		Элементы.СписокЗадач.Обновить();
		//СписокЗадачПриАктивизацииСтроки(Элементы.СписокЗадач);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаблокироватьСеанс(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаБлокировкиСеансаПользователя");
КонецПроцедуры
