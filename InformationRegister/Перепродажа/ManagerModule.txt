
//{ СИТЕК БрыляковЕЮ 2014-10-23  
Процедура СоздатьВТПравилаПерепродажи(МенеджерВТ, Знач СписокНоменклатуры, СтруктурнаяЕдиница, ФирмаОтправитель = Неопределено, Знач ДатаСреза = Неопределено, Отбор = Неопределено) Экспорт 
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Состав.Номенклатура,
		|	Состав.ФирмаОтправитель,
		|	Состав.ФирмаПолучатель,
		|	Состав.ПроцентПрибыли,
		|	Состав.ТипДоговора
		|ПОМЕСТИТЬ ВТ_ПравилаПерепродажи
		|ИЗ
		|	(ВЫБРАТЬ
		|		СписокНоменклатуры.Ссылка КАК Номенклатура,
		|		&ФирмаПокупки КАК ФирмаОтправитель,
		|		&ФирмаПродажи КАК ФирмаПолучатель,
		|		&ПроцентПрибыли КАК ПроцентПрибыли,
		|		&ТипДоговора КАК ТипДоговора
		|	ИЗ
		|		Справочник.Номенклатура КАК СписокНоменклатуры,
		|		&Перепродажа КАК Перепродажа
		|	ГДЕ
		|		СписокНоменклатуры.Ссылка В(&Номенклатура)
		|		И &Условие) КАК Состав
		| {ГДЕ
		| 	Состав.ФирмаПолучатель.*}";
		
	ШаблонПерепродажа = "
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Перепродажа.СрезПоследних(
		|				{&ДатаСреза},
		|				СтруктурнаяЕдиница = &СЕ {(ФирмаПокупки)}
		|					) КАК Перепродажа%1";
	ШаблонОбычноеСоединение = "
		|		ПО СписокНоменклатуры%2.Код = Перепродажа%1.ГруппаНоменклатуры
		|			И (НЕ Перепродажа%1.Izh_НеИспользовать)";
	ШаблонКорень = "
		|		ПО (Перепродажа%1.ГруппаНоменклатуры = """")
		|			И (НЕ Перепродажа%1.Izh_НеИспользовать)";
	ШаблонВыбор = 
		"		ВЫБОР %1
		|		КОНЕЦ";
	ШаблонПоле = "
		|			КОГДА НЕ Перепродажа%1.ФирмаПродажи ЕСТЬ NULL 
		|				ТОГДА Перепродажа%1.%2";
	ШаблонУсловиеОбертка = "НЕ (%1)";
	ШаблонУсловие = "Перепродажа%1.ФирмаПокупки ЕСТЬ NULL";
	ШаблонСоединительУсловий = "
		|		И ";
		
	Таблицы = "";
	Поля = Новый Структура("ФирмаПокупки, ФирмаПродажи, ПроцентПрибыли, ТипДоговора");
	Условие = Новый Массив();
	
	УровеньВложенности = 7;
	Для Сч = 1 По УровеньВложенности Цикл
		
		Нпп = XMLСтрока(Сч);
		
		Перепродажа = ШаблонПерепродажа + ?(Сч = УровеньВложенности, ШаблонКорень, ШаблонОбычноеСоединение);
		Родитель = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов(".Родитель", Сч - 1);
		Таблицы = Таблицы + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Перепродажа, Нпп, Родитель);
		
		Условие.Добавить(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУсловие, Нпп)
		);
		
		Для каждого Поле Из Поля Цикл
			Значение = Поле.Значение;
			Если Значение = Неопределено Тогда
				Значение = Новый Массив();
				Поля[Поле.Ключ] = Значение;
			КонецЕсли;
			Значение.Добавить(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПоле, Нпп, Поле.Ключ)
			);
		КонецЦикла;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КАК СписокНоменклатуры,", "КАК СписокНоменклатуры");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Перепродажа КАК Перепродажа", Таблицы);
	
	Условие = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(Условие, ШаблонСоединительУсловий);
	Условие = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУсловиеОбертка, Условие);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условие", Условие);
	
	Для каждого Поле Из Поля Цикл
		ТекстПоля = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонВыбор, 
			СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(Поле.Значение, "")
		);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&" + Поле.Ключ, ТекстПоля);
	КонецЦикла;
	
	Построитель = Новый ПостроительЗапроса();
	Построитель.Текст = ТекстЗапроса;
	Построитель.ЗаполнитьНастройки();
	
	Построитель.Параметры.Вставить("СЕ", СтруктурнаяЕдиница);
	Построитель.Параметры.Вставить("Номенклатура", СписокНоменклатуры);
	
	Если ЗначениеЗаполнено(ДатаСреза) Тогда
		Построитель.Отбор.Добавить("ДатаСреза").Установить(ДатаСреза);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФирмаОтправитель) Тогда
		Построитель.Отбор.Добавить("ФирмаПокупки").Установить(ФирмаОтправитель);	
	КонецЕсли;
		
	Izh_ОбщегоНазначения.УстановитьОтборПостроителя(Построитель, Отбор);
	
	Запрос = Построитель.ПолучитьЗапрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПравилаПерепродажи(Знач СписокНоменклатуры, СтруктурнаяЕдиница, ФирмаОтправитель = Неопределено, Знач ДатаСреза = Неопределено, Отбор = Неопределено) Экспорт 
	
	ВТ = Новый МенеджерВременныхТаблиц();
	СоздатьВТПравилаПерепродажи(ВТ, СписокНоменклатуры, СтруктурнаяЕдиница, ФирмаОтправитель, ДатаСреза, Отбор);
	
	Возврат Izh_ОбщегоНазначения.ПолучитьВТ(ВТ, "ВТ_ПравилаПерепродажи");
	
КонецФункции

Функция ПравилаДляОформленияПерепродажиВДокументах(МенеджерВТ, СтруктурнаяЕдиница, ФирмаОтправитель, Знач ДатаСреза = Неопределено, Отбор = Неопределено) Экспорт 
	
	СписокНоменклатуры = Izh_ОбщегоНазначения.ПолучитьВТ(МенеджерВТ, "ВТ_Состав", "Номенклатура").ВыгрузитьКолонку("Номенклатура");
	СоздатьВТПравилаПерепродажи(МенеджерВТ, СписокНоменклатуры, СтруктурнаяЕдиница, ФирмаОтправитель, ДатаСреза, Отбор);
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Состав.*,
		|	ВТ_ПравилаПерепродажи.ФирмаПолучатель КАК ФирмаПерепродажи,
		|	ВТ_ПравилаПерепродажи.ПроцентПрибыли,
		|	ВТ_ПравилаПерепродажи.ТипДоговора КАК ТипДоговора
		|ИЗ
		|	ВТ_Состав КАК ВТ_Состав
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПравилаПерепродажи КАК ВТ_ПравилаПерепродажи
		|		ПО ВТ_Состав.Номенклатура = ВТ_ПравилаПерепродажи.Номенклатура
		|ИТОГИ ПО
		|	ФирмаПерепродажи,
		|	ТипДоговора";
		
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции
// СИТЕК БрыляковЕЮ 2014-10-23 }
