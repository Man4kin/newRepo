
&НаКлиенте
Процедура ОткрытьПакет(Команда)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	IDПромо = Элементы.Список.ТекущиеДанные.IDПромо;
	IDКомпоненты = Элементы.Список.ТекущиеДанные.IDКомпоненты;
	IDГруппы = Элементы.Список.ТекущиеДанные.IDГруппы;
	IDДеталей = Элементы.Список.ТекущиеДанные.IDДеталей;
	СтруктурнаяЕдиница = Элементы.Список.ТекущиеДанные.СтруктурнаяЕдиница;
	Адрес = ПолучитьПакетНаСервере(IDПромо,IDКомпоненты,IDГруппы,IDДеталей, СтруктурнаяЕдиница);
	
	Если Адрес = Неопределено Тогда
		Сообщить("Данные пакета недоступны.");
		Возврат;
	КонецЕсли;
	//Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
	//	УстановитьРасширениеРаботыСФайлами();
	//КонецЕсли;
	//Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Расширение работы с файлами не подключено.";
	//	Сообщение.Сообщить();
	//	Возврат;
	//КонецЕсли;
	#Если ВебКлиент Тогда
		ПолучитьФайл(Адрес, "ТекущийПакет.xml", Истина);
	#Иначе
		ТекущийПакет = ПолучитьИзВременногоХранилища(Адрес);
		стрИмяФайла = ПолучитьИмяВременногоФайла("xml");
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(стрИмяФайла);
		ЗаписьXML.ЗаписатьБезОбработки(ТекущийПакет);
		ЗаписьXML.Закрыть();
		ОткрытьФорму("ОбщаяФорма.ФормаБраузера", Новый Структура("URL", стрИмяФайла),ЭтаФорма,Строка(IDПромо)+Строка(IDКомпоненты)+Строка(IDГруппы)+Строка(IDДеталей));
	#КонецЕсли	
КонецПроцедуры

&НаСервере
Функция ПолучитьПакетНаСервере(IDПромо,IDКомпоненты,IDГруппы,IDДеталей, СтруктурнаяЕдиница)
	Набор = РегистрыСведений.ПромоАкции.СоздатьНаборЗаписей();
	Набор.Отбор.IDПромо.Установить(IDПромо);
	Набор.Отбор.IDКомпоненты.Установить(IDКомпоненты);
	Набор.Отбор.IDГруппы.Установить(IDГруппы);
	Набор.Отбор.IDДеталей.Установить(IDДеталей);
	Набор.Отбор.СтруктурнаяЕдиница.Установить(СтруктурнаяЕдиница);
	Набор.Прочитать();
	ТекущийПакет = Набор[0].Пакет.Получить();
	Если ТекущийПакет = Неопределено Тогда
		Адрес = Неопределено;
	Иначе
		Адрес = ПоместитьВоВременноеХранилище(ТекущийПакет);
	КонецЕсли;
	Возврат Адрес;
КонецФункции

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СписокНоменклатуры.Отбор.Элементы.Очистить();
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDПромо");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDПромо;
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDКомпоненты");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDКомпоненты;
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDГруппы");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDГруппы;
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDДеталей");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDДеталей;
	Отбор = СписокНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтруктурнаяЕдиница");
	мСЕ = Новый Массив(2);
	мСЕ[0] = Элемент.ТекущиеДанные.СтруктурнаяЕдиница;
	мСЕ[1] = ПолучитьПустуюСсылкуСЕ();
	Отбор.ПравоеЗначение = мСЕ;
	
	СписокПорогов.Отбор.Элементы.Очистить();
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDПромо");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDПромо;
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDКомпоненты");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDКомпоненты;
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDГруппы");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDГруппы;
	Отбор = СписокПорогов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("IDДеталей");
	Отбор.ПравоеЗначение = Элемент.ТекущиеДанные.IDДеталей;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПустуюСсылкуСЕ()

	Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();

КонецФункции
