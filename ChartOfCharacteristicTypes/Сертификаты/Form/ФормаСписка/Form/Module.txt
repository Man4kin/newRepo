
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияСервер.ЗапретМодификацииОбъектов(Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Если Элементы.ГруппаПодбор.Видимость Тогда
		СохранитьпараметрыПОдбора();
	КонецЕсли;
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НЕ ЗначениеЗаполнено(ВидСертификата) Или НЕ ЗначениеЗаполнено(Сертификат) Тогда
		Возврат;
	КонецЕсли;	
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		ЗаписатьДанныеВРегистр(Строка);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеВРегистр(Номенклатура)
	Запись = РегистрыСведений.ДанныеСертификатов.СоздатьМенеджерЗаписи();
	Запись.Сертификат = ВидСертификата;
	Запись.Номенклатура = Номенклатура.Код;
	Запись.Значение = Сертификат;
	Запись.Записать();
	Элементы.Регистр.Обновить();
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора("Сертификаты",ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора("Сертификаты",ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры



&НаКлиенте
Процедура РегистрПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

//&НаКлиенте
//Процедура РегистрПередУдалением(Элемент, Отказ)
//	//УдалитьДанныеИзРегистра(Элементы.Регистр.ТекущиеДанные.Сертификат,Элементы.Регистр.ТекущиеДанные.Номенклатура);
//	//Элементы.Регистр.Обновить();
//КонецПроцедуры

//&НаСервере
//Процедура УдалитьДанныеИзРегистра(СтрокаСертификат,СтрокаНоменклатура)
//	Запись = РегистрыСведений.ДанныеСертификатов.СоздатьМенеджерЗаписи();
//	Запись.Сертификат = СтрокаСертификат;
//	Запись.Номенклатура = СтрокаНоменклатура;
//	Запись.Удалить();
//КонецПроцедуры


&НаКлиенте
Процедура ВидСертификатаПриИзменении(Элемент)
	Регистр.Отбор.Элементы.Очистить();
	Отбор = Регистр.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = ЗначениеЗаполнено(ВидСертификата);
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сертификат");
	Отбор.ПравоеЗначение = ВидСертификата;
	
	Отбор = Регистр.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = ЗначениеЗаполнено(Сертификат);
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Значение");
	Отбор.ПравоеЗначение = Сертификат;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	загрузитьНастройкиПодбора();
КонецПроцедуры
