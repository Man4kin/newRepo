
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(Объект.АдресСКД);
	Обработка=Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки,ИсточникДоступныхНастроек);
	РезультатЗначения=Неопределено;
	Параметр=Неопределено;
	ДоступныеДействия = Новый Массив;
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	Обработка.ВыбратьДействие(Расшифровка,Параметр,РезультатЗначения,ДоступныеДействия,);
	Если Параметр <> ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет Тогда
		Если Параметр = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
			ОткрытьЗначение(РезультатЗначения);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры                                                      

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура  СформироватьТабДокНаСервере()
	СКД = ПолучитьИзВременногоХранилища(Объект.АдресСКД);
	Если ТипЗнч(СКД)<>Тип("СхемаКомпоновкиДанных") Тогда
		Возврат ;//Новый ТабличныйДокумент ;
	КонецЕсли;
	//++Минин Добавляем ОбщийИтог, если выбраны поля Сумма или СуммаНДС
	СКД.ПоляИтога.Очистить(); 
	Для Каждого Элемент из КомпоновщикНастроек.Настройки.Выбор.Элементы Цикл
		Если Элемент.Использование и Элемент.Заголовок = "Сумма" Тогда 
			ПолеИтогаСумма = СКД.Поляитога.Добавить();
			ПолеИтогаСумма.ПутьКДанным = ("СуммаИтого");
			ПолеИтогаСумма.Выражение = ("Сумма(СуммаИтого)");
			ПолеИтогаСумма.Группировки.Добавить("ОбщийИтог");
			//ИначеЕсли Элемент.Использование и Элемент.Заголовок = "Сумма НДС" Тогда 
		КонецЕсли;
		Если Элемент.Использование и Элемент.Заголовок = "Сумма НДС" Тогда 
			ПолеИтогаСумма = СКД.Поляитога.Добавить();
			ПолеИтогаСумма.ПутьКДанным = ("СуммаНДСИтого");
			ПолеИтогаСумма.Выражение = ("Сумма(СуммаНДСИтого)");
			ПолеИтогаСумма.Группировки.Добавить("ОбщийИтог");
		КонецЕсли;
		Если Элемент.Использование и Элемент.Заголовок = "КоличествоИтого" Тогда 
			ПолеИтогаСумма = СКД.Поляитога.Добавить();
			ПолеИтогаСумма.ПутьКДанным = ("КоличествоИтого");
			ПолеИтогаСумма.Выражение = ("Сумма(КоличествоИтого)");
			ПолеИтогаСумма.Группировки.Добавить("ОбщийИтог");
		КонецЕсли;
	КонецЦикла;
	//--Минин
	ДанныеРасшифровкиФе = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ЭлементДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачала");
	ЭлементДатаНачала.Значение = ДатаНачала;
	ЭлементДатаНачала.Использование = Истина;
	
	ЭлементДатаКонца = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаКонца");
	ЭлементДатаКонца.Значение = ДатаОкончания;
	ЭлементДатаКонца.Использование = Истина;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД,КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровкиФе);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,ДанныеРасшифровкиФе);
	
	Результат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровкиФе,Новый УникальныйИдентификатор);
	Результат.АвтоМасштаб = Истина;
	Результат.ОтображатьСетку = Ложь;
	Результат.ИмяПараметровПечати = "ПараметрыПечати_РеестрДокументов";
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	//Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
	//	Предупреждение("Не заполнена дата начала");
	//	Возврат;
	//КонецЕсли;
	//Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
	//	Предупреждение("Не заполнена дата окончания");
	//	Возврат;
	//КонецЕсли;
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		СформироватьТабДокНаСервере();
	КонецЕсли;
	//ТабДок.Показать();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПервыйЭлемент = Истина;
	Если Константы.ЭтоЦентр.Получить() Тогда
		мдФункц = Метаданные.ФункциональныеОпции.ЗапретИспользованияВЦентральнойБазе;
	Иначе
		мдФункц = Метаданные.ФункциональныеОпции.ЗапретИспользованияВПереферийнойБазе;
	КонецЕсли;
	Для Каждого мдДокумент из Метаданные.Документы Цикл
		// тут проверку сделаем, на доступность из функциональных опциий
		Если мдФункц.Состав.Содержит(мдДокумент) Тогда Продолжить; КонецЕсли;
		Если НЕ ПравоДоступа("Просмотр",мдДокумент) Тогда Продолжить; КонецЕсли;
		Если ПервыйЭлемент Тогда
			Буфер = мдДокумент.Имя;
			ПервыйЭлемент = Ложь;	
		КонецЕсли;
		Элементы.мдДокументы.СписокВыбора.Добавить(мдДокумент.Имя,мдДокумент.Синоним);	
	КонецЦикла;
	мдДокументы = Буфер;
	ДатаНачала = ТекущаяДата();
	ДатаОкончания = ТекущаяДата();
	ЗаполнитьСКД();
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьТекстЗапросаДокумента(ТипДокумента)
	ТекстЗапроса = "";
	Для Каждого мдРеквизит из Метаданные.Документы[ТипДокумента].Реквизиты Цикл
		Если мдРеквизит.Имя = "ОбработанЦВД" Тогда Продолжить; КонецЕсли;
		Если мдРеквизит.Имя = "ДокОснование" Тогда
			ТекстЗапроса = ТекстЗапроса + ","+Символы.ПС+" ТипЗначения(ИсточникДанных."+мдРеквизит.Имя+") КАК ТипДокументаОснования";
		КонецЕсли;	
		ТекстЗапроса = ТекстЗапроса + ","+Символы.ПС+" ИсточникДанных."+мдРеквизит.Имя+" КАК "+мдРеквизит.Имя;	
	КонецЦикла;
	Если ТипДокумента = "РасходнаяНакладная" Тогда 
		ТекстЗапроса = ТекстЗапроса + ",
		|ПроверенКонтроллеромФРОВСрезПоследних.Контроллер КАК КонтроллерФРОВ,
		|ВЫБОР
		|	КОГДА ПроверенКонтроллеромФРОВСрезПоследних.Контроллер ЕСТЬ NULL 
		|		ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПровереноКонтроллеромФРОВ";
	КонецЕсли;
	Если ТипДокумента = "КоррекцияЗапасов" Тогда 
		ТекстЗапроса = ТекстЗапроса + ",
		|ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0) КАК СуммаИтого";
	КонецЕсли;
	Если ТипДокумента = "ПриходнаяНакладная" Тогда 
		ТекстЗапроса = ТекстЗапроса + ",
		|ЕСТЬNULL(ВложенныйЗапрос1.Количество, 0) КАК КоличествоИтого";
	КонецЕсли;
	Если ТипДокумента = "ПриходнаяНакладная" ИЛИ ТипДокумента = "КорректировкаПоступления" ИЛИ ТипДокумента = "РегистрацияСчетФактуры" Тогда 
		ТекстЗапроса = ТекстЗапроса + ",
		|ВЫБОР КОГДА Izh_СостояниеДокумента.Документ ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ Истина КОНЕЦ КАК ОбработанЦВД"
	КонецЕсли;
	
	ТекстЗапроса = "Выбрать 
	|	"""" КАК Пометка,
	|	ИсточникДанных.Дата КАК Дата,
	|	ИсточникДанных.Номер КАК Номер,
	|	ИсточникДанных.Ссылка КАК Документ,
	|	ИсточникДанных.Проведен КАК Проведен,
	|	ИсточникДанных.ПометкаУдаления КАК ПометкаУдаления"+ТекстЗапроса+"
	|ИЗ 
	|	Документ."+ТипДокумента+" КАК ИсточникДанных"+?(ТипДокумента = "РасходнаяНакладная","
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Izh_ПроверенКонтроллеромФРОВ.СрезПоследних КАК ПроверенКонтроллеромФРОВСрезПоследних
	|ПО ПроверенКонтроллеромФРОВСрезПоследних.Документ = ИсточникДанных.Ссылка","")+
	?(ТипДокумента = "КоррекцияЗапасов","
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Регистратор КАК Регистратор,
	|	СУММА(ОстаткиНоменклатуры.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор ССЫЛКА Документ.КоррекцияЗапасов
	|	И ОстаткиНоменклатуры.Регистратор.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаКонца, ДЕНЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Регистратор) КАК ВложенныйЗапрос
	|ПО ИсточникДанных.Ссылка = ВложенныйЗапрос.Регистратор","")+
	?(ТипДокумента = "ПриходнаяНакладная","
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|	ДвиженияТМЦ.Регистратор КАК Регистратор,
	|	СУММА(ДвиженияТМЦ.Количество) КАК Количество
	|ИЗ
	|	РегистрНакопления.ДвиженияТМЦ КАК ДвиженияТМЦ
	|ГДЕ
	|	ДвиженияТМЦ.Регистратор ССЫЛКА Документ.ПриходнаяНакладная
	|	И ДвиженияТМЦ.Регистратор.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаКонца, ДЕНЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияТМЦ.Регистратор) КАК ВложенныйЗапрос1
	|ПО ИсточникДанных.Ссылка = ВложенныйЗапрос1.Регистратор","")+
	?(ТипДокумента = "ПриходнаяНакладная" или ТипДокумента = "КорректировкаПоступления" или ТипДокумента = "РегистрацияСчетФактуры","
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Izh_СостояниеДокумента.СрезПоследних КАК Izh_СостояниеДокумента
	|ПО ИсточникДанных.Ссылка = Izh_СостояниеДокумента.Документ
	|	И (ЗНАЧЕНИЕ(Перечисление.Izh_СостояниеДокумента.ПроверенЦВД) = Izh_СостояниеДокумента.Состояние)","")+"
	|ГДЕ ИсточникДанных.Дата Между НачалоПериода(&ДатаНачала,День) И КонецПериода(&ДатаКонца,День)
	|Упорядочить по Дата";
	Возврат ТекстЗапроса;
КонецФункции

// добавляет в список отбора
&НаСервереБезКонтекста
Процедура ДобавитьОтборВСКД(НаборДаннных,ИмяЭлемента,Использование=Ложь)
	Отбор = НаборДаннных.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование = Использование;
	Если ИмяЭлемента <> "Дата" Тогда   // решил дату не выносить в отбор
		Отбор.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяЭлемента);
КонецПроцедуры

// поля в СКД
&НаСервереБезКонтекста
Процедура ДобавитьПолеВНаборДанных(НаборДанных,ИмяЭлемента,Заголовок)
	Поле = НаборДанных.поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
	Поле.Поле = ИмяЭлемента;
	Поле.ПутьКДанным = ИмяЭлемента;
	Поле.Заголовок = Заголовок;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВВыборКолонок(НаборДанных,ИмяЭлемента,Заголовок,Использование=Истина)
	ВыбранноеПоле = НаборДанных.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Использование = Использование;
	ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяЭлемента);
	ВыбранноеПоле.Заголовок = Заголовок;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСКД()
	СКД = Новый СхемаКомпоновкиДанных;	
	ИД = СКД.ИсточникиДанных.Добавить();
	ИД.Имя = "ИсточникДанных1";
	ИД.ТипИсточникаДанных = "Local";
	НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = "НаборДанных1";
	НаборДанных.Запрос = СформироватьТекстЗапросаДокумента(мдДокументы);
	НаборДанных.ИсточникДанных = "ИсточникДанных1";
	ВыборПолей = СКД.НастройкиПоУмолчанию.Выбор;
	ОтборСКДПоУмолчанию = СКД.НастройкиПоУмолчанию.Отбор;
	
	//++Минин порядковый номер	
	ДобавитьВВыборКолонок(ВыборПолей,"SystemFields.SerialNumber","№ п/п");
	
	ДобавитьПолеВНаборДанных(НаборДанных,"Пометка","Пометка");
	ДобавитьВВыборКолонок(ВыборПолей,"Пометка","Пометка");
	
	//Дата
	ДобавитьПолеВНаборДанных(НаборДанных,"Дата","Дата");
	//ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"Дата");
	ДобавитьВВыборКолонок(ВыборПолей,"Дата","Дата");
	
	//Номер документа
	ДобавитьПолеВНаборДанных(НаборДанных,"Номер","Номер");
	ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"Номер");
	ДобавитьВВыборКолонок(ВыборПолей,"Номер","Номер");
	
	//Ссылка на документ
	ДобавитьПолеВНаборДанных(НаборДанных,"Документ","Документ");
	ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"Документ");
	ДобавитьВВыборКолонок(ВыборПолей,"Документ","Документ");
	
	// Проведен
	ДобавитьПолеВНаборДанных(НаборДанных,"Проведен","Проведен");
	ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"Проведен");
	ДобавитьВВыборКолонок(ВыборПолей,"Проведен","Проведен");
	
	//Пометка удаления
	ДобавитьПолеВНаборДанных(НаборДанных,"ПометкаУдаления","Пометка удаления");
	ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"ПометкаУдаления");
	ДобавитьВВыборКолонок(ВыборПолей,"ПометкаУдаления","Пометка удаления");	
	
	ИдентификаторПользНастройки = Строка(Новый УникальныйИдентификатор);
	ОтборСКДПоУмолчанию.ИдентификаторПользовательскойНастройки = ИдентификаторПользНастройки;
	
	/////////////////////////////////////////
	Для Каждого мдРеквизит из Метаданные.Документы[мдДокументы].Реквизиты Цикл
		Если мдРеквизит.Имя = "ОбработанЦВД" Тогда Продолжить; КонецЕсли;
		Если мдРеквизит.Имя = "ДокОснование" Тогда
			ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"ТипДокументаОснования");
		КонецЕсли;
		ДобавитьПолеВНаборДанных(НаборДанных,мдРеквизит.Имя,мдРеквизит.Синоним);
		ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,мдРеквизит.Имя);
		ДобавитьВВыборКолонок(ВыборПолей,мдРеквизит.Имя,мдРеквизит.Синоним,Ложь);	
	КонецЦикла;
	////////////////////////////*******************************
	//dps++
	Если мдДокументы = "РасходнаяНакладная" Тогда
		ДобавитьПолеВНаборДанных(НаборДанных,"ПровереноКонтроллеромФРОВ","ПровереноКонтроллеромФРОВ");
		ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"ПровереноКонтроллеромФРОВ");
		ДобавитьВВыборКолонок(ВыборПолей,"ПровереноКонтроллеромФРОВ","ПровереноКонтроллеромФРОВ",Ложь);	
		ДобавитьПолеВНаборДанных(НаборДанных,"КонтроллерФРОВ","КонтроллерФРОВ");
		ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"КонтроллерФРОВ");
		ДобавитьВВыборКолонок(ВыборПолей,"КонтроллерФРОВ","КонтроллерФРОВ",Ложь);	
	КонецЕсли;
	//dps--
	//++Минин
	Если мдДокументы = "КоррекцияЗапасов" Тогда 
		ДобавитьПолеВНаборДанных(НаборДанных,"СуммаИтого","Сумма");
		ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"СуммаИтого");
		ДобавитьВВыборКолонок(ВыборПолей,"СуммаИтого","Сумма",Ложь);	
	КонецЕсли;
	Если мдДокументы = "ПриходнаяНакладная" Тогда 
		ДобавитьПолеВНаборДанных(НаборДанных,"КоличествоИтого","КоличествоИтого");
		ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"КоличествоИтого");
		ДобавитьВВыборКолонок(ВыборПолей,"КоличествоИтого","КоличествоИтого",Ложь);	
	КонецЕсли;
	//--Минин
	Если мдДокументы = "ПриходнаяНакладная" ИЛИ мдДокументы = "КорректировкаПоступления" ИЛИ мдДокументы = "РегистрацияСчетФактуры" Тогда 
		ДобавитьПолеВНаборДанных(НаборДанных,"ОбработанЦВД","ОбработанЦВД");
		ДобавитьОтборВСКД(ОтборСКДПоУмолчанию,"ОбработанЦВД");
		ДобавитьВВыборКолонок(ВыборПолей,"ОбработанЦВД","ОбработанЦВД",Ложь);	
	КонецЕсли;
	Настройки = СКД.НастройкиПоУмолчанию;
	Если ЭтоАдресВременногоХранилища(Объект.АдресСКД) Тогда
		УдалитьИзВременногоХранилища(Объект.АдресСКД);
	КонецЕсли;
	Объект.АдресСКД = ПоместитьВоВременноеХранилище(СКД,ЭтаФорма.УникальныйИдентификатор); 
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Объект.АдресСКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	КомпоновщикНастроек.Настройки.Структура.Очистить();
	НовыйЭлемент = КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ДетальныеЗаписи = НовыйЭлемент.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ДетальныеЗаписи.Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура мдДокументыПриИзменении(Элемент)
	ЗаполнитьСКД();
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	
	Диалог.Период.ДатаНачала    = ДатаНачала;
	Диалог.Период.ДатаОкончания = ДатаОкончания;
	
	Если Диалог.Редактировать() Тогда
		
		ДатаНачала    = Диалог.Период.ДатаНачала;
		ДатаОкончания = Диалог.Период.ДатаОкончания;
		
	КонецЕсли;
КонецПроцедуры



