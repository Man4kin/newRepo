
&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	Элементы.ПодборНоменклатуры.Видимость = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТоварыИзДокументов()
	МассивДокументов = Новый Массив;
	Если ТипЗнч(Параметры.ВходящийПараметр) = Тип("Массив") Тогда
		МассивДокументов = Параметры.ВходящийПараметр;
	Иначе
		МассивДокументов.Добавить(Параметры.ВходящийПараметр);
	КонецЕсли;
	Дата = МассивДокументов[0].Дата;
	мдДокумент = МассивДокументов[0].Метаданные();
	Если мдДокумент.ТабличныеЧасти.Найти("Состав")<>Неопределено Тогда
		ТекстЗапроса="ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсточникДанных.Номенклатура КАК Номенклатура,
		|	ДАТАВРЕМЯ(0001,01,01,00,00,00) КАК ДатаГодности,
		|	1 КАК КолПечати";
		//{{ШиловМВ 08.10.14 №000129562
		Если мдДокумент.Имя="АктПриемки" Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|	ИсточникДанных.Ссылка.Грузоотправитель КАК Грузоотправитель";
		КонецЕсли;
		//ШиловМВ 08.10.14 №000129562}}
		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ
		|	Документ."+мдДокумент.Имя+".Состав КАК ИсточникДанных
		|ГДЕ
		|	ИсточникДанных.Ссылка В (&МассивДокументов)";
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("МассивДокументов",МассивДокументов);
		РезультатЗапроса = Запрос.Выполнить();
		Объект.Товары.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.ВходящийПараметр) Тогда // значит вызвали из печатной формы
		ЗаполнитьТоварыИзДокументов();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПодбор(Команда)
	Элементы.ПодборНоменклатуры.Видимость = Не Элементы.ПодборНоменклатуры.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатурыВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	Номенклатура = Элемент.ТекущаяСтрока;
	Строки = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура)); 
	Если Строки.Количество()=0 Тогда
		стр = Объект.Товары.Добавить();
		стр.Номенклатура = Номенклатура;
		стр.КолПечати = 1;
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеОТоварах(ВходящаяТЗ)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ИсточникДанных.НомерСтроки КАК НомерСтроки,
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.ДатаГодности КАК ДатаГодности,
	|	ИсточникДанных.КолПечати КАК КолПечати,
	|	ИсточникДанных.Грузоотправитель КАК Грузоотправитель
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&ВходящаяТЗ КАК ИсточникДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.НомерСтроки КАК НомерСтроки,
	|	втТовары.Номенклатура.Наименование КАК Номенклатура,
	|	втТовары.Номенклатура.Код КАК КодНоменклатуры,
	|	втТовары.ДатаГодности КАК ДатаГодности,
	|	втТовары.КолПечати КАК КолПечати,
	|	втТовары.Грузоотправитель КАК Грузоотправитель,
	//|	ВложенныйЗапрос.АдресТовара КАК АдресТовара,
	|	ЕСТЬNULL(спрНоменклатура.Код, """") КАК ШтрихКод,
	|	ЕСТЬNULL(спрНоменклатура.ФлагОсновногоШК, ЛОЖЬ) КАК ОсновнойШтрихКод
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
	|		ПО втТовары.Номенклатура = спрНоменклатура.Родитель
//	|			И (&ТипШтрихКода = спрНоменклатура.ТипКода)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|		НоменклатураДополнительныеРеквизиты.Ссылка КАК Номенклатура,
	//|		ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, """") КАК АдресТовара
	//|	ИЗ
	//|		Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	//|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры КАК ДополнительныеРеквизитыНоменклатуры
	//|			ПО НоменклатураДополнительныеРеквизиты.Свойство = ДополнительныеРеквизитыНоменклатуры.Ссылка
	//|				И (ДополнительныеРеквизитыНоменклатуры.Наименование = ""Адрес Товара"")
	//|	ГДЕ
	//|		НоменклатураДополнительныеРеквизиты.Ссылка В (Выбрать А.Номенклатура из втТовары КАК А)) КАК ВложенныйЗапрос
	//|		ПО втТовары.Номенклатура = ВложенныйЗапрос.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	ОсновнойШтрихКод УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(ДатаГодности),
	//|	МАКСИМУМ(АдресТовара),
	|	Минимум(КодНоменклатуры),
	|	СРЕДНЕЕ(КолПечати)
	|ПО
	|	Номенклатура,Грузоотправитель");
	Запрос.УстановитьПараметр("ВходящаяТЗ",ВходящаяТЗ);
	//serg
//	Запрос.УстановитьПараметр("ТипШтрихКода",Справочники.СлужебныеКоды.НайтиПоКоду("EAN13"));
	//serg
	Возврат Запрос.Выполнить();
КонецФункции

&НаСервере
Функция ПолучитьДанныеПоАдресам(Таблица)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВходныеДанные.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	&Таблица КАК ВходныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.Номенклатура.Код КАК КодНоменклатуры,
	|	ЕСТЬNULL(ВложенныйЗапрос.Адрес, """") КАК Адрес
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Izh_АдресаНоменклатуры.Номенклатура КАК Номенклатура,
	|			Izh_АдресаНоменклатуры.Адрес КАК Адрес
	|		ИЗ
	|			РегистрСведений.Izh_АдресаНоменклатуры КАК Izh_АдресаНоменклатуры
	|"+?(ЗначениеЗаполнено(Параметры.ВходящийПараметр),"		ГДЕ
	|			Izh_АдресаНоменклатуры.Документ = &Документ","")+") КАК ВложенныйЗапрос
	|		ПО ВТ_Номенклатура.Номенклатура = ВложенныйЗапрос.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Адрес.ПорядокОбхода
	|ИТОГИ ПО
	|	Номенклатура");
	
	Запрос.УстановитьПараметр("Таблица",Таблица);
	Если ЗначениеЗаполнено(Параметры.ВходящийПараметр) Тогда 
		Запрос.УстановитьПараметр("Документ",Параметры.ВходящийПараметр[0]);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПоНоменклатуре = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Строчка = "";
	тз = Новый ТаблицаЗначений;
	тз.Колонки.Добавить("Номенклатура");
	тз.Колонки.Добавить("КодНоменклатуры");
	тз.Колонки.Добавить("Адрес");
	
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл 
		Строчка = "";
		НоваяСтрока = тз.Добавить();
		НоваяСтрока.Номенклатура = СокрЛП(ВыборкаПоНоменклатуре.Номенклатура);
		НоваяСтрока.КодНоменклатуры = ВыборкаПоНоменклатуре.КодНоменклатуры;
		ВыборкаПоАдресам = ВыборкаПоНоменклатуре.Выбрать();
		Пока ВыборкаПоАдресам.Следующий() Цикл
			Строчка = Строчка + ВыборкаПоАдресам.Адрес+", ";
		КонецЦикла;
		Если СтрДлина(Строчка)=2 Тогда стрАдреса = "-"; Иначе СтрАдреса = Лев(Строчка,СтрДлина(Строчка)-2); КонецЕсли;
		НоваяСтрока.Адрес = СтрАдреса;
	КонецЦикла;
	
	Возврат тз;
КонецФункции

&НаСервере
Функция НапечататьЯрлыки()
	//ШиловМВ 22.07.14 №000121975{{
	ВнешняяКомпонента = ШтриховыеКоды.ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	Если ВнешняяКомпонента = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка подключения внешней компоненты печати штрихкода!'");
	КонецЕсли;
	//ШиловМВ 22.07.14 №000121975}}
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	ФРОВ = Ложь;
	Если ЗначениеЗаполнено(Параметры.ВходящийПараметр) Тогда
		Если ТипЗнч(Параметры.ВходящийПараметр) = Тип("Массив") Тогда
			Документ = Параметры.ВходящийПараметр[0];
		Иначе
			Документ = Параметры.ВходящийПараметр;
		КонецЕсли;
		//ШиловМВ 10.12.14 №000136561{{
		Если ТипЗнч(Документ)=Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			Документ=Документ.ИсправляемыйДокумент;
		КонецЕсли;
		//ШиловМВ 10.12.14 №000136561}}
		ФРОВ = Документ.Склад = Справочники.Склады.НайтиПоКоду(103,,,Справочники.СтруктурныеЕдиницы.НайтиПоКоду(1));
	КонецЕсли;
	МакетЯрлыков = ОбъектОбработка.ПолучитьМакет("Макет"+?(ФРОВ,"ФРОВ",""));
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.Защита = Истина;
	ТабДок.ИмяПараметровПечати = "ПечатьЯрлыков_ПараметрыПечати";
	ДанныеПоАдресам = ПолучитьДанныеПоАдресам(ОбъектОбработка.Товары.Выгрузить());
	РезультатЗапроса = ПолучитьДанныеОТоварах(ОбъектОбработка.Товары.Выгрузить());
	ВыборкаПоНоменклатуре0 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоНоменклатуре0.Следующий() Цикл
		ВыборкаПоНоменклатуре = ВыборкаПоНоменклатуре0.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоНоменклатуре.Следующий() Цикл
			
			ОбластьШаблон = МакетЯрлыков.ПолучитьОбласть("Шаблон");
			КоличествоШтрихКодов = 0 ;
			ШтрихКодТекст = "";
			ВыборкапоШтрихКоду = ВыборкаПоНоменклатуре.Выбрать();
			ШК="";//ШиловМВ 22.07.14 №000121975
			ПервыйШК="";//ШиловМВ 30.07.14 №000122754
			Пока ВыборкапоШтрихКоду.Следующий() Цикл
				Если ПустаяСтрока(ВыборкапоШтрихКоду.ШтрихКод) Тогда Продолжить; КонецЕсли;
				Если КоличествоШтрихКодов = 2 Тогда Прервать; КонецЕсли;
				ШтрихКодТекст = ШтрихКодТекст + ?(ПустаяСтрока(ШтрихКодТекст),"",",")+"...."+Прав(СокрЛП(ВыборкапоШтрихКоду.ШтрихКод),4);
				КоличествоШтрихКодов = КоличествоШтрихКодов + 1;
				//ШиловМВ 30.07.14 №000122754{{
				Если ПервыйШК="" Тогда
					ПервыйШК=СокрП(ВыборкапоШтрихКоду.ШтрихКод);
				КонецЕсли;
				//ШиловМВ 30.07.14 №000122754}}
				//ШиловМВ 22.07.14 №000121975{{
				Если ВыборкапоШтрихКоду.ОсновнойШтрихКод Тогда
					ШК=СокрП(ВыборкапоШтрихКоду.ШтрихКод);
				КонецЕсли;
				//ШиловМВ 22.07.14 №000121975}}
			КонецЦикла;
			//ШиловМВ 30.07.14 №000122754{{
			Если ШК="" Тогда
				ШК=ПервыйШК;
			КонецЕсли;
			//ШиловМВ 30.07.14 №000122754}}
			ОбластьШаблон.Параметры.ТекстШтрихкода = ШтрихКодТекст;
			ОбластьШаблон.Параметры.Номенклатура = СокрЛП(ВыборкаПоНоменклатуре.Номенклатура);
			ОбластьШаблон.Параметры.ДатаДок = Формат(Дата,"ДФ=dd.MM.yyyy");
			ОбластьШаблон.Параметры.ДатаГодности = Формат(ВыборкаПоНоменклатуре.ДатаГодности,"ДФ='ММММ гггг'");
			//{{ШиловМВ 08.10.14 №000129562
			ОбластьШаблон.Параметры.Поставщик = СокрЛП(ВыборкаПоНоменклатуре.Грузоотправитель);
			//ШиловМВ 08.10.14 №000129562}}
			//ШиловМВ 22.07.14 №000121975{{
			//ОбластьШаблон.Параметры.АдресТовара = ДанныеПоАдресам.Найти(ВыборкаПоНоменклатуре.КодНоменклатуры,"КодНоменклатуры").Адрес;  
			Если ЗначениеЗаполнено(ШК) Тогда
				ПараметрыШтрихкода = Новый Структура;
				ПараметрыШтрихкода.Вставить("Ширина",          ОбластьШаблон.Рисунки.КартинкаШтрихКода.Ширина);
				ПараметрыШтрихкода.Вставить("Высота",          ОбластьШаблон.Рисунки.КартинкаШтрихКода.Верх);
				ПараметрыШтрихкода.Вставить("Штрихкод",        ШК);
				ПараметрыШтрихкода.Вставить("АвтоТип",         Ложь);
				ПараметрыШтрихкода.Вставить("ТипКода",         1);
				ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
				ПараметрыШтрихкода.Вставить("РазмерШрифта",    0);
				ОбластьШаблон.Рисунки.КартинкаШтрихКода.Картинка = ШтриховыеКоды.ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, ПараметрыШтрихкода);
			КонецЕсли;
			//ШиловМВ 22.07.14 №000121975}}
			
			Для ъ=1 По ВыборкаПоНоменклатуре.КолПечати Цикл
				ТабДок.Вывести(ОбластьШаблон);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	Возврат ТабДок;
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	ТабДок = НапечататьЯрлыки();
	ТабДок.Показать();
КонецПроцедуры

//++Минин
&НаКлиенте
Процедура ПоискПоШтрихКоду(Команда)Экспорт 
	ШтрихКод = "";
	Если ВвестиСтроку(ШтрихКод,"Введите штрихкод",20,Ложь) Тогда //ОткрытьФормуМодально("ОбщаяФорма.ФормаПоискПоШтрихКоду");
		ПоискНоменклатуры(ШтрихКод);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоискНоменклатуры(ШтрихКод) 
	Номенклатура = Справочники.Номенклатура.НайтиПоКоду(ШтрихКод);
	Если НЕ Номенклатура.Пустая() и НЕ Номенклатура.Транзакционный Тогда 
		Элементы.ПодборНоменклатуры.ТекущаяСтрока = Номенклатура.Родитель;
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Товар с кодом "+Штрихкод+" не найден");
	КонецЕсли;
КонецПроцедуры
//--Минин