//Открываем обработку, передаем соотвествия в переменную Данные (соотвествие)
Перем СчетчикСегментов;
Перем ПодготовленныеДанные; //Передаем сюда соотвествия для заполнения файла

/////////////////общие функции/////////////////
// Создает и возвращает узел нового xml-документа
//
// Параметры:
//  Нет.
//  
// Возвращаемое значение:
//  Узел нового xml-документа
//
Функция НовыйXMLДокумент_DOM() Экспорт
	
	Попытка
		XML = Новый COMОбъект("Msxml2.DOMDocument.4.0");
	Исключение
		Попытка
			XML = Новый COMОбъект("Msxml2.DOMDocument.3.0");
		Исключение
			//ЗаписатьВПротоколВыполнения(4);
			ФлагОшибки = Истина;
			Возврат Неопределено;
		КонецПопытки;
	КонецПопытки;
	
	Возврат XML;
КонецФункции // DOM_НовыйXMLДокумент()

Функция ЗагрузитьXML_DOM(Док,ИмяФайла) Экспорт
	Док.Load(ИмяФайла);
	Док.SetProperty("SelectionLanguage","XPath");
КонецФункции

Функция ДобавитьОбъявлениеXML(Док,ОбъявлениеXML="") Экспорт
	Header = Док.createProcessingInstruction("xml", ?(ОбъявлениеXML="","version=""1.0"" encoding=""Windows-1251""",ОбъявлениеXML) );  
	Док.appendChild(Header);
	Возврат  Header;
КонецФункции

Функция СохранитьXMLВФайл(Док,ИмяФайла) Экспорт
	Док.Save(ИмяФайла);	
КонецФункции

// Создает новый xml-узел
//
// Параметры: 
//  Имя            - Имя узла
//
// Возвращаемое значение:
//  Объект нового xml-узла
//
Функция СоздатьУзел_DOM(Док, Имя)  Экспорт
	
	Возврат Док.createElement(Имя);
	
КонецФункции // DOM_СоздатьУзел()

// Добавляет новый xml-узел к указанному узлу-родителю
// Функция может быть использована в обработчиках событий, программный код 
// которых хранится в правила обмена данными. Вызывается методом Выполнить()
// Сообщение "Не обнаружено ссылок на функцию" при проверке конфигурации 
// не является ошибкой проверки конфигурации
//
// Параметры: 
//  УзелРодитель   - xml-узел-родитель
//  Имя            - имя добавляемого узла
//
// Возвращаемое значение:
//  Новый xml-узел, добавленный к указанному узлу-родителю
//
Функция ДобавитьУзел_DOM(Док, УзелРодитель, Имя) Экспорт
	
	XMLDOMNode = Док.createElement(Имя);
	УзелРодитель.appendChild(XMLDOMNode);
	Возврат XMLDOMNode;
	
КонецФункции // DOM_ДобавитьУзел()

// Копирует указанный xml-узел
// Функция может быть использована в обработчиках событий, программный код 
// которых хранится в правила обмена данными. Вызывается методом Выполнить()
// Сообщение "Не обнаружено ссылок на функцию" при проверке конфигурации 
// не является ошибкой проверки конфигурации
//
// Параметры: 
//  Узел           - копируемый узел
//
// Возвращаемое значение:
//  Новый xml - копия указанного узла
//
Функция КопироватьУзел_DOM(Узел)  Экспорт
	
	Возврат Узел.cloneNode(Истина);
	
КонецФункции // DOM_Копироватьузел() 

// Добавляет новый xml-узел к указанному узлу-родителю, устанавливает значение
//
// Параметры: 
//  УзелРодитель   - xml-узел-родитель
//  Имя            - имя добавляемого узла
//  Значение       - значение добавляемого узла
//
// Возвращаемое значение:
//  Новый xml-узел, добавленный к указанному узлу-родителю
//
Функция ДобавитьЭлемент_DOM(Док, УзелРодитель, Имя, Значение="") Экспорт
	
	XMLDOMElement = Док.createElement(Имя);
	XMLDOMElement.text = Значение;
	УзелРодитель.appendChild(XMLDOMElement);
	Возврат XMLDOMElement;
	
КонецФункции // DOM_ДобавитьЭлемент()

// Подчиняет xml-узел указанному узлу-родителю
// Функция может быть использована в обработчиках событий, программный код 
// которых хранится в правила обмена данными. Вызывается методом Выполнить()
// Сообщение "Не обнаружено ссылок на функцию" при проверке конфигурации 
// не является ошибкой проверки конфигурации
//
// Параметры: 
//  УзелРодитель   - xml-узел-родитель
//  Узел           - подчиняемый узел 
//
Процедура ДобавитьПодчиненный_DOM(УзелРодитель, Узел)  Экспорт
	
	УзелРодитель.appendChild(Узел);
	
КонецПроцедуры // DOM_ДобавитьПодчиненный() 

// Устанавливает атрибут указанного xml-узла
//
// Параметры: 
//  Узел           - xml-узел
//  Имя            - имя атрибута
//  Значение       - устанавливаемое значение
//
Процедура УстановитьАтрибут_DOM(Узел, Имя, Значение) Экспорт
	
	Узел.setAttribute(Имя, XMLСтрока(Значение));
	
КонецПроцедуры // DOM_УстановитьАтрибут()

Функция ПолучСписокЭлементовДокумента_DOM(Док, Имя) Экспорт
	Возврат Док.getElementsByTagName(Имя);
КонецФункции

Функция ЭлементСписка_DOM(Список, Индекс)  Экспорт
	Возврат Список.item(Индекс);
КонецФункции

Функция ДлинаСписка_DOM(Список) Экспорт
	Возврат Список.length;
КонецФункции

Функция ПолучЭлементДокумента_DOM(Док, Имя, Индекс=0)  Экспорт
	Список = Док.getElementsByTagName(Имя);
	Возврат Список.item(Индекс);
КонецФункции

Функция ПолучУзелАтрибута_DOM(Элемент, ИмяНомер)  Экспорт
	Возврат  Элемент.getAttributeNode(ИмяНомер);
КонецФункции

Функция ПолучАтрибут_DOM(Элемент, Имя) Экспорт
	Возврат  Элемент.getAttribute(Имя);
КонецФункции

Функция ПолучИмяЭлемента_DOM(Элемент) Экспорт
	Возврат  Элемент.tagName;
КонецФункции

Функция ПолучСписокПотомковЭлементаПоИмени_DOM(Элемент, Имя) Экспорт
	Возврат Элемент.getElementsByTagName(Имя);
КонецФункции

Функция ПолучОтдельныйУзел_DOM(Элемент, Имя) Экспорт
	Возврат Элемент.selectSingleNode(Имя);
КонецФункции

Функция ПолучУзлы_DOM(Элемент, Имя)  Экспорт
	Возврат Элемент.selectNodes(Имя);
КонецФункции

Функция ПолучСписокПотомковЭлемента_DOM(Элемент)  Экспорт
	Возврат Элемент.childNodes;
КонецФункции

Функция ПолучСписокАтрибутов_DOM(Элемент) Экспорт
	Возврат Элемент.attributes;
КонецФункции

Функция ПолучПотомкаЭлемента_DOM(Элемент, Имя, Индекс=0) Экспорт
	Список = Элемент.getElementsByTagName(Имя);
	Возврат Список.item(Индекс);
КонецФункции

//Возвращает тип элемента
//1-Элемент
//2-Атрибут
//3-Текст
//4-Секция данных
//5-Ссылка на компонент
//6-Компонент6
//7-Инструкция обработки
//8-Комментарий
//9-Документ
//10-Определение типа документа (DTD)
//11-Фрагмент документа
//12-Описание
Функция ПолучТипЭлемента_DOM(Элемент) Экспорт
	Возврат Элемент.nodeType;
КонецФункции

Функция ПолучИмяАтрибута_DOM(Элемент)  Экспорт
	Возврат Элемент.name;
КонецФункции

Функция ПолучЗначениеАтрибута_DOM(Элемент) Экспорт
	Возврат Элемент.value;
КонецФункции

Функция ПолучЗначениеУзла_DOM(Элемент) Экспорт
	Возврат Элемент.nodeValue;
КонецФункции

Функция ПолучРодителяУзла_DOM(Элемент)  Экспорт
	Возврат Элемент.parentNode;
КонецФункции

Функция ИмеетВложенныеУзлы(Элемент)  Экспорт
	Возврат Элемент.hasChildNodes();
КонецФункции

Функция ТекстУзла(Элемент) Экспорт
	Возврат Элемент.text;	
КонецФункции

Функция ОпределитьВидФайла(ИмяФайла) Экспорт
	xml=НовыйXMLДокумент_DOM();
	ЗагрузитьXML_DOM(xml,ИмяФайла);
	Корень=xml.DocumentElement;
	
	Возврат ПолучИмяЭлемента_DOM(Корень); 
	
КонецФункции

Функция ПолучитьПодчиненныйУзелПоИмени(Узел,Имя)
	Попытка
		Список=ПолучСписокПотомковЭлементаПоИмени_DOM(Узел,Имя);
		если ДлинаСписка_DOM(Список)=0 тогда
			Возврат Неопределено;	
		Иначе 
			Возврат ЭлементСписка_DOM(Список,0);
		КонецЕсли;	
	Исключение
		ВызватьИсключение "Не определен родитель элемента "+Имя;
	КонецПопытки;
КонецФункции

Функция ПустойУзел(Значение)
	Если Значение<>Неопределено тогда
		Возврат Ложь;	
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

Функция ЗначениеМодиифкатораДаты(Модификатор_)
	//	2   = Delivery date/time, requested 
	//10   = Shipment date/time, requested 
	//11   = Despatch date and/or time 
	//15   = Promotion start date/time 
	//37   = Ship not before date/time 
	//38   = Ship not later than date/time 
	//61   = Cancel if not delivered by this date 
	//63   = Delivery date/time, latest 
	//64   = Delivery date/time, earliest 
	//69   = Delivery date/time, promised for 
	//X14   = Requested for delivery week commencing (EAN Code) 
	//137   = Document/message date/time 
	//171 = Reference date/time 
	//200   = Pick-up/collection date/time of cargo 
	//263   = Invoicing period 
	//273   = Validity period 
	//282   = Confirmation date lead time 
	//383   = Cancel if not shipped by this date 
	Модификатор=ВРЕГ(Модификатор_);
	
	Если Модификатор="2" тогда
		Возврат "ДатаПоставки";
	ИначеЕсли Модификатор="10" тогда
		Возврат "ДатаОтгрузки";
	ИначеЕсли Модификатор="11" тогда
		Возврат "ДатаОтправки";
	ИначеЕсли Модификатор="15" тогда
		Возврат "ДатаНачалаПромоАкции";
	ИначеЕсли Модификатор="37" тогда
		Возврат "ДатаОтгрузкиНеРаньше";
	ИначеЕсли Модификатор="38" тогда
		Возврат "ДатаОтгрузкиНеПозже";
	ИначеЕсли Модификатор="61" тогда
		Возврат "ДатаОтменыЕслиНеПоставлено";
	ИначеЕсли Модификатор="63" тогда
		Возврат "ДатаПоставкиПоздняя";
	ИначеЕсли Модификатор="64" тогда
		Возврат "ДатаПоставкиРанняя";	
	ИначеЕсли Модификатор="69" тогда
		Возврат "ДатаПоставкиОбещенная";
	ИначеЕсли Модификатор="X14" тогда
		Возврат "";//?
	ИначеЕсли Модификатор="137" тогда
		Возврат "ДатаДокумента";
	ИначеЕсли Модификатор="171" тогда
		Возврат "ДатаСсылка";
	ИначеЕсли Модификатор="200" тогда
		Возврат "ДатаУпаковки";
	ИначеЕсли Модификатор="263" тогда
		Возврат "ПериодПредаставленияСчета";
	ИначеЕсли Модификатор="273" тогда
		Возврат "ПериодПроверки";
	ИначеЕсли Модификатор="383" тогда
		Возврат "ДатаОтменыЕслиНеОтгружено";	
	КонецЕсли;
	
	Возврат "";
КонецФункции


///////////////////////ORDERS и RECADV////////////////////
Функция ПреобразоватьДату(Дата,Формат)
	Если Формат="203" тогда
		Возврат Формат(Дата,"ДФ=""ггггММддЧЧммсс""");
	Иначе
		Возврат Формат(Дата,"ДФ=""ггггММдд""");
	КонецЕсли;
КонецФункции

Функция УвеличитьСчетчикСегментов()
	СчетчикСегментов=СчетчикСегментов+1;
	Возврат СчетчикСегментов;
КонецФункции

Функция ПолучитьДанные(Данные)
	Возврат ПодготовленныеДанные.Получить(Данные);
КонецФункции

Функция ПолучитьЗначениеСтроки(ТЗ,Строка,ИмяКолонки)
	ТЗ = Новый ТаблицаЗначений();
	Колонка=ТЗ.Колонки.Найти(ИмяКолонки);
	Если Колонка=Неопределено тогда
		Возврат "";
	Иначе
		Индекс=ТЗ.Колонки.Индекс(Колонка);
		Возврат Строка[Индекс];
	КонецЕсли;
	Возврат "";
КонецФункции

Функция ЗаписатьUNH(XML,Узел,ТипСообщения)
	UNH=ДобавитьЭлемент_DOM(XML,Узел,"UNH");
	ДобавитьЭлемент_DOM(XML,UNH,"E0062",Строка(ПолучитьДанные("НомерСообщения")));
	s009=ДобавитьЭлемент_DOM(XML,UNH,"S009");
	ДобавитьЭлемент_DOM(XML,s009,"E0065",ТипСообщения);  //"ORDERS"
	ДобавитьЭлемент_DOM(XML,s009,"E0052","D");
	ДобавитьЭлемент_DOM(XML,s009,"E0054","01B");
	ДобавитьЭлемент_DOM(XML,s009,"E0051","UN");
	//Котлячкова ++ Исправление в выгрузке рекадва
	Если ТипСообщения="RECADV" тогда 
		ДобавитьЭлемент_DOM(XML,s009,"E0057","EAN005");
	Иначе
		ДобавитьЭлемент_DOM(XML,s009,"E0057","EAN010");
	КонецЕсли;
	//Котлячкова -- Исправление в выгрузке рекадва
	УвеличитьСчетчикСегментов();
	Возврат 0;
КонецФункции

Функция ЗаписатьBGM(XML,Узел)
	BGM=ДобавитьЭлемент_DOM(XML,Узел,"BGM");
	C002= ДобавитьЭлемент_DOM(XML,BGM,"C002");
	ДобавитьЭлемент_DOM(XML,C002,"E1001","220");
	C106=ДобавитьЭлемент_DOM(XML,BGM,"C106");
	ДобавитьЭлемент_DOM(XML,C106,"E1004",ПолучитьДанные("НомерДокумента"));
	ДобавитьЭлемент_DOM(XML,BGM,"E1225",ПолучитьДанные("ФункцияСообщения"));	 
	УвеличитьСчетчикСегментов();
	Возврат 0;
КонецФункции

//Котлячкова ++ Исправление в выгрузке рекадва
Функция ЗаписатьBGM_АП(XML,Узел)
	BGM=ДобавитьЭлемент_DOM(XML,Узел,"BGM");
	C002= ДобавитьЭлемент_DOM(XML,BGM,"C002");
	ДобавитьЭлемент_DOM(XML,C002,"E1001","632");
	C106=ДобавитьЭлемент_DOM(XML,BGM,"C106");
	ДобавитьЭлемент_DOM(XML,C106,"E1004",ПолучитьДанные("НомерДокумента"));
	ДобавитьЭлемент_DOM(XML,BGM,"E1225",ПолучитьДанные("ФункцияСообщения"));	 
	УвеличитьСчетчикСегментов();
	Возврат 0;
КонецФункции

//Котлячкова -- Исправление в выгрузке рекадва

Функция ЗаписатьDTM(XML,Узел)
	ДатаДокумента=ПолучитьДанные("ДатаДокумента");
	Если не ЗначениеЗаполнено(ДатаДокумента) тогда
		Возврат "Не определена дата документа!";	
	КонецЕсли;
	
	ФорматДатыДокумента=СокрЛП(Строка(ПолучитьДанные("ФорматДатыДокумента")));
	Если (ФорматДатыДокумента<>"102") или (ФорматДатыДокумента<>"203") тогда
		ФорматДатыДокумента="102";	
	КонецЕсли;
	
	DTM=ДобавитьЭлемент_DOM(XML,Узел,"DTM");
	C507= ДобавитьЭлемент_DOM(XML,DTM,"C507");
	ДобавитьЭлемент_DOM(XML,C507,"E2005","137"); // Дата документа.
	ДобавитьЭлемент_DOM(XML,C507,"E2380",ПреобразоватьДату(ДатаДокумента,ФорматДатыДокумента));
	ДобавитьЭлемент_DOM(XML,C507,"E2379",ФорматДатыДокумента);
	УвеличитьСчетчикСегментов();
	
	ДатаПоставки=ПолучитьДанные("ДатаПоставки");
	Если ЗначениеЗаполнено(ДатаПоставки) тогда
		Если ДатаПоставки<ДатаДокумента тогда
			Возврат "Дата поставки не может быть меньше чем дата заказа!";	
		КонецЕсли;
		
		ФорматДатыПоставки=СокрЛП(Строка(ПолучитьДанные("ФорматДатыПоставки")));
		Если (ФорматДатыДокумента<>"102") или (ФорматДатыДокумента<>"203") тогда
			ФорматДатыДокумента="102";	
		КонецЕсли;	
		DTM=ДобавитьЭлемент_DOM(XML,Узел,"DTM");
		C507= ДобавитьЭлемент_DOM(XML,DTM,"C507");
		ДобавитьЭлемент_DOM(XML,C507,"E2005","2");// Требуемая дата поставки.
		ДобавитьЭлемент_DOM(XML,C507,"E2380",ПреобразоватьДату(ДатаПоставки,ФорматДатыПоставки));
		ДобавитьЭлемент_DOM(XML,C507,"E2379",ФорматДатыПоставки);
		УвеличитьСчетчикСегментов();		
	КонецЕсли;	
	Возврат 0;
КонецФункции

Функция ЗаписатьSG1(XML,Узел)
	НомерСоглашения=ПолучитьДанные("Соглашение");
	Если ЗначениеЗаполнено(НомерСоглашения) тогда
		SG1= ДобавитьЭлемент_DOM(XML,Узел,"SG1");
		RFF= ДобавитьЭлемент_DOM(XML,SG1,"RFF");
		C506= ДобавитьЭлемент_DOM(XML,RFF,"C506");
		ДобавитьЭлемент_DOM(XML,C506,"E1153","CT"); // Номер контракта. 
		ДобавитьЭлемент_DOM(XML,C506,"E1154",НомерСоглашения);
		УвеличитьСчетчикСегментов();
	КонецЕсли;
	
	Возврат 0;
КонецФункции

Функция ЗаписатьSG1_АП(XML,Узел)
	
	НомерЗаказа=ПолучитьДанные("НомерЗаказа");
	ДатаЗаказа=ПолучитьДанные("ДатаЗаказа");
	Если ЗначениеЗаполнено(НомерЗаказа) тогда
		SG1= ДобавитьЭлемент_DOM(XML,Узел,"SG1");
		RFF= ДобавитьЭлемент_DOM(XML,SG1,"RFF");
		C506= ДобавитьЭлемент_DOM(XML,RFF,"C506");
		ДобавитьЭлемент_DOM(XML,C506,"E1153","ON"); // Номер заказа. 
		ДобавитьЭлемент_DOM(XML,C506,"E1154",НомерЗаказа );
		DTM= ДобавитьЭлемент_DOM(XML,SG1,"DTM");
		C507= ДобавитьЭлемент_DOM(XML,DTM,"C507");
		ДобавитьЭлемент_DOM(XML,C507,"E2005","171"); // Дата заказа. 
		ДобавитьЭлемент_DOM(XML,C507,"E2380",ПреобразоватьДату(ДатаЗаказа,"102"));
		ДобавитьЭлемент_DOM(XML,C507,"E2379","102");
		УвеличитьСчетчикСегментов();
	КонецЕсли;
	НомерНакладной=ПолучитьДанные("НомерНакладной");
	ДатаНакладной=ПолучитьДанные("ДатаНакладной");
	Если ЗначениеЗаполнено(НомерЗаказа) тогда
		SG1= ДобавитьЭлемент_DOM(XML,Узел,"SG1");
		RFF= ДобавитьЭлемент_DOM(XML,SG1,"RFF");
		C506= ДобавитьЭлемент_DOM(XML,RFF,"C506");
		ДобавитьЭлемент_DOM(XML,C506,"E1153","AAK"); // Номер накладной.  //dps+ 15.08.27 136939
		ДобавитьЭлемент_DOM(XML,C506,"E1154",НомерНакладной );
		DTM= ДобавитьЭлемент_DOM(XML,SG1,"DTM");
		C507= ДобавитьЭлемент_DOM(XML,DTM,"C507");
		ДобавитьЭлемент_DOM(XML,C507,"E2005","171"); // Дата накладной. 
		ДобавитьЭлемент_DOM(XML,C507,"E2380",ПреобразоватьДату(ДатаНакладной,"102"));
		ДобавитьЭлемент_DOM(XML,C507,"E2379","102");
		УвеличитьСчетчикСегментов();
	КонецЕсли;
	Возврат 0;
КонецФункции

Функция ЗаписатьSG4_АП(XML,Узел)  
	
	GLNПоставщика = ПолучитьДанные("GLNПоставщика");
	GLNПокупателя = ПолучитьДанные("GLNПокупателя");
	GLNМестаДоставки = ПолучитьДанные("GLNМестаДоставки");
	
	Если Не ЗначениеЗаполнено(GLNПоставщика) тогда
		Возврат "Не определен GLN поставщика!";	
	КонецЕсли;
	SG4= ДобавитьЭлемент_DOM(XML,Узел,"SG4");
	NAD = ДобавитьЭлемент_DOM(XML,SG4,"NAD"); 	
	ДобавитьЭлемент_DOM(XML,NAD,"E3035","SU");
	C082=ДобавитьЭлемент_DOM(XML,NAD,"C082");
	ДобавитьЭлемент_DOM(XML,C082,"E3039",GLNПоставщика);
	ДобавитьЭлемент_DOM(XML,C082,"E3055","9");
	УвеличитьСчетчикСегментов();
	
	
	Если не ЗначениеЗаполнено(GLNПокупателя) тогда
		Возврат "Не определен GLN покупателя!";	
	КонецЕсли;
	SG4= ДобавитьЭлемент_DOM(XML,Узел,"SG4");
	NAD = ДобавитьЭлемент_DOM(XML,SG4,"NAD"); 	
	ДобавитьЭлемент_DOM(XML,NAD,"E3035","BY");
	C082=ДобавитьЭлемент_DOM(XML,NAD,"C082");
	ДобавитьЭлемент_DOM(XML,C082,"E3039",GLNПокупателя);
	ДобавитьЭлемент_DOM(XML,C082,"E3055","9");
	УвеличитьСчетчикСегментов();
	
	Если ЗначениеЗаполнено(GLNМестаДоставки) тогда
		SG4= ДобавитьЭлемент_DOM(XML,Узел,"SG4");
		NAD = ДобавитьЭлемент_DOM(XML,SG4,"NAD"); 	
		ДобавитьЭлемент_DOM(XML,NAD,"E3035","DP");
		C082=ДобавитьЭлемент_DOM(XML,NAD,"C082");
		ДобавитьЭлемент_DOM(XML,C082,"E3039",GLNМестаДоставки);
		ДобавитьЭлемент_DOM(XML,C082,"E3055","9");
		УвеличитьСчетчикСегментов();
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции  

Функция ЗаписатьSG2(XML,Узел)
	
	GLNПоставщика = ПолучитьДанные("GLNПоставщика");
	GLNПокупателя = ПолучитьДанные("GLNПокупателя");
	GLNПлательщика = ПолучитьДанные("GLNПлательщика");
	GLNМестаДоставки = ПолучитьДанные("GLNМестаДоставки");
	GLNКомуВыставленСчет = ПолучитьДанные("GLNКомуВыставленСчет");
	ИДМестаДоставки = ПолучитьДанные("ИДМестаДоставки");
	НомерСоглашения=ПолучитьДанные("Соглашение");
	
	Если Не ЗначениеЗаполнено(GLNПоставщика) тогда
		Возврат "Не определен GLN поставщика!";	
	КонецЕсли;
	SG2= ДобавитьЭлемент_DOM(XML,Узел,"SG2");
	NAD = ДобавитьЭлемент_DOM(XML,SG2,"NAD"); 	
	ДобавитьЭлемент_DOM(XML,NAD,"E3035","SU");
	C082=ДобавитьЭлемент_DOM(XML,NAD,"C082");
	ДобавитьЭлемент_DOM(XML,C082,"E3039",GLNПоставщика);
	ДобавитьЭлемент_DOM(XML,C082,"E3055","9");
	УвеличитьСчетчикСегментов();
	
	
	Если не ЗначениеЗаполнено(GLNПокупателя) тогда
		Возврат "Не определен GLN покупателя!";	
	КонецЕсли;
	SG2= ДобавитьЭлемент_DOM(XML,Узел,"SG2");
	NAD = ДобавитьЭлемент_DOM(XML,SG2,"NAD"); 	
	ДобавитьЭлемент_DOM(XML,NAD,"E3035","BY");
	C082=ДобавитьЭлемент_DOM(XML,NAD,"C082");
	ДобавитьЭлемент_DOM(XML,C082,"E3039",GLNПокупателя);
	ДобавитьЭлемент_DOM(XML,C082,"E3055","9");
	УвеличитьСчетчикСегментов();
	
	Если ЗначениеЗаполнено(GLNМестаДоставки) тогда
		SG2= ДобавитьЭлемент_DOM(XML,Узел,"SG2");
		NAD = ДобавитьЭлемент_DOM(XML,SG2,"NAD"); 	
		ДобавитьЭлемент_DOM(XML,NAD,"E3035","DP");
		C082=ДобавитьЭлемент_DOM(XML,NAD,"C082");
		ДобавитьЭлемент_DOM(XML,C082,"E3039",GLNМестаДоставки);
		ДобавитьЭлемент_DOM(XML,C082,"E3055","9");
		УвеличитьСчетчикСегментов();                                    
		
		Если ЗначениеЗаполнено(ИДМестаДоставки) тогда
			SG3=ДобавитьЭлемент_DOM(XML,SG2,"SG3");
			ВыгурзитьСегментRFF(XML,SG3,ИДМестаДоставки,"YC1");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(GLNПлательщика) тогда
		SG2= ДобавитьЭлемент_DOM(XML,Узел,"SG2");
		NAD = ДобавитьЭлемент_DOM(XML,SG2,"NAD"); 	
		ДобавитьЭлемент_DOM(XML,NAD,"E3035","PE");
		C082=ДобавитьЭлемент_DOM(XML,NAD,"C082");
		ДобавитьЭлемент_DOM(XML,C082,"E3039",GLNПлательщика);
		ДобавитьЭлемент_DOM(XML,C082,"E3055","9");
		УвеличитьСчетчикСегментов();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(GLNКомуВыставленСчет) тогда
		SG2= ДобавитьЭлемент_DOM(XML,Узел,"SG2");
		NAD = ДобавитьЭлемент_DOM(XML,SG2,"NAD"); 	
		ДобавитьЭлемент_DOM(XML,NAD,"E3035","IV");
		C082=ДобавитьЭлемент_DOM(XML,NAD,"C082");
		ДобавитьЭлемент_DOM(XML,C082,"E3039",GLNКомуВыставленСчет);
		ДобавитьЭлемент_DOM(XML,C082,"E3055","9");
		УвеличитьСчетчикСегментов();
	КонецЕсли;
	//  Если ЗначениеЗаполнено(НомерСоглашения) тогда
	//	FTX = ДобавитьЭлемент_DOM(XML,SG2,"FTX"); 	
	//	ДобавитьЭлемент_DOM(XML,FTX,"E4451","ZZZ");
	//	C108=ДобавитьЭлемент_DOM(XML,FTX,"C108");
	//	ДобавитьЭлемент_DOM(XML,C108,"E4440",НомерСоглашения);
	//	УвеличитьСчетчикСегментов();
	//КонецЕсли; 	
	Возврат 0;
КонецФункции

Функция ЗаписатьFTX(XML,Узел)
	НомерСоглашения=ПолучитьДанные("Соглашение");
	Если не ЗначениеЗаполнено(НомерСоглашения) тогда
		Возврат "Не определен НомерСоглашения!";	
	КонецЕсли;
	FTX = ДобавитьЭлемент_DOM(XML,Узел,"FTX"); 	
	ДобавитьЭлемент_DOM(XML,FTX,"E4451","ZZZ");
	C108=ДобавитьЭлемент_DOM(XML,FTX,"C108");
	ДобавитьЭлемент_DOM(XML,C108,"E4440",НомерСоглашения);
	УвеличитьСчетчикСегментов();
	Возврат 0;
КонецФункции

Функция ВыгурзитьСегментRFF(XML,Узел,Значение,Модификатор)
	Попытка	
		RFF= ДобавитьЭлемент_DOM(XML,Узел,"RFF");
		C506= ДобавитьЭлемент_DOM(XML,RFF,"C506");
		ДобавитьЭлемент_DOM(XML,C506,"E1153",Модификатор);  
		ДобавитьЭлемент_DOM(XML,C506,"E1154",Значение);
		УвеличитьСчетчикСегментов();
	Исключение
		ВызватьИсключение ОписаниеОшибки();
	КонецПопытки;
	Возврат 0;
КонецФункции


Функция ЗаписатьSG7(XML,Узел)
	Валюта=ПолучитьДанные("Валюта");
	Если ЗначениеЗаполнено(Валюта) тогда
		SG7= ДобавитьЭлемент_DOM(XML,Узел,"SG7");
		CUX= ДобавитьЭлемент_DOM(XML,SG7,"CUX");
		C504=ДобавитьЭлемент_DOM(XML,CUX,"C504");
		ДобавитьЭлемент_DOM(XML,C504,"E6347","2");
		ДобавитьЭлемент_DOM(XML,C504,"E6345",Валюта);
		ДобавитьЭлемент_DOM(XML,C504,"E6343","9");
		УвеличитьСчетчикСегментов();
	КонецЕсли;
КонецФункции

Функция ЗаписатьSG28(XML,Узел_)
	ТабличнаяЧастьДокумента =  ПолучитьДанные("ТабличнаяЧасть");
	Если ТипЗнч (ТабличнаяЧастьДокумента)<> Тип("ТаблицаЗначений") тогда
		Возврат "Табличная часть документа не определена!";	
	КонецЕсли;
	
	Для Каждого Строка из ТабличнаяЧастьДокумента цикл
		Узел=ДобавитьЭлемент_DOM(XML,Узел_,"SG28");
		LIN= ДобавитьЭлемент_DOM(XML,Узел,"LIN");
		НомерСтроки=Строка.ПорядковыйНомер;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ПорядковыйНомер");
		ДобавитьЭлемент_DOM(XML,LIN,"E1082",Строка(НомерСтроки));
		C212=ДобавитьЭлемент_DOM(XML,LIN,"C212");
		GTIN=Строка.GTIN;//ПолучитьЗначениеСтроки(ТабличнаяЧасть,Строка,"GTIN");
		ДобавитьЭлемент_DOM(XML,C212,"E7140",СокрЛП(GTIN));
		ДобавитьЭлемент_DOM(XML,C212,"E7143","SRV");
		УвеличитьСчетчикСегментов();
		
		КодПокупателя = Строка.КодПокупателя;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"КодПокупателя");
		Если ЗначениеЗаполнено(КодПокупателя) тогда
			PIA=ДобавитьЭлемент_DOM(XML,Узел,"PIA");
			ДобавитьЭлемент_DOM(XML,PIA,"E4347","1");
			C212=ДобавитьЭлемент_DOM(XML,PIA,"C212");
			ДобавитьЭлемент_DOM(XML,C212,"E7140",КодПокупателя);
			ДобавитьЭлемент_DOM(XML,C212,"E7143","IN");
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		
		КодПоставщика = Строка.КодПоставщика;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"КодПоставщика");
		Если ЗначениеЗаполнено(КодПоставщика) тогда
			PIA=ДобавитьЭлемент_DOM(XML,Узел,"PIA");
			ДобавитьЭлемент_DOM(XML,PIA,"E4347","1");
			C212=ДобавитьЭлемент_DOM(XML,PIA,"C212");
			ДобавитьЭлемент_DOM(XML,C212,"E7140",КодПоставщика);
			ДобавитьЭлемент_DOM(XML,C212,"E7143","SA");
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		
		Наименование = Строка.НаименованиеТовара;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"НаименованиеТовара");
		IMD=ДобавитьЭлемент_DOM(XML,Узел,"IMD");
		ДобавитьЭлемент_DOM(XML,IMD,"E7077","F");
		C273=ДобавитьЭлемент_DOM(XML,IMD,"C273");
		ДобавитьЭлемент_DOM(XML,C273,"E7008",Наименование);
		УвеличитьСчетчикСегментов();
		
		Количество = Строка.Количество;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"Количество");
		ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ЕдиницаИзмерения");
		QTY=ДобавитьЭлемент_DOM(XML,Узел,"QTY");
		C186=ДобавитьЭлемент_DOM(XML,QTY,"C186");
		ДобавитьЭлемент_DOM(XML,C186,"E6063","21"); // Заказываемое количество.
		ДобавитьЭлемент_DOM(XML,C186,"E6060",Формат(Количество,"ЧРД=.; ЧГ="));
		ДобавитьЭлемент_DOM(XML,C186,"E6411",ЕдиницаИзмерения);
		УвеличитьСчетчикСегментов();
		
		Сумма=Строка.СуммаЗаказа;//ПолучитьЗначениеСтроки(ТабличнаяЧасть,Строка,"СуммаЗаказа");
		Если ЗначениеЗаполнено(Сумма) тогда
			MOA = ДобавитьЭлемент_DOM(XML,Узел,"MOA"); 
			C516= ДобавитьЭлемент_DOM(XML,MOA,"C516");   
			ДобавитьЭлемент_DOM(XML,C516,"E5025","128");
			ДобавитьЭлемент_DOM(XML,C516,"E5004",Формат(Сумма,"ЧРД=.; ЧГ="));
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		
		ЦенаБезНДС = Строка.ЦенаБезНДС;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ЦенаБезНДС");
		Если ЗначениеЗаполнено(ЦенаБезНДС) тогда
			SG32 = ДобавитьЭлемент_DOM(XML,Узел,"SG32");
			PRI = ДобавитьЭлемент_DOM(XML,SG32,"PRI");  
			C509 =  ДобавитьЭлемент_DOM(XML,PRI,"C509");  
			ДобавитьЭлемент_DOM(XML,C509,"E5125","AAA");
			ДобавитьЭлемент_DOM(XML,C509,"E5118",Формат(ЦенаБезНДС,"ЧРД=.; ЧГ=")); 
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		
		ЦенаСНДС = Строка.ЦенаСНДС;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ЦенаСНДС");
		Если ЗначениеЗаполнено(ЦенаСНДС) тогда
			SG32 = ДобавитьЭлемент_DOM(XML,Узел,"SG32");
			PRI = ДобавитьЭлемент_DOM(XML,SG32,"PRI");  
			C509 =  ДобавитьЭлемент_DOM(XML,PRI,"C509");  
			ДобавитьЭлемент_DOM(XML,C509,"E5125","AAE");
			ДобавитьЭлемент_DOM(XML,C509,"E5118",Формат(ЦенаСНДС,"ЧРД=.; ЧГ=")); 
			УвеличитьСчетчикСегментов();
		КонецЕсли;
	КонецЦикла;	
	Возврат 0;
КонецФункции

Функция ЗаписатьSG16_АП(XML,Узел_)
	//Котлячкова ++ Исправление в выгрузке рекадва
	
	//SG16 = ДобавитьЭлемент_DOM(XML,Узел_,"SG16"); 
	//CPS = ДобавитьЭлемент_DOM(XML,SG16,"CPS"); 
	//УвеличитьСчетчикСегментов();
	//ДобавитьЭлемент_DOM(XML,CPS,"E7164","1");
	
	
	ТабличнаяЧастьДокумента =  ПолучитьДанные("ТабличнаяЧасть");
	Если ТипЗнч (ТабличнаяЧастьДокумента)<> Тип("ТаблицаЗначений") тогда
		Возврат "Табличная часть документа не определена!";	
	КонецЕсли;
	Узел=ДобавитьЭлемент_DOM(XML,Узел_,"SG16");
	CPS = ДобавитьЭлемент_DOM(XML,Узел,"CPS");
	ДобавитьЭлемент_DOM(XML,CPS,"E7164","1");
	НомерСтроки=0;
	Для Каждого Строка из ТабличнаяЧастьДокумента цикл
		Узел_SG22=ДобавитьЭлемент_DOM(XML,Узел,"SG22");
		LIN= ДобавитьЭлемент_DOM(XML,Узел_SG22,"LIN");
		//Котлячкова++ 24,06,15 Ошибки выгрузки RECADV
		НомерСтроки=НомерСтроки+1;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ПорядковыйНомер");
		ДобавитьЭлемент_DOM(XML,LIN,"E1082",Строка(НомерСтроки));
		C212=ДобавитьЭлемент_DOM(XML,LIN,"C212");
		GTIN=Строка.GTIN;//ПолучитьЗначениеСтроки(ТабличнаяЧасть,Строка,"GTIN");
		//Котлячкова++ 07,08,15 Ошибки выгрузки RECADV
		Если не ЗначениеЗаполнено(GTIN) тогда
			 GTIN=Строка.КодПокупателя;
		КонецЕсли;
		 //Котлячкова-- 07,08,15 Ошибки выгрузки RECADV
		ДобавитьЭлемент_DOM(XML,C212,"E7140",СокрЛП(GTIN));
		ДобавитьЭлемент_DOM(XML,C212,"E7143","SRV");
		УвеличитьСчетчикСегментов();
		
		КодПокупателя = Строка.КодПокупателя;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"КодПокупателя");
		Если ЗначениеЗаполнено(КодПокупателя) тогда
			PIA=ДобавитьЭлемент_DOM(XML,Узел_SG22,"PIA");
			ДобавитьЭлемент_DOM(XML,PIA,"E4347","1");
			C212=ДобавитьЭлемент_DOM(XML,PIA,"C212");
			ДобавитьЭлемент_DOM(XML,C212,"E7140",КодПокупателя);
			ДобавитьЭлемент_DOM(XML,C212,"E7143","IN");
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		
		КодПоставщика = "";//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"КодПоставщика");
		Если ЗначениеЗаполнено(КодПоставщика) тогда
			PIA=ДобавитьЭлемент_DOM(XML,Узел_SG22,"PIA");
			ДобавитьЭлемент_DOM(XML,PIA,"E4347","1");
			C212=ДобавитьЭлемент_DOM(XML,PIA,"C212");
			ДобавитьЭлемент_DOM(XML,C212,"E7140",КодПоставщика);
			ДобавитьЭлемент_DOM(XML,C212,"E7143","SA");
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		
		Наименование = Строка.НаименованиеТовара;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"НаименованиеТовара");
		IMD=ДобавитьЭлемент_DOM(XML,Узел_SG22,"IMD");
		ДобавитьЭлемент_DOM(XML,IMD,"E7077","F");
		C273=ДобавитьЭлемент_DOM(XML,IMD,"C273");
		ДобавитьЭлемент_DOM(XML,C273,"E7008",Наименование);
		УвеличитьСчетчикСегментов();
		
		Количество = ?(Строка.Количество=Неопределено,0,Строка.Количество);//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"Количество");
		Если Количество<>0 тогда
			ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ЕдиницаИзмерения");
			QTY=ДобавитьЭлемент_DOM(XML,Узел_SG22,"QTY");
			C186=ДобавитьЭлемент_DOM(XML,QTY,"C186");
			ДобавитьЭлемент_DOM(XML,C186,"E6063","194"); // Принятое количество.
			ДобавитьЭлемент_DOM(XML,C186,"E6060",Формат(Количество,"ЧРД=.; ЧГ="));
			ДобавитьЭлемент_DOM(XML,C186,"E6411",ЕдиницаИзмерения);
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		
		КоличествоЗаказ = ?(Строка.КоличествоЗаказа=Неопределено,0,Строка.КоличествоЗаказа);//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"Количество");
		Если КоличествоЗаказ<>0 тогда
			
			ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ЕдиницаИзмерения");
			QTY=ДобавитьЭлемент_DOM(XML,Узел_SG22,"QTY");
			C186=ДобавитьЭлемент_DOM(XML,QTY,"C186");
			ДобавитьЭлемент_DOM(XML,C186,"E6063","21"); // Заказываемое количество.
			ДобавитьЭлемент_DOM(XML,C186,"E6060",Формат(КоличествоЗаказ,"ЧРД=.; ЧГ="));
			ДобавитьЭлемент_DOM(XML,C186,"E6411",ЕдиницаИзмерения);
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		КоличествоНакладной = ?(Строка.КоличествоНакладной=Неопределено,0,Строка.КоличествоНакладной);//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"Количество");
		Если ЗначениеЗаполнено(КоличествоНакладной) тогда
			ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ЕдиницаИзмерения");
			QTY=ДобавитьЭлемент_DOM(XML,Узел_SG22,"QTY");
			C186=ДобавитьЭлемент_DOM(XML,QTY,"C186");
			ДобавитьЭлемент_DOM(XML,C186,"E6063","46"); //  Количество по накладной.
			ДобавитьЭлемент_DOM(XML,C186,"E6060",Формат(КоличествоНакладной,"ЧРД=.; ЧГ="));
			ДобавитьЭлемент_DOM(XML,C186,"E6411",ЕдиницаИзмерения);
			УвеличитьСчетчикСегментов();
		КонецЕсли;
		//{ СИТЕК БрыляковЕЮ 2014-12-30  
		Причина = Строка.Причина;
		Если ЗначениеЗаполнено(Причина) Тогда
			
			QVR = ДобавитьЭлемент_DOM(XML, Узел_SG22, "QVR");
			C279 = ДобавитьЭлемент_DOM(XML, QVR, "C279");
			
			Расхождение = Количество - КоличествоНакладной;
			ДобавитьЭлемент_DOM(XML, C279, "E6064", Izh_ОбщегоНазначенияКлиентСервер.ПоМодулю(Расхождение));
			
			Если НРег(Причина) = "брак" ИЛИ ПустаяСтрока(ПолучитьДанные("НомерЗаказа")) Тогда
				ТипКоличества		= "195";
				КодНесоответствия	= "AF";
			Иначе
				ТипКоличества		= "83";
				КодНесоответствия	= "AC";
			КонецЕсли;
			
			ДобавитьЭлемент_DOM(XML, C279, "E6063", ТипКоличества);
			ДобавитьЭлемент_DOM(XML, QVR, "E4221", КодНесоответствия);
			
		КонецЕсли;
		// СИТЕК БрыляковЕЮ 2014-12-30 }
		
		
		//Сумма=Строка.СуммаЗаказа;//ПолучитьЗначениеСтроки(ТабличнаяЧасть,Строка,"СуммаЗаказа");
		//Если ЗначениеЗаполнено(Сумма) тогда
		//	MOA = ДобавитьЭлемент_DOM(XML,Узел_SG22,"MOA"); 
		//	C516= ДобавитьЭлемент_DOM(XML,MOA,"C516");   
		//	ДобавитьЭлемент_DOM(XML,C516,"E5025","128");
		//	ДобавитьЭлемент_DOM(XML,C516,"E5004",Формат(Сумма,"ЧРД=.; ЧГ="));
		//	УвеличитьСчетчикСегментов();
		//КонецЕсли;
		
		//ЦенаБезНДС = Строка.ЦенаБезНДС;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ЦенаБезНДС");
		//Если ЗначениеЗаполнено(ЦенаБезНДС) тогда
		//	SG32 = ДобавитьЭлемент_DOM(XML,Узел,"SG32");
		//	PRI = ДобавитьЭлемент_DOM(XML,SG32,"PRI");  
		//	C509 =  ДобавитьЭлемент_DOM(XML,PRI,"C509");  
		//	ДобавитьЭлемент_DOM(XML,C509,"E5125","AAA");
		//	ДобавитьЭлемент_DOM(XML,C509,"E5118",Формат(ЦенаБезНДС,"ЧРД=.; ЧГ=")); 
		//	УвеличитьСчетчикСегментов();
		//КонецЕсли;
		//Котлячкова-- 24,06,15 Ошибки выгрузки RECADV
		
		ЦенаСНДС = Строка.ЦенаСНДС;//ПолучитьЗначениеСтроки(ТабличнаяЧастьДокумента,Строка,"ЦенаСНДС");
		Если ЗначениеЗаполнено(ЦенаСНДС) тогда
			//SG32 = ДобавитьЭлемент_DOM(XML,Узел_SG22,"SG32");
			PRI = ДобавитьЭлемент_DOM(XML,Узел_SG22,"PRI");  
			C509 =  ДобавитьЭлемент_DOM(XML,PRI,"C509");  
			ДобавитьЭлемент_DOM(XML,C509,"E5125","AAE");
			ДобавитьЭлемент_DOM(XML,C509,"E5118",Формат(ЦенаСНДС,"ЧРД=.; ЧГ=")); 
			УвеличитьСчетчикСегментов();
		КонецЕсли;
	КонецЦикла;	
	Возврат 0;
	//Котлячкова -- Исправление в выгрузке рекадва
	
КонецФункции


Функция ЗаписатьUNS(XML,Узел)
	UNS= ДобавитьЭлемент_DOM(XML,Узел,"UNS");
	ДобавитьЭлемент_DOM(XML,UNS,"E0081","S");
	УвеличитьСчетчикСегментов();	
	Возврат 0;
КонецФункции     

Функция ЗаписатьMOA(XML,Узел)
	СуммаЗаказа= Число(ПолучитьДанные("ОбщаяСумма"));
	Если ЗначениеЗаполнено(СуммаЗаказа) тогда
		MOA = ДобавитьЭлемент_DOM(XML,Узел,"MOA"); 
		C516= ДобавитьЭлемент_DOM(XML,MOA,"C516");   
		ДобавитьЭлемент_DOM(XML,C516,"E5025","86");
		ДобавитьЭлемент_DOM(XML,C516,"E5004",Формат(СуммаЗаказа,"ЧРД=.; ЧГ="));
		УвеличитьСчетчикСегментов();
	КонецЕсли;
	
	Возврат 0;
КонецФункции

Функция ЗаписатьCNT(XML,Узел)
	ТабличнаяЧасть =  ПолучитьДанные("ТабличнаяЧасть");
	Если ТипЗнч (ТабличнаяЧасть)<> Тип("ТаблицаЗначений") тогда
		Возврат "Табличная часть документа не определена.";	
	КонецЕсли;	
	
	CNT= ДобавитьЭлемент_DOM(XML,Узел,"CNT");
	C270= ДобавитьЭлемент_DOM(XML,CNT,"C270");
	ДобавитьЭлемент_DOM(XML,C270,"E6069","2"); // Количество товарных позиций.
	ДобавитьЭлемент_DOM(XML,C270,"E6066",Формат(ТабличнаяЧасть.Количество(),"ЧГ="));  	
	УвеличитьСчетчикСегментов();		
КонецФункции

Функция ЗаписатьUNT(XML,Узел)
	UNT=ДобавитьЭлемент_DOM(XML,Узел,"UNT");
	ДобавитьЭлемент_DOM(XML,UNT,"E0074",Формат(УвеличитьСчетчикСегментов(),"ЧГ="));
	//++Котлячкова ЕВ 10,01,15 Ошибки обмена EDI в магазине
	ДобавитьЭлемент_DOM(XML,UNT,"E0062",Строка(ПолучитьДанные("НомерСообщения")));
	//--Котлячкова ЕВ 10,01,15 Ошибки обмена EDI в магазине
КонецФункции

Функция ВыгрузитьORDERS(Данные) Экспорт
	ПодготовленныеДанные=Данные;		
	СчетчикСегментов=0;
	ИмяФайла=ПолучитьДанные("ИмяФайла");
	Если Не ЗначениеЗаполнено(ИмяФайла) тогда
		Возврат "Не определено имя файла!";	
	КонецЕсли;
	
	xml=НовыйXMLДокумент_DOM();
	ДобавитьОбъявлениеXML(xml);
	ORDERS=ДобавитьЭлемент_DOM(XML,XML,"ORDERS");
	рез=ЗаписатьUNH(xml,ORDERS,"ORDERS");
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьBGM(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьDTM(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;
	рез=ЗаписатьFTX(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;
	рез=ЗаписатьSG1(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьSG2(xml,ORDERS);	
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьSG7(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьSG28(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьUNS(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьMOA(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьCNT(xml,ORDERS);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьUNT(xml,ORDERS);	
	
	СохранитьXMLВФайл(XML,ИмяФайла);
	Возврат Истина;
КонецФункции
Функция ВыгрузитьRECADV(Данные) Экспорт
	ПодготовленныеДанные=Данные;		
	СчетчикСегментов=0;
	ИмяФайла=ПолучитьДанные("ИмяФайла");
	Если Не ЗначениеЗаполнено(ИмяФайла) тогда
		Возврат "Не определено имя файла!";	
	КонецЕсли;
	
	xml=НовыйXMLДокумент_DOM();
	ДобавитьОбъявлениеXML(xml);
	RECADV=ДобавитьЭлемент_DOM(XML,XML,"RECADV");
	рез=ЗаписатьUNH(xml,RECADV,"RECADV");
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьBGM_АП(xml,RECADV);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьDTM(xml,RECADV);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьSG1_АП(xml,RECADV);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	рез=ЗаписатьSG4_АП(xml,RECADV);	
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	//рез=ЗаписатьSG7(xml,RECADV);
	//Если рез<>0 тогда
	//	Сообщить(рез);
	//КонецЕсли;	
	рез=ЗаписатьSG16_АП(xml,RECADV);
	Если рез<>0 тогда
		Сообщить(рез);
	КонецЕсли;	
	//рез=ЗаписатьUNS(xml,RECADV);
	//Если рез<>0 тогда
	//	Сообщить(рез);
	//КонецЕсли;	
	//рез=ЗаписатьMOA(xml,RECADV);
	//Если рез<>0 тогда
	//	Сообщить(рез);
	//КонецЕсли;	
	//рез=ЗаписатьCNT(xml,RECADV);
	//Если рез<>0 тогда
	//	Сообщить(рез);
	//КонецЕсли;	
	рез=ЗаписатьUNT(xml,RECADV);	
	
	СохранитьXMLВФайл(XML,ИмяФайла);
	Возврат Истина;
КонецФункции

/////////////////////////////////////////////////////