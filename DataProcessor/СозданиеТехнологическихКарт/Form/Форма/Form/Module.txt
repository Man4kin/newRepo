Перем Дзнач;

&НаКлиенте
Процедура СоздатьТК(Команда)
	СсылкаНаДок = ОформитьНаСервере();
	Если СсылкаНаДок = Неопределено Тогда
		Сообщить("Нет данных для оформления!");
	Иначе	
		СтруктураПараметров = Новый Структура("Ключ", СсылкаНаДок);
		ОткрытьФорму("Документ.ТехнологическаяКарта.Форма.ФормаДокумента",СтруктураПараметров,ВладелецФормы);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОформитьНаСервере()
	НовыйДок = Документы.ТехнологическаяКарта.СоздатьДокумент();
	НовыйДок.Дата = ТекущаяДата();
	НовыйДок.ИнициализироватьДокумент();
	НовыйДок.Продукция = НайтиУстановитьЗначениеПараметра("Продукция","");
	НовыйДок.КоличествоПорций = НайтиУстановитьЗначениеПараметра("Количество","");
	НовыйДок.ВидПроизводства=	Перечисления.ВидыПроизводства.Приготовление;
	Для Каждого Строка Из Объект.Состав Цикл
		СтрокаТК = НовыйДок.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТК,Строка);
		Если ЗначениеЗаполнено(Строка.Ингредиент) тогда
			СтрокаТК.Номенклатура = Строка.Ингредиент;
		Иначе
			СтрокаТК.Номенклатура = Строка.Номенклатура;
		Конецесли;
		СтрокаТК.КоличествоНетто = Строка.Количество;
		СтрокаТК.Код = ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(СтрокаТК.Номенклатура,"Код");
	КонецЦикла;
	Если НовыйДок.Состав.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе	
		НовыйДок.Записать(РежимЗаписиДокумента.Запись);
		Возврат НовыйДок.Ссылка;
	КонецЕсли;	
КонецФункции


&НаСервере
Функция ПолучитьЗначениеСостав()
	Возврат ПоместитьВоВременноеХранилище(Объект.Состав.Выгрузить(,"Номенклатура,ЕдиницаИзмерения,Количество,Цена,Сумма"), УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПересчитатьСебестоимость(Команда)
	РассчитатьСтоимостьИнгредиентов();
	Элементы.Продукция.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВсеУровни;
КонецПроцедуры


Процедура РассчетЦены(ЗнчНаценка = 0)
	Если Не ЗначениеЗаполнено(ЗнчНаценка)  тогда
		ЗнчНаценка = НайтиУстановитьЗначениеПараметра("Наценка","");
	Иначе
		НайтиУстановитьЗначениеПараметра("Наценка",ЗнчНаценка,Истина);
	Конецесли;
	ЗнчСебестоимость = НайтиУстановитьЗначениеПараметра("Себестоимость за единицу","");
	Если значениеЗаполнено(ЗнчНаценка) и ЗначениеЗаполнено(знчСебестоимость) тогда
		РозничнаяЦена=ЗнчНаценка*знчСебестоимость/100+знчСебестоимость;
	КонецЕсли;
	//РозничнаяЦена-СебестоимостьЕдиницы)*100/СебестоимостьЕдиницы);
	НайтиУстановитьЗначениеПараметра("Розничная цена",РозничнаяЦена,Истина);
КонецПроцедуры

Процедура РассчетНаценки(ЗнчРозничнаяЦена = 0)
	Если Не ЗначениеЗаполнено(ЗнчРозничнаяЦена) тогда
		ЗнчРозничнаяЦена = НайтиУстановитьЗначениеПараметра("Розничная цена","");
	Иначе
		НайтиУстановитьЗначениеПараметра("Розничная цена",ЗнчРозничнаяЦена,Истина);
	КонецЕсли;
	ЗнчСебестоимость = НайтиУстановитьЗначениеПараметра("Себестоимость за единицу","");
	Если значениеЗаполнено(ЗнчРозничнаяЦена) и ЗначениеЗаполнено(знчСебестоимость) тогда
		Наценка=(ЗнчРозничнаяЦена-ЗнчСебестоимость)/(знчСебестоимость/100);
	КонецЕсли;
	//РозничнаяЦена-СебестоимостьЕдиницы)*100/СебестоимостьЕдиницы);
	НайтиУстановитьЗначениеПараметра("Наценка",Наценка,Истина);
КонецПроцедуры

Функция НайтиУстановитьЗначениеПараметра(НазваниеПараметра,ЗначениеПараметра,Установить=Ложь)
	Значение = РеквизитФормыВЗначение("Продукция");
	стрПоиска = Значение.Строки.Найти(НазваниеПараметра,"Параметр",Истина);
	Если стрПоиска <> Неопределено Тогда
		Если Установить Тогда
			стрПоиска.ЗначениеПараметра = ЗначениеПараметра;
		КонецЕсли;
		ЗначениеВРеквизитФормы(Значение,"Продукция");
		Элементы.Продукция.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВсеУровни;
		Возврат стрПоиска.ЗначениеПараметра;
	КонецЕсли;
КонецФункции

Функция ПолучитьЦенуКонтрагентовДляСостава(Номенклатура)
	Цена = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НоменклатураКонтрагента.Цена
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ГДЕ
	|	НоменклатураКонтрагента.Номенклатура = &Номенклатура
	|	И НоменклатураКонтрагента.ОсновнойПоставщик";
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	СтавкаНДС = Номенклатура.СтавкаНДС.Ставка;
	бЦенаСНДС = ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов");
	Пока Выборка.Следующий() Цикл
		Если бЦенаСНДС Тогда
			Цена = Выборка.Цена;
		Иначе
			Цена = Окр(Выборка.Цена * (100 + СтавкаНДС) / 100, 2);
		КонецЕсли;
	КонецЦикла;
	Возврат Цена;
КонецФункции

&НаСервере
Процедура РассчитатьСтоимостьИнгредиентов()
	текстЗапросаЗакупЦен1 = "";
	ТекстЗапросаЗакупЦен2 = "";
	Ингредиенты = Объект.Состав.Выгрузить(,"Номенклатура");
	СписЗначений = Новый СписокЗначений;
	СписЗначений.ЗагрузитьЗначения(Ингредиенты.ВыгрузитьКолонку("Номенклатура"));
	Если СписЗначений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Фирма",НайтиУстановитьЗначениеПараметра("Фирма",""));
	Запрос.УстановитьПараметр("СписНоменклатуры",СписЗначений);
	
	струкПараметрыЗапроса = Новый Структура;
	
	ФильтрНоменклатуры = "";
	Запрос.Текст = "ВЫБРАТЬ
	|	НоменклатураКонтрагента.Номенклатура КАК Номенклатура,
	|	НоменклатураКонтрагента.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ГДЕ
	|	НоменклатураКонтрагента.ОсновнойПоставщик";
	//Запрос.УстановитьПараметр("Закупочная",Справочники.КатегорииЦен.Закупочная);
	ПустаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	КоличествоКалькуляции = НайтиУстановитьЗначениеПараметра("Количество","")*НайтиУстановитьЗначениеПараметра("Коэффициент","");
	Если РезультатЗапроса.Количество() <> 0 Тогда
		Для Каждого текСтрока из Объект.Состав Цикл
			Цена = 0;
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура",текСтрока.Номенклатура);
			МассивСтрок = РезультатЗапроса.НайтиСтроки(СтруктураПоиска);
			Если МассивСтрок.Количество() > 0 Тогда
				КоэффициентПересчета = ТекСтрока.Коэффициент;
				Если НЕ ЗначениеЗаполнено(ТекСтрока.Цена) Тогда
					Если ЗначениеЗаполнено(МассивСтрок[0].Цена) и ЗначениеЗаполнено(КоэффициентПересчета) Тогда
						СтавкаНДС = текСтрока.Номенклатура.СтавкаНДС.Ставка;
						бЦенаСНДС = ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов");
						Если бЦенаСНДС Тогда
							Цена = МассивСтрок[0].Цена*КоэффициентПересчета;
						Иначе
							Цена = Окр(МассивСтрок[0].Цена*КоэффициентПересчета * (100 + СтавкаНДС) / 100, 2);
						КонецЕсли;
					КонецЕсли;
				Иначе
					Цена = ТекСтрока.Цена;
				Конецесли;
			КонецЕсли;
			текСтрока.Цена  = Цена;
			текСтрока.Сумма = Цена * текСтрока.Количество * текСтрока.Коэффициент;
		КонецЦикла;
	Иначе
	КонецЕсли;
	Если ЗначениеЗаполнено(КоличествоКалькуляции) Тогда
		НайтиУстановитьЗначениеПараметра("Себестоимость за единицу",Объект.Состав.Итог("Сумма")/КоличествоКалькуляции,Истина);
	КонецЕсли;
	РассчетЦены();
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьДеревоПродукция();
	ТекстЗапросаПодбора = ПодборНоменклатуры.ТекстЗапроса;
КонецПроцедуры

Процедура ЗаполнитьДеревоПродукция()
	ДЗнач = РеквизитФормыВЗначение("Продукция");	
	СтрокаРодитель = ДобавитьСтрокуПродукции("","Продукция",Справочники.Номенклатура.ПустаяСсылка());
	ДобавитьСтрокуПродукции(СтрокаРодитель,"Технологическая карта",Документы.ТехнологическаяКарта.ПустаяСсылка());
	ДобавитьСтрокуПродукции(СтрокаРодитель,"Ед.изм",Справочники.ЕдиницыИзмерения.ПустаяСсылка());
	СтрокаКоэффициент = ДобавитьСтрокуПродукции(СтрокаРодитель,"Коэффициент",0);
	ДобавитьСтрокуПродукции(СтрокаРодитель,"Количество",0);
	ПрежнееКоличество = 0;
	ДобавитьСтрокуПродукции("","Наценка",0);
	ДобавитьСтрокуПродукции("","Себестоимость за единицу",0);
	ДобавитьСтрокуПродукции("","Розничная цена",0);
	ЗначениеВРеквизитФормы(ДЗнач,"Продукция");

		
КонецПроцедуры


Функция ДобавитьСтрокуПродукции(СтрокаРодитель="",Параметр,ЗначениеПараметра)
	Если СтрокаРодитель = "" Тогда
		СтрокаПродукции = ПолучитьСтрокуДерева(СтрокаРодитель);
	Иначе
		СтрокаПродукции = ПолучитьСтрокуДерева(СтрокаРодитель);
	КонецЕсли;
	СтрокаПродукции.Параметр = Параметр;
	СтрокаПродукции.ЗначениеПараметра  = ЗначениеПараметра;
	СтрокаПродукции.ЗначениеПараметра2 = ЗначениеПараметра;
	Возврат СтрокаПродукции;
КонецФункции

&НаСервере
Функция ПолучитьСтрокуДерева(СтрокаРодитель)
	Если ЗначениеЗаполнено(СтрокаРодитель) тогда
		СтрокаДЗ = СтрокаРодитель.Строки.Добавить();
	Иначе
		СтрокаДЗ = ДЗнач.Строки.Добавить();
	КонецЕсли;
	Возврат СтрокаДЗ;
КонецФункции

&НаКлиенте
Процедура ПродукцияЗначениеПараметраНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.РежимВыбораИзСписка = Ложь;
	ТекПараметр = Элементы.Продукция.ТекущиеДанные.Параметр;
	ЗначениеПараметра = Элементы.Продукция.ТекущиеДанные.ЗначениеПараметра;
	Если ТекПараметр = "Себестоимость за единицу" или ТекПараметр = "Коэффициент"   Тогда
		СтандартнаяОбработка = Ложь;
		Элемент.ТолькоПросмотр = Истина;
		Возврат;
	ИначеЕсли ТекПараметр = "Ед.изм" тогда
		НовыйПараметр = Новый ПараметрВыбора("отбор.Владелец",НайтиУстановитьЗначениеПараметра("Продукция",""));
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
	ИначеЕсли ТекПараметр = "Технологическая карта" тогда
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ВидПроизводства",ПолучитьЗначениеПараметра("ВидПроизводства"));
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
	ИначеЕсли ТекПараметр = "Наценка" или ТекПараметр = "Розничная цена" тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Число"));
		ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
		Элемент.ОграничениеТипа = ОграничениеТипа;
	Иначе
		Элемент.КнопкаВыбора = Истина;
		Элемент.КнопкаСпискаВыбора = Ложь;
		Элемент.КнопкаОчистки = Истина;
	КонецЕсли;
	Если ТипЗнч(ЗначениеПараметра) = Тип("Число") или ТипЗнч(ЗначениеПараметра) = Тип("Строка") Тогда
		Элемент.КнопкаОткрытия = Ложь;
	Иначе
		Элемент.КнопкаОткрытия = Истина;
	КонецЕсли;
	Элементы.Продукция.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВсеУровни;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Продукция.ПодчиненныеЭлементы.ПродукцияЗначениеПараметра.СписокВыбора.Добавить("По последним закупочным ценам");
	Элементы.Продукция.ПодчиненныеЭлементы.ПродукцияЗначениеПараметра.СписокВыбора.Добавить("По текущим остаткам");
	//Элементы.Продукция.
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизит(ИмяОбъекта,ИмяРеквизита)
	Возврат ИмяОбъекта[ИмяРеквизита];
КонецФункции

&НаКлиенте
Процедура ПродукцияЗначениеПараметраПриИзменении(Элемент)
	ТекСтрока = Элементы.Продукция.ТекущиеДанные;
	Если ТекСтрока.Параметр = "Продукция" Тогда
		Если ТекСтрока.ЗначениеПараметра = ТекСтрока.ЗначениеПараметра2 Тогда //ПустаяСсылка
			НайтиУстановитьЗначениеПараметра("Ед.изм",ПолучитьЗначениеПараметра("ЕдиницаИзмерения"),Истина);
			НайтиУстановитьЗначениеПараметра("Коэффициент",0,Истина);
			НайтиУстановитьЗначениеПараметра("Розничная цена",0,Истина);
			НайтиУстановитьЗначениеПараметра("Наценка",0,Истина);
			НайтиУстановитьЗначениеПараметра("Технологическая карта",ПолучитьЗначениеПараметра("ТехнологическаяКарта"),Истина);
		Иначе
			БазоваяЕдИзмерения = РаботаСФормамиСервер.ПолучитьБазовуюЕдиницуИзмерения(ТекСтрока.ЗначениеПараметра);
			НайтиУстановитьЗначениеПараметра("Ед.изм",БазоваяЕдИзмерения,Истина);
			Если ЗначениеЗаполнено(БазоваяЕдИзмерения) тогда
				Коэффициент = ПолучитьРеквизит(БазоваяЕдИзмерения,"Коэффициент");
				НайтиУстановитьЗначениеПараметра("Коэффициент",Коэффициент,Истина);
			КонецЕсли;
			Склад = НайтиУстановитьЗначениеПараметра("Склад","");
			Если ЗначениеЗаполнено(Склад) тогда
				СтруктурнаяЕдиница = Склад.Владелец;
			Иначе
				СтруктурнаяЕдиница = ПолучитьЗначениеПараметра("СтруктурнаяЕдиница");
			КонецЕсли;
			НайтиУстановитьЗначениеПараметра("Розничная цена",0,Истина);
			НайтиУстановитьЗначениеПараметра("Наценка",0,Истина);
			НайтиУстановитьЗначениеПараметра("Себестоимость за единицу",0,Истина);
			РассчитатьСтоимостьИнгредиентов();
			РассчетЦены();
			НайтиУстановитьЗначениеПараметра("Технологическая карта",ПолучитьЗначениеПараметра("ТехнологическаяКарта"),Истина);
			ТКВыбраннойПродукции = ПолучитьТехКартуПоНоменклатуре(НайтиУстановитьЗначениеПараметра("Продукция",""),НайтиУстановитьЗначениеПараметра("Склад",""));
			НайтиУстановитьЗначениеПараметра("Технологическая карта",ТКВыбраннойПродукции,Истина);
			Если НЕ ТКВыбраннойПродукции.Пустая() Тогда
				Если  Объект.Состав.Количество()> 0 Тогда
					Если Вопрос("Перезаполнить таблицу ингредиентов по технологической карте выбранной продукции?",РежимДиалогаВопрос.ДаНет,20,КодВозвратаДиалога.Да) = КодВозвратаДиалога.Нет Тогда
						Возврат;	
					КонецЕсли;
				Конецесли;
				ЗаполнитьПоТехКарте(ТКВыбраннойПродукции);
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТКВыбраннойПродукции) и Объект.Состав.Количество()>0 тогда
			Если Вопрос("Очистить табличную часть с ингридиентами?",РежимДиалогаВопрос.ДаНет,20,КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да Тогда
				Объект.Состав.Очистить();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТекСтрока.Параметр = "Количество" Тогда
		Количество =НайтиУстановитьЗначениеПараметра("Количество","");
		Если Количество = 0 тогда
			сообщить("Количество = 0!",Статуссообщения.Внимание);
			Возврат;
		Конецесли;
		ПрежнееКоличество = 0;
		ПрежнееКоличество = Число(ПрежнееКоличество);
		ПрежнееКоличество = ?(ПрежнееКоличество=0,1,ПрежнееКоличество);
		Если Вопрос("Пересчитать количество ингредиентов?",РежимДиалогаВопрос.ДаНет,20,КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да Тогда
			Для Каждого Строка Из Объект.Состав Цикл
				Строка.Количество = Строка.Количество / ПрежнееКоличество * НайтиУстановитьЗначениеПараметра("Количество","") * Строка.Коэффициент;	
				Строка.Сумма = Строка.Цена * Строка.Количество;// * Строка.Коэффициент;
			КонецЦикла;
			НайтиУстановитьЗначениеПараметра("Себестоимость за единицу",Объект.Состав.Итог("Сумма")/НайтиУстановитьЗначениеПараметра("Количество",""),Истина);
			РассчетЦены();
		КонецЕсли;
		ПрежнееКоличество = НайтиУстановитьЗначениеПараметра("Количество","");
	ИначеЕсли ТекСтрока.Параметр = "Наценка" Тогда
		РассчетЦены();
	ИначеЕсли ТекСтрока.Параметр = "Розничная цена" тогда
		РассчетНаценки();
	ИначеЕсли ТекСтрока.Параметр = "Технологическая карта" Тогда
		ТехКарта =	НайтиУстановитьЗначениеПараметра("Технологическая карта","");
		Если ЗначениеЗаполнено(ТехКарта) тогда
		Номенклатура = ТехКарта.Продукция;
		НайтиУстановитьЗначениеПараметра("Продукция",Номенклатура,Истина);
		ЗаполнитьПоТехКарте(ТехКарта);
		РассчетЦены();
		Конецесли;
	ИначеЕсли ТекСтрока.Параметр = "Ед.изм" тогда
		БазоваяЕдИзмерения =НайтиУстановитьЗначениеПараметра("Ед.изм","");
		Если ЗначениеЗаполнено(БазоваяЕдИзмерения) тогда
			Коэффициент = ПолучитьРеквизит(БазоваяЕдИзмерения,"Коэффициент");
			НайтиУстановитьЗначениеПараметра("Коэффициент",Коэффициент,Истина);
		КонецЕсли;
	КонецЕсли;	 
	Элементы.Продукция.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	КоллекцияЭлементовДерева=Продукция.ПолучитьЭлементы()[0].ПолучитьЭлементы();
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл    
    ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
	Попытка
    Элементы.Продукция.Развернуть(ИдентификаторСтроки,Истина);
Исключение
	КонецПопытки;
КонецЦикла;
ТекСтрока = Элементы.Продукция.ТекущаяСтрока;
Элементы.Продукция.Развернуть(ТекСтрока,Истина);
КонецПроцедуры

&НаСервере
Функция ПолучитьТехКартуПоНоменклатуре(Номенклатура,Склад)
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродукцияПоЦехам.ТехнологическаяКарта
	|ИЗ
	|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|ГДЕ
	|	ПродукцияПоЦехам.Продукция = &Номенклатура
	|	И ВЫБОР
	|			КОГДА &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					ИЛИ &Склад = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ПродукцияПоЦехам.Склад = &Склад
	|		КОНЕЦ";
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	ЗАпрос.УстановитьПараметр("Склад",Склад);
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	ТехКарта = Документы.ТехнологическаяКарта.ПустаяСсылка();
	Пока Выборка.Следующий() Цикл
		ТехКарта = Выборка.ТехнологическаяКарта; 
		
	КонецЦикла;
	Возврат ТехКарта;
КонецФункции

&НаСервере
Функция ПолучитьЗначениеПараметра(ИмяПараметра)
	Если Имяпараметра = "СтруктурнаяЕдиница" тогда
		ЗначениеПараметра = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;	
	ИначеЕсли ИмяПараметра = "ТехнологическаяКарта" тогда
		ЗначениеПараметра = Документы.ТехнологическаяКарта.ПустаяСсылка();
	ИначеЕсли ИмяПараметра = "ЕдиницаИзмерения" тогда
		ЗначениеПараметра = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	ИначеЕсли ИмяПараметра = "Склад" тогда
		ЗначениеПараметра = Справочники.Склады.ПустаяСсылка();
	ИначеЕсли Имяпараметра = "ВидПроизводства" тогда
		ЗначениеПараметра = Перечисления.ВидыПроизводства.Приготовление;
	Конецесли;
	Возврат ЗначениеПараметра;	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоТехКарте(ТехКарта)
	Объект.Состав.Очистить();
	ПрежнееКоличество = ТехКарта.КоличествоПорций;
	НайтиУстановитьЗначениеПараметра("Количество",ПрежнееКоличество,Истина);
	Для Каждого СтрокаТехКарты Из ТехКарта.Состав Цикл
		НоваяСтрока = Объект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТехКарты);
		Если ТипЗнч(СтрокаТехКарты.Номенклатура) = Тип("СправочникСсылка.Ингредиенты") тогда
			НоваяСтрока.Ингредиент = СтрокаТехКарты.Номенклатура;
			НоваяСтрока.Номенклатура = ПолучитьНоменклатуруИнгредиента(СтрокаТехКарты.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	РассчитатьСтоимостьИнгредиентов();
КонецПроцедуры

&НаСервере
Функция ПолучитьНоменклатуруИнгредиента(Ингредиент)
	Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВложенныйЗапрос1.Номенклатура
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИнгредиентыСостав.Номенклатура КАК Номенклатура,
	|		ВложенныйЗапрос.Цена КАК Цена
	|	ИЗ
	|		Справочник.Ингредиенты.Состав КАК ИнгредиентыСостав
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				НоменклатураКонтрагента.Номенклатура КАК Номенклатура,
	|				НоменклатураКонтрагента.Цена КАК Цена
	|			ИЗ
	|				РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|			ГДЕ
	|				НоменклатураКонтрагента.ОсновнойПоставщик) КАК ВложенныйЗапрос
	|			ПО ИнгредиентыСостав.Номенклатура = ВложенныйЗапрос.Номенклатура
	|	ГДЕ
	|		ИнгредиентыСостав.Ссылка = &Ингредиент) КАК ВложенныйЗапрос1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИнгредиентыСостав.Номенклатура КАК Номенклатура,
	|			ВложенныйЗапрос.Цена КАК Цена
	|		ИЗ
	|			Справочник.Ингредиенты.Состав КАК ИнгредиентыСостав
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					НоменклатураКонтрагента.Номенклатура КАК Номенклатура,
	|					МАКСИМУМ(НоменклатураКонтрагента.Цена) КАК Цена
	|				ИЗ
	|					РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|				ГДЕ
	|					НоменклатураКонтрагента.ОсновнойПоставщик
	|				
	|				СГРУППИРОВАТЬ ПО
	|					НоменклатураКонтрагента.Номенклатура) КАК ВложенныйЗапрос
	|				ПО ИнгредиентыСостав.Номенклатура = ВложенныйЗапрос.Номенклатура
	|		ГДЕ
	|			ИнгредиентыСостав.Ссылка = &Ингредиент) КАК ВложенныйЗапрос
	|		ПО ВложенныйЗапрос1.Номенклатура = ВложенныйЗапрос.Номенклатура
	|			И ВложенныйЗапрос1.Цена = ВложенныйЗапрос.Цена";
	Запрос.УстановитьПараметр("Ингредиент",Ингредиент);
	Рез = Запрос.Выполнить();
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() Цикл
		Номенклатура = Выборка.Номенклатура;
	КонецЦикла;
	Возврат Номенклатура;
КонецФункции

&НаКлиенте
Процедура ПродукцияЗначениеПараметраОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элементы.Продукция.ТекущиеДанные.ЗначениеПараметра = Элементы.Продукция.ТекущиеДанные.ЗначениеПараметра2; 
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияЗначениеПараметраОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ТекПараметр = Элементы.Продукция.ТекущиеДанные.Параметр;
	Если ТекПараметр = "Количество" или ТекПараметр = "Технологическая карта" Тогда
		Возврат;	
	КонецЕсли;
	Если ТекПараметр= "Розничная цена" тогда
		РассчетНаценки(Число(Текст));
	ИначеЕсли ТекПараметр = "Наценка" тогда
		РассчетЦены(Число(Текст));	
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СоставЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Ном = Элементы.Состав.ТекущиеДанные.Номенклатура;
	Если ЗначениеЗаполнено(Ном) тогда
		НовыйПараметр = Новый ПараметрВыбора("отбор.Владелец",Ном);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
	Иначе
		НовыйМассив = Новый Массив();
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияЗначениеПараметраОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекДанные = Элементы.Продукция.ТекущиеДанные;
	Если ТекДанные.Параметр = "Технологическая карта" тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) тогда
			НайтиУстановитьЗначениеПараметра("Продукция",ПолучитьРеквизит(ВыбранноеЗначение,"Продукция"),Истина);
			ПродукцияЗначениеПараметраПриИзменении(Элемент);
			НайтиУстановитьЗначениеПараметра("Технологическая карта",ВыбранноеЗначение,Истина);
			ЗаполнитьПоТехКарте(ВыбранноеЗначение);
		КонецЕсли; 	
	ИначеЕсли ТекДанные.Параметр = "Продукция" тогда
		Если ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(ВыбранноеЗначение,"Группа") = 1 тогда
			СтандартнаяОбработка = Ложь;
		конецесли;
		Если ОбщегоНазначенияСервер.ПолучитьСвойствоПоссылке(ВыбранноеЗначение,"Группа") = 0 И НЕ ОбщегоНазначенияСервер.ПолучитьСвойствоПоСсылке(ВыбранноеЗначение,"Транзакционный") тогда
			состояние("Добавлять можно только товары транзакционногоп уровня!",,,БиблиотекаКартинок.Предупреждение32);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	Элементы.Продукция.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВсеУровни;
КонецПроцедуры



&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗапросаПодбора() Экспорт
	СтруктураПодбора = Новый Структура;
	СтруктураПодбора.Вставить("ТекстЗапроса",ПодборНоменклатуры.ТекстЗапроса);
	СтруктураПодбора.Вставить("Параметры",ПодборНоменклатуры.Параметры);
	Возврат СтруктураПодбора;
КонецФункции	

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора(Объект.Ссылка.Метаданные().имя,ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора(Объект.Ссылка.Метаданные().Имя,ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	для каждого Строка из Элемент.ВыделенныеСтроки Цикл
		Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(ЗапрашиватьКоличество);
		Если ТипЗнч(ВыбраннаяСтрока) = Тип("СправочникСсылка.Ингредиенты") тогда
			ТекСтрока = Объект.Состав.Добавить();
			ТекСтрока.Ингредиент = ВыбраннаяСтрока; 
			БазоваяЕдИзмерения = РаботаСФормамиСервер.ПолучитьБазовуюЕдиницуИзмерения(ВыбраннаяСтрока);
			ТекСтрока.ЕдиницаИзмерения = БазоваяЕдИзмерения;
			Если ЗначениеЗаполнено(БазоваяЕдИзмерения) тогда
				ТекСтрока.Коэффициент = ПолучитьРеквизит(БазоваяЕдИзмерения,"Коэффициент");
			КонецЕсли;		
			ТекСтрока.Количество = 1;
			СтандартнаяОбработка = Ложь;
		Иначе
			ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура Ингредиенты(Команда)
	элементы.ПодборНоменклатурыИнгредиенты.пометка = не элементы.ПодборНоменклатурыИнгредиенты.пометка;
	флаг = Элементы.ПодборНоменклатурыИнгредиенты.пометка;
	ПереключениеИнгредиентов(Флаг);
	//Элементы.ПодборНоменклатуры.Обновить();  
КонецПроцедуры

&НаСервере
процедура ПереключениеИнгредиентов(Флаг) 
	Если Флаг Тогда
		ПодборНоменклатуры.ОсновнаяТаблица = "Справочник.Ингредиенты";
		ПодборНоменклатуры.ПроизвольныйЗапрос = Истина;
		ПодборНоменклатуры.ТекстЗапроса = "ВЫБРАТЬ
		|	СправочникИнгредиенты.Код,
		|	СправочникИнгредиенты.Наименование,
		|	ВЫБОР
		|		КОГДА СправочникИнгредиенты.ЭтоГруппа
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Группа,
		|	ВЫБОР
		|		КОГДА СправочникИнгредиенты.ПометкаУдаления
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ СправочникИнгредиенты.ЭтоГруппа
		|						ТОГДА 2
		|					ИНАЧЕ 3
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ СправочникИнгредиенты.ЭтоГруппа
		|					ТОГДА 0
		|				ИНАЧЕ 1
		|			КОНЕЦ
		|	КОНЕЦ КАК Картинка,
		|	СправочникИнгредиенты.Ссылка КАК Номенклатура
		|ИЗ
		|	Справочник.Ингредиенты КАК СправочникИнгредиенты
		|
		|СГРУППИРОВАТЬ ПО
		|	СправочникИнгредиенты.ЭтоГруппа,
		|	СправочникИнгредиенты.Наименование,
		|	СправочникИнгредиенты.Код,
		|	СправочникИнгредиенты.ПометкаУдаления,
		|	СправочникИнгредиенты.Ссылка";
	Иначе
		ПодборНоменклатуры.ПроизвольныйЗапрос = Истина;
		ПодборНоменклатуры.ОсновнаяТаблица = "Справочник.Номенклатура";
		ПодборНоменклатуры.ТекстЗапроса = ТекстЗапросаПодбора;
	КонецЕсли;	
конецпроцедуры

&НаКлиенте
Процедура СоставКоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииКоличестваВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставСуммаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииСуммыВТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Состав.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СоставЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияЗначениеПараметраАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СоставНоменклатураПриИзменении(Элемент)
	ТекСтрока = Элементы.Состав.ТекущиеДанные;
	Если ТекСтрока<>Неопределено тогда
		ТекСтрока.Цена = ПолучитьЦенуКонтрагентовДляСостава(ТекСтрока.Номенклатура);
		ТекСтрока.Сумма = ТекСтрока.Цена;
	КОнецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекДанные = Элементы.состав.ТекущиеДанные;
	Если ТекДанные<>Неопределено и ЗначениеЗаполнено(ТекДанные.Ингредиент) тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеДляВыбора(ТекДанные.НомерСтроки);	
	Конецесли;
КонецПроцедуры

&НаСервере 
Функция ПолучитьДанныеДляВыбора(НомерСтроки)
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("НомерСтроки",НомерСтроки);
	Строки = Объект.Состав.НайтиСтроки(ПараметрыОтбора);
	Ингредиент = Строки.Получить(0).Ингредиент;
	ДанныеВыбора = Новый СписокЗначений;
	Запрос= Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ИнгредиентыСостав.Номенклатура
	|ИЗ
	|	Справочник.Ингредиенты.Состав КАК ИнгредиентыСостав
	|ГДЕ
	|	ИнгредиентыСостав.Ссылка = &Ингредиент";
	Запрос.УстановитьПараметр("Ингредиент",Ингредиент);
	Рез=Запрос.Выполнить();
	МассивНоменклатуры = Рез.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	ДанныеВыбора.ЗагрузитьЗначения(МассивНоменклатуры);
	Возврат ДанныеВыбора;  
КонецФункции

&НаКлиенте
Процедура ПродукцияПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередУдалением(Элемент, Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры
