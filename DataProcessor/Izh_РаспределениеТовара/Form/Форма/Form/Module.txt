
&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура составПоСЕПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ПланируемыеПоставки") Тогда 
		сзПП = Параметры.ПланируемыеПоставки;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Izh_ИсторияРаспределения.Документ КАК ПланируемаяПоставка,
		               |	Izh_ИсторияРаспределения.Номенклатура,
		               |	Izh_ИсторияРаспределения.СтруктурнаяЕдиница,
		               |	Izh_ИсторияРаспределения.Количество КАК Заказано,
		               |	Izh_ИсторияРаспределения.Количество КАК Количество,
		               |	ПриходнаяНакладнаяСостав.Ссылка КАК Документ,
		               |	ПриходнаяНакладнаяСостав.Количество КАК Принято,
		               |	ПриходнаяНакладнаяСостав.Ссылка.Контрагент,
		               |	ПриходнаяНакладнаяСостав.Ссылка.Склад,
		               |	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК Остаток
		               |ИЗ
		               |	РегистрСведений.Izh_ИсторияРаспределения КАК Izh_ИсторияРаспределения
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		               |		ПО Izh_ИсторияРаспределения.Документ = ПриходнаяНакладнаяСостав.Ссылка.ДокОснование
		               |			И Izh_ИсторияРаспределения.Номенклатура = ПриходнаяНакладнаяСостав.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки КАК ОстаткиНоменклатурыОстатки
		               |		ПО Izh_ИсторияРаспределения.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		               |ГДЕ
		               |	Izh_ИсторияРаспределения.Документ В(&сзПП)
		               |	И Izh_ИсторияРаспределения.СтруктурнаяЕдиница <> &СЕВШ";
		Запрос.УстановитьПараметр("сзПП",сзПП);
		Запрос.УстановитьПараметр("СЕВШ",Справочники.СтруктурныеЕдиницы.НайтиПоКоду(1));
		тзОсн = Запрос.Выполнить().Выгрузить();
		СоставПоСЕ.Загрузить(тзОсн);
		тзОсн.Свернуть("Документ, Номенклатура, Контрагент, Склад, Принято, Остаток", "Заказано");
		Состав.Загрузить(тзОсн);
		Для Каждого стр Из Состав Цикл
			стр.Распределить = стр.Принято - стр.Заказано;
		КонецЦикла;
	КонецЕсли;
	УстановитьОформление();
КонецПроцедуры

Процедура УстановитьОформление()
	ПризнакМатрицы();
	УсловноеОформление.Элементы.Очистить();
	Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Izh_АвтоЗаказНастройкаПризнакаМатрицы.Свойство.Наименование КАК Свойство,
		                      |	Izh_АвтоЗаказНастройкаПризнакаМатрицы.Цвет
		                      |ИЗ
		                      |	РегистрСведений.Izh_АвтоЗаказНастройкаПризнакаМатрицы КАК Izh_АвтоЗаказНастройкаПризнакаМатрицы");
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	НомерНастройки = 1;
	Пока Выборка.Следующий() Цикл
		НовыйЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		НовыйЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = "Настройка №"+НомерНастройки;
		НовыйЭлементУсловногоОформления.Представление = "СозданоПрограммно";
		НовыйЭлементУсловногоОформления.Использование = Истина;
		
		ЭлементОтбора = НовыйЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование = Истина;
		
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Состав.Матрица");
		ЭлементОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Выборка.Свойство;
		
		НовоеПоле = НовыйЭлементУсловногоОформления.Поля.Элементы.Добавить();
		НовоеПоле.Использование = Истина;
		НовоеПоле.Поле = Новый ПолеКомпоновкиДанных("Состав");
		
		Цвет = Выборка.Цвет.Получить();
		НовыйЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Цвет);	
		НомерНастройки = НомерНастройки + 1;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПризнакМатрицы()
Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураДополнительныеРеквизиты.Ссылка КАК Номенклатура,
	               |	МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение.Наименование) КАК Значение
	               |ИЗ
	               |	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	               |ГДЕ
	               |	НоменклатураДополнительныеРеквизиты.Свойство = &ПризнакМатрицы
	               |	И НоменклатураДополнительныеРеквизиты.Ссылка В(&Номенклатура)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НоменклатураДополнительныеРеквизиты.Ссылка";
	Запрос.УстановитьПараметр("Номенклатура",Состав.Выгрузить(,"Номенклатура"));
	Запрос.УстановитьПараметр("Признакматрицы",ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаПризнакМатрицы)));
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		 Отбор = Новый Структура();
		 Отбор.Вставить("Номенклатура",Выборка.Номенклатура);
         НайденныеСтроки = Состав.НайтиСтроки(Отбор);
		 Для Каждого Строка Из НайденныеСтроки Цикл 
			 Строка.Матрица = Выборка.Значение;
		 КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоставПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Элементы.составПоСЕ.ОтборСтрок = Новый ФиксированнаяСтруктура("Номенклатура, Документ", ТекДанные.Номенклатура, ТекДанные.Документ);
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПривестиКоличествоККвантуОтгрузки(Номенклатура,Поставщик,Количество,ВПутиРЦ = 0,ОстатокРЦ = 0)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаказНаРЦ = ТипЗнч(Поставщик) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	
	Построитель = Новый ПостроительЗапроса();
	Построитель.Текст =
	"ВЫБРАТЬ
	|	НоменклатураКонтрагента.Контрагент,
	|	НоменклатураКонтрагента.Номенклатура,
	|	НоменклатураКонтрагента.МинимальныйЗаказ,
	|	НоменклатураКонтрагента.ОсновнойПоставщик КАК ОсновнойПоставщик
	|ИЗ
	|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|ГДЕ
	|	НоменклатураКонтрагента.Номенклатура В(&Номенклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновнойПоставщик УБЫВ";
	Построитель.ЗаполнитьНастройки();
	
	Отбор = Новый Структура();
	Если ТипЗнч(Поставщик) = Тип("СправочникСсылка.Контрагенты") Тогда
		Отбор.Вставить("Контрагент", Поставщик);
	КонецЕсли;
	
	Izh_ОбщегоНазначения.УстановитьОтборПостроителя(Построитель, Отбор);
	
	Запрос = Построитель.ПолучитьЗапрос();
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	ДанныеПоЗаказу = Запрос.Выполнить().Выгрузить();
	
	Если ЗаказНаРЦ Тогда
		//++БИТ БВО 2015-06-16
		//НеТрогатьЭтуГруппу = ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(
		//ПланыВидовХарактеристик.СлужебныеЗначения.НеСписыватьЕдиничныеОстаткиПоГруппе
		//);
		НеТрогатьЭтуГруппу = Справочники.Номенклатура.НайтиПоКоду(Izh_ОбщегоНазначенияСервер.ПолучитьЗначениеСвойстваСлужебногоЗначения(
		ПланыВидовХарактеристик.СлужебныеЗначения.НеСписыватьЕдиничныеОстаткиПоГруппе
		));
		//--БИТ БВО 2015-06-16
		
	КонецЕсли;
	
	Если Количество = 0 Тогда
		Возврат 0 ;
	КонецЕсли;
	
	Если ЗаказНаРЦ Тогда
		Остаток = ОстатокРЦ + ВПутиРЦ;
	КонецЕсли;
	
	Отбор = Новый Структура("Номенклатура",Номенклатура);
	Для каждого Квант Из ДанныеПоЗаказу.НайтиСтроки(Отбор) Цикл
		
		Если Квант.МинимальныйЗаказ <> 0 Тогда
			
			Если ЗаказНаРЦ 
				И ЗначениеЗаполнено(Остаток) И Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Штучный 
				И Количество < Квант.МинимальныйЗаказ И Остаток < Квант.МинимальныйЗаказ Тогда 
				Количество = Остаток;
				Прервать; 
			КонецЕсли;
			
			Коэффициент = Окр(Количество / Квант.МинимальныйЗаказ);
			Если Коэффициент = 0 Тогда
				Коэффициент = 1;
			КонецЕсли;
			Если ЗаказНаРЦ Тогда
				Коэффициент = Мин(Коэффициент, Цел(Остаток / Квант.МинимальныйЗаказ));
			КонецЕсли;
			
			Количество = Коэффициент * Квант.МинимальныйЗаказ;
			
			Если ЗаказНаРЦ Тогда
				Если (Остаток - Количество) = 1 
					И Номенклатура.ТипТовара <> Перечисления.ТипыТоваров.Весовой
					И НЕ Номенклатура.ПринадлежитЭлементу(НеТрогатьЭтуГруппу) Тогда
					Количество = Количество + 1;
				КонецЕсли;
			КонецЕсли;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	Возврат Количество;
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
	тзПН = СоставПоСЕ.Выгрузить();
	тзПН.Свернуть("Документ, ПланируемаяПоставка","Количество");
	Для Каждого стр Из тзПН Цикл
		Если стр.Количество <> 0 Тогда 
			Набор = РегистрыСведений.Izh_ИсторияРаспределения.СоздатьНаборЗаписей();
			Набор.Отбор.Документ.Установить(стр.ПланируемаяПоставка);
			Набор.Записать();
		КонецЕсли;
	КонецЦикла;
	СформироватьДокументы(); 
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументы()
	ТекстПисьма = "";
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	тз.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	               |	тз.Номенклатура КАК Номенклатура,
	               |	тз.Склад КАК Склад,
	               |	тз.Документ КАК Документ,
	               |	тз.Количество КАК Количество
	               |ПОМЕСТИТЬ тз
	               |ИЗ
	               |	&ТЗ КАК тз
	               |ГДЕ
	               |	тз.Количество <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	тз.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	               |	тз.Номенклатура,
	               |	тз.Склад КАК Склад,
	               |	тз.Документ,
	               |	тз.Количество КАК Количество,
	               |	ВложенныйЗапрос.Цена
	               |ИЗ
	               |	тз КАК тз
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	               |			ЦеныНоменклатурыЗакупочныеСрезПоследних.Цена КАК Цена
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				МАКСИМУМ(ЦеныНоменклатурыЗакупочныеСрезПоследних.Период) КАК Период,
	               |				ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура КАК Номенклатура
	               |			ИЗ
	               |				РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(, Цена <> 0) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура) КАК ВложенныйЗапрос
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыЗакупочные.СрезПоследних(, Цена <> 0) КАК ЦеныНоменклатурыЗакупочныеСрезПоследних
	               |				ПО ВложенныйЗапрос.Период = ЦеныНоменклатурыЗакупочныеСрезПоследних.Период
	               |					И ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыЗакупочныеСрезПоследних.Номенклатура) КАК ВложенныйЗапрос
	               |		ПО тз.Номенклатура = ВложенныйЗапрос.Номенклатура
	               |ИТОГИ
	               |	СУММА(Количество)
	               |ПО
	               |	СтруктурнаяЕдиница,
	               |	Склад";
	Запрос.УстановитьПараметр("ТЗ", СоставПоСЕ.Выгрузить());
	резСЕ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТекстПисьма = "";
	Пока резСЕ.Следующий() Цикл
		резСклад = резСЕ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока резСклад.Следующий() Цикл
			рез = резСклад.Выбрать();
			НовыйДокумент = Документы.ЗаказВнешний.СоздатьДокумент();
			СЕ = резСЕ.СтруктурнаяЕдиница;
			НовыйДокумент.Контрагент = СЕ;
			НовыйДокумент.Склад = резСклад.Склад;
			НовыйДокумент.Дата = ТекущаяДата();
			НовыйДокумент.Комментарий = "Создано обработкой: Распределение товаров по СЕ.";
			ДатаДокумента = ПолучитьДатуЗаказа(НовыйДокумент.Контрагент,НовыйДокумент.Склад);
			Если ДатаДокумента = Неопределено Тогда 
				ДатаДокумента = ТекущаяДата();
			Иначе
				НовыйДокумент.ДатаДокумента = ДатаДокумента;
				НовыйДокумент.ДатаПоставкиДо = ДатаДокумента;
				НовыйДокумент.ДатаПоставкиОт = ДатаДокумента;
			КонецЕсли;
			НовыйДокумент.Автор = ПараметрыСеанса.ТекущийПользователь;
			колСтрок = 0;
			максКолСтрок = ?(НовыйДокумент.Склад = 115,15,25);
			Пока рез.Следующий() Цикл
				НовыйДокумент.Фирма = рез.Документ.Фирма;
				Если колСтрок = максКолСтрок Тогда 
					//Запись Документов+
					НачатьТранзакцию();
					Удачно = Истина;
					Попытка 
						НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
						НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
						Если НовыйДокумент.Склад<>Справочники.Склады.НайтиПоКоду(103)Тогда
							СкладРезерв = Справочники.Склады.НайтиПоКоду(138);
							ДокПеремещение = Документы.Перемещение.СоздатьДокумент();
							ДокПеремещение.Заполнить(НовыйДокумент.Ссылка);
							ДокПеремещение.Дата = ТекущаяДата();
							ДокПеремещение.СкладПолучатель = СкладРезерв;
							Попытка
								ДокПеремещение.Записать(РежимЗаписиДокумента.Запись);
								ДокПеремещение.Записать(РежимЗаписиДокумента.Проведение);
							Исключение
								Сообщить("Документ "+ДокПеремещение+" не создан: " + ОписаниеОшибки());
								Удачно = Ложь;
							КонецПопытки;
						КонецЕсли;
					Исключение
						Сообщить("Документ "+НовыйДокумент+" не создан: " + ОписаниеОшибки());
						Удачно = Ложь;
					КонецПопытки;
					Если Удачно Тогда 
						Сообщить("Проведен документ: "+ НовыйДокумент);
						Сообщить("Проведен документ: "+ ДокПеремещение);
						ТекстПисьма = ?(ПустаяСтрока(ТекстПисьма),"категорийным менеджером "+ПараметрыСеанса.ТекущийПользователь.Наименование+" сформированы документы :"+Символы.ПС,ТекстПисьма);
						ТекстПисьма = ТекстПисьма + Строка(НовыйДокумент)+ Символы.ПС;
						ЗафиксироватьТранзакцию();
					Иначе 
						ОтменитьТранзакцию();
					КонецЕсли;
					//Запись Документов-
					НовыйДокумент = Документы.ЗаказВнешний.СоздатьДокумент();
					НовыйДокумент.Контрагент = СЕ;
					Склад = резСклад.Склад;
					НовыйДокумент.Фирма = рез.Документ.Фирма;
					НовыйДокумент.Склад = Склад;
					НовыйДокумент.Дата = ТекущаяДата();
					НовыйДокумент.Комментарий = "Создано обработкой: Распределение товаров по СЕ.";
					ДатаДокумента = ПолучитьДатуЗаказа(НовыйДокумент.Контрагент,НовыйДокумент.Склад);
					Если ДатаДокумента = Неопределено Тогда 
						ДатаДокумента = ТекущаяДата();
					Иначе
						НовыйДокумент.ДатаДокумента = ДатаДокумента;
						НовыйДокумент.ДатаПоставкиДо = ДатаДокумента;
						НовыйДокумент.ДатаПоставкиОт = ДатаДокумента;
					КонецЕсли;
					НовыйДокумент.Автор = ПараметрыСеанса.ТекущийПользователь;
					колСтрок = 0;
				КонецЕсли;
				НоваяСтрока = НовыйДокумент.Состав.Добавить();
				НоваяСтрока.Номенклатура = рез.Номенклатура;
				Если НоваяСтрока.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Штучный Тогда 
					НоваяСтрока.Количество = Окр(рез.Количество);
				Иначе 
					НоваяСтрока.Количество = рез.Количество;
				КонецЕсли;
				НоваяСтрока.Цена = рез.Цена;
				НоваяСтрока.ЕдиницаИзмерения = ОбработкаТабличныхЧастейСервер.ПолучитьЕдиницуИзмеренияНоменклатурыПоУмолчанию(НоваяСтрока.Номенклатура);
				НоваяСтрока.Коэффициент = ?(ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмерения),НоваяСтрока.ЕдиницаИзмерения.Коэффициент,1);
				НоваяСтрока.СтавкаНДС = НоваяСтрока.Номенклатура.СтавкаНДС;
				НоваяСтрока.Сумма = НоваяСтрока.Количество*НоваяСтрока.Цена;
				НоваяСтрока.СуммаНДС = ОбработкаТабличныхЧастейСервер.РассчитатьСуммуНДС(НоваяСтрока.Сумма, Истина, НоваяСтрока.СтавкаНДС.Ставка);
				колСтрок = колСтрок + 1;
			КонецЦикла;	
			Если ЗначениеЗаполнено(НовыйДокумент.Состав) Тогда 
				//Запись Документов+
					НачатьТранзакцию();
					Удачно = Истина;
					Попытка 
						НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
						НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
						Если НовыйДокумент.Склад<>Справочники.Склады.НайтиПоКоду(103)Тогда
							СкладРезерв = Справочники.Склады.НайтиПоКоду(138);
							ДокПеремещение = Документы.Перемещение.СоздатьДокумент();
							ДокПеремещение.Заполнить(НовыйДокумент.Ссылка);
							ДокПеремещение.Дата = ТекущаяДата();
							ДокПеремещение.СкладПолучатель = СкладРезерв;
							Попытка
								ДокПеремещение.Записать(РежимЗаписиДокумента.Запись);
								ДокПеремещение.Записать(РежимЗаписиДокумента.Проведение);
							Исключение
								Сообщить("Документ "+ДокПеремещение+" не создан: " + ОписаниеОшибки());
								Удачно = Ложь;
							КонецПопытки;
						КонецЕсли;
					Исключение
						Сообщить("Документ "+НовыйДокумент+" не создан: " + ОписаниеОшибки());
						Удачно = Ложь;
					КонецПопытки;
					Если Удачно Тогда 
						Сообщить("Проведен документ: "+ НовыйДокумент);
						Сообщить("Проведен документ: "+ ДокПеремещение);
						ТекстПисьма = ?(ПустаяСтрока(ТекстПисьма),"категорийным менеджером "+ПараметрыСеанса.ТекущийПользователь.Наименование+" сформированы документы :"+Символы.ПС,ТекстПисьма);
						ТекстПисьма = ТекстПисьма + Строка(НовыйДокумент)+ Символы.ПС;
						ЗафиксироватьТранзакцию();
					Иначе 
						ОтменитьТранзакцию();
					КонецЕсли;
					//Запись Документов-
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	
	Если Не ПустаяСтрока(ТекстПисьма) Тогда            
		АдресПолучателя = Разработка_Ижтрейдинг_Сервер.ПолучитьЗначениеКонстанты(,"АдресПочтыРазнарядка");//"agent@milan2000.ru";
		УчетнаяЗапись = ЭлектроннаяПочта.ПолучитьСистемнуюУчетнуюЗапись();
		ПараметрыПисьма = Новый Структура;
		ПараметрыПисьма.Вставить("Тема", "Разнарядка товаров");
		ПараметрыПисьма.Вставить("Тело", ТекстПисьма);
		ПараметрыПисьма.Вставить("Кому", АдресПолучателя.АдресПочтыРазнарядка);
		Попытка
			ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
		Исключение
			ЗаписьЖурналаРегистрации("Разнарядка товаров", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось отправить письмо на почту: "+АдресПолучателя.АдресПочтыРазнарядка + " ("+ОписаниеОшибки()+")"+ТекстПисьма);		
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура Сформировать(Команда)
	Отказ = Ложь;
	Для Каждого стр Из Состав Цикл 
		Если стр.Распределить < 0 Тогда 
			Сообщить("По номенклатуре " + стр.Номенклатура + " распределеннное количество больше текущего остатка.");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	Если Отказ Тогда 
		Сообщить("Докуметы не сформированы.");
		Возврат;
	КонецЕсли;
	СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура составПоСЕКоличествоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	ТекДанныеСЕ = Элементы.составПоСЕ.ТекущиеДанные;    
	ТекДанные = Элементы.Состав.ТекущиеДанные;	
	Если ТекДанныеСЕ = Неопределено ИЛИ ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	СтарКоличесвто = ТекДанныеСЕ.Количество;
	Количество = ПривестиКоличествоККвантуОтгрузки(ТекДанныеСЕ.Номенклатура,ТекДанные.Контрагент,Число(Текст));
	ТекДанныеСЕ.Количество = Количество;
	мсв = СоставПоСЕ.НайтиСтроки(Новый Структура("Номенклатура",ТекДанныеСЕ.Номенклатура));
	сум = 0;
	Для Каждого стр Из мсв Цикл
		сум = сум + стр.Количество;
	КонецЦикла;

	ТекДанные.Распределить = ТекДанные.Принято - сум;			
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуЗаказа(Контрагент,Склад)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	izh_РасписаниеЗаказа.ВремяНачала,
	|	izh_РасписаниеЗаказа.ВремяКонца,
	|	izh_РасписаниеЗаказа.ДниНедели,
	|	izh_РасписаниеЗаказа.Отсрочка
	|ИЗ
	|	РегистрСведений.izh_РасписаниеЗаказа КАК izh_РасписаниеЗаказа
	|ГДЕ
	|	izh_РасписаниеЗаказа.Контрагент = &Контрагент
	|	И izh_РасписаниеЗаказа.Склад = &Склад";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Склад", Склад);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Если НЕ ВыборкаДетальныеЗаписи.Следующий() ИЛИ НЕ ЗначениеЗаполнено(СокрЛП(ВыборкаДетальныеЗаписи.ДниНедели)) Тогда 
		Сообщить("Заполните график заказов для контрагента: "+Контрагент+", и склада: "+Склад+"!");
		Возврат Неопределено;
	КонецЕсли;	
	ДатаДокумента = ПолучитьПодходящуюДату(ТекущаяДата()+ВыборкаДетальныеЗаписи.Отсрочка*3600,ВыборкаДетальныеЗаписи.ДниНедели);
	Возврат ДатаДокумента;
КонецФункции

&НаСервере
Функция ПолучитьПодходящуюДату(ДатаДокумента, Строка)
	Пока НеЭтотДень(ДатаДокумента, Строка) Цикл 
		ДатаДокумента = ДатаДокумента + 86400;
	КонецЦикла;
	Возврат ДатаДокумента;
КонецФункции

&НаСервере                                                             
Функция НеЭтотДень(Дата, Строка)
	Возврат Найти(Строка,Строка(ДеньНедели(Дата))) = 0;
КонецФункции