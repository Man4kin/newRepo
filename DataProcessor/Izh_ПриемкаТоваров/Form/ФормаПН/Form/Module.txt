 &НаКлиенте
 Процедура ПодборОткрыть(Команда)
	 Установитьпараметры();
	 Элементы.ПодборНоменклатуры.Видимость = НЕ Элементы.ПодборНоменклатуры.Видимость;
	 обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);
	 элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	 флаг = Элементы.кнГруппы.пометка;
	 ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
 КонецПроцедуры
 
 &НаКлиенте
 Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	 Если Не Копирование Тогда
		 Отказ = Истина;
		 Если НЕ ФирмаНеЗаполнена() Тогда 
			 ПодборОткрыть(Неопределено);
		 КонецЕсли;
	 КонецЕсли;	
 КонецПроцедуры
 
 Процедура Установитьпараметры()
	 Если Не ПодборНоменклатуры.Параметры.ДоступныеПараметры.Элементы.Найти("СтруктурнаяЕдиница") = Неопределено Тогда
		 ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СтруктурнаяЕдиница", Объект.Склад.Владелец);
	 КонецЕсли;
	 Если Не ПодборНоменклатуры.Параметры.ДоступныеПараметры.Элементы.Найти("Контрагент") = Неопределено Тогда
		 ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Контрагент", Объект.Контрагент);
	 КонецЕсли;
	 Если Не ПодборНоменклатуры.Параметры.ДоступныеПараметры.Элементы.Найти("ДатаДокумента") = Неопределено Тогда
		 ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ДатаДокумента", ТекущаяДата());
	 КонецЕсли;
	 Если Не ПодборНоменклатуры.Параметры.ДоступныеПараметры.Элементы.Найти("СписокТоваров") = Неопределено Тогда
		 ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокТоваров", Справочники.Номенклатура.ПустаяСсылка());
	 КонецЕсли;
 КонецПроцедуры
 
 &НаКлиенте
 Процедура Список(Команда)
	 обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
 КонецПроцедуры
 
 &НаКлиенте
 Процедура Иерархия(Команда)
	 обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
 КонецПроцедуры
 
 &НаКлиенте
 Процедура Дерево(Команда)
	 обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
 КонецПроцедуры
 
 &НаКлиенте
 Процедура ПоказатьГруппыВПодборе(Команда)
	 если элементы.ПодборНоменклатурысписок.Пометка тогда
		 элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	 иначе
		 элементы.кнГруппы.Пометка = истина;
	 конецесли;
	 флаг = Элементы.кнГруппы.пометка;
	 ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
 КонецПроцедуры
 
 
 &НаКлиенте
 Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	 БезНДС = ПолучитьСтавкуБезНДС();
	 Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		 ТекТовар = Элемент.ДанныеСтроки(Строка).Номенклатура;
		 ЭтоШтучныйТовар =  ОбщегоНазначенияСервер.ЭтоШтучныйТовар(ТекТовар);
		 ЗапретВводаДробногоКоличестваШтучногоТовара = ОбщегоНазначенияСервер.ЗапретВводаДробногоКоличестваШтучногоТовара();
		 ЗапретДробногоКоличества = ЭтоШтучныйТовар И ЗапретВводаДробногоКоличестваШтучногоТовара;
		 Количество = ОбработкаТабличныхЧастейКлиент.ЗапросКоличества(Истина, ЗапретДробногоКоличества);
		 ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка,Количество);	
		 Если ТекСтрока <> Неопределено Тогда
			 Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") И ПолучитьНеПлательщикНДС() Тогда
				 ТекСтрока.СтавкаНДС = БезНДС;
				 Если ОбщегоНазначенияСервер.ЕстьПравоСмотретьСебестоимость() Тогда
					 Если ТекСтрока.Свойство("ЦенаБезНДС") Тогда
						 Если ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов") = Истина Тогда
							 ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
						 Иначе
							 ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуБезНДСВСтрокеТабличнойЧасти(ТекСтрока);
						 КонецЕсли;
					 Иначе
						 ОбработкаТабличныхЧастейКлиент.РасчитатьСуммуВСтрокеТабличнойЧасти(ТекСтрока);
					 КонецЕсли;
				 КонецЕсли;
			 КонецЕсли;	
		 КонецЕсли;
		 ТекСтрока.КоличествоПоДокументу = Количество; 
	КонецЦикла;	
 КонецПроцедуры
 
 &НаСервере
 Функция ПолучитьСтавкуБезНДС()
	 Возврат Справочники.СтавкиНДС.БезНДС;
 КонецФункции
 
 &НаСервере
 Функция ПолучитьНеПлательщикНДС()
	 Возврат Объект.Контрагент.НеПлательщикНДС;
 КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
//  Отказ = ФирмаНеЗаполнена();
 КонецПроцедуры
 
 &НаКлиенте
 Функция ФирмаНеЗаполнена()
	 Если НЕ ЗначениеЗаполнено(Объект.Фирма) Тогда 
		 ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена поле < Фирма >",,"Объект.Фирма");
		 Возврат Истина;
	 Иначе 
		 Возврат Ложь; 
	 КонецЕсли;
 КонецФункции

&НаКлиенте
Процедура ФирмаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокФирм()
	 Запрос = Новый Запрос;
	 Запрос.Текст ="ВЫБРАТЬ
	               |	СвязьФирмИКонтрагентов.Фирма КАК Фирма
	               |ИЗ
	               |	РегистрСведений.СвязьФирмИКонтрагентов КАК СвязьФирмИКонтрагентов
	               |ГДЕ
	               |	СвязьФирмИКонтрагентов.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент",Объект.Контрагент);
	Результат = Запрос.Выполнить().Выбрать();
	сз = Новый СписокЗначений;
	Пока Результат.Следующий() Цикл
		сз.Добавить(Результат.Фирма);
	КонецЦикла;
	Возврат сз;
КонецФункции



 
 
