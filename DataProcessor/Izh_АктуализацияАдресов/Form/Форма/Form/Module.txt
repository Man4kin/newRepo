&НаСервереБезКонтекста
Функция ВернутьОстатокНоменклатуры(ВходящаяНоменклатура)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(, Номенклатура = &Номенклатура) КАК ОстаткиНоменклатурыОстатки");
	Запрос.УстановитьПараметр("Номенклатура",ВходящаяНоменклатура);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.КоличествоОстаток;
КонецФункции
	

&НаСервере
Функция ОбработкаФайла(АдресХранилищаТекста)
	значАдресаТовары=РеквизитФормыВЗначение("АдресаТовары");
	значАдресаТовары.Строки.Очистить();
	
	//спНенайденных=Новый Массив;
	
	
	СтрОбработки=ПолучитьИзВременногоХранилища(АдресХранилищаТекста);
	КодАдрес="";
	Для ъ=1 По СтрЧислоСтрок(СтрОбработки) Цикл
		СтрАдресТовар=СтрПолучитьСтроку(СтрОбработки,ъ);
		СтрАдресТовар=СтрЗаменить(СтрАдресТовар,",",Символы.ПС);
		Если СтрПолучитьСтроку(СтрАдресТовар,1)<>КодАдрес Тогда
			стрАдреса=значАдресаТовары.Строки.Добавить();
			КодАдрес=СтрПолучитьСтроку(СтрАдресТовар,1);
			стрАдреса.ШК=КодАдрес;
			ссылкаIzh_Адреса=Справочники.Izh_Адреса.ПолучитьСсылку(Новый УникальныйИдентификатор(КодАдрес));
			Если ссылкаIzh_Адреса.ПолучитьОбъект()=Неопределено Тогда
				//спНенайденных.Добавить("Не найден адрес "+СтрАдресТовар);
				стрАдреса.Наименование="Не найден адрес "+КодАдрес;
			Иначе
				стрАдреса.Наименование=ссылкаIzh_Адреса;
			КонецЕсли; 
		КонецЕсли;
		
		стрТовары=стрАдреса.Строки.Добавить();
		
		КодТовар=СтрПолучитьСтроку(СтрАдресТовар,2);
		стрТовары.ШК=КодТовар;
		Найден=Истина;
		стрТовары.Наименование=Справочники.Номенклатура.НайтиПоКоду(КодТовар);
		Если стрТовары.Наименование.Пустая() Тогда
			//спНенайденных.Добавить("Не найден товар по коду "+КодТовар);
			стрТовары.Наименование=Справочники.Номенклатура.НайтиПоКоду(Прав(КодТовар,12));
			Если стрТовары.Наименование.Пустая() Тогда
				стрТовары.Наименование=Справочники.Номенклатура.НайтиПоКоду(Прав(КодТовар,8));
				Если стрТовары.Наименование.Пустая() Тогда
					стрТовары.Наименование="Не найден товар по коду "+КодТовар;
					Найден=Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если Найден Тогда
			стрТовары.Наименование=стрТовары.Наименование.Родитель;
			стрТовары.Количество = ВернутьОстатокНоменклатуры(стрТовары.Наименование);
		КонецЕсли;		
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(значАдресаТовары,"АдресаТовары");
	
	Возврат Истина;
КонецФункции // ОбработкаФайла()

&НаКлиенте
Процедура ПрочитатьТСД(Команда)
	АдресХранилищаТекста = Неопределено;
	Если НЕ МенеджерОборудованияКлиент.ПолучитьФАйлИзДокумента(УникальныйИдентификатор, АдресХранилищаТекста,4) Тогда
		Возврат;
	КонецЕсли;
	ОбработкаФайла(АдресХранилищаТекста);
	Для каждого Адрес из АдресаТовары.ПолучитьЭлементы() Цикл
		Элементы.АдресаТовары.Развернуть(Адрес.ПолучитьИдентификатор()); 
	КонецЦикла;
	ЭтаФорма.Активизировать();
КонецПроцедуры

&НаСервере
Функция ЗаписатьСерв()
	значАдресаТовары=РеквизитФормыВЗначение("АдресаТовары");
	запIzh_АдресаНоменклатуры=РегистрыСведений.Izh_АдресаНоменклатуры.СоздатьНаборЗаписей();
	Для каждого стрАдрес Из значАдресаТовары.Строки Цикл
		Если ТипЗнч(стрАдрес.Наименование)=Тип("СправочникСсылка.Izh_Адреса") Тогда
			запIzh_АдресаНоменклатуры.Отбор.Адрес.Установить(стрАдрес.Наименование);
			запIzh_АдресаНоменклатуры.Прочитать();
			запIzh_АдресаНоменклатуры.Очистить();
			Для каждого стрТовар Из стрАдрес.Строки Цикл
				Если ТипЗнч(стрТовар.Наименование)=Тип("СправочникСсылка.Номенклатура") Тогда
					новIzh_АдресаНоменклатуры=запIzh_АдресаНоменклатуры.Добавить();
					новIzh_АдресаНоменклатуры.Адрес=стрАдрес.Наименование;
					новIzh_АдресаНоменклатуры.Номенклатура=стрТовар.Наименование;
				КонецЕсли; 
			КонецЦикла;
			запIzh_АдресаНоменклатуры.Записать();
		КонецЕсли;
	КонецЦикла; 
	
КонецФункции // ЗаписатьСерв()

&НаКлиенте
Процедура Записать(Команда)
	Если Вопрос("Записать адреса номенклатуры?",РежимДиалогаВопрос.ДаНет)<>КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьСерв();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьНенайденныхШК(Команда)
	ТабДок=ПечатьНаСервере();
	ТабДок.Показать(,,Ложь);
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере()
	значАдресаТовары=РеквизитФормыВЗначение("АдресаТовары");
	ЗначОбъект=РеквизитФормыВЗначение("Объект");
	СтрокаМакета=ЗначОбъект.ПолучитьМакет("Ненайденные").ПолучитьОбласть("Строка");
	ЗаголовокМакета=ЗначОбъект.ПолучитьМакет("Ненайденные").ПолучитьОбласть("Заголовок");
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Вывести(ЗаголовокМакета);
	Для каждого стрАдрес Из значАдресаТовары.Строки Цикл
		Если ТипЗнч(стрАдрес.Наименование)=Тип("СправочникСсылка.Izh_Адреса") Тогда
			Для каждого стрТовар Из стрАдрес.Строки Цикл
				Если ТипЗнч(стрТовар.Наименование)=Тип("СправочникСсылка.Номенклатура") Тогда Продолжить; КонецЕсли; 
				СтрокаМакета.Параметры.Адрес = стрАдрес.Наименование;
				СтрокаМакета.Параметры.ШК = стрТовар.ШК;
				ТабДок.Вывести(СтрокаМакета);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Возврат ТабДок
КонецФункции

&НаКлиенте
Процедура ПечатьНулевыхОстатков(Команда)
	ТабДок=ПечатьНаСервереНулевыеОстатки();
	ТабДок.Показать(,,Ложь);
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервереНулевыеОстатки()
	значАдресаТовары=РеквизитФормыВЗначение("АдресаТовары");
	ЗначОбъект=РеквизитФормыВЗначение("Объект");
	СтрокаМакета=ЗначОбъект.ПолучитьМакет("Ненайденные").ПолучитьОбласть("Строка_Товары");
	ЗаголовокМакета=ЗначОбъект.ПолучитьМакет("Ненайденные").ПолучитьОбласть("Шапка_Товары");
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Вывести(ЗаголовокМакета);
	Для каждого стрАдрес Из значАдресаТовары.Строки Цикл
		Если ТипЗнч(стрАдрес.Наименование)=Тип("СправочникСсылка.Izh_Адреса") Тогда
			Для каждого стрТовар Из стрАдрес.Строки Цикл
				Если ТипЗнч(стрТовар.Наименование)<>Тип("СправочникСсылка.Номенклатура") Тогда Продолжить; КонецЕсли; 
				Если стрТовар.Количество >0 Тогда Продолжить; КонецЕсли;
				СтрокаМакета.Параметры.Номенклатура = стрТовар.Наименование;
				СтрокаМакета.Параметры.Адрес = стрАдрес.Наименование;
				СтрокаМакета.Параметры.Код = стрТовар.Наименование.Код;
				ТабДок.Вывести(СтрокаМакета);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Возврат ТабДок
КонецФункции