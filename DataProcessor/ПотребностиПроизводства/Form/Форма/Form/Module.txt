
&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Дата = ТекущаяДата();
	Установитьпараметры();
КонецПроцедуры


//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.Продукция,СтандартнаяОбработка,,,"Продукция");
		Если ТекСтрока <> Неопределено Тогда
			ЗаполнитьСостав(ТекСтрока.Номенклатура,ТекСтрока.ТехнологическаяКарта,ТекСтрока.Остаток);
			ЗаполнитьСоставСырья();
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСостав(Номенклатура,ТехнологическаяКарта,Остаток)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК Остаток,
	|	ПродукцияПоЦехам.ТехнологическаяКарта
	|ИЗ
	|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &Склад) КАК ОстаткиНоменклатурыОстатки
	|		ПО ПродукцияПоЦехам.Продукция = ОстаткиНоменклатурыОстатки.Номенклатура
	|ГДЕ
	|	ПродукцияПоЦехам.Продукция = &Продукция
	|	И ПродукцияПоЦехам.Склад = &Склад
	|	И ПродукцияПоЦехам.ФлагАктивности
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПродукцияПоЦехам.ТехнологическаяКарта.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Продукция", Номенклатура);
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(НачалоДня(Объект.Дата)));
	Запрос.УстановитьПараметр("Склад", Объект.Производство);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ТехнологическаяКарта = ВыборкаДетальныеЗаписи.ТехнологическаяКарта;
		Остаток = ВыборкаДетальныеЗаписи.Остаток;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора("Обработки.ПотребностиПроизводства",ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора("Обработки.ПотребностиПроизводства",ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры


//Конец Процедуры и функции для организации подбора

&НаКлиенте
Процедура УправлениеДоступностьюЭлементов()
	Элементы.ГруппаПодбор.Видимость  = ?(Не ЗначениеЗаполнено(Объект.Производство),Ложь,Элементы.ГруппаПодбор.Видимость);
конецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеДоступностьюЭлементов();
	Установитьпараметры();
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	УправлениеДоступностьюЭлементов();
	Установитьпараметры();
КонецПроцедуры

Процедура Установитьпараметры()
	ПодборНоменклатуры.Параметры.установитьзначениепараметра("СтруктурнаяЕдиница",Объект.Производство.Владелец);
конецпроцедуры

&НаКлиенте
Процедура РаспределениеКоличествоПриИзменении(Элемент)
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ",Элементы.Распределение.ТекущиеДанные.Ключ);
	Массив = Объект.Распределение.НайтиСтроки(Отбор);
	Итог = 0;
	Для I=0 по Массив.Количество()-1 Цикл
		Итог = Итог+Массив[I][Элемент.Имя];
	КонецЦикла;	
	
	Массив = Объект.Состав.НайтиСтроки(Отбор);
	ТекущаяСтрока = Массив[0];
	ТекущаяСтрока[Элемент.Имя] = Итог;
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПоТехКартеПриИзменении(Элемент)
	Элементы.Состав.ТолькоПросмотр = Элементы.Продукция.ТекущиеДанные.ПоТехКарте;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.Продукция.Количество() > 0 Тогда
		ТекстВопроса = "Табличная часть будет очищена.
		|Продолжить?";
		Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Объект.Продукция.Очистить();
			Объект.Состав.Очистить();
		Иначе	
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	ЗаполнитьНаСервере();
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьНаСервере() 
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Планы.Номенклатура КАК Номенклатура,
	|	СУММА(Планы.Заказано) - ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) КАК Количество,
	|	СУММА(Планы.Заказано) КАК ПоЗаказу,
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
	|	ЕдиницыИзмерения.Коэффициент,
	|	ВложенныйЗапрос.ТехнологическаяКарта КАК ТехнологическаяКарта,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВнешнийЗаказ.Номенклатура КАК Номенклатура,
	|		СУММА(ВнешнийЗаказ.Количество) КАК Заказано
	|	ИЗ
	|		РегистрСведений.ВнешнийЗаказ КАК ВнешнийЗаказ
	|	ГДЕ
	|		ВнешнийЗаказ.ДатаПоставки = &Дата
	|		И ВнешнийЗаказ.Склад = &Склад
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВнешнийЗаказ.Номенклатура) КАК Планы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО Планы.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И Планы.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &СкладГотовойПродукции) КАК ОстаткиНоменклатурыОстатки
	|		ПО Планы.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Внутр.Продукция КАК Продукция,
	|			МАКСИМУМ(ТехнологическаяКарта.Ссылка) КАК ТехнологическаяКарта
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ПродукцияПоЦехам.Продукция КАК Продукция,
	|				МАКСИМУМ(ПродукцияПоЦехам.ТехнологическаяКарта.Дата) КАК Дата
	|			ИЗ
	|				РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|			ГДЕ
	|				ПродукцияПоЦехам.ФлагАктивности
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПродукцияПоЦехам.Продукция) КАК Внутр
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	|				ПО Внутр.Продукция = ТехнологическаяКарта.Продукция
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Внутр.Продукция) КАК ВложенныйЗапрос
	|		ПО Планы.Номенклатура = ВложенныйЗапрос.Продукция
	|ГДЕ
	|	ВложенныйЗапрос.ТехнологическаяКарта.ВидПроизводства = &ВидПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	Планы.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка,
	|	ЕдиницыИзмерения.Коэффициент,
	|	ВложенныйЗапрос.ТехнологическаяКарта
	|
	|ИМЕЮЩИЕ
	|	СУММА(Планы.Заказано) - ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) > 0";
	
	Запрос.УстановитьПараметр("Дата", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДеньНедели", ДеньНедели(Объект.Дата));
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(КонецДня(Объект.Дата)));
	Запрос.УстановитьПараметр("Склад", Объект.Производство);
	Запрос.УстановитьПараметр("СкладГотовойПродукции", Объект.СкладГотовойПродукции);
	Запрос.УстановитьПараметр("ВидПроизводства", Перечисления.ВидыПроизводства.Приготовление);
	
	Результат = Запрос.Выполнить();
	Объект.Продукция.Загрузить(Результат.Выгрузить());
	
	ЗаполнитьСоставСырья();
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСоставСырья()
	ТаблицаПродукции = Объект.Продукция.Выгрузить();
	ТаблицаСостава.Очистить();
	Объект.Состав.Очистить();
	Для Каждого Строка Из ТаблицаПродукции Цикл
		ПолучитьСоставПродукции(Строка.ТехнологическаяКарта,Строка.Количество*Строка.Коэффициент,ТаблицаСостава);
	КонецЦикла;
	ПромТаблица = ТаблицаСостава.Выгрузить();
	ПромТаблица.Свернуть("Номенклатура","Количество");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	Запрос.Текст = "Выбрать * Поместить ТаблицаСостава из &ТаблицаСостава как ТаблицаСостава";
	Запрос.УстановитьПараметр("ТаблицаСостава",ПромТаблица);
	Запрос.Выполнить();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА СоставТехКарты.Количество
	|		ИНАЧЕ СоставТехКарты.Количество * Ингредиенты.КоэффициентЗамены
	|	КОНЕЦ КАК ТребуемоеКоличество,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки1.КоличествоОстаток,0) <= 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки2.КоличествоОстаток,0) <= 0
	|								ТОГДА ВЫБОР
	|										КОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки1.КоличествоОстаток,0) < СоставТехКарты.Количество
	|											ТОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки1.КоличествоОстаток,0)
	|										ИНАЧЕ СоставТехКарты.Количество
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ОстаткиНоменклатурыОстатки1.КоличествоОстаток < СоставТехКарты.Количество - ОстаткиНоменклатурыОстатки2.КоличествоОстаток
	|										ТОГДА ОстаткиНоменклатурыОстатки1.КоличествоОстаток
	|									ИНАЧЕ СоставТехКарты.Количество - ОстаткиНоменклатурыОстатки2.КоличествоОстаток
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ОстаткиНоменклатурыИнгредиенты1.КоличествоОстаток,0) <= 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ЕСТЬNULL(ОстаткиНоменклатурыИнгредиенты2.КоличествоОстаток,0) <= 0
	|							ТОГДА ВЫБОР
	|									КОГДА ЕСТЬNULL(ОстаткиНоменклатурыИнгредиенты1.КоличествоОстаток,0) < СоставТехКарты.Количество * Ингредиенты.КоэффициентЗамены
	|										ТОГДА ЕСТЬNULL(ОстаткиНоменклатурыИнгредиенты1.КоличествоОстаток,0)
	|									ИНАЧЕ СоставТехКарты.Количество * Ингредиенты.КоэффициентЗамены
	|								КОНЕЦ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ОстаткиНоменклатурыИнгредиенты1.КоличествоОстаток < СоставТехКарты.Количество * Ингредиенты.КоэффициентЗамены - ОстаткиНоменклатурыИнгредиенты2.КоличествоОстаток
	|									ТОГДА ОстаткиНоменклатурыИнгредиенты1.КоличествоОстаток
	|								ИНАЧЕ СоставТехКарты.Количество * Ингредиенты.КоэффициентЗамены - ОстаткиНоменклатурыИнгредиенты2.КоличествоОстаток
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Количество,
	|	ЕСТЬNULL(Ингредиенты.Ссылка,СоставТехКарты.Номенклатура)  КАК Ингредиент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА СоставТехКарты.Номенклатура
	|		ИНАЧЕ Ингредиенты.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ОстаткиНоменклатурыОстатки1.КоличествоОстаток
	|		ИНАЧЕ ОстаткиНоменклатурыИнгредиенты1.КоличествоОстаток
	|	КОНЕЦ КАК ОстатокНаСкладеСырья,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ОстаткиНоменклатурыОстатки2.КоличествоОстаток
	|		ИНАЧЕ ОстаткиНоменклатурыИнгредиенты2.КоличествоОстаток
	|	КОНЕЦ КАК ОстатокНаСкладеПроизводства,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ЕдиницыИзмерения.Ссылка
	|		ИНАЧЕ ЕдиницыИзмерения1.Ссылка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ЕдиницыИзмерения.Коэффициент
	|		ИНАЧЕ ЕдиницыИзмерения1.Коэффициент
	|	КОНЕЦ КАК Коэффициент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСостава.Количество КАК Количество,
	|		ТаблицаСостава.Номенклатура КАК Номенклатура
	|	ИЗ
	|		ТаблицаСостава КАК ТаблицаСостава) КАК СоставТехКарты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Ингредиенты.Состав КАК Ингредиенты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &СкладСырья) КАК ОстаткиНоменклатурыИнгредиенты1
	|			ПО Ингредиенты.Номенклатура = ОстаткиНоменклатурыИнгредиенты1.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &СкладПроизводства) КАК ОстаткиНоменклатурыИнгредиенты2
	|			ПО Ингредиенты.Номенклатура = ОстаткиНоменклатурыИнгредиенты2.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения1
	|			ПО Ингредиенты.Номенклатура = ЕдиницыИзмерения1.Владелец
	|				И Ингредиенты.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения1.ЕдиницаПоКлассификатору
	|		ПО СоставТехКарты.Номенклатура = Ингредиенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &СкладСырья) КАК ОстаткиНоменклатурыОстатки1
	|		ПО СоставТехКарты.Номенклатура = ОстаткиНоменклатурыОстатки1.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &СкладПроизводства) КАК ОстаткиНоменклатурыОстатки2
	|		ПО СоставТехКарты.Номенклатура = ОстаткиНоменклатурыОстатки2.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО СоставТехКарты.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И СоставТехКарты.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|ИТОГИ ПО
	|	Ингредиент";
	
	
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(КонецДня(Объект.Дата)));
	Запрос.УстановитьПараметр("СкладСырья", Объект.СкладСырья);
	Запрос.УстановитьПараметр("СкладПроизводства", Объект.Производство);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.СкладСырья.Владелец);
	
	
	Результат = Запрос.Выполнить();
	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВДанныеФормы(Дерево, ДеревоНоменклатуры);
	
	Для Каждого ПервыйУровень Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		
		Если ТипЗнч(ПервыйУровень.Ингредиент) = Тип("СправочникСсылка.Номенклатура") Тогда
			Для Каждого ВторойУровень Из ПервыйУровень.ПолучитьЭлементы() Цикл
				ПервыйУровень.Номенклатура = ВторойУровень.Номенклатура;
				ПервыйУровень.Ингредиент = Справочники.Номенклатура.ПустаяСсылка();
				ПервыйУровень.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
				ПервыйУровень.Коэффициент = ВторойУровень.Коэффициент;
				ПервыйУровень.Количество = ВторойУровень.Количество;
				ПервыйУровень.ТребуемоеКоличество = ВторойУровень.ТребуемоеКоличество;
				ПервыйУровень.ОстатокНаСкладеСырья = ВторойУровень.ОстатокНаСкладеСырья;
				ПервыйУровень.ОстатокНаСкладеПроизводства = ВторойУровень.ОстатокНаСкладеПроизводства;
				Прервать;
			КонецЦикла;
			ПервыйУровень.ПолучитьЭлементы().Очистить();
			
			Отбор = Новый Структура;
			Отбор.Вставить("Ингредиент",ПервыйУровень.Ингредиент);
			НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				Строка = Объект.Состав.Добавить();
				Строка.Ингредиент = ПервыйУровень.Номенклатура;
				Строка.Номенклатура = ПервыйУровень.Номенклатура;
				Строка.ЕдиницаИзмерения = ПервыйУровень.ЕдиницаИзмерения;
				Строка.Коэффициент = ПервыйУровень.Коэффициент;
				Строка.Количество = ПервыйУровень.Количество;
				Строка.ТребуемоеКоличество = ПервыйУровень.ТребуемоеКоличество;
				Строка.ОстатокНаСкладеСырья = ПервыйУровень.ОстатокНаСкладеСырья;
				Строка.ОстатокНаСкладеПроизводства = ПервыйУровень.ОстатокНаСкладеПроизводства;
			КонецЕсли;	
		Иначе	
			Для Каждого ВторойУровень Из ПервыйУровень.ПолучитьЭлементы() Цикл
				Отбор = Новый Структура;
				Отбор.Вставить("Ингредиент",ПервыйУровень.Ингредиент);
				НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
				Если НайденныеСтроки.Количество() = 0 Тогда
					ПервыйУровень.Номенклатура = ВторойУровень.Номенклатура;
					ПервыйУровень.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
					ПервыйУровень.Коэффициент = ВторойУровень.Коэффициент;
					ПервыйУровень.Количество = ВторойУровень.Количество;
					ПервыйУровень.ТребуемоеКоличество = ВторойУровень.ТребуемоеКоличество;
					Строка = Объект.Состав.Добавить();
					Строка.Ингредиент = ПервыйУровень.Ингредиент;
					Строка.Номенклатура = ВторойУровень.Номенклатура;
					Строка.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
					Строка.Коэффициент = ВторойУровень.Коэффициент;
					Строка.Количество = ВторойУровень.Количество;
					Строка.ТребуемоеКоличество = ВторойУровень.ТребуемоеКоличество;
					Строка.ОстатокНаСкладеСырья = ВторойУровень.ОстатокНаСкладеСырья;
					Строка.ОстатокНаСкладеПроизводства = ВторойУровень.ОстатокНаСкладеПроизводства;
					Прервать;
				Иначе
					Для Каждого Строка Из НайденныеСтроки Цикл
						Если Строка.Номенклатура = ВторойУровень.Номенклатура Тогда
							ПервыйУровень.Номенклатура = Строка.Номенклатура;
							ПервыйУровень.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;
							ПервыйУровень.Коэффициент = Строка.Коэффициент;
							ПервыйУровень.Количество = ВторойУровень.Количество;
							ПервыйУровень.ТребуемоеКоличество = ВторойУровень.ТребуемоеКоличество;
						КонецЕсли;	
						Прервать;
					КонецЦикла;	
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	


Процедура ПолучитьСоставПродукции(ТехнологическаяКарта,Количество,ТаблицаСостава)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТехнологическаяКартаСостав.Номенклатура,
	|	ТехнологическаяКартаСостав.Количество * ТехнологическаяКартаСостав.Коэффициент * &Количество КАК Количество,
	|	ВложенныйЗапрос.ТехнологическаяКарта КАК ТехнологическаяКарта
	|ИЗ
	|	Документ.ТехнологическаяКарта.Состав КАК ТехнологическаяКартаСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		Внутр.Продукция КАК Продукция,
	|		МАКСИМУМ(ТехнологическаяКарта.Ссылка) КАК ТехнологическаяКарта
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПродукцияПоЦехам.Продукция КАК Продукция,
	|			МАКСИМУМ(ПродукцияПоЦехам.ТехнологическаяКарта.Дата) КАК Дата
	|		ИЗ
	|			РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|		ГДЕ
	|			ПродукцияПоЦехам.ФлагАктивности
	|				И ПродукцияПоЦехам.ТехнологическаяКарта.ВидПроизводства = &ВидПроизводства
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПродукцияПоЦехам.Продукция) КАК Внутр
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	|			ПО Внутр.Продукция = ТехнологическаяКарта.Продукция
    |
	|	СГРУППИРОВАТЬ ПО
	|		Внутр.Продукция) КАК ВложенныйЗапрос
	|		ПО ТехнологическаяКартаСостав.Номенклатура = ВложенныйЗапрос.Продукция
	|ГДЕ
	|	ТехнологическаяКартаСостав.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ТехнологическаяКарта);
	Запрос.УстановитьПараметр("Количество", Количество);
	Запрос.УстановитьПараметр("ВидПроизводства", Перечисления.ВидыПроизводства.Приготовление);
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ТехнологическаяКарта) Тогда
			ПолучитьСоставПродукции(ВыборкаДетальныеЗаписи.ТехнологическаяКарта,ВыборкаДетальныеЗаписи.Количество,ТаблицаСостава)
		Иначе
			НоваяСтрока = ТаблицаСостава.Добавить();
			НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	



&НаКлиенте
Процедура ДеревоНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВторойУровень = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	ПервыйУровень = ВторойУровень.ПолучитьРодителя();
	Если ПервыйУровень = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПервыйУровень.Номенклатура = ВторойУровень.Номенклатура;
	ПервыйУровень.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
	ПервыйУровень.Коэффициент = ВторойУровень.Коэффициент;
	ПервыйУровень.Количество = ВторойУровень.Количество;
	Отбор = Новый Структура;
	Отбор.Вставить("Ингредиент",ПервыйУровень.Ингредиент);
	НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
	Для Каждого Строка Из НайденныеСтроки Цикл
		Строка.Номенклатура = ВторойУровень.Номенклатура;
		Строка.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
		Строка.Коэффициент = ВторойУровень.Коэффициент;
		Строка.Количество = ВторойУровень.Количество;
	КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура ПродукцияКоличествоПриИзменении(Элемент)
	ЗаполнитьСоставСырья();
КонецПроцедуры


&НаКлиенте
Процедура ОформитьДокументы(Команда)
	СсылкаНаДок = ОформитьНаСервере();
	Если СсылкаНаДок = Неопределено Тогда
		Сообщить("Нет данных для оформления!");
	Иначе	
		СтруктураПараметров = Новый Структура("Ключ", СсылкаНаДок);
		ОткрытьФорму("Документ.Перемещение.Форма.ФормаДокумента",СтруктураПараметров,ВладелецФормы);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОформитьНаСервере()
	НовыйДок = Документы.Перемещение.СоздатьДокумент();
	НовыйДок.Дата = ТекущаяДата();
	НовыйДок.ИнициализироватьДокумент();
	НовыйДок.Склад = Объект.СкладСырья;
	НовыйДок.СкладПолучатель = Объект.Производство;
	НовыйДок.Фирма = Объект.Фирма;
	Для Каждого Строка Из Объект.Состав Цикл
		Если Строка.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;	
		НоваяСтрока = НовыйДок.Состав.Добавить();
		НоваяСтрока.Номенклатура = Строка.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;
		НоваяСтрока.Коэффициент = Строка.Коэффициент;
		НоваяСтрока.Количество = Строка.Количество;
	КонецЦикла;
	Если НовыйДок.Состав.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе	
		НовыйДок.Записать(РежимЗаписиДокумента.Запись);
		Возврат НовыйДок.Ссылка;
	КонецЕсли;	
КонецФункции


&НаКлиенте
Процедура ДеревоНоменклатурыПередНачаломИзменения(Элемент, Отказ)
	ВторойУровень = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	ПервыйУровень = ВторойУровень.ПолучитьРодителя();
	Если НЕ ПервыйУровень = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПродукцияПослеУдаления(Элемент)
	ЗаполнитьСоставСырья();
КонецПроцедуры


&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	Если НачалоДня(Объект.Период.ДатаНачала) < НачалоДня(ТекущаяДата()) Тогда
		Объект.Период.ДатаНачала = НачалоДня(ТекущаяДата());
		Состояние("Дата начала не может быть меньше текущей даты!",,,БиблиотекаКартинок.Предупреждение32);
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура Печать(Команда)
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(Объект);
	ПараметрыВыполненияКоманды = Новый Структура();
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.ПотребностиПроизводства","ОП2", ПараметрКоманды, ПараметрыВыполненияКоманды, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПроведенДокументПеремещение" Тогда
		ЗаполнитьСоставСырья();	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияТехнологическаяКартаПриИзменении(Элемент)
	ЗаполнитьСоставСырья();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыКоличествоПриИзменении(Элемент)
	Отбор = Новый Структура;
	Отбор.Вставить("Ингредиент",Элементы.ДеревоНоменклатуры.ТекущиеДанные.Номенклатура);
	Отбор.Вставить("Номенклатура",Элементы.ДеревоНоменклатуры.ТекущиеДанные.Номенклатура);
	НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() <> 0 Тогда
		НайденныеСтроки[0].Количество = Элементы.ДеревоНоменклатуры.ТекущиеДанные.Количество;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияТехнологическаяКартаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТехКартаНеДопустимая(ВыбранноеЗначение) Тогда  
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТехКартаНеДопустимая(ТехКарта)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПродукцияПоЦехам.ФлагАктивности
		|ИЗ
		|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
		|ГДЕ
		|	ПродукцияПоЦехам.ТехнологическаяКарта = &ТехнологическаяКарта
		|	И ПродукцияПоЦехам.Склад = &Склад
		|	И ПродукцияПоЦехам.Продукция = &Продукция";

	Запрос.УстановитьПараметр("Продукция", ТехКарта.Продукция);
	Запрос.УстановитьПараметр("Склад", Объект.Производство);
	Запрос.УстановитьПараметр("ТехнологическаяКарта", ТехКарта);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	
	Если ВыборкаДетальныеЗаписи.ФлагАктивности = Истина Тогда
		Возврат Ложь;
	Иначе	
		Текст = "Выбрана технологическая карта не активна!";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Объект.Ссылка);
		Возврат Истина;
	КонецЕсли;	
КонецФункции	


&НаКлиенте
Процедура ЗаполнитьПоЗаказам(Команда)
	Для Каждого Строка Из Объект.Состав Цикл
		Строка.Количество = Строка.ТребуемоеКоличество;
	КонецЦикла;	
	Отбор = Новый Структура;
	Для Каждого ВыборкаПервыйУровень Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		Отбор.Вставить("Номенклатура",ВыборкаПервыйУровень.Номенклатура);
		
		Массив = Объект.Состав.НайтиСтроки(Отбор);
		Если Массив.Количество()>0 Тогда
			ВыборкаПервыйУровень.Количество = Массив[0].Количество;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	Для Каждого Строка Из Объект.Состав Цикл
		Строка.Количество = Строка.ОстатокНаСкладеСырья;
	КонецЦикла;
	Отбор = Новый Структура;
	Для Каждого ВыборкаПервыйУровень Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		Отбор.Вставить("Номенклатура",ВыборкаПервыйУровень.Номенклатура);
		
		Массив = Объект.Состав.НайтиСтроки(Отбор);
		Если Массив.Количество()>0 Тогда
			ВыборкаПервыйУровень.Количество = Массив[0].Количество;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СкладСырьяПриИзменении(Элемент)
	Установитьпараметры();
КонецПроцедуры
