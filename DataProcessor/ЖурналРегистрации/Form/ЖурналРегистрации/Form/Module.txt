//////////////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтборЖурналаРегистрации = Новый Структура;
	
	Если Не ПустаяСтрока(Параметры.Пользователь) Тогда
		
		ИмяПользователя = Параметры.Пользователь;
		ОтборПоПользователю = Новый СписокЗначений;
		ПоПользователю = ОтборПоПользователю.Добавить(ИмяПользователя);
		Если ПустаяСтрока(ИмяПользователя) Тогда
			ПоПользователю.Представление = НСтр("ru = '<Пользователь по умолчанию>'");
		Иначе
			ПоПользователю.Представление = ИмяПользователя;
		КонецЕсли;
		
		ОтборЖурналаРегистрации.Вставить("Пользователь", ОтборПоПользователю);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СобытиеЖурналаРегистрации) Тогда
		ОтборПоСобытию = Новый СписокЗначений;
		ОтборПоСобытию.Добавить(Параметры.СобытиеЖурналаРегистрации, Параметры.СобытиеЖурналаРегистрации);
		ОтборЖурналаРегистрации.Вставить("Событие", ОтборПоСобытию);
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаНачала") Тогда
		ОтборЖурналаРегистрации.Вставить("ДатаНачала", Параметры.ДатаНачала);
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаОкончания") Тогда
		ОтборЖурналаРегистрации.Вставить("ДатаОкончания", Параметры.ДатаОкончания);
	КонецЕсли;
	
	КоличествоПоказываемыхСобытий = 200;
	
	ПрочитатьЖурнал(ОтборЖурналаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрТекущегоСобытияВОтдельномОкне()
	
	Данные = Элементы.Журнал.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаВремя", Данные.Дата);
	ПараметрыФормы.Вставить("Пользователь", Данные.ИмяПользователя);
	ПараметрыФормы.Вставить("Приложение", Данные.ПредставлениеПриложения);
	ПараметрыФормы.Вставить("Компьютер", Данные.Компьютер);
	ПараметрыФормы.Вставить("Событие", Данные.ПредставлениеСобытия);
	ПараметрыФормы.Вставить("Комментарий", Данные.Комментарий);
	ПараметрыФормы.Вставить("Метаданные", Данные.ПредставлениеМетаданных);
	ПараметрыФормы.Вставить("Данные", Данные.Данные);
	ПараметрыФормы.Вставить("ПредставлениеДанных", Данные.ПредставлениеДанных);
	ПараметрыФормы.Вставить("ИдентификаторТранзакции", Данные.Транзакция);
	ПараметрыФормы.Вставить("СтатусЗавершенияТранзакции", Данные.СтатусТранзакции);
	ПараметрыФормы.Вставить("Сеанс", Данные.Сеанс);
	ПараметрыФормы.Вставить("РабочийСервер", Данные.РабочийСервер);
	ПараметрыФормы.Вставить("ОсновнойIPПорт", Данные.ОсновнойIPПорт);
	ПараметрыФормы.Вставить("ВспомогательныйIPПорт", Данные.ВспомогательныйIPПорт);
	
	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма.ФормаСобытия", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДанныеДляПросмотра()
	
	ТекущиеДанные = Элементы.Журнал.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или ТекущиеДанные.Данные = Неопределено Тогда
		Предупреждение(НСтр("ru = 'Эта запись журнала регистрации не связана с данными (см. колонку ""Данные"")'"));
		Возврат;
	КонецЕсли;
	
	Попытка
		ОткрытьЗначение(ТекущиеДанные.Данные);
	Исключение
		ТекстПредупреждения = НСтр("ru = 'Эта запись журнала регистрации связана с данными, но отобразить их невозможно.
									|%1'");
		Если ТекущиеДанные.Событие = "_$Data$_.Delete" Тогда 
			// это - событие удаления
			ТекстПредупреждения =
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ТекстПредупреждения,
						НСтр("ru = 'Данные удалены из информационной базы'"));
		Иначе
			ТекстПредупреждения =
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ТекстПредупреждения,
						НСтр("ru = 'Возможно, данные удалены из информационной базы'"));
		КонецЕсли;
		Предупреждение(ТекстПредупреждения);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалДатДляПросмотра()
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	ДатаНачала    = Неопределено;
	ДатаОкончания = Неопределено;
	ОтборЖурналаРегистрации.Свойство("ДатаНачала", ДатаНачала);
	ОтборЖурналаРегистрации.Свойство("ДатаОкончания", ДатаОкончания);
	ДатаНачала    = ?(ТипЗнч(ДатаНачала)    = Тип("Дата"), ДатаНачала, '00010101000000');
	ДатаОкончания = ?(ТипЗнч(ДатаОкончания) = Тип("Дата"), ДатаОкончания, '00010101000000');
	
	Если ИнтервалДат.ДатаНачала <> ДатаНачала Тогда
		ИнтервалДат.ДатаНачала = ДатаНачала;
	КонецЕсли;
	
	Если ИнтервалДат.ДатаОкончания <> ДатаОкончания Тогда
		ИнтервалДат.ДатаОкончания = ДатаОкончания;
	КонецЕсли;
	
	Диалог.Период = ИнтервалДат;
	
	Если Диалог.Редактировать() Тогда
		ИнтервалДат = Диалог.Период;
		Если ИнтервалДат.ДатаНачала = '00010101000000' Тогда
			ОтборЖурналаРегистрации.Удалить("ДатаНачала");
		Иначе
			ОтборЖурналаРегистрации.Вставить("ДатаНачала", ИнтервалДат.ДатаНачала);
		КонецЕсли;
		Если ИнтервалДат.ДатаОкончания = '00010101000000' Тогда
			ОтборЖурналаРегистрации.Удалить("ДатаОкончания");
		Иначе
			ОтборЖурналаРегистрации.Вставить("ДатаОкончания", ИнтервалДат.ДатаОкончания);
		КонецЕсли;
		ОбновитьТекущийСписок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьУстановитьОтбор()
	
	СписокОтбора = Новый СписокЗначений;
	
	Для Каждого ЭлементСтруктуры Из ОтборЖурналаРегистрации Цикл
		СписокОтбора.Добавить(ЭлементСтруктуры.Значение, ЭлементСтруктуры.Ключ);
	КонецЦикла;
	
	ФормаОтбора = ОткрытьФорму("Обработка.ЖурналРегистрации.Форма.ОтборЖурналаРегистрации",
	                           Новый Структура("Отбор", СписокОтбора),
	                           ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УстановленОтборЖурналаРегистрации" И Источник = ЭтаФорма Тогда
		ОтборЖурналаРегистрации.Очистить();
		
		Для Каждого ЭлементСписка Из Параметр Цикл
			ОтборЖурналаРегистрации.Вставить(ЭлементСписка.Представление, ЭлементСписка.Значение);
		КонецЦикла;
		
		ОбновитьТекущийСписок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьУстановитьОтборПоЗначениюВТекущейКолонке()
	
	Данные = Элементы.Журнал.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИмяКолонкиПредставления = Элементы.Журнал.ТекущийЭлемент.Имя;
	Если ИмяКолонкиПредставления = "Дата" Тогда
		Возврат;
	КонецЕсли;
	ЗначениеОтбора = Данные[ИмяКолонкиПредставления];
	Представление  = Данные[ИмяКолонкиПредставления];
	
	ИмяЭлементаОтбора = ИмяКолонкиПредставления;
	Если ИмяКолонкиПредставления = "ИмяПользователя" Тогда 
		ИмяЭлементаОтбора = "Пользователь";
		ЗначениеОтбора = Данные["Пользователь"];
	ИначеЕсли ИмяКолонкиПредставления = "ПредставлениеПриложения" Тогда
		ИмяЭлементаОтбора = "ИмяПриложения";
		ЗначениеОтбора = Данные["ИмяПриложения"];
	ИначеЕсли ИмяКолонкиПредставления = "ПредставлениеСобытия" Тогда
		ИмяЭлементаОтбора = "Событие";
		ЗначениеОтбора = Данные["Событие"];
	КонецЕсли;
	
	// По пустым строкам не отбираем
	Если ТипЗнч(ЗначениеОтбора) = Тип("Строка") И ПустаяСтрока(ЗначениеОтбора) Тогда
		// Для пользователя по умолчанию имя пустое, разрешаем отбирать
		Если ИмяКолонкиПредставления <> "ИмяПользователя" Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТекущееЗначение = Неопределено;
	Если ОтборЖурналаРегистрации.Свойство(ИмяЭлементаОтбора, ТекущееЗначение) Тогда
		// Уже установлен отбор
		ОтборЖурналаРегистрации.Удалить(ИмяЭлементаОтбора);
	Иначе
		Если ИмяЭлементаОтбора = "Данные" Или          // не списочные отборы, только 1 значение
			 ИмяЭлементаОтбора = "Комментарий" Или
			 ИмяЭлементаОтбора = "Транзакция" Или
			 ИмяЭлементаОтбора = "ПредставлениеДанных" Тогда 
			ОтборЖурналаРегистрации.Вставить(ИмяЭлементаОтбора, ЗначениеОтбора);
		Иначе
			СписокОтбора = Новый СписокЗначений;
			СписокОтбора.Добавить(ЗначениеОтбора, Представление);
			ОтборЖурналаРегистрации.Вставить(ИмяЭлементаОтбора, СписокОтбора);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьТекущийСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОтбор()
	
	ОтборЖурналаРегистрации.Очистить();
	ОбновитьТекущийСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущийСписок() Экспорт
	
	ПрочитатьЖурнал(ОтборЖурналаРегистрации);
	// Позиционирование в конец списка
	Если Журнал.Количество() Тогда
		Элементы.Журнал.ТекущаяСтрока = Журнал[Журнал.Количество() - 1].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПоказываемыхСобытийПриИзменении(Элемент)
	
	ОбновитьТекущийСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ЖурналВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Журнал.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "Данные" Или Поле.Имя = "ПредставлениеДанных" Тогда
		Если ТекущиеДанные.Данные <> Неопределено И (ЗначениеЗаполнено(ТекущиеДанные.Данные)) Тогда
			ОткрытьДанныеДляПросмотра();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПросмотрТекущегоСобытияВОтдельномОкне();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры

&НаСервере
Процедура ПрочитатьЖурнал(Знач ОтборЖурналаНаКлиенте)
	
	// Выгрузка ототборованных событий в таблицу
	Отбор = Новый Структура;
	Для Каждого ЭлементОтбора Из ОтборЖурналаНаКлиенте Цикл
		Отбор.Вставить(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
	КонецЦикла;
	
	ТЗ_События = Новый ТаблицаЗначений;
	ПреобразованиеОтбора(Отбор);
	
	ВыгрузитьЖурналРегистрации(ТЗ_События, Отбор, , , КоличествоПоказываемыхСобытий);
	ТЗ_События.Колонки.Добавить("НомерРисунка", Новый ОписаниеТипов("Число"));
	Для Каждого Стр_ТЗ Из ТЗ_События Цикл
		Стр_ТЗ.НомерРисунка = -1;
		Если Стр_ТЗ.Уровень = УровеньЖурналаРегистрации.Информация Тогда
			Стр_ТЗ.НомерРисунка = 0;
		ИначеЕсли Стр_ТЗ.Уровень = УровеньЖурналаРегистрации.Предупреждение Тогда
			Стр_ТЗ.НомерРисунка = 1;
		ИначеЕсли Стр_ТЗ.Уровень = УровеньЖурналаРегистрации.Ошибка Тогда
			Стр_ТЗ.НомерРисунка = 2;
		КонецЕсли;
		Стр_ТЗ.Пользователь = Стр_ТЗ.ИмяПользователя;
		Если Стр_ТЗ.ИмяПользователя = "" Тогда
			Стр_ТЗ.ИмяПользователя = НСтр("ru = '<Пользователь по умолчанию>'");
		КонецЕсли;
	КонецЦикла;
	
	// Преобразование в универсальный объект
	ЗначениеВРеквизитФормы(ТЗ_События, "Журнал");
	// Показать параметры отбора
	СформироватьПредставлениеОтбора();
	
КонецПроцедуры

&НаСервере
Процедура ПреобразованиеОтбора(Отбор)
	
	Для Каждого ЭлементОтбора Из Отбор Цикл
		Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
			ПреобразованиеЭлементаОтбора(Отбор, ЭлементОтбора);
		ИначеЕсли ВРег(ЭлементОтбора.Ключ) = ВРег("Транзакция") Тогда
			Если Найти(ЭлементОтбора.Значение, "(") = 0 Тогда
				Отбор.Вставить(ЭлементОтбора.Ключ, "(" + ЭлементОтбора.Значение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПреобразованиеЭлементаОтбора(Отбор, ЭлементОтбора)
	
	// Эта процедура вызывается, если элемент отбора является списком значений,
	// в отборе же должен быть массив значений. Преобразуем список в массив.
	НовоеЗначение = Новый Массив;
	
	Для Каждого ЗначениеИзСписка Из ЭлементОтбора.Значение Цикл
		Если ВРег(ЭлементОтбора.Ключ) = ВРег("Уровень") Тогда
			// Уровни сообщений представлены строкой, требуется преобразование в значение перечисления
			НовоеЗначение.Добавить(Обработки.ЖурналРегистрации.УровеньЖурналаРегистрацииЗначениеПоИмени(ЗначениеИзСписка.Значение));
		ИначеЕсли ВРег(ЭлементОтбора.Ключ) = ВРег("СтатусТранзакции") Тогда
			// Статусы транзакций представлены строкой, требуется преобразование в значение перечисления
			НовоеЗначение.Добавить(Обработки.ЖурналРегистрации.СтатусТранзакцииЗаписиЖурналаРегистрацииЗначениеПоИмени(ЗначениеИзСписка.Значение));
		Иначе
			НовоеЗначение.Добавить(ЗначениеИзСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Отбор.Вставить(ЭлементОтбора.Ключ, НовоеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеОтбора()

	ПредставлениеОтбора = "";
	// Интервал
	ДатаНачалаИнтервала    = Неопределено;
	ДатаОкончанияИнтервала = Неопределено;
	Если Не ОтборЖурналаРегистрации.Свойство("ДатаНачала", ДатаНачалаИнтервала) Или
		 ДатаНачалаИнтервала = Неопределено Тогда 
		ДатаНачалаИнтервала    = '00010101000000';
	КонецЕсли;
	Если Не ОтборЖурналаРегистрации.Свойство("ДатаОкончания", ДатаОкончанияИнтервала) Или
		 ДатаОкончанияИнтервала = Неопределено Тогда 
		ДатаОкончанияИнтервала = '00010101000000';
	КонецЕсли;
	Если Не (ДатаНачалаИнтервала = '00010101000000' И ДатаОкончанияИнтервала = '00010101000000') Тогда
		ПредставлениеОтбора = ПредставлениеПериода(ДатаНачалаИнтервала, ДатаОкончанияИнтервала);
	КонецЕсли;
	
	ДобавитьОграничениеВПредставлениеОтбора(ПредставлениеОтбора, "Пользователь");
	ДобавитьОграничениеВПредставлениеОтбора(ПредставлениеОтбора, "Событие");
	
	// Остальные ограничения указываем просто по представлением, без указания значений ограничения
	Для Каждого ЭлементОтбора Из ОтборЖурналаРегистрации Цикл
		ИмяОграничения = ЭлементОтбора.Ключ;
		Если ВРег(ИмяОграничения) = ВРег("ДатаНачала") 
				Или ВРег(ИмяОграничения) = ВРег("ДатаОкончания") 
				Или ВРег(ИмяОграничения) = ВРег("Пользователь")
				Или ВРег(ИмяОграничения) = ВРег("Событие") Тогда
			Продолжить; // Интервал и пользователя уже выводили
		КонецЕсли;
		
		// Для некоторых ограничений меняем представление
		Если ВРег(ИмяОграничения) = ВРег("ИмяПриложения") Тогда
			ИмяОграничения = НСтр("ru = 'Приложение'");
			
		ИначеЕсли ВРег(ИмяОграничения) = ВРег("СтатусТранзакции") Тогда
			ИмяОграничения = НСтр("ru = 'Статус транзакции'");
			
		ИначеЕсли ВРег(ИмяОграничения) = ВРег("ПредставлениеДанных") Тогда
			ИмяОграничения = НСтр("ru = 'Представление данных'");
			
		ИначеЕсли ВРег(ИмяОграничения) = ВРег("РабочийСервер") Тогда
			ИмяОграничения = НСтр("ru = 'Рабочий сервер'");
			
		ИначеЕсли ВРег(ИмяОграничения) = ВРег("ОсновнойIPПорт") Тогда
			ИмяОграничения = НСтр("ru = 'Основной IP порт'");
			
		ИначеЕсли ВРег(ИмяОграничения) = ВРег("ВспомогательныйIPПорт") Тогда
			ИмяОграничения = НСтр("ru = 'Вспомогательный IP порт'");
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПредставлениеОтбора) Тогда 
			ПредставлениеОтбора = ПредставлениеОтбора + "; ";
		КонецЕсли;
		ПредставлениеОтбора = ПредставлениеОтбора + ИмяОграничения;
	КонецЦикла;
	
	Если ПустаяСтрока(ПредставлениеОтбора) Тогда
		ПредставлениеОтбора = НСтр("ru = 'Не установлен'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОграничениеВПредставлениеОтбора(ПредставлениеОтбора, ИмяОграничения)
	
	СписокОграничений = "";
	Ограничение = "";
	
	Если ОтборЖурналаРегистрации.Свойство(ИмяОграничения, СписокОграничений) Тогда
		Для Каждого ЭлементСписка Из СписокОграничений Цикл
			Если Не ПустаяСтрока(Ограничение) Тогда
				Ограничение = Ограничение + ", ";
			КонецЕсли;
			Ограничение = Ограничение + ЭлементСписка.Представление;
		КонецЦикла;
	
		Если Не ПустаяСтрока(ПредставлениеОтбора) Тогда 
			ПредставлениеОтбора = ПредставлениеОтбора + "; ";
		КонецЕсли;
	
		ПредставлениеОтбора = ПредставлениеОтбора + Ограничение;
	
	КонецЕсли;
	
КонецПроцедуры
