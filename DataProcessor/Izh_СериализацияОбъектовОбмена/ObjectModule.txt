
Перем ПравилаВыгрузки;
Перем Менеджеры;

Функция ПравилаВыгрузки()
	
	Если ПравилаВыгрузки = Неопределено Тогда
	
		ПравилаВыгрузки = Новый Соответствие();
		
		ВыгружатьКод = МассивТипов(
			"Номенклатура, Контрагенты, СтруктурныеЕдиницы, Организации",
			"СправочникСсылка"
		);
		ВыгружатьНаименование = МассивТипов(
			"ЕдиницыИзмерения",
			"СправочникСсылка"
		);
		
		Реквизиты = Новый Структура(
			"Код, Наименование",
			ВыгружатьКод, ВыгружатьНаименование
		);
		
		Для каждого Реквизит Из Реквизиты Цикл
			Для каждого ТипЗначения Из Реквизит.Значение Цикл
				
				СвойстваПоиска = ПравилаВыгрузки[ТипЗначения];
				
				Если СвойстваПоиска = Неопределено Тогда
					СвойстваПоиска = Новый Структура();
					ПравилаВыгрузки.Вставить(ТипЗначения, СвойстваПоиска);
				КонецЕсли;
				
				СвойстваПоиска.Вставить(Реквизит.Ключ, Истина);
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ПравилаВыгрузки;
	
КонецФункции

Функция Менеджер(Знач ТипЗначения)
	
	Если Менеджеры = Неопределено Тогда
		Менеджеры = Новый Соответствие();
	КонецЕсли;
	
	Менеджер = Менеджеры[ТипЗначения];
	Если Менеджер = Неопределено Тогда
		
		ТипыСправочники = Izh_ОбщегоНазначенияКлиентСервер.ЗначенияВМассиве(
			ОбщегоНазначения.ИмяТипаСправочники(),
			ОбщегоНазначения.ИмяТипаПланыВидовХарактеристик()
		);
		ТипыДокументы = Izh_ОбщегоНазначенияКлиентСервер.ЗначенияВМассиве(
			ОбщегоНазначения.ИмяТипаДокументы()
		);
		
		ОбъектМД = Метаданные.НайтиПоТипу(ТипЗначения);
		ИмяТипа = ОбщегоНазначения.ИмяБазовогоТипаПоОбъектуМетаданных(ОбъектМД);
		ЭтоСправочник = ТипыСправочники.Найти(ИмяТипа) <> Неопределено;
		ЭтоДокумент = ТипыДокументы.Найти(ИмяТипа) <> Неопределено;
		Менеджер = Вычислить(ИмяТипа + "." + ОбъектМД.Имя);
		ТипСсылки = ТипЗнч(Менеджер.ПустаяСсылка());
		СтрокаПоиска = "ВЫБРАТЬ Ссылка ИЗ " + ОбъектМД.ПолноеИмя() + " ГДЕ ";
		//ИмяТипа = ОбщегоНазначения.ВидОбъектаПоТипу(ТипСсылки);
		
		Менеджер = Новый Структура(
			"Имя, ИмяТипа, ТипСсылки, Менеджер, Метаданные, ЭтоСправочник, ЭтоДокумент, СтрокаПоиска",
			ОбъектМД.Имя,
			ИмяТипа,
			ТипСсылки,
			Менеджер,
			ОбъектМД,
			ЭтоСправочник,
			ЭтоДокумент, 
			СтрокаПоиска
		);
		
		Менеджеры.Вставить(ТипЗначения, Менеджер);
		Менеджеры.Вставить(ТипСсылки, Менеджер);
		
	КонецЕсли;
	
	Возврат Менеджер;
	
КонецФункции

Функция МассивТипов(Знач ИменаТипов, Знач ИмяМенеджера)
	
	Возврат Izh_СтроковыеФункцииКлиентСервер.МассивТипов(ИменаТипов, ИмяМенеджера);
	
КонецФункции


Функция ВыполнитьВыгрузкуОбъекта(Знач Объект) Экспорт 
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриложениеПоАлкоголю.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	Данные = ВыгрузитьОбъектВСтруктуру(Объект);
	
	Запись = Новый ЗаписьXML();
	Запись.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(Запись, Данные);
	Данные = Запись.Закрыть();
	
	Возврат Данные;
	
КонецФункции

Функция ВыполнитьЗагрузкуОбъекта(Знач ОбъектXDTO, Пакет) Экспорт 
	
	Данные = СериализаторXDTO.ПрочитатьXDTO(ОбъектXDTO);
	Объект = ПрочитатьОбъект(Данные);
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриложениеПоАлкоголю.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	ПараметрыОбъекта = Объект.ДополнительныеСвойства.ПараметрыОбъекта;
	Менеджер = Менеджер(ПараметрыОбъекта.Тип);
	
	Если Менеджер.ЭтоДокумент И НЕ ЗначениеЗаполнено(Объект.Номер) Тогда
		Объект.УстановитьНовыйНомер();
	КонецЕсли;
	
	УстановитьОбменДаннымиЗагрузка(Объект);
	
	Если Менеджер.ЭтоДокумент Тогда
		
		Если Объект.Проведен Тогда
			РежимЗаписи = РежимЗаписиДокумента.Проведение;
			Объект.ПометкаУдаления = Ложь;
		Иначе
			МожноПроводить = Объект.Метаданные().Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить;
			РежимЗаписи = ?(
				МожноПроводить И НЕ Объект.ЭтоНовый() И Объект.Ссылка.Проведен, 
				РежимЗаписиДокумента.ОтменаПроведения, 
				РежимЗаписиДокумента.Запись
			);
		КонецЕсли;
		
		Если РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
			УстановитьОбменДаннымиЗагрузка(Объект, Ложь);
		КонецЕсли;
		
		Объект.Записать(РежимЗаписи);
		
	Иначе
		
		Объект.Записать();
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура УстановитьОбменДаннымиЗагрузка(Объект, Значение = Истина)
	
	Izh_ОбменДанными.УстановитьОбменДаннымиЗагрузка(Объект, Значение, УзелОбменаЗагрузкаДанных);
	
КонецПроцедуры


Функция ВыгрузитьОбъектВСтруктуру(Знач Объект)
	
	// !!!! efim
	#Если _ Тогда
		Объект = Документы.ПриложениеПоАлкоголю.СоздатьДокумент();
	#КонецЕсли
	// !!!!
	
	СтруктураОбъекта = Новый Структура();
	
	Менеджер = Менеджер(ТипЗнч(Объект));
	МетаОбъект = Менеджер.Метаданные;
	
	Попытка
		Ссылка = ?(
			Объект.ЭтоНовый(), 
			Объект.ПолучитьСсылкуНового(), 
			Объект.Ссылка
		);
	Исключение
		Ссылка = Объект.Ссылка;
	КонецПопытки;
	
	Ссылка = Новый Структура(
		"Тип, Значение",
		Менеджер.ТипСсылки, Ссылка
	);
	СвойстваСсылки = "ЭтоГруппа, Проведен, ПометкаУдаления";
	
	НеВыгружатьЭтиСвойства = "";
	Если Менеджер.ЭтоДокумент Тогда
		НеВыгружатьЭтиСвойства = НеВыгружатьЭтиСвойства 
			+ ", Номер";
	КонецЕсли;
	
	ВыгрузитьРеквизитыВСтруктуру(СтруктураОбъекта, Объект, МетаОбъект.СтандартныеРеквизиты,, "Ссылка, " + СвойстваСсылки + НеВыгружатьЭтиСвойства);
	ВыгрузитьРеквизитыВСтруктуру(СтруктураОбъекта, Объект, МетаОбъект.Реквизиты);
	ВыгрузитьТабличныеЧастиВСтруктуру(СтруктураОбъекта, Объект, МетаОбъект.ТабличныеЧасти);
	
	СвойстваСсылки = Новый Структура(СвойстваСсылки);
	ЗаполнитьЗначенияСвойств(СвойстваСсылки, Объект);
	Для каждого Свойство Из СвойстваСсылки Цикл
		Если Свойство.Значение <> Неопределено Тогда
			Ссылка.Вставить(Свойство.Ключ, Свойство.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураОбъекта.Вставить("Ссылка", Ссылка);	
	
	Возврат СтруктураОбъекта;
	
КонецФункции

Процедура ВыгрузитьТабличныеЧастиВСтруктуру(СтруктураОбъекта, Знач Объект, Знач ТабличныеЧасти)
	
	Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
		
		ТЧ = Объект[ТабличнаяЧасть.Имя].Выгрузить();
		// !!!! efim
		#Если _ Тогда
			ТЧ = Новый ТаблицаЗначений;
		#КонецЕсли
		// !!!!
		Если ТЧ.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого СтрокаТЧ Из ТЧ Цикл
			
			СтруктураСтроки = Новый Структура();
			ВыгрузитьРеквизитыВСтруктуру(СтруктураСтроки, СтрокаТЧ, ТабличнаяЧасть.Реквизиты);
			
			НовыеТипы = Новый Структура();
			Для каждого Колонка Из ТЧ.Колонки Цикл
				
				Если НЕ СтруктураСтроки.Свойство(Колонка.Имя) Тогда
					Продолжить;
				КонецЕсли;
				
				Значение = СтруктураСтроки[Колонка.Имя];
				Если Значение = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ТипЗначения = ТипЗнч(Значение);
				Если НЕ Колонка.ТипЗначения.СодержитТип(ТипЗначения) Тогда
					НовыеТипы.Вставить(Колонка.Имя, ТипЗначения);
				КонецЕсли;
				
			КонецЦикла;
			Izh_ОбработкаКоллекций.ДобавитьКолонки(ТЧ, НовыеТипы);
			
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтруктураСтроки);
			
		КонецЦикла;
		
		СтруктураОбъекта.Вставить(ТабличнаяЧасть.Имя, ТЧ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыгрузитьРеквизитыВСтруктуру(СтруктураОбъекта, Знач Объект, Знач Реквизиты, Знач Выгружать = "", Знач НеВыгружать = "")
	
	ОбработатьАргумент(Выгружать);
	ОбработатьАргумент(НеВыгружать);
	
	Для каждого Реквизит Из Реквизиты Цикл
		
		Если ЗначениеЗаполнено(Выгружать) 
			И НЕ Выгружать.Свойство(Реквизит.Имя) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(НеВыгружать)
			И НеВыгружать.Свойство(Реквизит.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		Значение = ПолучитьЗначениеРеквизита(Объект, Реквизит.Имя);
		Если ЗначениеЗаполнено(Значение) Тогда
			СтруктураОбъекта.Вставить(Реквизит.Имя, Значение);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЗначениеРеквизита(Знач Объект, Знач ИмяРеквизита)
	
	Значение = Объект[ИмяРеквизита];
	ТипЗначения = ТипЗнч(Значение);
	
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СвойстваПоиска = ПравилаВыгрузки()[ТипЗначения];
	Если СвойстваПоиска <> Неопределено Тогда
		
		ЗначениеРеквизита = Значение;
		Значение = Новый Структура("Тип", ТипЗначения);
		
		Для каждого Свойство Из СвойстваПоиска Цикл
			Значение.Вставить(Свойство.Ключ, ЗначениеРеквизита[Свойство.Ключ])
		КонецЦикла;
		
		Менеджер = Менеджер(ТипЗнч(ЗначениеРеквизита));
		Если Менеджер.ЭтоСправочник Тогда
			Если Менеджер.Метаданные.Владельцы.Количество() > 0 Тогда
				Значение.Вставить(
					"Владелец", 
					ПолучитьЗначениеРеквизита(ЗначениеРеквизита, "Владелец")
				);
			КонецЕсли; 
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции


Функция ПрочитатьОбъект(Знач Данные)
	
	// !!!! efim
	#Если _ Тогда
		Данные = Новый Структура();
	#КонецЕсли
	// !!!!
	
	Менеджер = Менеджер(Данные.Ссылка.Тип);
	Ссылка = Данные.Ссылка.Значение;
	// !!!! efim
	#Если _ Тогда
		Ссылка = Документы.ПриложениеПоАлкоголю.ПустаяСсылка();
	#КонецЕсли
	// !!!!
	
	Объект = Ссылка.ПолучитьОбъект();
	Если Объект = Неопределено Тогда
		
		Если Менеджер.ЭтоДокумент Тогда
			Объект = Менеджер.Менеджер.СоздатьДокумент();
		ИначеЕсли Менеджер.ЭтоСправочник Тогда
			ЭтоГруппа = Неопределено;
			Если Данные.Ссылка.Свойство("ЭтоГруппа", ЭтоГруппа) И ЭтоГруппа Тогда
				Объект = Менеджер.Менеджер.СоздатьГруппу();
			Иначе
				Объект = Менеджер.Менеджер.СоздатьЭлемент();
			КонецЕсли;
		КонецЕсли;
	
		// !!!! efim
		#Если _ Тогда
			Объект = Ссылка.ПолучитьОбъект();
		#КонецЕсли
		// !!!!
		
		Объект.УстановитьСсылкуНового(Ссылка);
		
	КонецЕсли;
	
	ПрочитатьСвойства(Объект, Данные, "Ссылка");
	ПрочитатьСвойства(Объект, Данные.Ссылка, "Тип, Значение");
	
	Объект.ДополнительныеСвойства.Вставить("ПараметрыОбъекта", Данные.Ссылка);
	
	Возврат Объект;
	
КонецФункции

Процедура ПрочитатьСвойства(Объект, Знач Свойства, Знач Пропустить = "")
	
	ОбработатьАргумент(Пропустить);
	
	Для каждого Свойство Из Свойства Цикл
		
		Если ЗначениеЗаполнено(Пропустить) И Пропустить.Свойство(Свойство.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеРеквизита = ПрочитатьЗначениеСвойства(Свойство.Значение);
		Если ТипЗнч(ЗначениеРеквизита) = Тип("ТаблицаЗначений") Тогда
			Объект[Свойство.Ключ].Загрузить(ЗначениеРеквизита);
		Иначе
			Объект[Свойство.Ключ] = ЗначениеРеквизита;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПрочитатьЗначениеСвойства(Знач Свойство)
	
	Если ТипЗнч(Свойство) = Тип("ТаблицаЗначений") Тогда
		Возврат ПрочитатьТабличнуюЧасть(Свойство);
	ИначеЕсли ТипЗнч(Свойство) <> Тип("Структура") Тогда
		Возврат Свойство;
	КонецЕсли;
	
	Менеджер = Менеджер(Свойство.Тип);
	ТипЗначения = Менеджер.ТипСсылки;
	СтрокаПоиска = Менеджер.СтрокаПоиска;
	
	Запрос = Новый Запрос();
	
	ШаблонПоиск = "%1 = &%1";
	Соединитель = " И ";
	
	СвойстваПоиска = Новый Массив();
	Для каждого Реквизит Из Свойство Цикл
		
		Если Реквизит.Ключ = "Тип" Тогда
			Продолжить;
		КонецЕсли;
		
		СвойстваПоиска.Добавить(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПоиск, Реквизит.Ключ)
		);
		Запрос.УстановитьПараметр(Реквизит.Ключ, ПрочитатьЗначениеСвойства(Реквизит.Значение));
		
	КонецЦикла;
	СвойстваПоиска = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(СвойстваПоиска, Соединитель);
	СтрокаПоиска = СтрокаПоиска + СвойстваПоиска;
	
	Запрос.Текст = СтрокаПоиска;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПрочитатьТабличнуюЧасть(Знач Таблица)
	
	// !!!! efim
	#Если _ Тогда
		Таблица = Новый ТаблицаЗначений();
	#КонецЕсли
	// !!!!
	Таблица = Таблица.Скопировать();
	
	Для каждого СтрокаТЧ Из Таблица Цикл
		Для каждого Колонка Из Таблица.Колонки Цикл
			Значение = СтрокаТЧ[Колонка.Имя];
			Если ТипЗнч(Значение) = Тип("Структура") Тогда
				Значение = ПрочитатьЗначениеСвойства(Значение);
				СтрокаТЧ[Колонка.Имя] = Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции


Процедура ОбработатьАргумент(Аргумент)
	
	Если НЕ ЗначениеЗаполнено(Аргумент) Тогда
		Аргумент = Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(Аргумент) = Тип("Строка") Тогда
		МассивСтрок = Izh_СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Аргумент,, Истина);
		Аргумент = Новый Структура();
		Для каждого Ключ Из МассивСтрок Цикл
			Аргумент.Вставить(Ключ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
