&НаКлиенте
Перем идФормы;
/////////////////////////////////////////////////////////////
&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

&НаСервере
Процедура СохранитьПараметрыПодбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора("РаботаСВесами",ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция ПолучитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора("РаботаСВесами",этаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
Процедура УстановитьПараметры()
	
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("ТекущееВремя", ТекущаяДата());
	ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
КонецПроцедуры

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Весы = Элементы.ДеревоВесов.ТекущиеДанные.Весы;
	Для каждого Эл Из Элемент.ВыделенныеСтроки Цикл
		ДобавитьВСписокВесовыхТоваров(Весы, Эл);
	КонецЦикла;
	ОбновитьСпискиНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура НайтиТоварВСпискеПоШтрихкоду(Команда)
	
	ШК = "";
	Если Не ВвестиЗначение(ШК, НСтр("ru = 'Введите штрихкод'")) Тогда
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(ШК) Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСоСканеромШККлиент.ОбработкаШтрихКодаВСпискеНоменклатуры(ШК, ПодборНоменклатуры);
	
КонецПроцедуры
/////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОчиститьПросроченнуюДатуСрокаХранения();
	
	Если СтруктурнаяЕдиница.Пустая() Тогда
		Если ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница.ЭтоГруппа Тогда
			Элементы.СтруктурнаяЕдиница.Видимость = Истина;
		Иначе
			СтруктурнаяЕдиница = ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница;
			Элементы.СтруктурнаяЕдиница.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Объект.ВыполняемаяЗадача = Параметры.ВыполняемаяЗадача;
	ЗаполнитьСписокВесов();
	ЗаполнитьСписокВесовыхТоваров();
	//ЗаполнитьСписокНеПривязанныхТоваров();
	ЗаполнитьСписокДиапазонов();
	
	Если Не Объект.ВыполняемаяЗадача.Пустая() Тогда
		Если ТипЗнч(Объект.ВыполняемаяЗадача.БизнесПроцесс) = Тип("БизнесПроцессСсылка.НоваяНоменклатура") Тогда
			Если Объект.ВыполняемаяЗадача.БизнесПроцесс.Основание.Транзакционный Тогда
				ТранзакционныйТовар = Объект.ВыполняемаяЗадача.БизнесПроцесс.Основание;
			Иначе
				ТранзакционныйТовар = Объект.ВыполняемаяЗадача.БизнесПроцесс.Основание.Родитель;
			КонецЕсли;
			ПодборНоменклатуры.Отбор.Элементы.Очистить();
			Отбор = ПодборНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Отбор.Использование = Истина;
			Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
			Отбор.ПравоеЗначение = ТранзакционныйТовар;
		КонецЕсли;
	КонецЕсли;
	
	//{ ВетровИА 2014-12-30 Наряд №000137469 }
	Если ЗначениеЗаполнено(Параметры.ФильтрПоНоменклатуре) Тогда
		ПодборНоменклатуры.Отбор.Элементы.Очистить();
		Отбор = ПодборНоменклатуры.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.Использование = Истина;
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		Отбор.ПравоеЗначение = Параметры.ФильтрПоНоменклатуре;
	КонецЕсли;	
	//{ ВетровИА 2014-12-30 Наряд №000137469 }
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВесыДляОтбора(ЭлементВесы)
	Если НЕ ЭлементВесы.Родитель.Пустая() Тогда
		КореньВесов = ЭлементВесы.Родитель; 
	Иначе
		КореньВесов = ЭлементВесы.Весы;
	КонецЕсли;
	
	Возврат КореньВесов;
КонецФункции

&НаКлиенте
Процедура ДеревоВесовПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ЗначениеОтбора = "";
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Весы", Неопределено);
	Иначе
		ЗначениеОтбора = ПолучитьВесыДляОтбора(Элемент.ТекущиеДанные);
		ПодборНоменклатуры.Параметры.УстановитьЗначениеПараметра("Весы", ЗначениеОтбора);
	КонецЕсли;
	СтрОтбора = Новый ФиксированнаяСтруктура("Весы", ЗначениеОтбора);
	Элементы.СписокВесовыхТоваров.ОтборСтрок = СтрОтбора;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаВыполнить()
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	идФормы = новый УникальныйИдентификатор;
	УстановитьПараметры();
	ЗагрузитьНастройкиПодбора();
	
	//{ ВетровИА 2014-12-30 Наряд №000137469 }
	Если ЗначениеЗаполнено(Параметры.ФильтрПоНоменклатуре) Тогда
		обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);
	Иначе
		обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);
	КонецЕсли;	
	//{ ВетровИА 2014-12-30 Наряд №000137469 }	
	
КонецПроцедуры

&НаСервере
//Получает данные для выгрузки в весы
//Параметры:
//	Весы - весы, для которых формируется данные (СправочникСсылка.Весы)
//	маНоменклатура - массив товаров (СправочникСсылка.Номенклатура)
//Возвращаемое значение:
//	выборка запроса с данными
Функция ЗаполнитьТаблицуДляВыгрузки(Весы, маНоменклатура)
	
	пвхСрокХранения = ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаСрокХранения));
	пвхПроизводитель= ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаПроизводитель2));
	ТекстЗапроса = 
	// {ВетровИА 2015-07-25 Обращение 0000133748 
	"ВЫБРАТЬ
	|	А.Номенклатура,
	|	А.ДатаПроизводства,
	|	А.Весы
	|ПОМЕСТИТЬ ВТСписокВесовыхТоваров
	|ИЗ
	|	&тзСписокВесовыхТоваров КАК А
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВесовойТовар.ТранзакционныйТовар.Код,
	|	ВесовойТовар.Код КАК Код,
	|	ВесовойТовар.ПрефиксPLU,
	|	ВесовойТовар.НоменклатураКод КАК ШтрихКод,
	|	ВесовойТовар.НоменклатураНаименование,
	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизитыСрокХранения.Значение, 0) КАК СрокХранения,
	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизитыпвхПроизводитель.Значение, """") КАК Производитель,
	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизитыСостав.Значение, """") КАК Состав,
	|	0 КАК ВесТары,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	ВесовойТовар.ТранзакционныйТовар.ТипТовара КАК ТипТовара,
	|	ВесовойТовар.СрокГодностиДо КАК СрокГодностиДо,
	|	ВТСписокВесовыхТоваров.ДатаПроизводства,
	|	ВесовойТовар.Номенклатура,
	|	ВесовойТовар.ТранслироватьДатуПроизводства
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВесовойТовар.Код КАК Код,
	|		ВЫБОР
	|			КОГДА тВесы.ВыгружатьПрефиксШК
	|				ТОГДА тНоменклатура.ПрефиксPLU
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК ПрефиксPLU,
	|		тНоменклатура.Код КАК НоменклатураКод,
	|		ВЫБОР
	|			КОГДА тНоменклатура.Транзакционный
	|				ТОГДА тНоменклатура.Ссылка
	|			ИНАЧЕ тНоменклатура.Родитель
	|		КОНЕЦ КАК ТранзакционныйТовар,
	|		тНоменклатура.ПолноеНаименование КАК НоменклатураНаименование,
	|		ВесовойТовар.СрокГодностиДо КАК СрокГодностиДо,
	|		тВесы.РеквизитСостав КАК РеквизитСостав,
	|		ВесовойТовар.Номенклатура КАК Номенклатура,
	|		ВесовойТовар.ТранслироватьДатуПроизводства КАК ТранслироватьДатуПроизводства,
	|		тВесы.Ссылка КАК Весы
	|	ИЗ
	|		Справочник.Весы КАК тВесы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВесовойТовар КАК ВесовойТовар
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК тНоменклатура
	|				ПО ВесовойТовар.Номенклатура = тНоменклатура.Ссылка
	|			ПО (ВЫБОР
	|					КОГДА тВесы.ВыгружатьТоварыТолькоЭтихВесов = ИСТИНА
	|						ТОГДА тВесы.Ссылка = ВесовойТовар.Владелец
	|					ИНАЧЕ тВесы.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ тВесы.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ тВесы.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ тВесы.Родитель.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ тВесы.Родитель.Родитель.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|				КОНЕЦ)
	|	ГДЕ
	|		тВесы.Ссылка = &Весы
	|		И тВесы.ПометкаУдаления = ЛОЖЬ
	|		И тНоменклатура.Ссылка ЕСТЬ НЕ NULL 
	|		И ВесовойТовар.ПометкаУдаления = ЛОЖЬ
	|		И ВесовойТовар.Номенклатура В(&Номенклатура)) КАК ВесовойТовар
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЕСТЬNULL(ЦеныПоАкции.Номенклатура, ЦеныНоменклатурыСрезПоследних.Номенклатура) КАК Номенклатура,
	|			ЕСТЬNULL(ЦеныПоАкции.ЕдиницаИзмерения, ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|			ЕСТЬNULL(ЦеныПоАкции.ЦенаПоАкции, ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница)) КАК ЦеныНоменклатурыСрезПоследних
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|					ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|					МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID
	|				ИЗ
	|					РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница)) КАК ЦеныНоменклатурыСрезПоследних
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|							ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|							ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|							МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Период) КАК Период
	|						ИЗ
	|							РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница)) КАК ЦеныНоменклатурыСрезПоследних
	|						ГДЕ
	|							ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
	|						
	|						СГРУППИРОВАТЬ ПО
	|							ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница,
	|							ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|							ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
	|						ПО ЦеныНоменклатурыСрезПоследних.Период = ВложенныйЗапрос.Период
	|							И ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница = ВложенныйЗапрос.СтруктурнаяЕдиница
	|							И ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
	|							И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
	|				ГДЕ
	|					ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница,
	|					ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
	|				ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
	|					И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
	|					И ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница = ВложенныйЗапрос.СтруктурнаяЕдиница
	|					И ЦеныНоменклатурыСрезПоследних.ID = ВложенныйЗапрос.ID
	|				ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ВложенныйЗАпрос2.Номенклатура КАК Номенклатура,
	|					ВложенныйЗАпрос2.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|					ВложенныйЗАпрос2.Цена КАК ЦенаПоАкции,
	|					ВложенныйЗАпрос2.ДатаНачала КАК ДатаНачалаАкции,
	|					ВложенныйЗАпрос2.ДатаОкончания КАК ДатаОкончанияАкции,
	|					ВложенныйЗАпрос2.Название КАК НазваниеАкции
	|				ИЗ
	|					(ВЫБРАТЬ
	|						ПромоАкцииНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|						ПромоАкцииНоменклатура.Номенклатура КАК Номенклатура,
	|						МИНИМУМ(ПромоАкцииНоменклатура.Цена) КАК Цена
	|					ИЗ
	|						РегистрСведений.ПромоАкции КАК ПромоАкции
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПромоАкцииНоменклатура КАК ПромоАкцииНоменклатура
	|							ПО ПромоАкции.СтруктурнаяЕдиница = ПромоАкцииНоменклатура.СтруктурнаяЕдиница
	|								И ПромоАкции.IDПромо = ПромоАкцииНоменклатура.IDПромо
	|								И ПромоАкции.IDКомпоненты = ПромоАкцииНоменклатура.IDКомпоненты
	|								И ПромоАкции.IDГруппы = ПромоАкцииНоменклатура.IDГруппы
	|								И ПромоАкции.IDДеталей = ПромоАкцииНоменклатура.IDДеталей
	|								И (НАЧАЛОПЕРИОДА(ПромоАкции.ДатаНачала, ДЕНЬ) <= &ТекущееВремя)
	|								И (КОНЕЦПЕРИОДА(ПромоАкции.ДатаОкончания, ДЕНЬ) >= &ТекущееВремя)
	|								И (ПромоАкции.ФлагОкончания = ЛОЖЬ)
	|								И (ПромоАкции.СтруктурнаяЕдиница = &СтруктурнаяЕдиница)
	|					ГДЕ
	|						ПромоАкцииНоменклатура.Цена <> 0
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ПромоАкцииНоменклатура.СтруктурнаяЕдиница,
	|						ПромоАкцииНоменклатура.Номенклатура) КАК ВложенныйЗАпрос
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							ПромоАкции.ДатаНачала КАК ДатаНачала,
	|							ПромоАкции.ДатаОкончания КАК ДатаОкончания,
	|							ПромоАкции.Название КАК Название,
	|							ПромоАкцииНоменклатура.Номенклатура КАК Номенклатура,
	|							ПромоАкцииНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|							ПромоАкцииНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|							ПромоАкцииНоменклатура.Цена КАК Цена
	|						ИЗ
	|							РегистрСведений.ПромоАкции КАК ПромоАкции
	|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПромоАкцииНоменклатура КАК ПромоАкцииНоменклатура
	|								ПО ПромоАкции.СтруктурнаяЕдиница = ПромоАкцииНоменклатура.СтруктурнаяЕдиница
	|									И ПромоАкции.IDПромо = ПромоАкцииНоменклатура.IDПромо
	|									И ПромоАкции.IDКомпоненты = ПромоАкцииНоменклатура.IDКомпоненты
	|									И ПромоАкции.IDГруппы = ПромоАкцииНоменклатура.IDГруппы
	|									И ПромоАкции.IDДеталей = ПромоАкцииНоменклатура.IDДеталей
	|									И (НАЧАЛОПЕРИОДА(ПромоАкции.ДатаНачала, ДЕНЬ) <= &ТекущееВремя)
	|									И (КОНЕЦПЕРИОДА(ПромоАкции.ДатаОкончания, ДЕНЬ) >= &ТекущееВремя)
	|									И (ПромоАкции.ФлагОкончания = ЛОЖЬ)
	|									И (ПромоАкции.СтруктурнаяЕдиница = &СтруктурнаяЕдиница)
	|						ГДЕ
	|							ПромоАкцииНоменклатура.Цена <> 0) КАК ВложенныйЗАпрос2
	|						ПО ВложенныйЗАпрос.Номенклатура = ВложенныйЗАпрос2.Номенклатура
	|							И ВложенныйЗАпрос.СтруктурнаяЕдиница = ВложенныйЗАпрос2.СтруктурнаяЕдиница
	|							И ВложенныйЗАпрос.Цена = ВложенныйЗАпрос2.Цена) КАК ЦеныПоАкции
	|				ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ЦеныПоАкции.Номенклатура
	|					И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ЦеныПоАкции.ЕдиницаИзмерения) КАК ЦеныНоменклатуры
	|		ПО ВесовойТовар.ТранзакционныйТовар = ЦеныНоменклатуры.Номенклатура
	|			И ВесовойТовар.ТранзакционныйТовар.БазоваяЕдиницаИзмерения = ЦеныНоменклатуры.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизитыСрокХранения
	|		ПО ВесовойТовар.ТранзакционныйТовар = НоменклатураДополнительныеРеквизитыСрокХранения.Ссылка
	|			И (НоменклатураДополнительныеРеквизитыСрокХранения.Свойство = &СрокХранения)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизитыпвхПроизводитель
	|		ПО ВесовойТовар.ТранзакционныйТовар = НоменклатураДополнительныеРеквизитыпвхПроизводитель.Ссылка
	|			И (НоменклатураДополнительныеРеквизитыпвхПроизводитель.Свойство = &пвхПроизводитель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизитыСостав
	|		ПО ВесовойТовар.РеквизитСостав = НоменклатураДополнительныеРеквизитыСостав.Свойство
	|			И ВесовойТовар.ТранзакционныйТовар = НоменклатураДополнительныеРеквизитыСостав.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСписокВесовыхТоваров КАК ВТСписокВесовыхТоваров
	|		ПО ВесовойТовар.Номенклатура = ВТСписокВесовыхТоваров.Номенклатура
	|			И ВесовойТовар.Весы = ВТСписокВесовыхТоваров.Весы";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Весы", Весы);
	Запрос.УстановитьПараметр("Номенклатура", маНоменклатура);
	Запрос.УстановитьПараметр("СрокХранения", пвхСрокХранения);
	Запрос.УстановитьПараметр("пвхПроизводитель", пвхПроизводитель);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("ТекущееВремя", ТекущаяДата());
	Запрос.УстановитьПараметр("тзСписокВесовыхТоваров", ДанныеФормыВЗначение(СписокВесовыхТоваров, Тип("ТаблицаЗначений")));
	// ВетровИА 2015-07-25 Обращение 0000133748} 
	
	ТаблицаДляВыгрузки.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Возврат Истина;
КонецФункции

&НаКлиенте
//Выгружает товары в весы
//Параметры:
//	маТоварыПоВесам - Массив структур, каждый элемент массива определяет весы и список выгружаемых товаров для них.
//	Элемент массива (Ключ = Значение):
//		Весы = весы (СправочникСсылка.Весы)
//		Номенклатура = массив ссылок на товары (массив СправочникСсылка.Номенклатура)
Функция ЗагрузкаТовараВВесы(маТоварыПоВесам, Удаление = Ложь) Экспорт
	Если Удаление тогда
		Предупреждение("Не поддерживается !");
		возврат Ложь;
	КонецЕсли;
	
	ПрефиксШтучногоШК = ПолучитьПрефиксШтучногоШК();
	
	Для Каждого стВесы Из маТоварыПоВесам Цикл
		//ДобавлялиИнгредиенты = Ложь;	теперь пока всегда добавляем
		Весы = стВесы.Весы;
		идВесов = ПолучитьИдентификаторВесов(весы);
		
		
		НаименованиеВесов = СокрЛП(Весы);
		маНоменклатура = стВесы.Номенклатура;
		Если Удаление = Ложь Тогда
			ЗаполнитьТаблицуДляВыгрузки(стВесы.Родитель, маНоменклатура);
		Иначе
			ЗаполнитьТаблицуДляВыгрузкиУдаление(стВесы.Родитель, маНоменклатура);
		КонецЕсли;
		//КоличествоТоваровВыгрузки = ТаблицаДляВыгрузки.Количество();
		ТаблицаВыгрузкиБСП.Очистить();
		
		Для каждого Выборка Из ТаблицаДляВыгрузки Цикл			
			КодКлавиши = Выборка.Код;
			//Представление = Лев(СокрЛП(Выборка.НоменклатураНаименование), 70);
			
			Представление = Выборка.НоменклатураНаименование;
			ШтрихКод = СокрЛП(Выборка.ШтрихКод);
			
			Если СтрДлина(ШтрихКод) = 13 И Найти(ШтрихКод, ПрефиксШтучногоШК) = 1 Тогда
				ШтрихКод = Сред(ШтрихКод,7,6);
			КонецЕсли; 
			
			Если стрДлина(СокрЛП(ШтрихКод))>7 Тогда
				Сообщить("Товар "+Представление+" не выгружен, длинный штрих-код");
				Продолжить;		
			КонецЕсли; 
			
			ШтрихКод = Число(ШтрихКод);
			Цена = Выборка.Цена;
			
			Если Цена = 0 И Удаление = Ложь Тогда
				Сообщить("Товар "+Представление+" не выгружен, Цена = 0");
				Представление = "Товар удален";
			КонецЕсли;
			Если ЗначениеЗаполнено(Выборка.СрокГодностиДо) Тогда
				СрокХранения = (Выборка.СрокГодностиДо - НачалоДня(ТекущаяДата())) / 60 / 60 / 24;
				//СрокХранения = число(Формат(Год(Выборка.СрокГодностиДо), "ЧГ=0") + Месяц(Выборка.СрокГодностиДо) + Формат(День(Выборка.СрокГодностиДо), "ЧЦ=2; ЧВН=; ЧГ=0"));
			Иначе
				СрокХранения = Выборка.СрокХранения;
			КонецЕсли;
			
			Производитель = "";
			Если ЗначениеЗаполнено(Производитель) Тогда
				Производитель=Выборка.Производитель
			КонецЕсли;
			
			ВесТары = Цел(Выборка.ВесТары * 1000);
			
			// {ВетровИА 2015-07-25 Обращение 0000133748 
			Если Выборка.ДатаПроизводства <> Дата("00010101") И Выборка.ТранслироватьДатуПроизводства Тогда
				ДатаПР = "ДатаПР: " +Формат(Выборка.ДатаПроизводства, "ДФ=дд.ММ.гггг") + " ";
			Иначе
				ДатаПР = "";
			КонецЕсли;		
			СоставТовара = ДатаПР + СокрЛ(Выборка.Состав);
			// ВетровИА 2015-07-25 Обращение 0000133748 } 
			
			нстр = ТаблицаВыгрузкиБСП.Добавить();
			нстр.Код = ШтрихКод;
			нстр.PLU = КодКлавиши;
			нстр.НаименованиеПолное =Представление;
			нстр.Производитель =Производитель;
			нстр.Номенклатура =Представление;
			нстр.Цена = Цена;
			нстр.ОписаниеТовара = СоставТовара;
			нстр.СрокХранения = 7;
			
		КонецЦикла;
		
		МенеджерОборудованияКлиент.ВыгрузитьДанныеВВесыСПечатьюЭтикеток(идВесов,идФормы, ТаблицаВыгрузкиБСП, Строка(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктурнаяЕдиница,"Организация")), "Фасовщик №1");
		
	КонецЦикла;
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ВыгрузитьВыполнить()
	
	маТоварыПоВесам = ПолучитьМассивТоварыПоВесам();
	Если маТоварыПоВесам.Количество() > 0 Тогда
		ЗагрузкаТовараВВесы(маТоварыПоВесам);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИдентификаторВесов(весы)
	возврат весы.ПодключаемоеОборудование;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьмаВесы(СтрокаДерева,маВесы)
	Для Каждого Строка Из СтрокаДерева.ПолучитьЭлементы() Цикл
		Если Строка.Флаг=0  Тогда Продолжить; КонецЕсли;
		УзелДерева = Строка.ПолучитьЭлементы();
		Для Каждого СтрокаУзла из УзелДерева Цикл
			Если СтрокаУзла.Флаг = 0 Тогда Продолжить; КонецЕсли;	
			маВесы.Добавить(СтрокаУзла);
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСписокНеПривязанныхТоваров() Возврат;
	Запрос = Новый Запрос;
	ТекстОтбораПоОснованию = "";
	Если Не Объект.ВыполняемаяЗадача.Пустая() Тогда
		Если ТипЗнч(Объект.ВыполняемаяЗадача.БизнесПроцесс) = Тип("БизнесПроцессСсылка.НоваяНоменклатура") Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА Номенклатура.Транзакционный
			|			ТОГДА Номенклатура.Ссылка
			|		ИНАЧЕ Номенклатура.Родитель
			|	КОНЕЦ КАК Ссылка
			|ПОМЕСТИТЬ ТранзакционныйТовар
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТранзакционныйТовар.Ссылка КАК Номенклатура
			|ИЗ
			|	ТранзакционныйТовар КАК ТранзакционныйТовар
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
			|		ПО ТранзакционныйТовар.Ссылка = СтатусыНоменклатуры.Номенклатура
			|			И (СтатусыНоменклатуры.СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница))
			|ГДЕ
			|	ТранзакционныйТовар.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И ТранзакционныйТовар.Ссылка.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Весовой)
			|	И СтатусыНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТоваров.Активный)
			|	И 0 В
			|			(ВЫБРАТЬ
			|				КОЛИЧЕСТВО(ВесовойТовар.Ссылка)
			|			ИЗ
			|				Справочник.ВесовойТовар КАК ВесовойТовар
			|			ГДЕ
			|				ВесовойТовар.Номенклатура В ИЕРАРХИИ
			|					(ВЫБРАТЬ
			|						ТранзакционныйТовар.Ссылка
			|					ИЗ
			|						ТранзакционныйТовар КАК ТранзакционныйТовар))";
			Запрос.УстановитьПараметр("Ссылка", Объект.ВыполняемаяЗадача.БизнесПроцесс.Основание);
		Иначе
			//код не доработан
			Основание = Объект.ВыполняемаяЗадача.БизнесПроцесс.Основание;
			выбДокИмя = Основание.Метаданные().Имя;
			ТекстОтбораПоОснованию = 
			"ВЫБРАТЬ
			|	ДокументСостав.Номенклатура КАК Ссылка
			|ИЗ
			|	Документ." + выбДокИмя + ".Состав КАК ДокументСостав
			|ГДЕ
			|	ДокументСостав.Ссылка = &Основание";
			Запрос.УстановитьПараметр("Основание", Основание);
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ДокументСостав.Номенклатура КАК Номенклатура
			|ИЗ
			|		Документ." + выбДокИмя + ".Состав КАК ДокументСостав
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВесовойТовар КАК ВесовойТовар
			|		ПО ТоварыДокументаОтфильтрованные.Номенклатура = ВесовойТовар.Номенклатура
			|ГДЕ
			|	ВесовойТовар.Номенклатура ЕСТЬ NULL 
			|		И ДокументСостав.Ссылка = &Основание
			|		И ДокументСостав.Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Весовой)";
			//|		И НЕ ДокументСостав.Номенклатура.Фасованный";
		КонецЕсли;
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СправочникНоменклатура.Ссылка КАК Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК СправочникНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВесовойТовар КАК ВесовойТовар
		|		ПО СправочникНоменклатура.Ссылка = ВесовойТовар.Номенклатура.Родитель
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
		|		ПО СправочникНоменклатура.Ссылка = СтатусыНоменклатуры.Номенклатура
		|			И (СтатусыНоменклатуры.СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница))
		|ГДЕ
		|	ВесовойТовар.Номенклатура ЕСТЬ NULL 
		|	И СправочникНоменклатура.Транзакционный
		|	И СправочникНоменклатура.ПометкаУдаления = ЛОЖЬ
		|	И СправочникНоменклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Весовой)
		|	И СтатусыНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТоваров.Активный)";
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница); //V
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(), "СписокНеПривязанныхТоваров");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВесов()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Весы.Ссылка КАК Весы,
	|	0 КАК Флаг,
	|	Весы.Родитель
	|ИЗ
	|	Справочник.Весы КАК Весы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Весы ИЕРАРХИЯ
	|АВТОУПОРЯДОЧИВАНИЕ";
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), "ДеревоВесов");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВесовыхТоваров()
	пвхСрокХранения = ПланыВидовХарактеристик.ДополнительныеРеквизитыНоменклатуры.НайтиПоКоду(ОбщегоНазначения.ПолучитьЗначениеСвойстваСлужебногоЗначения(ПланыВидовХарактеристик.СлужебныеЗначения.КодРеквизитаСрокХранения));
	Запрос = Новый Запрос;
	//{ ВетровИА 2014-12-29 Наряд №000137468}
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправочникВесы.Ссылка КАК Весы,
	|	ВесовойТовар.Ссылка,
	|	ВесовойТовар.Код,
	|	ВесовойТовар.Номенклатура,
	|	ВесовойТовар.Номенклатура.Наименование,
	|	ВесовойТовар.СрокГодностиДо,
	|	ВЫБОР
	|		КОГДА ВесовойТовар.Номенклатура.Транзакционный
	|			ТОГДА ВесовойТовар.Номенклатура
	|		ИНАЧЕ ВесовойТовар.Номенклатура.Родитель
	|	КОНЕЦ КАК ТранзакционныйТовар,
	|	ВЫБОР
	|		КОГДА ВесовойТовар.Номенклатура.Транзакционный
	|			ТОГДА ВесовойТовар.Номенклатура.Код
	|		ИНАЧЕ ВесовойТовар.Номенклатура.Родитель.Код
	|	КОНЕЦ КАК ТранзакционныйКод,
	|	ВЫБОР
	|		КОГДА ВесовойТовар.Номенклатура.Транзакционный
	|			ТОГДА ВесовойТовар.Номенклатура.БазоваяЕдиницаИзмерения
	|		ИНАЧЕ ВесовойТовар.Номенклатура.Родитель.БазоваяЕдиницаИзмерения
	|	КОНЕЦ КАК БазоваяЕдиницаИзмерения,
	|	ВесовойТовар.ТранслироватьДатуПроизводства
	|ПОМЕСТИТЬ ВесовойТовар
	|ИЗ
	|	Справочник.ВесовойТовар КАК ВесовойТовар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Весы КАК СправочникВесы
	|		ПО (ВЫБОР
	|				КОГДА СправочникВесы.ВыгружатьТоварыТолькоЭтихВесов = ИСТИНА
	|					ТОГДА СправочникВесы.Ссылка = ВесовойТовар.Владелец
	|				ИНАЧЕ СправочникВесы.Ссылка = ВесовойТовар.Владелец
	|						ИЛИ СправочникВесы.Родитель.Ссылка = ВесовойТовар.Владелец
	|						ИЛИ СправочникВесы.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|						ИЛИ СправочникВесы.Родитель.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|						ИЛИ СправочникВесы.Родитель.Родитель.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|			КОНЕЦ)
	|ГДЕ
	|	ВесовойТовар.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛОЖЬ КАК Флаг,
	|	ВесовойТовар.Весы,
	|	ВесовойТовар.Код КАК PLU,
	|	ВесовойТовар.ТранзакционныйКод КАК Код,
	|	ВесовойТовар.Номенклатура,
	|	ВесовойТовар.НоменклатураНаименование КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА Акции.ЦенаПоАкции ЕСТЬ NULL 
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|		ИНАЧЕ Акции.ЦенаПоАкции
	|	КОНЕЦ КАК Цена,
	|	ВесовойТовар.Ссылка КАК ВесовойТовар,
	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизитыСрокХранения.Значение, 0) КАК СрокХранения,
	|	0 КАК ВесТары,
	|	ВесовойТовар.СрокГодностиДо,
	|	ДатаПроизводстваТовара.Документ КАК ДокументПриход,
	|	ДатаПроизводстваТовара.ДатаПроизводства,
	|	ВесовойТовар.ТранслироватьДатуПроизводства
	|ИЗ
	|	ВесовойТовар КАК ВесовойТовар
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|			ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница)) КАК ЦеныНоменклатурыСрезПоследних
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|					ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|					МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.ID) КАК ID
	|				ИЗ
	|					РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница)) КАК ЦеныНоменклатурыСрезПоследних
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|							ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|							ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|							МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Период) КАК Период
	|						ИЗ
	|							РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущееВремя, СтруктурнаяЕдиница В ИЕРАРХИИ (&СтруктурнаяЕдиница)) КАК ЦеныНоменклатурыСрезПоследних
	|						ГДЕ
	|							ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
	|						
	|						СГРУППИРОВАТЬ ПО
	|							ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница,
	|							ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|							ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
	|						ПО ЦеныНоменклатурыСрезПоследних.Период = ВложенныйЗапрос.Период
	|							И ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница = ВложенныйЗапрос.СтруктурнаяЕдиница
	|							И ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
	|							И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
	|				ГДЕ
	|					ЦеныНоменклатурыСрезПоследних.АктивностьЗаписи
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница,
	|					ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|					ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения) КАК ВложенныйЗапрос
	|				ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
	|					И ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения = ВложенныйЗапрос.ЕдиницаИзмерения
	|					И ЦеныНоменклатурыСрезПоследних.СтруктурнаяЕдиница = ВложенныйЗапрос.СтруктурнаяЕдиница
	|					И ЦеныНоменклатурыСрезПоследних.ID = ВложенныйЗапрос.ID) КАК ЦеныНоменклатуры
	|		ПО ВесовойТовар.ТранзакционныйТовар = ЦеныНоменклатуры.Номенклатура
	|			И ВесовойТовар.БазоваяЕдиницаИзмерения = ЦеныНоменклатуры.ЕдиницаИзмерения.ЕдиницаПоКлассификатору
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизитыСрокХранения
	|		ПО (НоменклатураДополнительныеРеквизитыСрокХранения.Свойство = &СрокХранения)
	|			И ВесовойТовар.ТранзакционныйТовар = НоменклатураДополнительныеРеквизитыСрокХранения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Izh_ДатаПроизводстваТовара.Период КАК Период,
	|			Izh_ДатаПроизводстваТовара.Номенклатура КАК Номенклатура,
	|			Izh_ДатаПроизводстваТовара.Документ КАК Документ,
	|			Izh_ДатаПроизводстваТовара.ДатаПроизводства КАК ДатаПроизводства
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(Izh_ДатаПроизводстваТовара.Период) КАК Период,
	|				Izh_ДатаПроизводстваТовара.Номенклатура КАК Номенклатура
	|			ИЗ
	|				РегистрСведений.Izh_ДатаПроизводстваТовара КАК Izh_ДатаПроизводстваТовара
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Izh_ДатаПроизводстваТовара.Номенклатура) КАК ДатаПроизводстваТовараПоследние
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Izh_ДатаПроизводстваТовара КАК Izh_ДатаПроизводстваТовара
	|				ПО (Izh_ДатаПроизводстваТовара.Период = ДатаПроизводстваТовараПоследние.Период)
	|					И (Izh_ДатаПроизводстваТовара.Номенклатура = ДатаПроизводстваТовараПоследние.Номенклатура)) КАК ДатаПроизводстваТовара
	|		ПО ВесовойТовар.Номенклатура.Родитель = ДатаПроизводстваТовара.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВложенныйЗАпрос2.Номенклатура КАК Номенклатура,
	|			ВложенныйЗАпрос2.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|			ВложенныйЗАпрос2.Цена КАК ЦенаПоАкции,
	|			ВложенныйЗАпрос2.ДатаНачала КАК ДатаНачалаАкции,
	|			ВложенныйЗАпрос2.ДатаОкончания КАК ДатаОкончанияАкции,
	|			ВложенныйЗАпрос2.Название КАК НазваниеАкции
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ПромоАкцииНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|				ПромоАкцииНоменклатура.Номенклатура КАК Номенклатура,
	|				МИНИМУМ(ПромоАкцииНоменклатура.Цена) КАК Цена
	|			ИЗ
	|				РегистрСведений.ПромоАкции КАК ПромоАкции
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПромоАкцииНоменклатура КАК ПромоАкцииНоменклатура
	|					ПО ПромоАкции.СтруктурнаяЕдиница = ПромоАкцииНоменклатура.СтруктурнаяЕдиница
	|						И ПромоАкции.IDПромо = ПромоАкцииНоменклатура.IDПромо
	|						И ПромоАкции.IDКомпоненты = ПромоАкцииНоменклатура.IDКомпоненты
	|						И ПромоАкции.IDГруппы = ПромоАкцииНоменклатура.IDГруппы
	|						И ПромоАкции.IDДеталей = ПромоАкцииНоменклатура.IDДеталей
	|						И (НАЧАЛОПЕРИОДА(ПромоАкции.ДатаНачала, ДЕНЬ) <= &ДатаАкции)
	|						И (КОНЕЦПЕРИОДА(ПромоАкции.ДатаОкончания, ДЕНЬ) >= &ДатаАкции)
	|						И (ПромоАкции.ФлагОкончания = ЛОЖЬ)
	|						И (ПромоАкции.СтруктурнаяЕдиница = &СтруктурнаяЕдиница)
	|			ГДЕ
	|				ПромоАкцииНоменклатура.Цена <> 0
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПромоАкцииНоменклатура.СтруктурнаяЕдиница,
	|				ПромоАкцииНоменклатура.Номенклатура) КАК ВложенныйЗАпрос
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ПромоАкции.ДатаНачала КАК ДатаНачала,
	|					ПромоАкции.ДатаОкончания КАК ДатаОкончания,
	|					ПромоАкции.Название КАК Название,
	|					ПромоАкцииНоменклатура.Номенклатура КАК Номенклатура,
	|					ПромоАкцииНоменклатура.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|					ПромоАкцииНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|					ПромоАкцииНоменклатура.Цена КАК Цена
	|				ИЗ
	|					РегистрСведений.ПромоАкции КАК ПромоАкции
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПромоАкцииНоменклатура КАК ПромоАкцииНоменклатура
	|						ПО ПромоАкции.СтруктурнаяЕдиница = ПромоАкцииНоменклатура.СтруктурнаяЕдиница
	|							И ПромоАкции.IDПромо = ПромоАкцииНоменклатура.IDПромо
	|							И ПромоАкции.IDКомпоненты = ПромоАкцииНоменклатура.IDКомпоненты
	|							И ПромоАкции.IDГруппы = ПромоАкцииНоменклатура.IDГруппы
	|							И ПромоАкции.IDДеталей = ПромоАкцииНоменклатура.IDДеталей
	|							И (НАЧАЛОПЕРИОДА(ПромоАкции.ДатаНачала, ДЕНЬ) <= &ДатаАкции)
	|							И (КОНЕЦПЕРИОДА(ПромоАкции.ДатаОкончания, ДЕНЬ) >= &ДатаАкции)
	|							И (ПромоАкции.ФлагОкончания = ЛОЖЬ)
	|							И (ПромоАкции.СтруктурнаяЕдиница = &СтруктурнаяЕдиница)
	|				ГДЕ
	|					ПромоАкцииНоменклатура.Цена <> 0) КАК ВложенныйЗАпрос2
	|				ПО ВложенныйЗАпрос.Номенклатура = ВложенныйЗАпрос2.Номенклатура
	|					И ВложенныйЗАпрос.СтруктурнаяЕдиница = ВложенныйЗАпрос2.СтруктурнаяЕдиница
	|					И ВложенныйЗАпрос.Цена = ВложенныйЗАпрос2.Цена) КАК Акции
	|		ПО ВесовойТовар.Номенклатура.Родитель = Акции.Номенклатура";
	//{ ВетровИА 2014-12-29 Наряд №000137468}
	Запрос.УстановитьПараметр("СрокХранения", пвхСрокХранения);
	Запрос.УстановитьПараметр("ДатаАкции", ТекущаяДата());
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("ТекущееВремя", ТекущаяДата());
	Рез = Запрос.Выполнить();
	тз = Рез.Выгрузить();
	ЗначениеВРеквизитФормы(тз, "СписокВесовыхТоваров");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДиапазонов()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Весы.Ссылка КАК Весы,
	|	ЕСТЬNULL(КОЛИЧЕСТВО(ВесовойТовар.Код), 0) КАК КоличествоПозиций,
	|	ЕСТЬNULL(МИНИМУМ(ВесовойТовар.Код), 0) КАК ТекущийМинимум,
	|	ЕСТЬNULL(МАКСИМУМ(ВесовойТовар.Код), 0) КАК ТекущийМаксимум,
	|	ЕСТЬNULL(КОЛИЧЕСТВО(ВесовойТоварРодителя.Код),0)+1 КАК НовыйМинимум,
	|	ЕСТЬNULL(КОЛИЧЕСТВО(ВесовойТоварРодителя.Код),0)+ЕСТЬNULL(КОЛИЧЕСТВО(ВесовойТовар.Код),0) КАК НовыйМаксимум
	|ИЗ
	|	Справочник.Весы КАК Весы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВесовойТовар КАК ВесовойТовар
	|		ПО Весы.Ссылка = ВесовойТовар.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВесовойТовар КАК ВесовойТоварРодителя
	|		ПО Весы.Родитель = ВесовойТоварРодителя.Владелец
	|ГДЕ
	|	(НЕ Весы.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	Весы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Весы ИЕРАРХИЯ
	|АВТОУПОРЯДОЧИВАНИЕ";
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(Дерево, "ДеревоДиапазонов");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСпискиНоменклатуры()
	
	ЗаполнитьСписокВесовыхТоваров();
	//ЗаполнитьСписокНеПривязанныхТоваров();
	УстановитьПараметры();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыФормыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	//Если ТекущаяСтраница = Элементы.СтраницаНазначенияДиапазоновPLU Тогда
	//	ЗаполнитьСписокДиапазонов();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НазначитьPLUВыполнить()
	Ответ = Вопрос("PLU коды будут изменены! Подтвердите действие!", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат
	КонецЕсли;
	ЗаписатьСписокДиапазонов(ДеревоДиапазонов);
	ЗаполнитьСписокДиапазонов();
	
	ЗаполнитьСписокВесовыхТоваров();
	ДеревоВесовПриАктивизацииСтроки(Элементы.ДеревоВесов);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСписокДиапазонов(Дерево)
	Для Каждого СтрокаДерева Из Дерево.ПолучитьЭлементы() Цикл
		ЗаписатьДиапазонPLU(СтрокаДерева.Весы,СтрокаДерева.НовыйМинимум,СтрокаДерева.НовыйМаксимум);
		ЗаписатьСписокДиапазонов(СтрокаДерева);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДиапазонPLU(Весы,НовыйМинимум,НовыйМаксимум)
	НачатьТранзакцию();
	ВесовыеТовары = Справочники.ВесовойТовар.Выбрать(,Весы,, "Наименование Возр");
	N=99999;
	Пока ВесовыеТовары.Следующий() Цикл
		Если ВесовыеТовары.Код > НовыйМаксимум Тогда
			ДобСтроки = Объект.НулевыеДиапазоны.Добавить();
			ДобСтроки.Весы = Весы;
			ДобСтроки.Код = ВесовыеТовары.Код;
			ДобСтроки.Номенклатура = ВесовыеТовары.Номенклатура;
			//ДобСтроки.Характеристика = ВесовыеТовары.Характеристика;
		КонецЕсли;	
		ВесовыеТоварыОбъект = ВесовыеТовары.ПолучитьОбъект();
		ВесовыеТоварыОбъект.Код = N;
		ВесовыеТоварыОбъект.Записать();
		N = N + 1;
	КонецЦикла;
	М = НовыйМинимум;
	ВесовыеТовары = Справочники.ВесовойТовар.Выбрать(,Весы,, "Наименование Возр");
	Пока ВесовыеТовары.Следующий() Цикл
		ВесовыеТоварыОбъект = ВесовыеТовары.ПолучитьОбъект();
		ВесовыеТоварыОбъект.Код = М;
		ВесовыеТоварыОбъект.Записать();
		М = М + 1;
	КонецЦикла;
	//ОмПривилегированный.ОбновитьНумерациюОбъектовПоПолномуИмениМетаданных("Справочник.ВесовойТовар");
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура НовыйМинимумПриИзменении(Элемент)
	Элементы.ДеревоДиапазонов.ТекущиеДанные.НовыйМаксимум = ?(Элементы.ДеревоДиапазонов.ТекущиеДанные.КоличествоПозиций = 0,Элементы.ДеревоДиапазонов.ТекущиеДанные.НовыйМинимум,Элементы.ДеревоДиапазонов.ТекущиеДанные.НовыйМинимум+Элементы.ДеревоДиапазонов.ТекущиеДанные.КоличествоПозиций-1);
	ОбновитьДиапазоны(Элементы.ДеревоДиапазонов.ТекущиеДанные,Элементы.ДеревоДиапазонов.ТекущиеДанные.НовыйМаксимум)
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДиапазоны(Дерево,НовыйМаксимум)
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Строка.НовыйМинимум = НовыйМаксимум + 1;
		Строка.НовыйМаксимум = ?(Строка.КоличествоПозиций = 0,Строка.НовыйМинимум,Строка.НовыйМинимум+Строка.КоличествоПозиций-1);
		ОбновитьДиапазоны(Строка,Строка.НовыйМаксимум)
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СписокВесовыхТоваровПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Весы = Элемент.ОтборСтрок.Весы;
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		Для Каждого Элемент Из ПараметрыПеретаскивания.Значение Цикл
			ДобавитьВСписокВесовыхТоваров(Весы, Элемент);
		КонецЦикла;	
	КонецЕсли;
	ОбновитьСпискиНоменклатуры();
	
КонецПроцедуры

&НаСервереБезКонтекста
//в параметр Номенклатура передается товар с ШК
Процедура ДобавитьВесовойТовар(Весы, Номенклатура)
	
	ШтриховыеКоды.ДобавитьВесовойТовар(Весы, Номенклатура);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивНоменклатурыСШКСервер(Номенклатура)
	
	Если Номенклатура.Группа = 0 Тогда
		мНоменклатураСШК = ШтриховыеКоды.ПолучитьМассивНоменклатурыСШКДляВесов(Номенклатура);
	Иначе
		мНоменклатураСШК = Новый Массив;
	КонецЕсли;
	
	Возврат мНоменклатураСШК;
КонецФункции

&НаКлиенте
//в параметр Номенклатура передается транзакционный товар
Процедура ДобавитьВСписокВесовыхТоваров(Весы, Номенклатура)
	
	мНоменклатураСШК = ПолучитьМассивНоменклатурыСШКСервер(Номенклатура);
	Если мНоменклатураСШК.Количество() = 0 Тогда
		Сообщить("У номенклатуры " + Номенклатура + " нет штрих-кода");
	ИначеЕсли мНоменклатураСШК.Количество() = 1 Тогда
		ДобавитьВесовойТовар(Весы, мНоменклатураСШК[0]);
	Иначе
		сз = Новый СписокЗначений;
		сз.ЗагрузитьЗначения(мНоменклатураСШК);
		СтрукОтбор     = Новый Структура("Ссылка",сз);
		СтрукПараметры = Новый Структура("Отбор",СтрукОтбор);
		ФормаВыбора = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора", СтрукПараметры, ЭтаФорма);
		//ФормаВыбора.Открыть();
		ФормаВыбора.Заголовок = "Выберите товар со штрих-кодом";
		//ФормаВыбора.Список.Отбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		//сз = Новый СписокЗначений;
		//сз.ЗагрузитьЗначения(мНоменклатураСШК);
		//Отбор = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//Отбор.Использование = Истина;
		//Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		//Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		//Отбор.ПравоеЗначение = сз;
		//Отбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ОбработкаТабличныхЧастейКлиент.ОтображениеДинамическогоСпискаСписок(ФормаВыбора, "Список");
		ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ФормаВыбора.Список,Ложь);
		ФормаВыбора.Элементы.кнГруппы.Пометка = Ложь;
		ФормаВыбора.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьВесовойТовар(ВесовойТовар)
	//Процедура УдалитьВесовойТовар(ВесовойТовар, Весы)
	//Если ВесовойТовар.Владелец = Весы Тогда
	//	ШтриховыеКоды.УдалитьВесовойТовар(ВесовойТовар);
	//КонецЕсли;
	
	//{ ВетровИА 2014-12-29 Наряд №000137468}
	УдаляемыйВесовойТовар = ВесовойТовар.ПолучитьОбъект();		
	УдаляемыйВесовойТовар.УстановитьПометкуУдаления(Истина, Истина);
	//{ ВетровИА 2014-12-29 Наряд №000137468}
КонецПроцедуры

&НаКлиенте
Процедура Номенклатура1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте

Процедура УдалитьИзСпискаВесового(Команда)
	
	Ответ = Вопрос("Товары будут удалены! Подтвердите действие!", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат
	КонецЕсли;
	
	//маТоварыПоВесам = ПолучитьМассивТоварыПоВесам();
	//Если маТоварыПоВесам.Количество() > 0 Тогда
	//	Результат = ЗагрузкаТовараВВесы(маТоварыПоВесам, Истина);
	//	Если Результат = Истина Тогда
	//		ОбновитьСпискиНоменклатуры();
	//		ДеревоВесовПриАктивизацииСтроки(Элементы.ДеревоВесов);
	//	КонецЕсли;
	//КонецЕсли; 
	
	//Для каждого Строка Из маНоменклатураВесовСтроки Цикл	//for history
	//	УдалитьИзСписокаВесовыхТоваров(Строка.ВесовойТовар);
	//	ДобСтроки=НулевыеДиапазоны.Добавить();
	//	ДобСтроки.Весы=Весы;
	//	ДобСтроки.Код=Строка.Код;
	//ДобСтроки.Номенклатура=Строка.Номенклатура;
	//КонецЦикла;
	
	//{ ВетровИА 2014-12-29 Наряд №000137468 }
	МассивСтрок = СписокВесовыхТоваров.НайтиСтроки(Новый Структура("Флаг", Истина));
	Для Каждого СтрокаМассива из МассивСтрок Цикл
		УдалитьВесовойТовар(СтрокаМассива.ВесовойТовар);
		СписокВесовыхТоваров.Удалить(СтрокаМассива);
	КонецЦикла;
	//{ ВетровИА 2014-12-29 Наряд №000137468 }
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если ЗначениеЗаполнено(Объект.ВыполняемаяЗадача) Тогда
		УправлениеБизнесПроцессамиСервер.ВыполнитьЗадачу(Объект.ВыполняемаяЗадача);
		Оповестить("ЗадачаВыполнена");
	КонецЕсли;	
	СохранитьПараметрыПодбора();
КонецПроцедуры

&НаКлиенте
Процедура СписокНеПривязанныхТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Возврат;
	
	Весы = Элементы.ДеревоВесов.ТекущиеДанные.Весы;
	Для каждого ИндексСтроки Из Элемент.ВыделенныеСтроки Цикл
		ДобавитьВСписокВесовыхТоваров(Весы, Элемент.ДанныеСтроки(ИндексСтроки).Номенклатура);
	КонецЦикла;
	ОбновитьСпискиНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
//выбор происходит товара с шк, когда невозможно определить основной шк из формы, открытой в ДобавитьВСписокВесовыхТоваров()
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Весы = Элементы.ДеревоВесов.ТекущиеДанные.Весы;
	ДобавитьВесовойТовар(Весы, ВыбранноеЗначение);
	ОбновитьСпискиНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВесовогоТовара(Команда)
	Если ЗначениеЗаполнено(Элементы.СписокВесовыхТоваров.ОтборСтрок) Тогда
		Весы = Элементы.СписокВесовыхТоваров.ОтборСтрок.Весы;
		маНоменклатураВесовСтроки = СписокВесовыхТоваров.НайтиСтроки(Новый Структура("Весы", Весы));
		Для каждого сВесовогоТовара Из маНоменклатураВесовСтроки Цикл
			сВесовогоТовара.Флаг = Истина;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВесовогоТовара(Команда)
	Если ЗначениеЗаполнено(Элементы.СписокВесовыхТоваров.ОтборСтрок) Тогда
		Весы = Элементы.СписокВесовыхТоваров.ОтборСтрок.Весы;
		маНоменклатураВесовСтроки = СписокВесовыхТоваров.НайтиСтроки(Новый Структура("Весы", Весы));
		Для каждого сВесовогоТовара Из маНоменклатураВесовСтроки Цикл
			сВесовогоТовара.Флаг = Ложь;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПрефиксШтучногоШК()
	
	Возврат Константы.ПрефиксШтучногоТовара.Получить();
	
КонецФункции


&НаКлиенте
Процедура ОчиститьПамятьВесов(Команда)
	
	Ответ = Вопрос("Будет произведена попытка очистить память у выбранных весов!", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат
	КонецЕсли;
	
	Для Каждого УзелДерева Из ДеревоВесов.ПолучитьЭлементы() Цикл
		Если УзелДерева.Флаг=0  Тогда Продолжить; КонецЕсли;
		КоллекцияУзлов = УзелДерева.ПолучитьЭлементы();
		Для Каждого СтрокаУзла из КоллекцияУзлов Цикл
			Если СтрокаУзла.Флаг = 0  Тогда Продолжить; КонецЕсли;
			идВесов = ПолучитьИдентификаторВесов(СтрокаУзла.Весы);
			МенеджерОборудованияКлиент.ОчиститьТоварыВВесахСПечатьюЭтикеток(идВесов,идФормы);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьПросроченнуюДатуСрокаХранения()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВесовойТовар.Ссылка
	|ИЗ
	|	Справочник.ВесовойТовар КАК ВесовойТовар
	|ГДЕ
	|	ВесовойТовар.СрокГодностиДо <= &ТекущаяДата
	|	И ВесовойТовар.СрокГодностиДо <> &ПустаяДата";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101"));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		оВесовойТовар = Выборка.Ссылка.ПолучитьОбъект();
		оВесовойТовар.СрокГодностиДо = Дата("00010101");
		оВесовойТовар.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВесовыхТоваровСрокГодностиДоПриИзменении(Элемент)
	
	СрокГодностиДо = Элементы.СписокВесовыхТоваров.ТекущиеДанные.СрокГодностиДо;
	Если СрокГодностиДо < ТекущаяДата() Тогда
		ЗаполнитьСписокВесовыхТоваров();
		ДеревоВесовПриАктивизацииСтроки(Элементы.ДеревоВесов);
		Сообщить("Срок годности не может быть меньше текущей даты!");
		Возврат;
	КонецЕсли;
	ВесовойТоварСсылка = Элементы.СписокВесовыхТоваров.ТекущиеДанные.ВесовойТовар;
	УстановитьСрокГодностиДо(ВесовойТоварСсылка, СрокГодностиДо);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСрокГодностиДо(ВесовойТоварСсылка, СрокГодностиДо)
	
	оВесовойТовар = ВесовойТоварСсылка.ПолучитьОбъект();
	оВесовойТовар.СрокГодностиДо = СрокГодностиДо;
	оВесовойТовар.Записать();
	
КонецПроцедуры
&НаСервере
//Получает данные для выгрузки в весы
//Параметры:
//	Весы - весы, для которых формируется данные (СправочникСсылка.Весы)
//	маНоменклатура - массив товаров (СправочникСсылка.Номенклатура)
//Возвращаемое значение:
//	выборка запроса с данными
Функция ЗаполнитьТаблицуДляВыгрузкиУдаление(Весы, маНоменклатура)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	тВесовойТовар.Код КАК Код,
	|	"""" КАК ПрефиксPLU,
	|	тВесовойТовар.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	тВесовойТовар.Номенклатура.Код КАК ШтрихКод,
	|	0 КАК СрокХранения,
	|	"""" КАК Состав,
	|	0 КАК ВесТары,
	|	0 КАК Цена,
	|	тВесовойТовар.ТранзакционныйТовар.ТипТовара КАК ТипТовара,
	|	0 КАК СрокГодностиДо,
	|	тВесовойТовар.Ссылка КАК ВесовойТовар
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВесовойТовар.Код КАК Код,
	|		ВесовойТовар.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ВесовойТовар.Номенклатура.Транзакционный
	|				ТОГДА ВесовойТовар.Номенклатура
	|			ИНАЧЕ ВесовойТовар.Номенклатура.Родитель
	|		КОНЕЦ КАК ТранзакционныйТовар,
	//|		ВесовойТовар.СрокГодностиДо КАК СрокГодностиДо,
	//|		СправочникВесы.РеквизитСостав КАК РеквизитСостав
	|		ВесовойТовар.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.Весы КАК СправочникВесы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВесовойТовар КАК ВесовойТовар
	|			ПО (ВЫБОР
	|					КОГДА СправочникВесы.ВыгружатьТоварыТолькоЭтихВесов = ИСТИНА
	|						ТОГДА СправочникВесы.Ссылка = ВесовойТовар.Владелец
	|					ИНАЧЕ СправочникВесы.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ СправочникВесы.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ СправочникВесы.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ СправочникВесы.Родитель.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|							ИЛИ СправочникВесы.Родитель.Родитель.Родитель.Родитель.Ссылка = ВесовойТовар.Владелец
	|				КОНЕЦ)
	|	ГДЕ
	|		СправочникВесы.Ссылка = &Весы
	|		И ВесовойТовар.Номенклатура ЕСТЬ НЕ NULL 
	//|		И ВесовойТовар.ПометкаУдаления = ЛОЖЬ
	//|		И СправочникВесы.ПометкаУдаления = ЛОЖЬ
	|		И ВесовойТовар.Номенклатура В(&Номенклатура)) КАК тВесовойТовар";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Весы", Весы);
	Запрос.УстановитьПараметр("Номенклатура", маНоменклатура);
	//Запрос.УстановитьПараметр("СрокХранения", пвхСрокХранения);
	//Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
	//Запрос.УстановитьПараметр("ТекущееВремя", ТекущаяДата());
	
	ТаблицаДляВыгрузки.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ПолучитьМассивТоварыПоВесам()
	
	маТоварыПоВесам = Новый Массив;	//Рез
	
	СтрокиВесов = Новый Массив;
	ЗаполнитьМаВесы(ДеревоВесов, СтрокиВесов);
	Если СтрокиВесов.Количество() = 0 Тогда
		Сообщить("Нет выбранных весов!");
		Возврат маТоварыПоВесам;
	КонецЕсли;
	
	Для Каждого Строка Из СтрокиВесов Цикл
		ОтборТоваров = Новый Структура("Флаг, Весы", Истина, Строка.Родитель);
		маНоменклатураВесовСтроки = СписокВесовыхТоваров.НайтиСтроки(ОтборТоваров);
		чКоличествоТоваров = маНоменклатураВесовСтроки.Количество();
		Если чКоличествоТоваров > 0 Тогда
			маНоменклатураВесов = Новый Массив(чКоличествоТоваров);
			Для й = 0 По маНоменклатураВесовСтроки.Количество() - 1 Цикл
				маНоменклатураВесов[й] = маНоменклатураВесовСтроки[й].Номенклатура;
			КонецЦикла;
			маТоварыПоВесам.Добавить(Новый Структура("Весы,Номенклатура,Родитель", Строка.Весы , маНоменклатураВесов,Строка.Родитель));//в структуре два элемента - весы и список выгружаемой номенклатуры для этих весов
		КонецЕсли;
	КонецЦикла;
	
	Возврат маТоварыПоВесам;
КонецФункции

&НаКлиенте
Процедура СписокВесовыхТоваровДокументПриходНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//{ ВетровИА 2014-12-17 }
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("РежимВыбора, Отбор", Истина, Новый Структура("Номенклатура", Элементы.СписокВесовыхТоваров.ТекущиеДанные.Номенклатура));
	ОткрытьФорму("РегистрСведений.Izh_ДатаПроизводстваТовара.Форма.ФормаВыбора", ПараметрыФормы, Элемент);
	//{ ВетровИА 2014-12-17 }	
КонецПроцедуры

&НаКлиенте
Процедура СписокВесовыхТоваровДокументПриходОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НоваяСтрока = СписокВесовыхТоваров.Получить(Элементы.СписокВесовыхТоваров.ТекущаяСтрока);
	НоваяСтрока.ДокументПриход = ВыбранноеЗначение.ДокументПриход;
	НоваяСтрока.ДатаПроизводства = ВыбранноеЗначение.ДатаПроизводства;
КонецПроцедуры

&НаКлиенте
Процедура ФлажокПриИзменении(Элемент)
	
	ИДТекущейСтроки = Элементы["ДеревоВесов"].ТекущаяСтрока;
	
	Если ИДТекущейСтроки <> Неопределено Тогда
		
		ЭлементКоллекции = ЭтаФорма["ДеревоВесов"].НайтиПоИдентификатору(
		ИДТекущейСтроки);
		
		Если ЭлементКоллекции.Флаг = 2 Тогда
			ЭлементКоллекции.Флаг = 0;
		КонецЕсли;
		
		УстановкаФлажков(ЭлементКоллекции, ЭлементКоллекции.Флаг);
		
		Родитель = ЭлементКоллекции.ПолучитьРодителя();
		Пока Родитель <> Неопределено Цикл
			Родитель.Флаг = ?(УстановленноДляВсех(ЭлементКоллекции),
			ЭлементКоллекции.Флаг, 2);
			ЭлементКоллекции = Родитель;
			Родитель = ЭлементКоллекции.ПолучитьРодителя();
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаФлажков(ЭлементКоллекции, ЗначениеПометки)
	
	ПодчинЭлементы = ЭлементКоллекции.ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из ПодчинЭлементы Цикл
		ТекЭлемент.Флаг = ЗначениеПометки;
		УстановкаФлажков(ТекЭлемент, ТекЭлемент.Флаг);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция УстановленноДляВсех(ЭлементКоллекции)
	СоседниеЭлементы = ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из СоседниеЭлементы Цикл
		Если ТекЭлемент.Флаг <> ЭлементКоллекции.Флаг Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура СписокВесовыхТоваровТранслироватьДатуПроизводстваПриИзменении(Элемент)
	ТекДанные = Элементы.СписокВесовыхТоваров.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	СписокВесовыхТоваровТранслироватьДатуПроизводстваПриИзмененииНаСервере(ТекДанные.ВесовойТовар, ТекДанные.ТранслироватьДатуПроизводства);
КонецПроцедуры

&НаСервере
Процедура СписокВесовыхТоваровТранслироватьДатуПроизводстваПриИзмененииНаСервере(Ссылка, ТранслироватьДатуПроизводства)
	ВесовойТовар = Ссылка.ПолучитьОбъект();
	ВесовойТовар.ТранслироватьДатуПроизводства = ТранслироватьДатуПроизводства;
	ВесовойТовар.Записать();
КонецПроцедуры
