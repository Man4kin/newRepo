
&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.ПриИзмененииЕдиницыИзмеренияВТабличнойЧасти(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры



//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.Продукция,СтандартнаяОбработка,,,"Продукция");
		Если ТекСтрока <> Неопределено Тогда
			ЗаполнитьСостав(ТекСтрока.Номенклатура,ТекСтрока.ТехнологическаяКарта,ТекСтрока.Остаток);
			ЗаполнитьСоставСырья();
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСостав(Номенклатура,ТехнологическаяКарта,Остаток)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК Остаток,
	|	ПродукцияПоЦехам.ТехнологическаяКарта
	|ИЗ
	|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &Склад) КАК ОстаткиНоменклатурыОстатки
	|		ПО ПродукцияПоЦехам.Продукция = ОстаткиНоменклатурыОстатки.Номенклатура
	|ГДЕ
	|	ПродукцияПоЦехам.Продукция = &Продукция
	|	И ПродукцияПоЦехам.Склад = &Склад
	|	И ПродукцияПоЦехам.ФлагАктивности
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПродукцияПоЦехам.ТехнологическаяКарта.Дата УБЫВ";

	Запрос.УстановитьПараметр("Продукция", Номенклатура);
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(НачалоДня(Объект.Период.ДатаНачала)));
	Запрос.УстановитьПараметр("Склад", Объект.Производство);

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ТехнологическаяКарта = ВыборкаДетальныеЗаписи.ТехнологическаяКарта;
		Остаток = ВыборкаДетальныеЗаписи.Остаток;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

 &НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора("Обработки.ЗаказСырья",ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора("Обработки.ЗаказСырья",ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
	Настройки = ПолучитьНастройкуПодбора();
	ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры


//Конец Процедуры и функции для организации подбора

&НаКлиенте
Процедура УправлениеДоступностьюЭлементов()
	Элементы.ГруппаПодбор.Видимость  = ?(Не ЗначениеЗаполнено(Объект.Производство),Ложь,Элементы.ГруппаПодбор.Видимость);
конецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеДоступностьюЭлементов();
	Установитьпараметры();
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	УправлениеДоступностьюЭлементов();
	Установитьпараметры();
КонецПроцедуры

Процедура Установитьпараметры()
	ПодборНоменклатуры.Параметры.установитьзначениепараметра("СтруктурнаяЕдиница",Объект.СкладСырья.Владелец);
конецпроцедуры

&НаКлиенте
Процедура РаспределениеКоличествоПриИзменении(Элемент)
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ",Элементы.Распределение.ТекущиеДанные.Ключ);
	Массив = Объект.Распределение.НайтиСтроки(Отбор);
	Итог = 0;
	Для I=0 по Массив.Количество()-1 Цикл
		Итог = Итог+Массив[I][Элемент.Имя];
	КонецЦикла;	
	
	Массив = Объект.Состав.НайтиСтроки(Отбор);
	ТекущаяСтрока = Массив[0];
	ТекущаяСтрока[Элемент.Имя] = Итог;
КонецПроцедуры


&НаКлиенте
Процедура ПродукцияПоТехКартеПриИзменении(Элемент)
	Элементы.Состав.ТолькоПросмотр = Элементы.Продукция.ТекущиеДанные.ПоТехКарте;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.Продукция.Количество() > 0 Тогда
		ТекстВопроса = "Табличная часть будет очищена.
		|Продолжить?";
		Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Объект.Продукция.Очистить();
			Объект.Состав.Очистить();
		Иначе	
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	ЗаполнитьПоПланамИЗаказам();
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПоПланамИЗаказам() Экспорт
	ТаблицаДат = Новый ТаблицаЗначений;
	ТаблицаДат.Колонки.Добавить("ДеньНедели",Новый ОписаниеТипов("Число"));
	ТаблицаДат.Колонки.Добавить("КоличествоДней",Новый ОписаниеТипов("Число"));
	ДатаНачала = НачалоДня(Объект.Период.ДатаНачала);
	ДатаОкончания = НачалоДня(Объект.Период.ДатаОкончания);
	Пока ДатаНачала <= ДатаОкончания Цикл
		НоваяСтрока = ТаблицаДат.Добавить();
		НоваяСтрока.ДеньНедели = ДеньНедели(ДатаНачала);
		НоваяСтрока.КоличествоДней = 1;
		ДатаНачала = ДатаНачала + 86400;
	КонецЦикла;	
	ТаблицаДат.Свернуть("ДеньНедели","КоличествоДней");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	Запрос.Текст = "Выбрать ДеньНедели, КоличествоДней Поместить ТаблицаДат из &ТаблицаДат как ТаблицаДат";
	Запрос.УстановитьПараметр("ТаблицаДат",ТаблицаДат);
	Запрос.Выполнить();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Планы.Номенклатура КАК Номенклатура,
	|	СУММА(Планы.ПоПлану) - ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) КАК Количество,
	|	ЕСТЬNULL(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток), 0) КАК Остаток,
	|	СУММА(Планы.ПоПлану) КАК ПоПлану,
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
	|	ЕдиницыИзмерения.Коэффициент,
	|	ВложенныйЗапрос.ТехнологическаяКарта КАК ТехнологическаяКарта
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Продукция КАК Номенклатура,
	|		ВложенныйЗапрос.Количество * ТаблицаДат.КоличествоДней КАК ПоПлану
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПланПоДням.Продукция КАК Продукция,
	|			ПланПоДням.Количество КАК Количество,
	|			ПланПоДням.ДеньНедели КАК ДеньНедели
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ЗаказВПроизводствоСрезПоследних.Продукция КАК Продукция,
	|				1 КАК ДеньНедели,
	|				ЗаказВПроизводствоСрезПоследних.Понедельник КАК Количество
	|			ИЗ
	|				РегистрСведений.ЗаказВПроизводство.СрезПоследних(&Момент, Склад = &Склад) КАК ЗаказВПроизводствоСрезПоследних
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказВПроизводствоСрезПоследних.Продукция,
	|				2,
	|				ЗаказВПроизводствоСрезПоследних.Вторник
	|			ИЗ
	|				РегистрСведений.ЗаказВПроизводство.СрезПоследних(&Момент, Склад = &Склад) КАК ЗаказВПроизводствоСрезПоследних
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказВПроизводствоСрезПоследних.Продукция,
	|				3,
	|				ЗаказВПроизводствоСрезПоследних.Среда
	|			ИЗ
	|				РегистрСведений.ЗаказВПроизводство.СрезПоследних(&Момент, Склад = &Склад) КАК ЗаказВПроизводствоСрезПоследних
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказВПроизводствоСрезПоследних.Продукция,
	|				4,
	|				ЗаказВПроизводствоСрезПоследних.Четверг
	|			ИЗ
	|				РегистрСведений.ЗаказВПроизводство.СрезПоследних(&Момент, Склад = &Склад) КАК ЗаказВПроизводствоСрезПоследних
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказВПроизводствоСрезПоследних.Продукция,
	|				5,
	|				ЗаказВПроизводствоСрезПоследних.Пятница
	|			ИЗ
	|				РегистрСведений.ЗаказВПроизводство.СрезПоследних(&Момент, Склад = &Склад) КАК ЗаказВПроизводствоСрезПоследних
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказВПроизводствоСрезПоследних.Продукция,
	|				6,
	|				ЗаказВПроизводствоСрезПоследних.Суббота
	|			ИЗ
	|				РегистрСведений.ЗаказВПроизводство.СрезПоследних(&Момент, Склад = &Склад) КАК ЗаказВПроизводствоСрезПоследних
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ЗаказВПроизводствоСрезПоследних.Продукция,
	|				7,
	|				ЗаказВПроизводствоСрезПоследних.Воскресенье
	|			ИЗ
	|				РегистрСведений.ЗаказВПроизводство.СрезПоследних(&Момент, Склад = &Склад) КАК ЗаказВПроизводствоСрезПоследних) КАК ПланПоДням) КАК ВложенныйЗапрос
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДат КАК ТаблицаДат
	|			ПО ВложенныйЗапрос.ДеньНедели = ТаблицаДат.ДеньНедели) КАК Планы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО Планы.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И Планы.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &Склад) КАК ОстаткиНоменклатурыОстатки
	|		ПО Планы.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Внутр.Продукция КАК Продукция,
	|			МАКСИМУМ(ТехнологическаяКарта.Ссылка) КАК ТехнологическаяКарта
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ПродукцияПоЦехам.Продукция КАК Продукция,
	|				МАКСИМУМ(ПродукцияПоЦехам.ТехнологическаяКарта.Дата) КАК Дата
	|			ИЗ
	|				РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
	|			ГДЕ
	|				ПродукцияПоЦехам.ФлагАктивности И ПродукцияПоЦехам.ТехнологическаяКарта.ВидПроизводства = &ВидПроизводства
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПродукцияПоЦехам.Продукция) КАК Внутр
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
	|				ПО Внутр.Продукция = ТехнологическаяКарта.Продукция
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Внутр.Продукция) КАК ВложенныйЗапрос
	|		ПО Планы.Номенклатура = ВложенныйЗапрос.Продукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Планы.Номенклатура,
	|	ЕдиницыИзмерения.Ссылка,
	|	ЕдиницыИзмерения.Коэффициент,
	|	ВложенныйЗапрос.ТехнологическаяКарта
	|
	|ИМЕЮЩИЕ
	|	СУММА(Планы.ПоПлану) > 0";

	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", НачалоДня(Объект.Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(НачалоДня(Объект.Период.ДатаНачала)));
	Запрос.УстановитьПараметр("Дата", Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("Склад", Объект.Производство);
	Запрос.УстановитьПараметр("ВидПроизводства", Перечисления.ВидыПроизводства.Приготовление);

	Результат = Запрос.Выполнить();
	Объект.Продукция.Загрузить(Результат.Выгрузить());
	
	ЗаполнитьСоставСырья();
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСоставСырья()
	ТаблицаПродукции = Объект.Продукция.Выгрузить();
	ТаблицаСостава.Очистить();
	Объект.Состав.Очистить();
	Для Каждого Строка Из ТаблицаПродукции Цикл
		ПолучитьСоставПродукции(Строка.ТехнологическаяКарта,Строка.Количество*Строка.Коэффициент,ТаблицаСостава);
	КонецЦикла;
	ПромТаблица = ТаблицаСостава.Выгрузить();
	ПромТаблица.Свернуть("Номенклатура","Количество");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	Запрос.Текст = "Выбрать * Поместить ТаблицаСостава из &ТаблицаСостава как ТаблицаСостава";
	Запрос.УстановитьПараметр("ТаблицаСостава",ПромТаблица);
	Запрос.Выполнить();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА СоставТехКарты.Количество - ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток,0)
	|		ИНАЧЕ (СоставТехКарты.Количество * Ингредиенты.КоэффициентЗамены) - ЕСТЬNULL(ОстаткиНоменклатурыОстатки1.КоличествоОстаток,0)
	|	КОНЕЦ КАК Количество,
	|	ЕСТЬNULL(Ингредиенты.Ссылка,СоставТехКарты.Номенклатура)  КАК Ингредиент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА СоставТехКарты.Номенклатура
	|		ИНАЧЕ Ингредиенты.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток,0)
	|		ИНАЧЕ ЕСТЬNULL(ОстаткиНоменклатурыОстатки1.КоличествоОстаток,0)
	|	КОНЕЦ КАК Остаток,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|		ТОГДА
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних.МетодПополнения = &МетодПополнения
	|					ТОГДА &ПустойКонтрагент
	|				ИНАЧЕ НоменклатураКонтрагента.Контрагент
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних1.МетодПополнения = &МетодПополнения
	|					ТОГДА &ПустойКонтрагент
	|				ИНАЧЕ НоменклатураКонтрагента1.Контрагент
	|			КОНЕЦ
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|		ТОГДА
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента.МинимальныйЗаказ, 0)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних1.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента1.МинимальныйЗаказ, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК МинимальныйЗаказ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|		ТОГДА
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента.МаксимальныйЗаказ, 0)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних1.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента1.МаксимальныйЗаказ, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК МаксимальныйЗаказ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|		ТОГДА
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента.КоэффициентЯщика, 0)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних1.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента1.КоэффициентЯщика, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК КоэффициентЯщика,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|		ТОГДА
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента.КоэффициентПалетыСлой, 0)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних1.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента1.КоэффициентПалетыСлой, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК КоэффициентПалетыСлой,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|		ТОГДА
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента.КоэффициентПалетыВысота, 0)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних1.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ ЕСТЬNULL(НоменклатураКонтрагента1.КоэффициентПалетыВысота, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК КоэффициентПалетыВысота,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|		ТОГДА
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ НоменклатураКонтрагента.ВариантОкругления
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА МетодыПополненияСрезПоследних1.МетодПополнения = &МетодПополнения
	|					ТОГДА 0
	|				ИНАЧЕ НоменклатураКонтрагента1.ВариантОкругления
	|			КОНЕЦ
	|	КОНЕЦ КАК ВариантОкругления,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА НоменклатураКонтрагента.Цена
	|		ИНАЧЕ НоменклатураКонтрагента1.Цена
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА НоменклатураКонтрагента.Цена * (СоставТехКарты.Количество - ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток,0))
	|		ИНАЧЕ НоменклатураКонтрагента1.Цена * ((СоставТехКарты.Количество * Ингредиенты.КоэффициентЗамены) - ЕСТЬNULL(ОстаткиНоменклатурыОстатки1.КоличествоОстаток,0))
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ЕдиницыИзмерения.Ссылка
	|		ИНАЧЕ ЕдиницыИзмерения1.Ссылка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СоставТехКарты.Номенклатура) = ТИП(Справочник.Номенклатура)
	|			ТОГДА ЕдиницыИзмерения.Коэффициент
	|		ИНАЧЕ ЕдиницыИзмерения1.Коэффициент
	|	КОНЕЦ КАК Коэффициент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСостава.Количество КАК Количество,
	|		ТаблицаСостава.Номенклатура КАК Номенклатура
	|	ИЗ
	|		ТаблицаСостава КАК ТаблицаСостава) КАК СоставТехКарты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Ингредиенты.Состав КАК Ингредиенты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента1
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МетодыПополнения.СрезПоследних(&Момент, ) КАК МетодыПополненияСрезПоследних1
	|				ПО НоменклатураКонтрагента1.Номенклатура = МетодыПополненияСрезПоследних1.Номенклатура
	|					И НоменклатураКонтрагента1.Контрагент = МетодыПополненияСрезПоследних1.ОсновнойПоставщик
	|					И МетодыПополненияСрезПоследних1.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|			ПО Ингредиенты.Номенклатура = НоменклатураКонтрагента1.Номенклатура
	|				И (НоменклатураКонтрагента1.ОсновнойПоставщик)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &Склад) КАК ОстаткиНоменклатурыОстатки1
	|			ПО Ингредиенты.Номенклатура = ОстаткиНоменклатурыОстатки1.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения1
	|			ПО Ингредиенты.Номенклатура = ЕдиницыИзмерения1.Владелец
	|				И Ингредиенты.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения1.ЕдиницаПоКлассификатору
	|		ПО СоставТехКарты.Номенклатура = Ингредиенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Момент, МестоХранения = &Склад) КАК ОстаткиНоменклатурыОстатки
	|		ПО СоставТехКарты.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО СоставТехКарты.Номенклатура = ЕдиницыИзмерения.Владелец
	|			И СоставТехКарты.Номенклатура.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МетодыПополнения.СрезПоследних(&Момент, ) КАК МетодыПополненияСрезПоследних
	|			ПО НоменклатураКонтрагента.Номенклатура = МетодыПополненияСрезПоследних.Номенклатура
	|				И НоменклатураКонтрагента.Контрагент = МетодыПополненияСрезПоследних.ОсновнойПоставщик
	|				И МетодыПополненияСрезПоследних.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|		ПО СоставТехКарты.Номенклатура = НоменклатураКонтрагента.Номенклатура
	|			И (НоменклатураКонтрагента.ОсновнойПоставщик)
	|ИТОГИ ПО
	|	Ингредиент";
	Запрос.УстановитьПараметр("Момент", Новый МоментВремени(НачалоДня(Объект.Период.ДатаНачала)));
	Запрос.УстановитьПараметр("Склад", Объект.СкладСырья);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.СкладСырья.Владелец);
	Запрос.УстановитьПараметр("МетодПополнения", Перечисления.МетодыПополнения.SO);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	

	Результат = Запрос.Выполнить();
	Дерево = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВДанныеФормы(Дерево, ДеревоНоменклатуры);
	
	Для Каждого ПервыйУровень Из ДеревоНоменклатуры.ПолучитьЭлементы() Цикл
		
		Если ТипЗнч(ПервыйУровень.Ингредиент) = Тип("СправочникСсылка.Номенклатура") Тогда
			Для Каждого ВторойУровень Из ПервыйУровень.ПолучитьЭлементы() Цикл
				ПервыйУровень.Номенклатура = ВторойУровень.Номенклатура;
				ПервыйУровень.Ингредиент = Справочники.Номенклатура.ПустаяСсылка();
				ПервыйУровень.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
				ПервыйУровень.Коэффициент = ВторойУровень.Коэффициент;
				ПервыйУровень.Количество = ОкруглениеКоличества(ВторойУровень);
				ПервыйУровень.Поставщик = ВторойУровень.Поставщик;
				ПервыйУровень.Остаток = ВторойУровень.Остаток;
				ПервыйУровень.Цена = ВторойУровень.Цена;
				ПервыйУровень.Сумма = ПервыйУровень.Цена*ПервыйУровень.Количество;
				Прервать;
			КонецЦикла;
			ПервыйУровень.ПолучитьЭлементы().Очистить();
			
			Отбор = Новый Структура;
			Отбор.Вставить("Ингредиент",ПервыйУровень.Ингредиент);
			НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				Строка = Объект.Состав.Добавить();
				Строка.Ингредиент = ПервыйУровень.Номенклатура;
				Строка.Номенклатура = ПервыйУровень.Номенклатура;
				Строка.ЕдиницаИзмерения = ПервыйУровень.ЕдиницаИзмерения;
				Строка.Коэффициент = ПервыйУровень.Коэффициент;
				Строка.Количество = ОкруглениеКоличества(ПервыйУровень);
				Строка.Поставщик = ПервыйУровень.Поставщик;
				Строка.Цена = ПервыйУровень.Цена;
				Строка.Сумма = Строка.Цена*Строка.Количество;
			КонецЕсли;	
		Иначе	
			Для Каждого ВторойУровень Из ПервыйУровень.ПолучитьЭлементы() Цикл
				Отбор = Новый Структура;
				Отбор.Вставить("Ингредиент",ПервыйУровень.Ингредиент);
				НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
				Если НайденныеСтроки.Количество() = 0 Тогда
					ПервыйУровень.Номенклатура = ВторойУровень.Номенклатура;
					ПервыйУровень.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
					ПервыйУровень.Коэффициент = ВторойУровень.Коэффициент;
					ПервыйУровень.Количество = ОкруглениеКоличества(ВторойУровень);
					ПервыйУровень.Поставщик = ВторойУровень.Поставщик;
					ПервыйУровень.Цена = ВторойУровень.Цена;
					ПервыйУровень.Сумма = ПервыйУровень.Цена*ПервыйУровень.Количество;
					Строка = Объект.Состав.Добавить();
					Строка.Ингредиент = ПервыйУровень.Ингредиент;
					Строка.Номенклатура = ВторойУровень.Номенклатура;
					Строка.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
					Строка.Коэффициент = ВторойУровень.Коэффициент;
					Строка.Количество = ПервыйУровень.Количество;
					Строка.Поставщик = ВторойУровень.Поставщик;
					Строка.Цена = ВторойУровень.Цена;
					Строка.Сумма = Строка.Цена*Строка.Количество;
					Прервать;
				Иначе
					Для Каждого Строка Из НайденныеСтроки Цикл
						Если Строка.Номенклатура = ВторойУровень.Номенклатура Тогда
							ПервыйУровень.Номенклатура = Строка.Номенклатура;
							ПервыйУровень.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;
							ПервыйУровень.Коэффициент = Строка.Коэффициент;
							ПервыйУровень.Количество = ОкруглениеКоличества(ВторойУровень);
							ПервыйУровень.Поставщик = Строка.Поставщик;
							ПервыйУровень.Цена = ВторойУровень.Цена;
							ПервыйУровень.Сумма = ПервыйУровень.Цена*ПервыйУровень.Количество;
						КонецЕсли;	
						Прервать;
					КонецЦикла;	
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Функция ОкруглениеКоличества(Выборка)
	Количество = Выборка.Количество;
	НовоеКоличество = 0;
	ПроцентОкругления = 50; //???
	Если Количество > 0 Тогда
		Если СокрЛП(Выборка.ВариантОкругления) = "C" Тогда
			Если Цел(Количество/Выборка.КоэффициентЯщика) = 0 Тогда
				НовоеКоличество = Выборка.КоэффициентЯщика;
			Иначе
				НовоеКоличество = ?((Количество - Цел(Количество/Выборка.КоэффициентЯщика)*Выборка.КоэффициентЯщика)*100/Выборка.КоэффициентЯщика>=ПроцентОкругления,
				(Цел(Количество/Выборка.КоэффициентЯщика)+1)*Выборка.КоэффициентЯщика,
				(Цел(Количество/Выборка.КоэффициентЯщика))*Выборка.КоэффициентЯщика);
			КонецЕсли;	
		ИначеЕсли СокрЛП(Выборка.ВариантОкругления) = "L" Тогда
			Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентЯщика;
			Если Цел(Количество/Коэффициент) = 0 Тогда
				НовоеКоличество = Коэффициент;
			Иначе
				НовоеКоличество = ?((Количество - Цел(Количество/Коэффициент)*Коэффициент)*100/Коэффициент>=ПроцентОкругления,
				(Цел(Количество/Коэффициент)+1)*Коэффициент,
				(Цел(Количество/Коэффициент))*Коэффициент);
			КонецЕсли;	
		ИначеЕсли СокрЛП(Выборка.ВариантОкругления) = "P" Тогда
			Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентПалетыВысота*Выборка.КоэффициентЯщика;
			Если Цел(Количество/Коэффициент) = 0 Тогда
				НовоеКоличество = Коэффициент;
			Иначе
				НовоеКоличество = ?((Количество - Цел(Количество/Коэффициент)*Коэффициент)*100/Коэффициент>=ПроцентОкругления,
				(Цел(Количество/Коэффициент)+1)*Коэффициент,
				(Цел(Количество/Коэффициент))*Коэффициент);
			КонецЕсли;	
		ИначеЕсли СокрЛП(Выборка.ВариантОкругления) = "CL" Тогда
			Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентЯщика;
			Если (Количество/Коэффициент - Цел(Количество/Коэффициент))*100>=ПроцентОкругления Тогда
				Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентЯщика;
			Иначе
				Коэффициент = Выборка.КоэффициентЯщика;
			КонецЕсли;	
			Если Цел(Количество/Коэффициент) = 0 Тогда
				НовоеКоличество = Коэффициент;
			Иначе
				НовоеКоличество = ?((Количество - Цел(Количество/Коэффициент)*Коэффициент)*100/Коэффициент>=ПроцентОкругления,
				(Цел(Количество/Коэффициент)+1)*Коэффициент,
				(Цел(Количество/Коэффициент))*Коэффициент);
			КонецЕсли;	
		ИначеЕсли СокрЛП(Выборка.ВариантОкругления) = "LP" Тогда
			Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентПалетыВысота*Выборка.КоэффициентЯщика;
			Если (Количество/Коэффициент - Цел(Количество/Коэффициент))*100>=ПроцентОкругления Тогда
				Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентПалетыВысота*Выборка.КоэффициентЯщика;
			Иначе
				Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентЯщика;
			КонецЕсли;	
			Если Цел(Количество/Коэффициент) = 0 Тогда
				НовоеКоличество = Коэффициент;
			Иначе
				НовоеКоличество = ?((Количество - Цел(Количество/Коэффициент)*Коэффициент)*100/Коэффициент>=ПроцентОкругления,
				(Цел(Количество/Коэффициент)+1)*Коэффициент,
				(Цел(Количество/Коэффициент))*Коэффициент);
			КонецЕсли;	
		ИначеЕсли СокрЛП(Выборка.ВариантОкругления) = "CLP" Тогда
			Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентПалетыВысота*Выборка.КоэффициентЯщика;
			Если (Количество/Коэффициент - Цел(Количество/Коэффициент))*100>=ПроцентОкругления Тогда
				Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентПалетыВысота*Выборка.КоэффициентЯщика;
			Иначе
				Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентЯщика;
				Если (Количество/Коэффициент - Цел(Количество/Коэффициент))*100>=ПроцентОкругления Тогда
					Коэффициент = Выборка.КоэффициентПалетыСлой*Выборка.КоэффициентЯщика;
				Иначе
					Коэффициент = Выборка.КоэффициентЯщика;
				КонецЕсли;	
			КонецЕсли;	
			Если Цел(Количество/Коэффициент) = 0 Тогда
				НовоеКоличество = Коэффициент;
			Иначе
				НовоеКоличество = ?((Количество - Цел(Количество/Коэффициент)*Коэффициент)*100/Коэффициент>=ПроцентОкругления,
				(Цел(Количество/Коэффициент)+1)*Коэффициент,
				(Цел(Количество/Коэффициент))*Коэффициент);
			КонецЕсли;	
		Иначе
			НовоеКоличество = Количество;
		КонецЕсли;	
	КонецЕсли;
	Возврат НовоеКоличество;
КонецФункции	


Процедура ПолучитьСоставПродукции(ТехнологическаяКарта,Количество,ТаблицаСостава)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТехнологическаяКартаСостав.Номенклатура,
		|	ТехнологическаяКартаСостав.Количество * ТехнологическаяКартаСостав.Коэффициент * &Количество КАК Количество,
		|	ВложенныйЗапрос.ТехнологическаяКарта КАК ТехнологическаяКарта
		|ИЗ
		|	Документ.ТехнологическаяКарта.Состав КАК ТехнологическаяКартаСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Внутр.Продукция КАК Продукция,
		|			МАКСИМУМ(ТехнологическаяКарта.Ссылка) КАК ТехнологическаяКарта
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ПродукцияПоЦехам.Продукция КАК Продукция,
		|				МАКСИМУМ(ПродукцияПоЦехам.ТехнологическаяКарта.Дата) КАК Дата
		|			ИЗ
		|				РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
		|			ГДЕ
		|				ПродукцияПоЦехам.ФлагАктивности
		|				И ПродукцияПоЦехам.ТехнологическаяКарта.ВидПроизводства = &ВидПроизводства
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПродукцияПоЦехам.Продукция) КАК Внутр
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТехнологическаяКарта КАК ТехнологическаяКарта
		|				ПО Внутр.Продукция = ТехнологическаяКарта.Продукция
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Внутр.Продукция) КАК ВложенныйЗапрос
		|		ПО ТехнологическаяКартаСостав.Номенклатура = ВложенныйЗапрос.Продукция
		|ГДЕ
		|	ТехнологическаяКартаСостав.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", ТехнологическаяКарта);
	Запрос.УстановитьПараметр("Количество", Количество);
	Запрос.УстановитьПараметр("ВидПроизводства", Перечисления.ВидыПроизводства.Приготовление);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ТехнологическаяКарта) Тогда
			ПолучитьСоставПродукции(ВыборкаДетальныеЗаписи.ТехнологическаяКарта,ВыборкаДетальныеЗаписи.Количество,ТаблицаСостава)
		Иначе
			НоваяСтрока = ТаблицаСостава.Добавить();
			НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	



&НаКлиенте
Процедура ДеревоНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВторойУровень = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	ПервыйУровень = ВторойУровень.ПолучитьРодителя();
	Если ПервыйУровень = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПервыйУровень.Номенклатура = ВторойУровень.Номенклатура;
	ПервыйУровень.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
	ПервыйУровень.Коэффициент = ВторойУровень.Коэффициент;
	ПервыйУровень.Количество = ВторойУровень.Количество;
	ПервыйУровень.Поставщик = ВторойУровень.Поставщик;
	ПервыйУровень.Цена = ВторойУровень.Цена;
	ПервыйУровень.Сумма = ВторойУровень.Сумма;
	Отбор = Новый Структура;
	Отбор.Вставить("Ингредиент",ПервыйУровень.Ингредиент);
	НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
	Для Каждого Строка Из НайденныеСтроки Цикл
		Строка.Номенклатура = ВторойУровень.Номенклатура;
		Строка.ЕдиницаИзмерения = ВторойУровень.ЕдиницаИзмерения;
		Строка.Коэффициент = ВторойУровень.Коэффициент;
		Строка.Количество = ВторойУровень.Количество;
		Строка.Поставщик = ВторойУровень.Поставщик;
		Строка.Цена = ВторойУровень.Цена;
		Строка.Сумма = ВторойУровень.Сумма;
	КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура ПродукцияКоличествоПриИзменении(Элемент)
	ЗаполнитьСоставСырья();
КонецПроцедуры


&НаКлиенте
Процедура ОформитьДокументы(Команда)
	КоличествоДокументов = ОформитьНаСервере();
	Если КоличествоДокументов <> 0 Тогда
		Состояние("Оформлено документов - "+КоличествоДокументов,,,);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОформитьНаСервере()
	Попытка
		НачатьТранзакцию();
		Объект.Состав.Сортировать("Поставщик Возр");
		Контрагент = "";
		НовыйДок = "";
		КоличествоДокументов = 0;
		Для Каждого Строка Из Объект.Состав Цикл
			Если Строка.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			Если Контрагент <> Строка.Поставщик Тогда
				Если НовыйДок <> "" Тогда
					НовыйДок.Записать(РежимЗаписиДокумента.Запись);
					КоличествоДокументов = КоличествоДокументов + 1;
				КонецЕсли;
				Контрагент = Строка.Поставщик;
				Если Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
					НовыйДок = Документы.ЗапросНаПополнение.СоздатьДокумент();
				Иначе
					НовыйДок = Документы.ПланируемаяПоставка.СоздатьДокумент();
					НовыйДок.Контрагент = Строка.Поставщик;
					НовыйДок.Фирма = Объект.Фирма;
					НовыйДок.ДатаПоставкиОт = Объект.Период.ДатаНачала-86400;
					НовыйДок.ДатаПоставкиДо = Объект.Период.ДатаНачала-86400;
				КонецЕсли;
				НовыйДок.Дата = ТекущаяДата();
				НовыйДок.ИнициализироватьДокумент();
			КонецЕсли;
			НоваяСтрока = НовыйДок.Состав.Добавить();
			НоваяСтрока.Номенклатура = Строка.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;
			НоваяСтрока.Коэффициент = Строка.Коэффициент;
			НоваяСтрока.Количество = Строка.Количество;
			Если Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
				НоваяСтрока.ДатаПоставки = Объект.Период.ДатаНачала-86400;
			Иначе
				НоваяСтрока.Артикул = АвтоЗаказ.ПолучитьАртикул(НовыйДок.Контрагент,НоваяСтрока.Номенклатура);
				НоваяСтрока.СтавкаНДС = ?(ЗначениеЗаполнено(Строка.Номенклатура.СтавкаНДС),Строка.Номенклатура.СтавкаНДС,Справочники.СтавкиНДС.БезНДС);
				СтавкаНДС = ОбщегоНазначенияСервер.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС);
				бЦенаСНДС = ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ВключатьНДСВЦеныКонтрагентов");
				Если бЦенаСНДС Тогда
					НоваяСтрока.Цена = Строка.Цена;
					НоваяСтрока.Сумма = Окр(НоваяСтрока.Количество * НоваяСтрока.Цена,2);
					НоваяСтрока.СуммаНДС = Окр(СтавкаНДС * НоваяСтрока.Сумма / (100 + СтавкаНДС),2);
					НоваяСтрока.СуммаБезНДС = НоваяСтрока.Сумма - НоваяСтрока.СуммаНДС;
					НоваяСтрока.ЦенаБезНДС = Окр(НоваяСтрока.СуммаБезНДС / НоваяСтрока.Количество,2);
				Иначе
					НоваяСтрока.ЦенаБезНДС = Строка.Цена;
					НоваяСтрока.СуммаБезНДС = Окр(НоваяСтрока.Количество * НоваяСтрока.ЦенаБезНДС,2);
					НоваяСтрока.СуммаНДС = ?(СтавкаНДС = 0, 0, Окр(НоваяСтрока.СуммаБезНДС / СтавкаНДС,2));
					НоваяСтрока.Сумма = НоваяСтрока.СуммаБезНДС + НоваяСтрока.СуммаНДС;
					НоваяСтрока.Цена = Окр(НоваяСтрока.Сумма / НоваяСтрока.Количество,2);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если НовыйДок <> "" Тогда
			НовыйДок.Записать(РежимЗаписиДокумента.Запись);
			КоличествоДокументов = КоличествоДокументов + 1;
		КонецЕсли;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		КоличествоДокументов = 0;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	Возврат КоличествоДокументов;
КонецФункции


&НаКлиенте
Процедура ДеревоНоменклатурыПередНачаломИзменения(Элемент, Отказ)
	ВторойУровень = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	ПервыйУровень = ВторойУровень.ПолучитьРодителя();
	Если НЕ ПервыйУровень = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПродукцияПослеУдаления(Элемент)
	ЗаполнитьСоставСырья();
КонецПроцедуры


&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	Если НачалоДня(Объект.Период.ДатаНачала) < НачалоДня(ТекущаяДата()) Тогда
		Объект.Период.ДатаНачала = НачалоДня(ТекущаяДата());
		Состояние("Дата начала не может быть меньше текущей даты!",,,БиблиотекаКартинок.Предупреждение32);
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры


&НаКлиенте
Процедура ДеревоНоменклатурыКоличествоПриИзменении(Элемент)
	Отбор = Новый Структура;
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	Отбор.Вставить("Ингредиент",?(ТекущиеДанные.Ингредиент.Пустая(),ТекущиеДанные.Номенклатура,ТекущиеДанные.Ингредиент));
	Отбор.Вставить("Номенклатура",ТекущиеДанные.Номенклатура);
	Отбор.Вставить("Поставщик",ТекущиеДанные.Поставщик);
	НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() <> 0 Тогда
		НайденныеСтроки[0].Количество = ТекущиеДанные.Количество;
		НайденныеСтроки[0].Сумма = Окр(ТекущиеДанные.Количество * ТекущиеДанные.Цена,2);
		Элементы.ДеревоНоменклатуры.ТекущиеДанные.Сумма = Окр(ТекущиеДанные.Количество * ТекущиеДанные.Цена,2);
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ПродукцияТехнологическаяКартаПриИзменении(Элемент)
	ЗаполнитьСоставСырья();
КонецПроцедуры


&НаКлиенте
Процедура ПродукцияТехнологическаяКартаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТехКартаНеДопустимая(ВыбранноеЗначение) Тогда  
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТехКартаНеДопустимая(ТехКарта)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПродукцияПоЦехам.ФлагАктивности
		|ИЗ
		|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
		|ГДЕ
		|	ПродукцияПоЦехам.ТехнологическаяКарта = &ТехнологическаяКарта
		|	И ПродукцияПоЦехам.Склад = &Склад
		|	И ПродукцияПоЦехам.Продукция = &Продукция";

	Запрос.УстановитьПараметр("Продукция", ТехКарта.Продукция);
	Запрос.УстановитьПараметр("Склад", Объект.Производство);
	Запрос.УстановитьПараметр("ТехнологическаяКарта", ТехКарта);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	
	Если ВыборкаДетальныеЗаписи.ФлагАктивности = Истина Тогда
		Возврат Ложь;
	Иначе	
		Текст = "Выбрана технологическая карта не активна!";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
		Возврат Истина;
	КонецЕсли;	
КонецФункции	


&НаКлиенте
Процедура СкладСырьяПриИзменении(Элемент)
	Установитьпараметры();
КонецПроцедуры


&НаКлиенте
Процедура ДеревоНоменклатурыПоставщикПриИзменении(Элемент)
	Отбор = Новый Структура;
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	Отбор.Вставить("Ингредиент",?(ТекущиеДанные.Ингредиент.Пустая(),ТекущиеДанные.Номенклатура,ТекущиеДанные.Ингредиент));
	Отбор.Вставить("Номенклатура",ТекущиеДанные.Номенклатура);
	НайденныеСтроки = Объект.Состав.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() <> 0 Тогда
		НайденныеСтроки[0].Поставщик = ТекущиеДанные.Поставщик;
		НайденныеСтроки[0].Цена = ПолучитьЦенуНоменклатурыПоКонтрагенту(ТекущиеДанные.Номенклатура,НайденныеСтроки[0].Поставщик);
		Элементы.ДеревоНоменклатуры.ТекущиеДанные.Цена = НайденныеСтроки[0].Цена;
		НайденныеСтроки[0].Сумма = Окр(ТекущиеДанные.Количество * ТекущиеДанные.Цена,2);
		Элементы.ДеревоНоменклатуры.ТекущиеДанные.Сумма = Окр(ТекущиеДанные.Количество * ТекущиеДанные.Цена,2);
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьЦенуНоменклатурыПоКонтрагенту(Номенклатура,Контрагент)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураКонтрагента.Цена
		|ИЗ
		|	РегистрСведений.НоменклатураКонтрагента КАК НоменклатураКонтрагента
		|ГДЕ
		|	НоменклатураКонтрагента.Контрагент = &Контрагент
		|	И НоменклатураКонтрагента.Номенклатура = &Номенклатура";

	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат 0;	
	КонецЕсли;	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Цена;
КонецФункции	

