
&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.Состав.Количество() > 0 Тогда
		Ответ = Вопрос("Табличная часть заполнена. Очистить?", РежимДиалогаВопрос.ДаНетОтмена, 0,КодВозвратаДиалога.Отмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
			Объект.Состав.Очистить();
			Объект.Распределение.Очистить();
		КонецЕсли;
	КонецЕсли;	
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Если Объект.Состав.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Номенклатура.Код КАК Код
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Ссылка В(&Номенклатура)";

		Запрос.УстановитьПараметр("Номенклатура", Объект.Состав.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
		СписокТоваров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	Иначе	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПродукцияПоЦехам.Продукция.Код КАК Код
			|ИЗ
			|	РегистрСведений.ПродукцияПоЦехам КАК ПродукцияПоЦехам
			|ГДЕ
			|	ПродукцияПоЦехам.Склад = &Склад
			|
			|СГРУППИРОВАТЬ ПО
			|	ПродукцияПоЦехам.Продукция.Код";

		Запрос.УстановитьПараметр("Склад", Объект.Склад);
		СписокТоваров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Код");
	КонецЕсли;
	Для I=0 по СписокТоваров.Количество()-1 Цикл
		СписокТоваров[I] = СокрЛП(СписокТоваров[I]);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	RMS13_TRAN_DATA_HISTORY.ITEM КАК КодТовара,
	|	ВЫБОР
	|		КОГДА &ДН <> ДЕНЬНЕДЕЛИ(&ТекДата)
	|			ТОГДА ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(RMS13_TRAN_DATA_HISTORY.TRAN_DATE) = 1
	|						ТОГДА 7
	|					ИНАЧЕ ДЕНЬНЕДЕЛИ(RMS13_TRAN_DATA_HISTORY.TRAN_DATE) - 1
	|				КОНЕЦ
	|		ИНАЧЕ ДЕНЬНЕДЕЛИ(RMS13_TRAN_DATA_HISTORY.TRAN_DATE)
	|	КОНЕЦ КАК ДеньНедели,
	|	СУММА(RMS13_TRAN_DATA_HISTORY.UNITS) КАК Количество,
	|	СУММА(RMS13_TRAN_DATA_HISTORY.UNITS) КАК КоличествоФакт,
	|	RMS13_TRAN_DATA_HISTORY.LOCATION КАК КодСЕ
	|ИЗ
	|	ВнешнийИсточникДанных.RMS.Таблица.RMS13_TRAN_DATA_HISTORY КАК RMS13_TRAN_DATA_HISTORY
	|ГДЕ
	|	RMS13_TRAN_DATA_HISTORY.TRAN_CODE = &TRAN_CODE
	|	И RMS13_TRAN_DATA_HISTORY.UNITS > 0
	|	И RMS13_TRAN_DATA_HISTORY.TRAN_DATE МЕЖДУ &НачалоНедели И &КонецНедели
	|	И RMS13_TRAN_DATA_HISTORY.ITEM В(&ITEM)";
	Если РежимРасчета = 1 Тогда
		Запрос.Текст = Запрос.Текст + "
	|	И RMS13_TRAN_DATA_HISTORY.LOCATION = &КодСЕ";
	Иначе
		Запрос.Текст = Запрос.Текст + "
	|	И RMS13_TRAN_DATA_HISTORY.LOCATION <> &КодСЕ";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО
	|	RMS13_TRAN_DATA_HISTORY.ITEM,
	|	ВЫБОР
	|		КОГДА &ДН <> ДЕНЬНЕДЕЛИ(&ТекДата)
	|			ТОГДА ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(RMS13_TRAN_DATA_HISTORY.TRAN_DATE) = 1
	|						ТОГДА 7
	|					ИНАЧЕ ДЕНЬНЕДЕЛИ(RMS13_TRAN_DATA_HISTORY.TRAN_DATE) - 1
	|				КОНЕЦ
	|		ИНАЧЕ ДЕНЬНЕДЕЛИ(RMS13_TRAN_DATA_HISTORY.TRAN_DATE)
	|	КОНЕЦ,
	|	RMS13_TRAN_DATA_HISTORY.LOCATION";
	Запрос.УстановитьПараметр("ITEM", СписокТоваров);
	Запрос.УстановитьПараметр("TRAN_CODE", 1);
	Запрос.УстановитьПараметр("КодСЕ", Объект.Склад.Владелец.Код);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ДН", ДеньНедели(ТекущаяДата()));
	Если ВариантЗаполнения = 1 Тогда
		НачалоНедели = НачалоНедели(ДобавитьМесяц(НачалоДня(Объект.Дата),-КоличестоМесяцев));
		Запрос.УстановитьПараметр("НачалоНедели", НачалоНедели);
		КонецНедели = НачалоНедели(Объект.Дата)-1;
		Запрос.УстановитьПараметр("КонецНедели", КонецНедели);
	Иначе
		КонецНедели = НачалоНедели(Объект.Дата)-1;
		Запрос.УстановитьПараметр("НачалоНедели", НачалоНедели(КонецНедели));
		Запрос.УстановитьПараметр("КонецНедели", КонецНедели);
	КонецЕсли;	
	ТаблицаПродаж = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка Из ТаблицаПродаж Цикл
		Строка.Количество = Окр(Строка.Количество,1);
	КонецЦикла;	
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	Запрос.Текст = "Выбрать * Поместить ТаблицаПродаж из &ТаблицаПродаж как ТаблицаПродаж";
	Запрос.УстановитьПараметр("ТаблицаПродаж",ТаблицаПродаж);
	Запрос.Выполнить();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения,
		|	ЕдиницыИзмерения.Коэффициент КАК Коэффициент,
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 1
		|			ТОГДА СУММА(Продажи.Количество)
		|	КОНЕЦ КАК Понедельник,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 2
		|			ТОГДА СУММА(Продажи.Количество)
		|	КОНЕЦ КАК Вторник,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 3
		|			ТОГДА СУММА(Продажи.Количество)
		|	КОНЕЦ КАК Среда,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 4
		|			ТОГДА СУММА(Продажи.Количество)
		|	КОНЕЦ КАК Четверг,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 5
		|			ТОГДА СУММА(Продажи.Количество)
		|	КОНЕЦ КАК Пятница,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 6
		|			ТОГДА СУММА(Продажи.Количество)
		|	КОНЕЦ КАК Суббота,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 7
		|			ТОГДА СУММА(Продажи.Количество)
		|	КОНЕЦ КАК Воскресенье,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 1
		|			ТОГДА СУММА(Продажи.КоличествоФакт)
		|	КОНЕЦ КАК ПонедельникФакт,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 2
		|			ТОГДА СУММА(Продажи.КоличествоФакт)
		|	КОНЕЦ КАК ВторникФакт,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 3
		|			ТОГДА СУММА(Продажи.КоличествоФакт)
		|	КОНЕЦ КАК СредаФакт,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 4
		|			ТОГДА СУММА(Продажи.КоличествоФакт)
		|	КОНЕЦ КАК ЧетвергФакт,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 5
		|			ТОГДА СУММА(Продажи.КоличествоФакт)
		|	КОНЕЦ КАК ПятницаФакт,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 6
		|			ТОГДА СУММА(Продажи.КоличествоФакт)
		|	КОНЕЦ КАК СубботаФакт,
		|	ВЫБОР
		|		КОГДА Продажи.ДеньНедели = 7
		|			ТОГДА СУММА(Продажи.КоличествоФакт)
		|	КОНЕЦ КАК ВоскресеньеФакт,
		|	СУММА(Продажи.Количество) КАК Итого,
		|	СУММА(Продажи.КоличествоФакт) КАК ИтогоПоФакту
		|ИЗ
		|	ТаблицаПродаж КАК Продажи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО Продажи.КодТовара = Номенклатура.Код
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|		ПО Продажи.КодСЕ = СтруктурныеЕдиницы.Код
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|		ПО (Номенклатура.Ссылка = ЕдиницыИзмерения.Владелец)
		|			И (Номенклатура.Ссылка.БазоваяЕдиницаИзмерения = ЕдиницыИзмерения.ЕдиницаПоКлассификатору)
		|
		|СГРУППИРОВАТЬ ПО
		|	Номенклатура.Ссылка,
		|	ЕдиницыИзмерения.Ссылка,
		|	ЕдиницыИзмерения.Коэффициент,
		|	СтруктурныеЕдиницы.Ссылка,
		|	Продажи.ДеньНедели
		|ИТОГИ
		|	СУММА(Понедельник),
		|	СУММА(Вторник),
		|	СУММА(Среда),
		|	СУММА(Четверг),
		|	СУММА(Пятница),
		|	СУММА(Суббота),
		|	СУММА(Воскресенье),
		|	СУММА(ПонедельникФакт),
		|	СУММА(ВторникФакт),
		|	СУММА(СредаФакт),
		|	СУММА(ЧетвергФакт),
		|	СУММА(ПятницаФакт),
		|	СУММА(СубботаФакт),
		|	СУММА(ВоскресеньеФакт),
		|	СУММА(Итого),
		|	СУММА(ИтогоПоФакту)
		|ПО
		|	Номенклатура,
		|	ЕдиницаИзмерения,
		|	Коэффициент,
		|	СтруктурнаяЕдиница";

	Если Объект.Состав.Количество() > 0 Тогда
		ОтборСостав = Новый Структура;
		ОтборРаспределение = Новый Структура;
		Результат = Запрос.Выполнить();
		ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл
			ВыборкаЕдиница = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаЕдиница.Следующий() Цикл
				ВыборкаКоэффициент = ВыборкаЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаКоэффициент.Следующий() Цикл
					ОтборСостав.Вставить("Номенклатура",ВыборкаКоэффициент.Номенклатура);
					НоваяСтрока = Объект.Состав.НайтиСтроки(ОтборСостав)[0];
					ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаКоэффициент);
					ДетальнаяВыборка = ВыборкаКоэффициент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ДетальнаяВыборка.Следующий() Цикл
						ОтборРаспределение.Вставить("Номенклатура",ВыборкаКоэффициент.Номенклатура);
						ОтборРаспределение.Вставить("СтруктурнаяЕдиница",ДетальнаяВыборка.СтруктурнаяЕдиница);
						НоваяСтрокаРаспределения = Объект.Распределение.НайтиСтроки(ОтборРаспределение)[0];
						ЗаполнитьЗначенияСвойств(НоваяСтрокаРаспределения,ДетальнаяВыборка);
					КонецЦикла;	
				КонецЦикла;	
			КонецЦикла;	
		КонецЦикла;	
	Иначе		
		Результат = Запрос.Выполнить();
		ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл
			ВыборкаЕдиница = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаЕдиница.Следующий() Цикл
				ВыборкаКоэффициент = ВыборкаЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаКоэффициент.Следующий() Цикл
					НоваяСтрока = Объект.Состав.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаКоэффициент);
					НоваяСтрока.Ключ = Новый УникальныйИдентификатор();
					ДетальнаяВыборка = ВыборкаКоэффициент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ДетальнаяВыборка.Следующий() Цикл
						НоваяСтрокаРаспределения = Объект.Распределение.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаРаспределения,ДетальнаяВыборка);
						НоваяСтрокаРаспределения.Ключ = НоваяСтрока.Ключ;
					КонецЦикла;	
				КонецЦикла;	
			КонецЦикла;	
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Дата = ТекущаяДата();
	Объект.ДатаДокумента = КонецНедели(Объект.Дата)+1;
	КоличестоМесяцев = 3;
	ЭтаФорма.Заголовок = "План производства на период с "+Формат(Объект.ДатаДокумента,"ДФ=dd.MM.yy")+" по "+Формат(КонецНедели(Объект.ДатаДокумента),"ДФ=dd.MM.yy");
КонецПроцедуры

&НаКлиенте
Процедура Процент(Команда)
	Процент = 0;
	Если ВвестиЧисло(Процент,"+/-Процент",3,0) Тогда
		Для Каждого Строка Из Объект.Распределение Цикл
			Строка.Понедельник = Строка.Понедельник + Строка.Понедельник*Процент/100;
			Строка.Вторник = Строка.Вторник + Строка.Вторник*Процент/100;
			Строка.Среда = Строка.Среда + Строка.Среда*Процент/100;
			Строка.Четверг = Строка.Четверг + Строка.Четверг*Процент/100;
			Строка.Пятница = Строка.Пятница + Строка.Пятница*Процент/100;
			Строка.Суббота = Строка.Суббота + Строка.Суббота*Процент/100;
			Строка.Воскресенье = Строка.Воскресенье + Строка.Воскресенье*Процент/100;
			Строка.Итого = Строка.Понедельник + Строка.Вторник + Строка.Среда + Строка.Четверг + Строка.Пятница + Строка.Суббота + Строка.Воскресенье;
			РассчитатьИтогПоСоставу(Строка.Ключ,"Понедельник");
			РассчитатьИтогПоСоставу(Строка.Ключ,"Вторник");
			РассчитатьИтогПоСоставу(Строка.Ключ,"Среда");
			РассчитатьИтогПоСоставу(Строка.Ключ,"Четверг");
			РассчитатьИтогПоСоставу(Строка.Ключ,"Пятница");
			РассчитатьИтогПоСоставу(Строка.Ключ,"Суббота");
			РассчитатьИтогПоСоставу(Строка.Ключ,"Воскресенье");
			РассчитатьИтогПоСоставу(Строка.Ключ,"Итого");
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеКоличествоПриИзменении(Элемент)
	Строка = Элементы.Распределение.ТекущиеДанные;
	РассчитатьИтогПоСоставу(Строка.Ключ,Элемент.Имя);
	Строка.Итого = Строка.Понедельник + Строка.Вторник + Строка.Среда + Строка.Четверг + Строка.Пятница + Строка.Суббота + Строка.Воскресенье;
	РассчитатьИтогПоСоставу(Строка.Ключ,"Итого");
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьИтогПоСоставу(Ключ,Имя)
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ",Ключ);
	Массив = Объект.Распределение.НайтиСтроки(Отбор);
	Итог = 0;
	Для I=0 по Массив.Количество()-1 Цикл
		Итог = Итог+Массив[I][Имя];
	КонецЦикла;	
	
	Массив = Объект.Состав.НайтиСтроки(Отбор);
	ТекущаяСтрока = Массив[0];
	ТекущаяСтрока[Имя] = Итог;
КонецПроцедуры

&НаКлиенте
Процедура Оформить(Команда)
	СтарыйДокумент = НайтиСтарыйПлан();
	Если СтарыйДокумент <> Неопределено Тогда
		ТекстВопроса = "Существует документ ""План производства"" на эту дату по выбранному цеху!.
		|Переоформить?";
		Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	ОформитьНаСервере(СтарыйДокумент);
КонецПроцедуры

&НаСервере
Функция НайтиСтарыйПлан()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланПроизводства.Ссылка
		|ИЗ
		|	Документ.ПланПроизводства КАК ПланПроизводства
		|ГДЕ
		|	ПланПроизводства.Дата = &Дата
		|	И ПланПроизводства.Склад = &Склад";

	Запрос.УстановитьПараметр("Дата", Объект.ДатаДокумента);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОформитьНаСервере(СтарыйДокумент)
	Если СтарыйДокумент = Неопределено Тогда
		ДокументОбъект = Документы.ПланПроизводства.СоздатьДокумент();
		ДокументОбъект.Дата = Объект.ДатаДокумента; 
		ДокументОбъект.Склад = Объект.Склад; 
	Иначе
		Если РаботаСФормамиСервер.ЗапрещеноРедактировать(СтарыйДокумент) Тогда
			Возврат;
		КонецЕсли;	
		ДокументОбъект = СтарыйДокумент.ПолучитьОбъект();
	КонецЕсли;
	ДокументОбъект.ИнициализироватьДокумент();
	ДокументОбъект.Состав.Загрузить(Объект.Состав.Выгрузить());
	ДокументОбъект.Распределение.Загрузить(Объект.Распределение.Выгрузить());
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Объект.Состав.Очистить();
	Объект.Распределение.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ВариантЗаполненияПриИзменении(Элемент)
	Элементы.Период.Доступность = ВариантЗаполнения = 1;
КонецПроцедуры

&НаКлиенте
Процедура СоставПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Элементы.Распределение.ОтборСтрок = Новый ФиксированнаяСтруктура("Ключ", Элемент.ТекущиеДанные.Ключ);
	КонецЕсли;	
КонецПроцедуры


&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Значение = Настройки.Получить("ОтображениеТаблицыПодбор");
		Если Значение<>Неопределено тогда
			Элементы.ПодборНоменклатуры.Отображение = Значение;
		конецесли;
	конецесли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	Если Элементы.Найти("ПодборНоменклатуры")<>Неопределено тогда
		Настройки.вставить("ОтображениеТаблицыПодбор",элементы.подборНоменклатуры.Отображение);
	конецесли;
КонецПроцедуры


//Процедуры и функции для организации подбора
&НаКлиенте
Процедура ПодборНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Для Каждого Строка Из Элемент.ВыделенныеСтроки Цикл
		ТекСтрока = ОбработкаТабличныхЧастейКлиент.ЗаполнитьИзПодбора(ЭтаФорма,Объект,Элемент.ДанныеСтроки(Строка),Элементы.состав,СтандартнаяОбработка);
		Если ТекСтрока <> Неопределено Тогда
			ЗаполнитьРаспределение(ТекСтрока.Номенклатура,ТекСтрока.ЕдиницаИзмерения,ТекСтрока.Коэффициент,ТекСтрока.Ключ);
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРаспределение(Номенклатура,ЕдиницаИзмерения,Коэффициент,Ключ)
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ",Ключ);
	Массив = Объект.Распределение.НайтиСтроки(Отбор);
	Если Массив.Количество() = 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СтатусыНоменклатуры.СтруктурнаяЕдиница
			|ИЗ
			|	РегистрСведений.СтатусыНоменклатуры КАК СтатусыНоменклатуры
			|ГДЕ
			|	СтатусыНоменклатуры.Статус = &Статус
			|	И СтатусыНоменклатуры.Номенклатура = &Номенклатура";

		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыТоваров.Активный);

		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяСтрока = Объект.Распределение.Добавить();
			НоваяСтрока.Номенклатура = Номенклатура;
			НоваяСтрока.СтруктурнаяЕдиница = ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница;
			НоваяСтрока.ЕдиницаИзмерения = ЕдиницаИзмерения;
			НоваяСтрока.Коэффициент = Коэффициент;
			НоваяСтрока.Ключ = Ключ;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОткрыть(Команда)
	Элементы.ГруппаПодбор.Видимость = НЕ Элементы.ГруппаПодбор.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура СоставПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПодборОткрыть(Неопределено);
КонецПроцедуры

 &НаКлиенте
Процедура ПоказатьГруппыВПодборе(Команда)
	элементы.кнГруппы.пометка = не элементы.кнГруппы.пометка;
	флаг = Элементы.кнГруппы.пометка;
	ВЫполнить("ОбработкаТабличныхЧастейКлиент.ОтображениеГрупп(ПодборНоменклатуры,флаг)");
КонецПроцедуры

 &НаСервере
Процедура Сохранитьпараметрыподбора()
	ПОдборНоменклатурыСервер.СохранитьПараметрыПодбора("Обработки.ПланПроизводства",ЭтаФорма.ИмяФормы,ЭтаФорма.Элементы);
конецпроцедуры

&НаСервере
Функция получитьНастройкуПодбора()
	возврат подборНоменклатурыСервер.ПолучитьНастройкуподбора("Обработки.ПланПроизводства",ЭтаФорма.ИмяФормы);	
конецфункции

&НаКлиенте
процедура ЗагрузитьНастройкиПодбора()
		Настройки = ПолучитьНастройкуПодбора();
		ОбработкаТабличныхЧастейКлиент.загрузитьнастройкиподбора(ЭтаФорма,Настройки);
конецпроцедуры

&НаКлиенте
Процедура ПодборЗакрыть(Команда)
	Элементы.ГруппаПодбор.Видимость  = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Дерево(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаДерево(ЭтаФорма);	
КонецПроцедуры


&НаКлиенте
Процедура Иерархия(Команда)
	обработкатабличныхчастейклиент.отображениединамическогоспискаиерархия(этаформа);	
КонецПроцедуры


&НаКлиенте
Процедура Список(Команда)
	обработкатабличныхчастейклиент.ОтображениеДинамическогоСпискаСписок(этаформа);	
КонецПроцедуры


//Конец Процедуры и функции для организации подбора

&НаКлиенте
Процедура УправлениеДоступностьюЭлементов()
	Элементы.ГруппаПодбор.Видимость  = ?(Не ЗначениеЗаполнено(Объект.Склад),Ложь,Элементы.ГруппаПодбор.Видимость);
конецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеДоступностьюЭлементов();
	Установитьпараметры();
	загрузитьНастройкиПодбора();
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	УправлениеДоступностьюЭлементов();
	Установитьпараметры();
КонецПроцедуры


Процедура Установитьпараметры()
	ПодборНоменклатуры.Параметры.установитьзначениепараметра("СтруктурнаяЕдиница",Объект.Склад.Владелец);
	ПодборНоменклатуры.Параметры.установитьзначениепараметра("Склад",Объект.Склад);
конецпроцедуры

&НаКлиенте
Процедура СоставПередУдалением(Элемент, Отказ)
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ",Элементы.Состав.ТекущиеДанные.Ключ);
	Массив = Объект.Распределение.НайтиСтроки(Отбор);
	Для I=0 по Массив.Количество()-1 Цикл
		Объект.Распределение.Удалить(Массив[I]);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПараметрыПодбора();
КонецПроцедуры
